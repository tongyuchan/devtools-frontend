{"version":3,"file":"ViewportDataGrid.js","sourceRoot":"","sources":["../../../../../front_end/data_grid/ViewportDataGrid.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../platform/platform.js';\nimport {ls} from '../platform/platform.js';\nimport * as UI from '../ui/ui.js';\n\nimport {DataGridImpl, DataGridNode, Parameters} from './DataGrid.js';  // eslint-disable-line no-unused-vars\n\n/**\n * @extends {DataGridImpl<!ViewportDataGridNode<!NODE_TYPE>>}\n * @template NODE_TYPE\n */\nexport class ViewportDataGrid extends DataGridImpl {\n  /**\n   * @param {!Parameters} dataGridParameters\n   */\n  constructor(dataGridParameters) {\n    super(dataGridParameters);\n\n    this._onScrollBound = this._onScroll.bind(this);\n    this.scrollContainer.addEventListener('scroll', this._onScrollBound, true);\n\n    /** @type {!Array.<!ViewportDataGridNode<!NODE_TYPE>>} */\n    this._visibleNodes = [];\n    /**\n     * @type {boolean}\n     */\n    this._inline = false;\n\n    this._stickToBottom = false;\n    this._updateIsFromUser = false;\n    this._lastScrollTop = 0;\n    this._firstVisibleIsStriped = false;\n    this._isStriped = false;\n\n    this.setRootNode(new ViewportDataGridNode());\n  }\n\n  /**\n   * @return {!ViewportDataGridNode<!NODE_TYPE>}\n   * @override\n   */\n  rootNode() {\n    return /** @type {!ViewportDataGridNode<!NODE_TYPE>} */ (super.rootNode());\n  }\n\n  /**\n   * @param {boolean} striped\n   * @override\n   */\n  setStriped(striped) {\n    this._isStriped = striped;\n    let startsWithOdd = true;\n    if (this._visibleNodes.length) {\n      const allChildren = (/** @type {!ViewportDataGridNode<!NODE_TYPE>}*/ (this.rootNode())).flatChildren();\n      startsWithOdd = Boolean(allChildren.indexOf(this._visibleNodes[0]));\n    }\n    this._updateStripesClass(startsWithOdd);\n  }\n\n  /**\n   * @param {boolean} startsWithOdd\n   */\n  _updateStripesClass(startsWithOdd) {\n    this.element.classList.toggle('striped-data-grid', !startsWithOdd && this._isStriped);\n    this.element.classList.toggle('striped-data-grid-starts-with-odd', startsWithOdd && this._isStriped);\n  }\n\n  /**\n   * @param {!HTMLElement} scrollContainer\n   */\n  setScrollContainer(scrollContainer) {\n    this.scrollContainer.removeEventListener('scroll', this._onScrollBound, true);\n    this._scrollContainer = scrollContainer;\n    this.scrollContainer.addEventListener('scroll', this._onScrollBound, true);\n  }\n\n  /**\n   * @override\n   */\n  onResize() {\n    if (this._stickToBottom) {\n      this.scrollContainer.scrollTop = this.scrollContainer.scrollHeight - this.scrollContainer.clientHeight;\n    }\n    this.scheduleUpdate();\n    super.onResize();\n  }\n\n  /**\n   * @param {boolean} stick\n   */\n  setStickToBottom(stick) {\n    this._stickToBottom = stick;\n  }\n\n  /**\n   * @param {?Event} event\n   */\n  _onScroll(event) {\n    this._stickToBottom = UI.UIUtils.isScrolledToBottom(this.scrollContainer);\n    if (this._lastScrollTop !== this.scrollContainer.scrollTop) {\n      this.scheduleUpdate(true);\n    }\n  }\n\n  scheduleUpdateStructure() {\n    this.scheduleUpdate();\n  }\n\n  /**\n   * @param {boolean=} isFromUser\n   */\n  scheduleUpdate(isFromUser) {\n    if (this._stickToBottom && isFromUser) {\n      this._stickToBottom = UI.UIUtils.isScrolledToBottom(this.scrollContainer);\n    }\n    this._updateIsFromUser = this._updateIsFromUser || Boolean(isFromUser);\n    if (this._updateAnimationFrameId) {\n      return;\n    }\n    this._updateAnimationFrameId = this.element.window().requestAnimationFrame(this._update.bind(this));\n  }\n\n  // TODO(allada) This should be fixed to never be needed. It is needed right now for network because removing\n  // elements happens followed by a scheduleRefresh() which causes white space to be visible, but the waterfall\n  // updates instantly.\n  updateInstantly() {\n    this._update();\n  }\n\n  /**\n   * @override\n   */\n  renderInline() {\n    this._inline = true;\n    super.renderInline();\n    this._update();\n  }\n\n  /**\n   * @param {number} clientHeight\n   * @param {number} scrollTop\n   * @return {{topPadding: number, bottomPadding: number, contentHeight: number, visibleNodes: !Array.<!ViewportDataGridNode<!NODE_TYPE>>, offset: number}}\n   */\n  _calculateVisibleNodes(clientHeight, scrollTop) {\n    const nodes = this.rootNode().flatChildren();\n    if (this._inline) {\n      return {topPadding: 0, bottomPadding: 0, contentHeight: 0, visibleNodes: nodes, offset: 0};\n    }\n\n    const size = nodes.length;\n    let i = 0;\n    let y = 0;\n\n    for (; i < size && y + nodes[i].nodeSelfHeight() < scrollTop; ++i) {\n      y += nodes[i].nodeSelfHeight();\n    }\n    const start = i;\n    const topPadding = y;\n\n    for (; i < size && y < scrollTop + clientHeight; ++i) {\n      y += nodes[i].nodeSelfHeight();\n    }\n    const end = i;\n\n    let bottomPadding = 0;\n    for (; i < size; ++i) {\n      bottomPadding += nodes[i].nodeSelfHeight();\n    }\n\n    return {\n      topPadding: topPadding,\n      bottomPadding: bottomPadding,\n      contentHeight: y - topPadding,\n      visibleNodes: nodes.slice(start, end),\n      offset: start\n    };\n  }\n\n  /**\n   * @return {number}\n   */\n  _contentHeight() {\n    const nodes = this.rootNode().flatChildren();\n    let result = 0;\n    for (let i = 0, size = nodes.length; i < size; ++i) {\n      result += nodes[i].nodeSelfHeight();\n    }\n    return result;\n  }\n\n  _update() {\n    if (this._updateAnimationFrameId) {\n      this.element.window().cancelAnimationFrame(this._updateAnimationFrameId);\n      delete this._updateAnimationFrameId;\n    }\n\n    const clientHeight = this.scrollContainer.clientHeight;\n    let scrollTop = this.scrollContainer.scrollTop;\n    const currentScrollTop = scrollTop;\n    const maxScrollTop = Math.max(0, this._contentHeight() - clientHeight);\n    if (!this._updateIsFromUser && this._stickToBottom) {\n      scrollTop = maxScrollTop;\n    }\n    this._updateIsFromUser = false;\n    scrollTop = Math.min(maxScrollTop, scrollTop);\n\n    const viewportState = this._calculateVisibleNodes(clientHeight, scrollTop);\n    const visibleNodes = viewportState.visibleNodes;\n    const visibleNodesSet = new Set(visibleNodes);\n\n    for (let i = 0; i < this._visibleNodes.length; ++i) {\n      const oldNode = this._visibleNodes[i];\n      if (!visibleNodesSet.has(oldNode) && oldNode.attached()) {\n        const element = oldNode.existingElement();\n        if (element) {\n          element.remove();\n        }\n      }\n    }\n\n    let previousElement = this.topFillerRowElement();\n    const tBody = this.dataTableBody;\n    let offset = viewportState.offset;\n\n    if (visibleNodes.length) {\n      const nodes = this.rootNode().flatChildren();\n      const index = nodes.indexOf(visibleNodes[0]);\n      this._updateStripesClass(Boolean(index % 2));\n      if (this._stickToBottom && index !== -1 && Boolean(index % 2) !== this._firstVisibleIsStriped) {\n        offset += 1;\n      }\n    }\n\n    this._firstVisibleIsStriped = Boolean(offset % 2);\n\n    for (let i = 0; i < visibleNodes.length; ++i) {\n      const node = visibleNodes[i];\n      const element = /** @type {!HTMLElement} */ (node.element());\n      node.setStriped((offset + i) % 2 === 0);\n      if (element !== previousElement.nextSibling) {\n        tBody.insertBefore(element, previousElement.nextSibling);\n      }\n      node.revealed = true;\n      previousElement = element;\n    }\n\n    this.setVerticalPadding(viewportState.topPadding, viewportState.bottomPadding);\n    this._lastScrollTop = scrollTop;\n    if (scrollTop !== currentScrollTop) {\n      this.scrollContainer.scrollTop = scrollTop;\n    }\n    const contentFits =\n        viewportState.contentHeight <= clientHeight && viewportState.topPadding + viewportState.bottomPadding === 0;\n    if (contentFits !== this.element.classList.contains('data-grid-fits-viewport')) {\n      this.element.classList.toggle('data-grid-fits-viewport', contentFits);\n      this.updateWidths();\n    }\n    this._visibleNodes = visibleNodes;\n    this.dispatchEventToListeners(Events.ViewportCalculated);\n  }\n\n  /**\n   * @param {!ViewportDataGridNode<!NODE_TYPE>} node\n   */\n  _revealViewportNode(node) {\n    const nodes = this.rootNode().flatChildren();\n    const index = nodes.indexOf(node);\n    if (index === -1) {\n      return;\n    }\n    let fromY = 0;\n    for (let i = 0; i < index; ++i) {\n      fromY += nodes[i].nodeSelfHeight();\n    }\n    const toY = fromY + node.nodeSelfHeight();\n    let scrollTop = this.scrollContainer.scrollTop;\n    if (scrollTop > fromY) {\n      scrollTop = fromY;\n      this._stickToBottom = false;\n    } else if (scrollTop + (/** @type {!HTMLElement} */ (this.scrollContainer)).offsetHeight < toY) {\n      scrollTop = toY - (/** @type {!HTMLElement} */ (this.scrollContainer)).offsetHeight;\n    }\n    this.scrollContainer.scrollTop = scrollTop;\n  }\n}\n\n/**\n * @override @enum {symbol}\n */\nexport const Events = {\n  ViewportCalculated: Symbol('ViewportCalculated')\n};\n\n/**\n * @extends {DataGridNode<!ViewportDataGridNode<!NODE_TYPE>>}\n * @template NODE_TYPE\n */\nexport class ViewportDataGridNode extends DataGridNode {\n  /**\n   * @param {?Object.<string, *>=} data\n   * @param {boolean=} hasChildren\n   */\n  constructor(data, hasChildren) {\n    super(data, hasChildren);\n    /** @type {boolean} */\n    this._stale = false;\n    /** @type {?Array<!ViewportDataGridNode<!NODE_TYPE>>} */\n    this._flatNodes = null;\n    this._isStriped = false;\n  }\n\n  /**\n   * @override\n   * @return {!Element}\n   */\n  element() {\n    const existingElement = this.existingElement();\n    const element = existingElement || this.createElement();\n    if (!existingElement || this._stale) {\n      this.createCells(element);\n      this._stale = false;\n    }\n    return element;\n  }\n\n  /**\n   * @param {boolean} isStriped\n   */\n  setStriped(isStriped) {\n    this._isStriped = isStriped;\n    this.element().classList.toggle('odd', isStriped);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isStriped() {\n    return this._isStriped;\n  }\n\n  /**\n   * @protected\n   */\n  clearFlatNodes() {\n    this._flatNodes = null;\n    const parent = /** @type {!ViewportDataGridNode<!NODE_TYPE>} */ (this.parent);\n    if (parent) {\n      parent.clearFlatNodes();\n    }\n  }\n\n  /**\n   * @return {!Array<!ViewportDataGridNode<!NODE_TYPE>>}\n   */\n  flatChildren() {\n    if (this._flatNodes) {\n      return this._flatNodes;\n    }\n    /** @type {!Array<!ViewportDataGridNode<!NODE_TYPE>>} */\n    const flatNodes = [];\n    const children = /** @type {!Array<!Array<!ViewportDataGridNode<!NODE_TYPE>>>} */ ([this.children]);\n    /** @type {!Array<number>} */\n    const counters = [0];\n    let depth = 0;\n    while (depth >= 0) {\n      if (children[depth].length <= counters[depth]) {\n        depth--;\n        continue;\n      }\n      const node = children[depth][counters[depth]++];\n      flatNodes.push(node);\n      if (node.expanded && node.children.length) {\n        depth++;\n        children[depth] = /** @type {!Array<!ViewportDataGridNode<!NODE_TYPE>>} */ (node.children);\n        counters[depth] = 0;\n      }\n    }\n\n    this._flatNodes = flatNodes;\n    return flatNodes;\n  }\n\n  /**\n   * @override\n   * @param {!DataGridNode<!ViewportDataGridNode<!NODE_TYPE>>} child\n   * @param {number} index\n   */\n  insertChild(child, index) {\n    this.clearFlatNodes();\n    if (child.parent === this) {\n      const currentIndex = this.children.indexOf(child);\n      if (currentIndex < 0) {\n        console.assert(false, 'Inconsistent DataGrid state');\n      }\n      if (currentIndex === index) {\n        return;\n      }\n      if (currentIndex < index) {\n        --index;\n      }\n    }\n    child.remove();\n    child.parent = this;\n    child.dataGrid = this.dataGrid;\n    if (!this.children.length) {\n      this.setHasChildren(true);\n    }\n    this.children.splice(index, 0, child);\n    child.recalculateSiblings(index);\n    if (this.expanded && this.dataGrid) {\n      (/** @type {!ViewportDataGrid<!NODE_TYPE>} */ (this.dataGrid)).scheduleUpdateStructure();\n    }\n  }\n\n  /**\n   * @override\n   * @param {!DataGridNode<!ViewportDataGridNode<!NODE_TYPE>>} child\n   */\n  removeChild(child) {\n    this.clearFlatNodes();\n    if (this.dataGrid) {\n      this.dataGrid.updateSelectionBeforeRemoval(child, false);\n    }\n    if (child.previousSibling) {\n      child.previousSibling.nextSibling = child.nextSibling;\n    }\n    if (child.nextSibling) {\n      child.nextSibling.previousSibling = child.previousSibling;\n    }\n    if (child.parent !== this) {\n      throw 'removeChild: Node is not a child of this node.';\n    }\n\n    Platform.ArrayUtilities.removeElement(this.children, child, true);\n    (/** @type {!ViewportDataGridNode<!NODE_TYPE>} */ (child))._unlink();\n\n    if (!this.children.length) {\n      this.setHasChildren(false);\n    }\n    if (this.expanded && this.dataGrid) {\n      (/** @type {!ViewportDataGrid<!NODE_TYPE>} */ (this.dataGrid)).scheduleUpdateStructure();\n    }\n  }\n\n  /**\n   * @override\n   */\n  removeChildren() {\n    this.clearFlatNodes();\n    if (this.dataGrid) {\n      this.dataGrid.updateSelectionBeforeRemoval(this, true);\n    }\n    for (let i = 0; i < this.children.length; ++i) {\n      /** @type {!ViewportDataGridNode<!NODE_TYPE>} */ (this.children[i])._unlink();\n    }\n\n    this.children = /** @type {!Array<!ViewportDataGridNode<!NODE_TYPE>>} */ ([]);\n\n    if (this.expanded && this.dataGrid) {\n      (/** @type {!ViewportDataGrid<!NODE_TYPE>} */ (this.dataGrid)).scheduleUpdateStructure();\n    }\n  }\n\n  _unlink() {\n    const existingElement = this.existingElement();\n    if (this.attached() && existingElement) {\n      existingElement.remove();\n    }\n    this.resetNode();\n  }\n\n  /**\n   * @override\n   */\n  collapse() {\n    if (!this.expanded) {\n      return;\n    }\n    this.clearFlatNodes();\n    this._expanded = false;\n    const existingElement = this.existingElement();\n    if (existingElement) {\n      existingElement.classList.remove('expanded');\n    }\n    if (this.selected) {\n      (/** @type {!ViewportDataGrid<!NODE_TYPE>} */ (this.dataGrid)).updateGridAccessibleName(/* text */ ls`collapsed`);\n    }\n    (/** @type {!ViewportDataGrid<!NODE_TYPE>} */ (this.dataGrid)).scheduleUpdateStructure();\n  }\n\n  /**\n   * @override\n   */\n  expand() {\n    if (this.expanded) {\n      return;\n    }\n    (/** @type {!ViewportDataGrid<!NODE_TYPE>} */ (this.dataGrid))._stickToBottom = false;\n    this.clearFlatNodes();\n    super.expand();\n    (/** @type {!ViewportDataGrid<!NODE_TYPE>} */ (this.dataGrid)).scheduleUpdateStructure();\n  }\n\n  /**\n   * @return {boolean}\n   */\n  attached() {\n    const existingElement = this.existingElement();\n    return Boolean(this.dataGrid && existingElement && existingElement.parentElement);\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    if (this.attached()) {\n      this._stale = true;\n      (/** @type {!ViewportDataGrid<!NODE_TYPE>} */ (this.dataGrid)).scheduleUpdate();\n    } else {\n      this.resetElement();\n    }\n  }\n\n  /**\n   * @override\n   */\n  reveal() {\n    (/** @type {!ViewportDataGrid<!NODE_TYPE>} */ (this.dataGrid))._revealViewportNode(this);\n  }\n\n  /**\n   * @override\n   * @param {number} index\n   */\n  recalculateSiblings(index) {\n    this.clearFlatNodes();\n    super.recalculateSiblings(index);\n  }\n}\n"]}