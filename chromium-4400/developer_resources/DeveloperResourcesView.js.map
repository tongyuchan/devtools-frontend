{"version":3,"file":"DeveloperResourcesView.js","sourceRoot":"","sources":["../../../../../front_end/developer_resources/DeveloperResourcesView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';\n\nimport {DeveloperResourcesListView} from './DeveloperResourcesListView.js';\n\nexport const UIStrings = {\n  /**\n  *@description Placeholder for a search field in a toolbar\n  */\n  enterTextToSearchTheUrlAndError: 'Enter text to search the URL and Error columns',\n  /**\n  *@description Title for a checkbox in the toolbar of the developer resources view\n  */\n  loadHttpsDeveloperResources: 'Load HTTP(S) developer resources through the inspected target',\n  /**\n  *@description Text for a checkbox in the toolbar of the developer resources view\n  */\n  enableLoadingThroughTarget: 'Enable loading through target',\n  /**\n   *@description Text for resources load status\n   *@example {1} PH1\n   *@example {1} PH2\n   */\n  resourcesCurrentlyLoading: '{PH1} resources, {PH2} currently loading',\n  /**\n   *@description Text for resources load status\n   *@example {1} PH1\n   */\n  resources: '{PH1} resources',\n};\nconst str_ = i18n.i18n.registerUIStrings('developer_resources/DeveloperResourcesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet developerResourcesViewInstance: DeveloperResourcesView;\n\nexport class DeveloperResourcesView extends UI.Widget.VBox {\n  _textFilterRegExp: RegExp|null;\n  _filterInput: UI.Toolbar.ToolbarInput;\n  _coverageResultsElement: HTMLElement;\n  _listView: DeveloperResourcesListView;\n  _statusToolbarElement: HTMLElement;\n  _statusMessageElement: HTMLElement;\n  _throttler: Common.Throttler.Throttler;\n  _loader: SDK.PageResourceLoader.PageResourceLoader;\n  private constructor() {\n    super(true);\n    this.registerRequiredCSS('developer_resources/developerResourcesView.css', {enableLegacyPatching: true});\n\n    const toolbarContainer = this.contentElement.createChild('div', 'developer-resource-view-toolbar-container');\n    const toolbar = new UI.Toolbar.Toolbar('developer-resource-view-toolbar', toolbarContainer);\n\n    this._textFilterRegExp = null;\n    const accessiblePlaceholder = '';  // Indicates that ToobarInput should use the placeholder as ARIA label.\n    this._filterInput =\n        new UI.Toolbar.ToolbarInput(i18nString(UIStrings.enterTextToSearchTheUrlAndError), accessiblePlaceholder, 1);\n    this._filterInput.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, this._onFilterChanged, this);\n    toolbar.appendToolbarItem(this._filterInput);\n\n    const loadThroughTarget = SDK.PageResourceLoader.getLoadThroughTargetSetting();\n    const loadThroughTargetCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        loadThroughTarget, i18nString(UIStrings.loadHttpsDeveloperResources),\n        i18nString(UIStrings.enableLoadingThroughTarget));\n    toolbar.appendToolbarItem(loadThroughTargetCheckbox);\n\n    this._coverageResultsElement = this.contentElement.createChild('div', 'developer-resource-view-results');\n    this._listView = new DeveloperResourcesListView(this._isVisible.bind(this));\n    this._listView.show(this._coverageResultsElement);\n    this._statusToolbarElement = this.contentElement.createChild('div', 'developer-resource-view-toolbar-summary');\n    this._statusMessageElement = this._statusToolbarElement.createChild('div', 'developer-resource-view-message');\n\n    this._throttler = new Common.Throttler.Throttler(100);\n    this._loader = SDK.PageResourceLoader.PageResourceLoader.instance();\n    this._loader.addEventListener(SDK.PageResourceLoader.Events.Update, this._onUpdate, this);\n    this._onUpdate();\n  }\n\n  static instance(): DeveloperResourcesView {\n    if (!developerResourcesViewInstance) {\n      developerResourcesViewInstance = new DeveloperResourcesView();\n    }\n    return developerResourcesViewInstance;\n  }\n\n  _onUpdate(): void {\n    this._throttler.schedule(this._update.bind(this));\n  }\n\n  async _update(): Promise<void> {\n    this._listView.reset();\n    this._listView.update(this._loader.getResourcesLoaded().values());\n    this._updateStats();\n  }\n\n  _updateStats(): void {\n    const {loading, resources} = this._loader.getNumberOfResources();\n    if (loading > 0) {\n      this._statusMessageElement.textContent =\n          i18nString(UIStrings.resourcesCurrentlyLoading, {PH1: resources, PH2: loading});\n    } else {\n      this._statusMessageElement.textContent = i18nString(UIStrings.resources, {PH1: resources});\n    }\n  }\n\n  _isVisible(item: SDK.PageResourceLoader.PageResource): boolean {\n    return !this._textFilterRegExp || this._textFilterRegExp.test(item.url) ||\n        this._textFilterRegExp.test(item.errorMessage || '');\n  }\n\n  /**\n   *\n   */\n  _onFilterChanged(): void {\n    if (!this._listView) {\n      return;\n    }\n\n    const text = this._filterInput.value();\n    this._textFilterRegExp = text ? createPlainTextSearchRegex(text, 'i') : null;\n    this._listView.updateFilterAndHighlight(this._textFilterRegExp);\n    this._updateStats();\n  }\n}\n"]}