{"version":3,"file":"CodeMirrorTextEditor.js","sourceRoot":"","sources":["../../../../../front_end/text_editor/CodeMirrorTextEditor.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as UI from '../ui/ui.js';\n\nimport {changeObjectToEditOperation, toPos, toRange} from './CodeMirrorUtils.js';\nimport {TextEditorAutocompleteController} from './TextEditorAutocompleteController.js';\n\nexport const UIStrings = {\n  /**\n  *@description Text in Code Mirror Text Editor of the CodeMirror text editor\n  */\n  codeEditor: 'Code editor',\n};\nconst str_ = i18n.i18n.registerUIStrings('text_editor/CodeMirrorTextEditor.js', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/**\n * @typedef {{\n*   startColumn: number,\n*   endColumn: number,\n*   type: string,\n* }}\n*/\n// @ts-ignore typedef\nexport let Token;\n\n/**\n * @typedef {{x: number, y: number, height: number}}\n  */\n// @ts-ignore typedef\nexport let Coordinates;\n\n// https://crbug.com/1151919 * = CodeMirror.Editor\n/** @type {!WeakMap<*, !CodeMirrorTextEditor>} */\nconst editorToDevtoolsWrapper = new WeakMap();\n\n/**\n * @implements {UI.TextEditor.TextEditor}\n */\nexport class CodeMirrorTextEditor extends UI.Widget.VBox {\n  /**\n   * @param {!UI.TextEditor.Options} options\n   */\n  constructor(options) {\n    super();\n    this._options = options;\n\n    this.registerRequiredCSS('cm/codemirror.css', {enableLegacyPatching: true});\n    this.registerRequiredCSS('text_editor/cmdevtools.css', {enableLegacyPatching: false});\n    this.registerRequiredCSS('text_editor/cmdevtools.darkmode.css', {enableLegacyPatching: false});\n\n    const {indentWithTabs, indentUnit} = CodeMirrorTextEditor._getIndentation(\n        Common.Settings.Settings.instance().moduleSetting('textEditorIndent').get());\n\n    // https://crbug.com/1151919 * = CodeMirror.Editor\n    /** @type {*} */\n    // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n    this._codeMirror = /** @type {!CodeMirror.Editor} */ (\n        // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n        new CodeMirror(this.element, /** @type {!CodeMirror.EditorConfiguration} */ ({\n                         screenReaderLabel: options.devtoolsAccessibleName || i18nString(UIStrings.codeEditor),\n                         lineNumbers: options.lineNumbers,\n                         smartIndent: true,\n                         electricChars: true,\n                         indentUnit,\n                         indentWithTabs,\n                         lineWrapping: options.lineWrapping,\n                         lineWiseCopyCut: options.lineWiseCopyCut || false,\n                         pollInterval: Math.pow(2, 31) - 1,  // ~25 days\n                         inputStyle: options.inputStyle || 'devToolsAccessibleTextArea',\n                         matchBrackets: true,\n                         styleSelectedText: true,\n                         styleActiveLine: true,\n                         tabIndex: 0,\n                       })));\n    this._codeMirrorElement = /** @type {!HTMLElement} */ (this.element.lastElementChild);\n\n    editorToDevtoolsWrapper.set(this._codeMirror, this);\n\n    Common.Settings.Settings.instance()\n        .moduleSetting('textEditorIndent')\n        .addChangeListener(this._updateIndentSize.bind(this));\n\n    // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n    CodeMirror.keyMap['devtools-common'] = /** @type {!CodeMirror.KeyMap} */ ({\n      'Left': 'goCharLeft',\n      'Right': 'goCharRight',\n      'Up': 'goLineUp',\n      'Down': 'goLineDown',\n      'End': 'goLineEnd',\n      'Home': 'goLineStartSmart',\n      'PageUp': 'goSmartPageUp',\n      'PageDown': 'goSmartPageDown',\n      'Delete': 'delCharAfter',\n      'Backspace': 'delCharBefore',\n      'Tab': 'UserIndent',\n      'Shift-Tab': 'indentLessOrPass',\n      'Enter': 'newlineAndIndent',\n      'Ctrl-Space': 'autocomplete',\n      'Esc': 'dismiss',\n      'Ctrl-M': 'gotoMatchingBracket'\n    });\n\n    // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n    CodeMirror.keyMap['devtools-pc'] = /** @type {!CodeMirror.KeyMap} */ ({\n      'Ctrl-A': 'selectAll',\n      'Ctrl-Z': 'undoAndReveal',\n      'Shift-Ctrl-Z': 'redoAndReveal',\n      'Ctrl-Y': 'redo',\n      'Ctrl-Home': 'goDocStart',\n      'Ctrl-Up': 'goDocStart',\n      'Ctrl-End': 'goDocEnd',\n      'Ctrl-Down': 'goDocEnd',\n      'Ctrl-Left': 'goGroupLeft',\n      'Ctrl-Right': 'goGroupRight',\n      'Alt-Left': 'moveCamelLeft',\n      'Alt-Right': 'moveCamelRight',\n      'Shift-Alt-Left': 'selectCamelLeft',\n      'Shift-Alt-Right': 'selectCamelRight',\n      'Ctrl-Backspace': 'delGroupBefore',\n      'Ctrl-Delete': 'delGroupAfter',\n      'Ctrl-/': 'toggleComment',\n      'Ctrl-D': 'selectNextOccurrence',\n      'Ctrl-U': 'undoLastSelection',\n      fallthrough: 'devtools-common'\n    });\n\n    // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n    CodeMirror.keyMap['devtools-mac'] = /** @type {!CodeMirror.KeyMap} */ ({\n      'Cmd-A': 'selectAll',\n      'Cmd-Z': 'undoAndReveal',\n      'Shift-Cmd-Z': 'redoAndReveal',\n      'Cmd-Up': 'goDocStart',\n      'Cmd-Down': 'goDocEnd',\n      'Alt-Left': 'goGroupLeft',\n      'Alt-Right': 'goGroupRight',\n      'Ctrl-Left': 'moveCamelLeft',\n      'Ctrl-Right': 'moveCamelRight',\n      'Ctrl-A': 'goLineLeft',\n      'Ctrl-E': 'goLineRight',\n      'Ctrl-B': 'goCharLeft',\n      'Ctrl-F': 'goCharRight',\n      'Ctrl-Alt-B': 'goGroupLeft',\n      'Ctrl-Alt-F': 'goGroupRight',\n      'Ctrl-H': 'delCharBefore',\n      'Ctrl-D': 'delCharAfter',\n      'Ctrl-K': 'killLine',\n      'Ctrl-T': 'transposeChars',\n      'Ctrl-P': 'goLineUp',\n      'Ctrl-N': 'goLineDown',\n      'Shift-Ctrl-Left': 'selectCamelLeft',\n      'Shift-Ctrl-Right': 'selectCamelRight',\n      'Cmd-Left': 'goLineStartSmart',\n      'Cmd-Right': 'goLineEnd',\n      'Cmd-Backspace': 'delLineLeft',\n      'Alt-Backspace': 'delGroupBefore',\n      'Alt-Delete': 'delGroupAfter',\n      'Cmd-/': 'toggleComment',\n      'Cmd-D': 'selectNextOccurrence',\n      'Cmd-U': 'undoLastSelection',\n      fallthrough: 'devtools-common'\n    });\n\n    if (options.bracketMatchingSetting) {\n      options.bracketMatchingSetting.addChangeListener(this._enableBracketMatchingIfNeeded, this);\n    }\n    this._enableBracketMatchingIfNeeded();\n\n    this._codeMirror.setOption('keyMap', Host.Platform.isMac() ? 'devtools-mac' : 'devtools-pc');\n\n    this._codeMirror.setOption('flattenSpans', false);\n\n    let maxHighlightLength = options.maxHighlightLength;\n    if (typeof maxHighlightLength !== 'number') {\n      maxHighlightLength = CodeMirrorTextEditor.maxHighlightLength;\n    }\n    this._codeMirror.setOption('maxHighlightLength', maxHighlightLength);\n    this._codeMirror.setOption('mode', null);\n    // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n    this._codeMirror.setOption('crudeMeasuringFrom', 1000);\n\n    this._shouldClearHistory = true;\n    this._lineSeparator = '\\n';\n\n    /** @type {boolean} */\n    this._hasOneLine;\n\n    // https://crbug.com/1151919 * = CodeMirror.TextMarker\n    /** @type {!WeakMap<*, !TextEditorBookMark>} */\n    this._bookmarkForMarker = new WeakMap();\n\n    CodeMirrorTextEditor._fixWordMovement(this._codeMirror);\n\n    this._selectNextOccurrenceController = new SelectNextOccurrenceController(this, this._codeMirror);\n\n    // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n    this._codeMirror.on('changes', this._changes.bind(this));\n    // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n    this._codeMirror.on('beforeSelectionChange', this._beforeSelectionChange.bind(this));\n    this._codeMirror.on('cursorActivity', () => {\n      this.dispatchEventToListeners(UI.TextEditor.Events.CursorChanged);\n    });\n\n    this.element.style.overflow = 'hidden';\n    this._codeMirrorElement.classList.add('source-code');\n    this._codeMirrorElement.classList.add('fill');\n\n    /** @type {!Platform.MapUtilities.Multimap<number, !Decoration>} */\n    this._decorations = new Platform.MapUtilities.Multimap();\n\n    this.element.addEventListener('keydown', this._handleKeyDown.bind(this), true);\n    this.element.addEventListener('keydown', this._handlePostKeyDown.bind(this), false);\n\n    this._needsRefresh = true;\n\n    this._readOnly = false;\n\n    this._mimeType = '';\n    if (options.mimeType) {\n      this.setMimeType(options.mimeType);\n    }\n    if (options.autoHeight) {\n      this._codeMirror.setSize(null, 'auto');\n    }\n\n    this._placeholderElement = null;\n    if (options.placeholder) {\n      this._placeholderElement = document.createElement('pre');\n      this._placeholderElement.classList.add('placeholder-text');\n      this._placeholderElement.classList.add('CodeMirror-line-like');\n      this._placeholderElement.textContent = options.placeholder;\n      this._updatePlaceholder();\n    }\n  }\n\n  // https://crbug.com/1151919 * = CodeMirror.Editor\n  /**\n   * @param {*} codeMirrorEditor\n   * @return {!CodeMirrorTextEditor}\n   */\n  static getForCodeMirror(codeMirrorEditor) {\n    const wrapper = editorToDevtoolsWrapper.get(codeMirrorEditor);\n    if (!wrapper) {\n      throw new Error('CodeMirrorTextEditor not found');\n    }\n    return wrapper;\n  }\n\n  // https://crbug.com/1151919 * = CodeMirror.Editor\n  /**\n   * @param {*} codeMirror\n   */\n  static autocompleteCommand(codeMirror) {\n    const autocompleteController = CodeMirrorTextEditor.getForCodeMirror(codeMirror)._autocompleteController;\n    if (autocompleteController) {\n      autocompleteController.autocomplete(true);\n    }\n  }\n\n  // https://crbug.com/1151919 * = CodeMirror.Editor\n  /**\n   * @param {*} codeMirror\n   */\n  static undoLastSelectionCommand(codeMirror) {\n    CodeMirrorTextEditor.getForCodeMirror(codeMirror)._selectNextOccurrenceController.undoLastSelection();\n  }\n\n  // https://crbug.com/1151919 * = CodeMirror.Editor\n  /**\n   * @param {*} codeMirror\n   */\n  static selectNextOccurrenceCommand(codeMirror) {\n    CodeMirrorTextEditor.getForCodeMirror(codeMirror)._selectNextOccurrenceController.selectNextOccurrence();\n  }\n\n  // https://crbug.com/1151919 * = CodeMirror.Editor\n  /**\n   * @param {boolean} shift\n   * @param {*} codeMirror\n   */\n  static moveCamelLeftCommand(shift, codeMirror) {\n    CodeMirrorTextEditor.getForCodeMirror(codeMirror)._doCamelCaseMovement(-1, shift);\n  }\n\n  // https://crbug.com/1151919 * = CodeMirror.Editor\n  /**\n   * @param {boolean} shift\n   * @param {*} codeMirror\n   */\n  static moveCamelRightCommand(shift, codeMirror) {\n    CodeMirrorTextEditor.getForCodeMirror(codeMirror)._doCamelCaseMovement(1, shift);\n  }\n\n  /**\n   * @param {string} indentationValue\n   */\n  static _getIndentation(indentationValue) {\n    const indentWithTabs = /\\t/.test(indentationValue);\n    const indentUnit = indentWithTabs ? 4 : indentationValue.length;\n    return {indentWithTabs, indentUnit};\n  }\n\n  /**\n   * @param {string} modeName\n   * @param {string} tokenPrefix\n   */\n  static _overrideModeWithPrefixedTokens(modeName, tokenPrefix) {\n    const oldModeName = modeName + '-old';\n    if (CodeMirror.modes[oldModeName]) {\n      return;\n    }\n\n    CodeMirror.defineMode(oldModeName, CodeMirror.modes[modeName]);\n    CodeMirror.defineMode(modeName, modeConstructor);\n\n    /**\n     *\n     * @param {*} config\n     * @param {*} parserConfig\n     */\n    function modeConstructor(config, parserConfig) {\n      /** @type {*} */\n      const innerConfig = {};\n      for (const i in parserConfig) {\n        innerConfig[i] = parserConfig[i];\n      }\n      innerConfig.name = oldModeName;\n      const codeMirrorMode = CodeMirror.getMode(config, innerConfig);\n      codeMirrorMode.name = modeName;\n      if (typeof codeMirrorMode.token === 'undefined') {\n        throw new Error('codeMirrorMode.token was unexpectedly undefined');\n      }\n      codeMirrorMode.token = getTokenFunction(codeMirrorMode.token);\n      return codeMirrorMode;\n    }\n\n    /**\n     * @param {function(*,*):string|null} superToken\n     */\n    function getTokenFunction(superToken) {\n      /**\n      * @param {*} stream\n      * @param {*} state\n      */\n      function childFunc(stream, state) {\n        return tokenOverride(superToken, stream, state);\n      }\n\n      return childFunc;\n    }\n    /**\n     * @param {function(*, *):string|null} superToken\n     * @param {*} stream\n     * @param {*} state\n     */\n    function tokenOverride(superToken, stream, state) {\n      const token = superToken(stream, state);\n      return token ? tokenPrefix + token.split(/ +/).join(' ' + tokenPrefix) : token;\n    }\n  }\n\n  // https://crbug.com/1151919 * = CodeMirror.Editor\n  /**\n   * @param {*} codeMirror\n   */\n  static _fixWordMovement(codeMirror) {\n    // https://crbug.com/1151919 * = CodeMirror.Editor\n    /**\n     * @param {boolean} shift\n     * @param {*} codeMirror\n     */\n    function moveLeft(shift, codeMirror) {\n      codeMirror.setExtending(shift);\n      const cursor = codeMirror.getCursor('head');\n      codeMirror.execCommand('goGroupLeft');\n      const newCursor = codeMirror.getCursor('head');\n      if (newCursor.ch === 0 && newCursor.line !== 0) {\n        codeMirror.setExtending(false);\n        return;\n      }\n\n      const skippedText = codeMirror.getRange(newCursor, cursor, '#');\n      if (/^\\s+$/.test(skippedText)) {\n        codeMirror.execCommand('goGroupLeft');\n      }\n      codeMirror.setExtending(false);\n    }\n\n    // https://crbug.com/1151919 * = CodeMirror.Editor\n    /**\n     * @param {boolean} shift\n     * @param {*} codeMirror\n     */\n    function moveRight(shift, codeMirror) {\n      codeMirror.setExtending(shift);\n      const cursor = codeMirror.getCursor('head');\n      codeMirror.execCommand('goGroupRight');\n      const newCursor = codeMirror.getCursor('head');\n      if (newCursor.ch === 0 && newCursor.line !== 0) {\n        codeMirror.setExtending(false);\n        return;\n      }\n\n      const skippedText = codeMirror.getRange(cursor, newCursor, '#');\n      if (/^\\s+$/.test(skippedText)) {\n        codeMirror.execCommand('goGroupRight');\n      }\n      codeMirror.setExtending(false);\n    }\n\n    const modifierKey = Host.Platform.isMac() ? 'Alt' : 'Ctrl';\n    const leftKey = modifierKey + '-Left';\n    const rightKey = modifierKey + '-Right';\n    /** @type {*} */\n    const keyMap = {};\n    keyMap[leftKey] = moveLeft.bind(null, false);\n    keyMap[rightKey] = moveRight.bind(null, false);\n    keyMap['Shift-' + leftKey] = moveLeft.bind(null, true);\n    keyMap['Shift-' + rightKey] = moveRight.bind(null, true);\n    codeMirror.addKeyMap(keyMap);\n  }\n\n  // https://crbug.com/1151919 * = CodeMirror.Editor\n  /**\n   * @return {*}\n   */\n  codeMirror() {\n    // https://crbug.com/1151919 * = CodeMirror.Editor\n    return /** @type {*} */ (this._codeMirror);\n  }\n\n  /**\n   * @override\n   * @return {!UI.Widget.Widget}\n   */\n  widget() {\n    return this;\n  }\n\n  /**\n   * @override\n   * @param {string} placeholder\n   */\n  setPlaceholder(placeholder) {\n    if (!this._placeholderElement) {\n      this._placeholderElement = document.createElement('pre');\n      this._placeholderElement.classList.add('placeholder-text');\n      this._placeholderElement.classList.add('CodeMirror-line-like');\n    }\n    this._placeholderElement.textContent = placeholder || '';\n    this._updatePlaceholder();\n  }\n\n  /**\n   * @param {number} lineNumber\n   * @param {number} lineLength\n   * @param {number} charNumber\n   * @return {{lineNumber: number, columnNumber: number}}\n   */\n  _normalizePositionForOverlappingColumn(lineNumber, lineLength, charNumber) {\n    const linesCount = this._codeMirror.lineCount();\n    let columnNumber = charNumber;\n    if (charNumber < 0 && lineNumber > 0) {\n      --lineNumber;\n      columnNumber = this.line(lineNumber).length;\n    } else if (charNumber >= lineLength && lineNumber < linesCount - 1) {\n      ++lineNumber;\n      columnNumber = 0;\n    } else {\n      columnNumber = Platform.NumberUtilities.clamp(charNumber, 0, lineLength);\n    }\n    return {lineNumber: lineNumber, columnNumber: columnNumber};\n  }\n\n  /**\n   * @param {number} lineNumber\n   * @param {number} columnNumber\n   * @param {number} direction\n   * @return {{lineNumber: number, columnNumber: number}}\n   */\n  _camelCaseMoveFromPosition(lineNumber, columnNumber, direction) {\n    /**\n     * @param {number} charNumber\n     * @param {number} length\n     * @return {boolean}\n     */\n    function valid(charNumber, length) {\n      return charNumber >= 0 && charNumber < length;\n    }\n\n    /**\n     * @param {string} text\n     * @param {number} charNumber\n     * @return {boolean}\n     */\n    function isWordStart(text, charNumber) {\n      const position = charNumber;\n      const nextPosition = charNumber + 1;\n      return valid(position, text.length) && valid(nextPosition, text.length) &&\n          TextUtils.TextUtils.Utils.isWordChar(text[position]) &&\n          TextUtils.TextUtils.Utils.isWordChar(text[nextPosition]) &&\n          TextUtils.TextUtils.Utils.isUpperCase(text[position]) &&\n          TextUtils.TextUtils.Utils.isLowerCase(text[nextPosition]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {number} charNumber\n     * @return {boolean}\n     */\n    function isWordEnd(text, charNumber) {\n      const position = charNumber;\n      const prevPosition = charNumber - 1;\n      return valid(position, text.length) && valid(prevPosition, text.length) &&\n          TextUtils.TextUtils.Utils.isWordChar(text[position]) &&\n          TextUtils.TextUtils.Utils.isWordChar(text[prevPosition]) &&\n          TextUtils.TextUtils.Utils.isUpperCase(text[position]) &&\n          TextUtils.TextUtils.Utils.isLowerCase(text[prevPosition]);\n    }\n\n    /**\n     * @param {number} lineNumber\n     * @param {number} lineLength\n     * @param {number} columnNumber\n     * @return {{lineNumber: number, columnNumber: number}}\n     */\n    function constrainPosition(lineNumber, lineLength, columnNumber) {\n      return {lineNumber: lineNumber, columnNumber: Platform.NumberUtilities.clamp(columnNumber, 0, lineLength)};\n    }\n\n    const text = this.line(lineNumber);\n    const length = text.length;\n\n    if ((columnNumber === length && direction === 1) || (columnNumber === 0 && direction === -1)) {\n      return this._normalizePositionForOverlappingColumn(lineNumber, length, columnNumber + direction);\n    }\n\n    let charNumber = direction === 1 ? columnNumber : columnNumber - 1;\n\n    // Move through initial spaces if any.\n    while (valid(charNumber, length) && TextUtils.TextUtils.Utils.isSpaceChar(text[charNumber])) {\n      charNumber += direction;\n    }\n    if (!valid(charNumber, length)) {\n      return constrainPosition(lineNumber, length, charNumber);\n    }\n\n    if (TextUtils.TextUtils.Utils.isStopChar(text[charNumber])) {\n      while (valid(charNumber, length) && TextUtils.TextUtils.Utils.isStopChar(text[charNumber])) {\n        charNumber += direction;\n      }\n      if (!valid(charNumber, length)) {\n        return constrainPosition(lineNumber, length, charNumber);\n      }\n      return {lineNumber: lineNumber, columnNumber: direction === -1 ? charNumber + 1 : charNumber};\n    }\n\n    charNumber += direction;\n    while (valid(charNumber, length) && !isWordStart(text, charNumber) && !isWordEnd(text, charNumber) &&\n           TextUtils.TextUtils.Utils.isWordChar(text[charNumber])) {\n      charNumber += direction;\n    }\n\n    if (!valid(charNumber, length)) {\n      return constrainPosition(lineNumber, length, charNumber);\n    }\n    if (isWordStart(text, charNumber) || isWordEnd(text, charNumber)) {\n      return {lineNumber: lineNumber, columnNumber: charNumber};\n    }\n\n\n    return {lineNumber: lineNumber, columnNumber: direction === -1 ? charNumber + 1 : charNumber};\n  }\n\n  /**\n   * @param {number} direction\n   * @param {boolean} shift\n   */\n  _doCamelCaseMovement(direction, shift) {\n    const selections = this.selections();\n    for (let i = 0; i < selections.length; ++i) {\n      const selection = selections[i];\n      const move = this._camelCaseMoveFromPosition(selection.endLine, selection.endColumn, direction);\n      selection.endLine = move.lineNumber;\n      selection.endColumn = move.columnNumber;\n      if (!shift) {\n        selections[i] = selection.collapseToEnd();\n      }\n    }\n    this.setSelections(selections);\n  }\n\n  dispose() {\n    if (this._options.bracketMatchingSetting) {\n      this._options.bracketMatchingSetting.removeChangeListener(this._enableBracketMatchingIfNeeded, this);\n    }\n  }\n\n  _enableBracketMatchingIfNeeded() {\n    this._codeMirror.setOption(\n        // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n        'autoCloseBrackets',\n        (this._options.bracketMatchingSetting && this._options.bracketMatchingSetting.get()) ? {explode: false} :\n                                                                                               false);\n  }\n\n  /**\n   * @override\n   */\n  wasShown() {\n    if (this._needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  refresh() {\n    if (this.isShowing()) {\n      this._codeMirror.refresh();\n      this._needsRefresh = false;\n      return;\n    }\n    this._needsRefresh = true;\n  }\n\n  /**\n   * @override\n   */\n  willHide() {\n    delete this._editorSizeInSync;\n  }\n\n  undo() {\n    this._codeMirror.undo();\n  }\n\n  redo() {\n    this._codeMirror.redo();\n  }\n\n  /**\n   * @param {!Event} e\n   */\n  _handleKeyDown(e) {\n    const keyboardEvent = /** @type {!KeyboardEvent} */ (e);\n    if (keyboardEvent.key === 'Tab' &&\n        Common.Settings.Settings.instance().moduleSetting('textEditorTabMovesFocus').get()) {\n      keyboardEvent.consume(false);\n      return;\n    }\n    if (this._autocompleteController && this._autocompleteController.keyDown(keyboardEvent)) {\n      keyboardEvent.consume(true);\n    }\n  }\n\n  /**\n   * @param {!Event} e\n   */\n  _handlePostKeyDown(e) {\n    if (e.defaultPrevented) {\n      e.consume(true);\n    }\n  }\n\n  /**\n   * @override\n   * @param {?UI.TextEditor.AutocompleteConfig} config\n   */\n  configureAutocomplete(config) {\n    if (this._autocompleteController) {\n      this._autocompleteController.dispose();\n      delete this._autocompleteController;\n    }\n\n    if (config) {\n      this._autocompleteController = new TextEditorAutocompleteController(this, this._codeMirror, config);\n    }\n  }\n\n  /**\n   * @param {number} lineNumber\n   * @param {number} column\n   * @return {?Coordinates}\n   */\n  cursorPositionToCoordinates(lineNumber, column) {\n    if (lineNumber >= this._codeMirror.lineCount() || lineNumber < 0 || column < 0 ||\n        column > this._codeMirror.getLine(lineNumber).length) {\n      return null;\n    }\n    const metrics = this._codeMirror.cursorCoords(new CodeMirror.Pos(lineNumber, column));\n    return {x: metrics.left, y: metrics.top, height: metrics.bottom - metrics.top};\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @return {?TextUtils.TextRange.TextRange}\n   */\n  coordinatesToCursorPosition(x, y) {\n    const element = this.element.ownerDocument.elementFromPoint(x, y);\n    if (!element || !element.isSelfOrDescendant(this._codeMirror.getWrapperElement())) {\n      return null;\n    }\n    const gutterBox = this._codeMirror.getGutterElement().boxInWindow();\n    if (x >= gutterBox.x && x <= gutterBox.x + gutterBox.width && y >= gutterBox.y &&\n        y <= gutterBox.y + gutterBox.height) {\n      return null;\n    }\n    const coords = this._codeMirror.coordsChar({left: x, top: y});\n    return toRange(coords, coords);\n  }\n\n  /**\n   * @override\n   * @param {number} lineNumber\n   * @param {number} columnNumber\n   * @return {!{x: number, y: number}}\n   */\n  visualCoordinates(lineNumber, columnNumber) {\n    const metrics = this._codeMirror.cursorCoords(new CodeMirror.Pos(lineNumber, columnNumber));\n    return {x: metrics.left, y: metrics.top};\n  }\n\n  /**\n   * @override\n   * @param {number} lineNumber\n   * @param {number} columnNumber\n   * @return {?Token}\n   */\n  tokenAtTextPosition(lineNumber, columnNumber) {\n    if (lineNumber < 0 || lineNumber >= this._codeMirror.lineCount()) {\n      return null;\n    }\n    const token = this._codeMirror.getTokenAt(new CodeMirror.Pos(lineNumber, (columnNumber || 0) + 1));\n    if (!token) {\n      return null;\n    }\n    return {startColumn: token.start, endColumn: token.end, type: /** @type {string} */ (token.type)};\n  }\n\n  /**\n   * @param {number} generation\n   * @return {boolean}\n   */\n  isClean(generation) {\n    return this._codeMirror.isClean(generation);\n  }\n\n  /**\n   * @return {number}\n   */\n  markClean() {\n    return this._codeMirror.changeGeneration(true);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  _hasLongLines() {\n    /**\n     *\n     * @param {!{text:string}} lineHandle\n     */\n    function lineIterator(lineHandle) {\n      if (lineHandle.text.length > CodeMirrorTextEditor.LongLineModeLineLengthThreshold) {\n        hasLongLines = true;\n      }\n      return hasLongLines;\n    }\n    let hasLongLines = false;\n    this._codeMirror.eachLine(lineIterator);\n    return hasLongLines;\n  }\n\n  _enableLongLinesMode() {\n    // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n    this._codeMirror.setOption('styleSelectedText', false);\n  }\n\n  _disableLongLinesMode() {\n    // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n    this._codeMirror.setOption('styleSelectedText', true);\n  }\n\n  /**\n   * @param {!{data: *}} updatedValue\n   */\n  _updateIndentSize(updatedValue) {\n    const {indentWithTabs, indentUnit} =\n        CodeMirrorTextEditor._getIndentation(/** @type {string} */ (updatedValue.data));\n\n    this._codeMirror.setOption('indentUnit', indentUnit);\n    this._codeMirror.setOption('indentWithTabs', indentWithTabs);\n  }\n\n  /**\n   * @param {string} mimeType\n   */\n  setMimeType(mimeType) {\n    this._mimeType = mimeType;\n\n    const rewrittenMimeType = this.rewriteMimeType(mimeType);\n    const modeOption = this._codeMirror.getOption('mode');\n    if (modeOption !== rewrittenMimeType) {\n      this._codeMirror.setOption('mode', rewrittenMimeType);\n    }\n  }\n\n  /**\n   * @param {!Object} mode\n   */\n  setHighlightMode(mode) {\n    this._mimeType = '';\n    this._codeMirror.setOption('mode', mode);\n  }\n\n  /**\n   * @protected\n   * @param {string} mimeType\n   */\n  rewriteMimeType(mimeType) {\n    // Overridden in SourcesTextEditor\n    return mimeType;\n  }\n\n  /**\n   * @protected\n   * @return {string}\n   */\n  mimeType() {\n    return this._mimeType;\n  }\n\n  /**\n   * @param {boolean} readOnly\n   */\n  setReadOnly(readOnly) {\n    if (this._readOnly === readOnly) {\n      return;\n    }\n    this.clearPositionHighlight();\n    this._readOnly = readOnly;\n    this.element.classList.toggle('CodeMirror-readonly', readOnly);\n    this._codeMirror.setOption('readOnly', readOnly);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readOnly() {\n    return Boolean(this._codeMirror.getOption('readOnly'));\n  }\n\n  /**\n   * @param {function(number):string} formatter\n   */\n  setLineNumberFormatter(formatter) {\n    this._codeMirror.setOption('lineNumberFormatter', formatter);\n  }\n\n  /**\n   * @override\n   * @param {function(!KeyboardEvent):void} handler\n   */\n  addKeyDownHandler(handler) {\n    this._codeMirror.on(\n        'keydown', /**\n    * @param {*} CodeMirror\n    * @param {!KeyboardEvent} event\n    */\n        (CodeMirror, event) => handler(event));\n  }\n\n  /**\n   * @param {number} lineNumber\n   * @param {number} columnNumber\n   * @param {!HTMLElement} element\n   * @param {symbol} type\n   * @param {boolean=} insertBefore\n   * @return {!TextEditorBookMark}\n   */\n  addBookmark(lineNumber, columnNumber, element, type, insertBefore) {\n    const marker = this._codeMirror.setBookmark(\n        new CodeMirror.Pos(lineNumber, columnNumber), {widget: element, insertLeft: insertBefore});\n\n    const bookmark = new TextEditorBookMark(marker, type, this);\n    this._bookmarkForMarker.set(marker, bookmark);\n    this._updateDecorations(lineNumber);\n    return bookmark;\n  }\n\n  /**\n   * @param {!TextUtils.TextRange.TextRange} range\n   * @param {symbol=} type\n   * @return {!Array.<!TextEditorBookMark>}\n   */\n  bookmarks(range, type) {\n    const pos = toPos(range);\n    let markers = this._codeMirror.findMarksAt(pos.start);\n    if (!range.isEmpty()) {\n      const middleMarkers = this._codeMirror.findMarks(pos.start, pos.end);\n      const endMarkers = this._codeMirror.findMarksAt(pos.end);\n      markers = markers.concat(middleMarkers, endMarkers);\n    }\n    /** @type {!Array<!TextEditorBookMark>} */\n    const bookmarks = [];\n    for (let i = 0; i < markers.length; i++) {\n      const marker = markers[i];\n      const bookmark = this._bookmarkForMarker.get(marker);\n      if (bookmark && (!type || bookmark.type() === type)) {\n        bookmarks.push(bookmark);\n      }\n    }\n    return bookmarks;\n  }\n\n  /**\n   * @override\n   */\n  focus() {\n    this._codeMirror.focus();\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  hasFocus() {\n    return this._codeMirror.hasFocus();\n  }\n\n  /**\n   * @param {function():*} operation\n   */\n  operation(operation) {\n    this._codeMirror.operation(operation);\n  }\n\n  /**\n   * @param {number} lineNumber\n   */\n  scrollLineIntoView(lineNumber) {\n    this._innerRevealLine(lineNumber, this._codeMirror.getScrollInfo());\n  }\n\n  /**\n   * @param {number} lineNumber\n   * @param {!{left: number, top: number, width: number, height: number, clientWidth: number, clientHeight: number}} scrollInfo\n   */\n  _innerRevealLine(lineNumber, scrollInfo) {\n    const topLine = this._codeMirror.lineAtHeight(scrollInfo.top, 'local');\n    const bottomLine = this._codeMirror.lineAtHeight(scrollInfo.top + scrollInfo.clientHeight, 'local');\n    const linesPerScreen = bottomLine - topLine + 1;\n    if (lineNumber < topLine) {\n      const topLineToReveal = Math.max(lineNumber - (linesPerScreen / 2) + 1, 0) | 0;\n      this._codeMirror.scrollIntoView(new CodeMirror.Pos(topLineToReveal, 0));\n    } else if (lineNumber > bottomLine) {\n      const bottomLineToReveal = Math.min(lineNumber + (linesPerScreen / 2) - 1, this.linesCount - 1) | 0;\n      this._codeMirror.scrollIntoView(new CodeMirror.Pos(bottomLineToReveal, 0));\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} element\n   * @param {number} lineNumber\n   * @param {number=} startColumn\n   * @param {number=} endColumn\n   */\n  addDecoration(element, lineNumber, startColumn, endColumn) {\n    const widget = this._codeMirror.addLineWidget(lineNumber, element);\n    let update = null;\n    if (typeof startColumn !== 'undefined') {\n      if (typeof endColumn === 'undefined') {\n        endColumn = Infinity;\n      }\n      update = this._updateFloatingDecoration.bind(this, element, lineNumber, startColumn, endColumn);\n      update();\n    }\n\n    this._decorations.set(lineNumber, {element: element, update: update, widget: widget});\n  }\n\n  /**\n   * @param {!HTMLElement} element\n   * @param {number} lineNumber\n   * @param {number} startColumn\n   * @param {number} endColumn\n   */\n  _updateFloatingDecoration(element, lineNumber, startColumn, endColumn) {\n    const base = this._codeMirror.cursorCoords(new CodeMirror.Pos(lineNumber, 0), 'page');\n    const start = this._codeMirror.cursorCoords(new CodeMirror.Pos(lineNumber, startColumn), 'page');\n    const end = this._codeMirror.charCoords(new CodeMirror.Pos(lineNumber, endColumn), 'page');\n    element.style.width = (end.right - start.left) + 'px';\n    element.style.left = (start.left - base.left) + 'px';\n  }\n\n  /**\n   * @param {number} lineNumber\n   */\n  _updateDecorations(lineNumber) {\n    this._decorations.get(lineNumber).forEach(innerUpdateDecorations);\n\n    /**\n     * @param {!Decoration} decoration\n     */\n    function innerUpdateDecorations(decoration) {\n      if (decoration.update) {\n        decoration.update();\n      }\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {number} lineNumber\n   */\n  removeDecoration(element, lineNumber) {\n    this._decorations.get(lineNumber).forEach(innerRemoveDecoration.bind(this));\n\n    /**\n     * @this {CodeMirrorTextEditor}\n     * @param {!Decoration} decoration\n     */\n    function innerRemoveDecoration(decoration) {\n      if (decoration.element !== element) {\n        return;\n      }\n      this._codeMirror.removeLineWidget(decoration.widget);\n      this._decorations.delete(lineNumber, decoration);\n    }\n  }\n\n  /**\n   * @param {number} lineNumber 0-based\n   * @param {number=} columnNumber\n   * @param {boolean=} shouldHighlight\n   */\n  revealPosition(lineNumber, columnNumber, shouldHighlight) {\n    lineNumber = Platform.NumberUtilities.clamp(lineNumber, 0, this._codeMirror.lineCount() - 1);\n    if (typeof columnNumber !== 'number') {\n      columnNumber = 0;\n    }\n    columnNumber = Platform.NumberUtilities.clamp(columnNumber, 0, this._codeMirror.getLine(lineNumber).length);\n\n    this.clearPositionHighlight();\n    this._highlightedLine = this._codeMirror.getLineHandle(lineNumber);\n    if (!this._highlightedLine) {\n      return;\n    }\n    this.scrollLineIntoView(lineNumber);\n    if (shouldHighlight) {\n      this._codeMirror.addLineClass(\n          // @ts-ignore the `null` argument should be a string?\n          this._highlightedLine, null, this._readOnly ? 'cm-readonly-highlight' : 'cm-highlight');\n      if (!this._readOnly) {\n        this._clearHighlightTimeout = setTimeout(this.clearPositionHighlight.bind(this), 2000);\n      }\n    }\n    this.setSelection(TextUtils.TextRange.TextRange.createFromLocation(lineNumber, columnNumber));\n  }\n\n  clearPositionHighlight() {\n    if (this._clearHighlightTimeout) {\n      clearTimeout(this._clearHighlightTimeout);\n    }\n    delete this._clearHighlightTimeout;\n\n    if (this._highlightedLine) {\n      this._codeMirror.removeLineClass(\n          // @ts-ignore the `null` argument should be a string?\n          this._highlightedLine, null, this._readOnly ? 'cm-readonly-highlight' : 'cm-highlight');\n    }\n    delete this._highlightedLine;\n  }\n\n  /**\n   * @override\n   * @return {!Array.<!Element>}\n   */\n  elementsToRestoreScrollPositionsFor() {\n    return [];\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   */\n  _updatePaddingBottom(width, height) {\n    let newPaddingBottom = 0;\n    const linesElement =\n        /** @type {!HTMLElement} */ (this._codeMirrorElement.getElementsByClassName('CodeMirror-lines')[0]);\n\n    if (this._options.padBottom) {\n      const scrollInfo = this._codeMirror.getScrollInfo();\n      const lineCount = this._codeMirror.lineCount();\n      if (lineCount > 1) {\n        newPaddingBottom =\n            // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n            Math.max(scrollInfo.clientHeight - this._codeMirror.getLineHandle(this._codeMirror.lastLine()).height, 0);\n      }\n    }\n    const stringPaddingBottomValue = String(newPaddingBottom) + 'px';\n    if (linesElement.style.paddingBottom !== stringPaddingBottomValue) {\n      linesElement.style.paddingBottom = stringPaddingBottomValue;\n      this._codeMirror.setSize(width, height);\n    }\n  }\n\n  /**\n   * @param {boolean} enableScrolling\n   */\n  toggleScrollPastEof(enableScrolling) {\n    if (this._options.padBottom === enableScrolling) {\n      return;\n    }\n\n    this._options.padBottom = enableScrolling;\n    this._resizeEditor();\n  }\n\n  _resizeEditor() {\n    const parentElement = this.element.parentElement;\n    if (!parentElement || !this.isShowing()) {\n      return;\n    }\n    this._codeMirror.operation(() => {\n      const scrollLeft = this._codeMirror.doc.scrollLeft;\n      const scrollTop = this._codeMirror.doc.scrollTop;\n      const width = parentElement.offsetWidth;\n      const height = parentElement.offsetHeight - this.element.offsetTop;\n      if (this._options.autoHeight) {\n        this._codeMirror.setSize(width, 'auto');\n      } else {\n        this._codeMirror.setSize(width, height);\n        this._updatePaddingBottom(width, height);\n      }\n      this._codeMirror.scrollTo(scrollLeft, scrollTop);\n    });\n  }\n\n  /**\n   * @override\n   */\n  onResize() {\n    if (this._autocompleteController) {\n      this._autocompleteController.clearAutocomplete();\n    }\n    this._resizeEditor();\n    this._editorSizeInSync = true;\n    if (this._selectionSetScheduled) {\n      delete this._selectionSetScheduled;\n      if (this._lastSelection) {\n        this.setSelection(this._lastSelection);\n      }\n    }\n  }\n\n  /**\n   * @param {!TextUtils.TextRange.TextRange} range\n   * @param {string} text\n   * @param {string=} origin\n   * @return {!TextUtils.TextRange.TextRange}\n   */\n  editRange(range, text, origin) {\n    const pos = toPos(range);\n    this._codeMirror.replaceRange(text, pos.start, pos.end, origin);\n    const newRange =\n        toRange(pos.start, this._codeMirror.posFromIndex(this._codeMirror.indexFromPos(pos.start) + text.length));\n    this.dispatchEventToListeners(UI.TextEditor.Events.TextChanged, {oldRange: range, newRange: newRange});\n    return newRange;\n  }\n\n  /**\n   * @override\n   */\n  clearAutocomplete() {\n    if (this._autocompleteController) {\n      this._autocompleteController.clearAutocomplete();\n    }\n  }\n\n  /**\n   * @param {number} lineNumber\n   * @param {number} column\n   * @param {function(string):boolean} isWordChar\n   * @return {!TextUtils.TextRange.TextRange}\n   */\n  wordRangeForCursorPosition(lineNumber, column, isWordChar) {\n    const line = this.line(lineNumber);\n    let wordStart = column;\n    if (column !== 0 && isWordChar(line.charAt(column - 1))) {\n      wordStart = column - 1;\n      while (wordStart > 0 && isWordChar(line.charAt(wordStart - 1))) {\n        --wordStart;\n      }\n    }\n    let wordEnd = column;\n    while (wordEnd < line.length && isWordChar(line.charAt(wordEnd))) {\n      ++wordEnd;\n    }\n    return new TextUtils.TextRange.TextRange(lineNumber, wordStart, lineNumber, wordEnd);\n  }\n\n  // https://crbug.com/1151919 first * = CodeMirror.Editor, second * = CodeMirror.EditorChangeLinkedList\n  /**\n   * @param {*} codeMirror\n   * @param {*} changes\n   */\n  _changes(codeMirror, changes) {\n    if (!changes.length) {\n      return;\n    }\n\n    this._updatePlaceholder();\n\n    // We do not show \"scroll beyond end of file\" span for one line documents, so we need to check if \"document has one line\" changed.\n    const hasOneLine = this._codeMirror.lineCount() === 1;\n    if (hasOneLine !== this._hasOneLine) {\n      this._resizeEditor();\n    }\n    this._hasOneLine = hasOneLine;\n\n    this._decorations.valuesArray().forEach(decoration => this._codeMirror.removeLineWidget(decoration.widget));\n    this._decorations.clear();\n\n    const edits = [];\n    let currentEdit;\n\n    for (let changeIndex = 0; changeIndex < changes.length; ++changeIndex) {\n      const changeObject = changes[changeIndex];\n      const edit = changeObjectToEditOperation(changeObject);\n      if (currentEdit && edit.oldRange.equal(currentEdit.newRange)) {\n        currentEdit.newRange = edit.newRange;\n      } else {\n        currentEdit = edit;\n        edits.push(currentEdit);\n      }\n    }\n\n    for (let i = 0; i < edits.length; i++) {\n      this.dispatchEventToListeners(\n          UI.TextEditor.Events.TextChanged, {oldRange: edits[i].oldRange, newRange: edits[i].newRange});\n    }\n  }\n\n  // https://crbug.com/1151919 first * = CodeMirror.Editor, second and third * = CodeMirror.Pos\n  /**\n   * @param {*} codeMirror\n   * @param {{ranges: !Array.<{head: *, anchor: *}>}} selection\n   */\n  _beforeSelectionChange(codeMirror, selection) {\n    this._selectNextOccurrenceController.selectionWillChange();\n  }\n\n  /**\n   * @param {number} lineNumber\n   */\n  scrollToLine(lineNumber) {\n    const pos = new CodeMirror.Pos(lineNumber, 0);\n    const coords = this._codeMirror.charCoords(pos, 'local');\n    this._codeMirror.scrollTo(0, coords.top);\n  }\n\n  /**\n   * @return {number}\n   */\n  firstVisibleLine() {\n    return this._codeMirror.lineAtHeight(this._codeMirror.getScrollInfo().top, 'local');\n  }\n\n  /**\n   * @return {number}\n   */\n  scrollTop() {\n    return this._codeMirror.getScrollInfo().top;\n  }\n\n  /**\n   * @param {number} scrollTop\n   */\n  setScrollTop(scrollTop) {\n    this._codeMirror.scrollTo(0, scrollTop);\n  }\n\n  /**\n   * @return {number}\n   */\n  lastVisibleLine() {\n    const scrollInfo = this._codeMirror.getScrollInfo();\n    return this._codeMirror.lineAtHeight(scrollInfo.top + scrollInfo.clientHeight, 'local');\n  }\n\n  /**\n   * @override\n   * @return {!TextUtils.TextRange.TextRange}\n   */\n  selection() {\n    const start = this._codeMirror.getCursor('anchor');\n    const end = this._codeMirror.getCursor('head');\n\n    return toRange(start, end);\n  }\n\n  /**\n   * @return {!Array.<!TextUtils.TextRange.TextRange>}\n   */\n  selections() {\n    const selectionList = this._codeMirror.listSelections();\n    const result = [];\n    for (let i = 0; i < selectionList.length; ++i) {\n      const selection = selectionList[i];\n      result.push(toRange(selection.anchor, selection.head));\n    }\n    return result;\n  }\n\n  /**\n   * @return {?TextUtils.TextRange.TextRange}\n   */\n  lastSelection() {\n    return this._lastSelection || null;\n  }\n\n  /**\n   * @override\n   * @param {!TextUtils.TextRange.TextRange} textRange\n   * @param {boolean=} dontScroll\n   */\n  setSelection(textRange, dontScroll) {\n    this._lastSelection = textRange;\n    if (!this._editorSizeInSync) {\n      this._selectionSetScheduled = true;\n      return;\n    }\n    const pos = toPos(textRange);\n    // https://crbug.com/1151919 both * = CodeMirror.Position\n    const startAsPosition = /** @type {*} */ (/** @type {*} */ (pos.start));\n    const endAsPosition = /** @type {*} */ (/** @type {*} */ (pos.end));\n    const scroll = !dontScroll;\n    this._codeMirror.setSelection(startAsPosition, endAsPosition, {scroll});\n  }\n\n  /**\n   * @param {!Array.<!TextUtils.TextRange.TextRange>} ranges\n   * @param {number=} primarySelectionIndex\n   */\n  setSelections(ranges, primarySelectionIndex) {\n    const selections = [];\n    for (let i = 0; i < ranges.length; ++i) {\n      const selection = toPos(ranges[i]);\n      selections.push({anchor: selection.start, head: selection.end});\n    }\n    primarySelectionIndex = primarySelectionIndex || 0;\n    this._codeMirror.setSelections(selections, primarySelectionIndex, {scroll: false});\n  }\n\n  /**\n   * @param {string} text\n   */\n  _detectLineSeparator(text) {\n    this._lineSeparator = text.indexOf('\\r\\n') >= 0 ? '\\r\\n' : '\\n';\n  }\n\n  /**\n   * @override\n   * @param {string} text\n   */\n  setText(text) {\n    if (text.length > CodeMirrorTextEditor.MaxEditableTextSize) {\n      this.configureAutocomplete(null);\n      this.setReadOnly(true);\n    }\n    this._codeMirror.setValue(text);\n    if (this._shouldClearHistory) {\n      this._codeMirror.clearHistory();\n      this._shouldClearHistory = false;\n    }\n    this._detectLineSeparator(text);\n\n    if (this._hasLongLines()) {\n      this._enableLongLinesMode();\n    } else {\n      this._disableLongLinesMode();\n    }\n\n    if (!this.isShowing()) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @override\n   * @param {!TextUtils.TextRange.TextRange=} textRange\n   * @return {string}\n   */\n  text(textRange) {\n    if (!textRange) {\n      return this._codeMirror.getValue(this._lineSeparator);\n    }\n    const pos = toPos(textRange.normalize());\n    return this._codeMirror.getRange(pos.start, pos.end, this._lineSeparator);\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  textWithCurrentSuggestion() {\n    if (!this._autocompleteController) {\n      return this.text();\n    }\n    return this._autocompleteController.textWithCurrentSuggestion();\n  }\n\n  /**\n   * @override\n   * @return {!TextUtils.TextRange.TextRange}\n   */\n  fullRange() {\n    const lineCount = this.linesCount;\n    const lastLine = this._codeMirror.getLine(lineCount - 1);\n    return toRange(new CodeMirror.Pos(0, 0), new CodeMirror.Pos(lineCount - 1, lastLine.length));\n  }\n\n  /**\n   * @return {number}\n   */\n  currentLineNumber() {\n    return this._codeMirror.getCursor().line;\n  }\n\n  /**\n   * @override\n   * @param {number} lineNumber\n   * @return {string}\n   */\n  line(lineNumber) {\n    return this._codeMirror.getLine(lineNumber);\n  }\n\n  /**\n   * @return {number}\n   */\n  get linesCount() {\n    return this._codeMirror.lineCount();\n  }\n\n  /**\n   * @override\n   */\n  newlineAndIndent() {\n    this._codeMirror.execCommand('newlineAndIndent');\n  }\n\n  /**\n   * @param {number} lineNumber\n   * @param {number} columnNumber\n   * @return {!TextEditorPositionHandle}\n   */\n  textEditorPositionHandle(lineNumber, columnNumber) {\n    return new CodeMirrorPositionHandle(this._codeMirror, new CodeMirror.Pos(lineNumber, columnNumber));\n  }\n\n  _updatePlaceholder() {\n    if (!this._placeholderElement) {\n      return;\n    }\n\n    this._placeholderElement.remove();\n\n    if (this.linesCount === 1 && !this.line(0)) {\n      // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n      this._codeMirror.display.lineSpace.insertBefore(\n          // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n          this._placeholderElement, this._codeMirror.display.lineSpace.firstChild);\n    }\n  }\n}\n\nCodeMirrorTextEditor.maxHighlightLength = 1000;\nCodeMirrorTextEditor.LongLineModeLineLengthThreshold = 2000;\nCodeMirrorTextEditor.MaxEditableTextSize = 1024 * 1024 * 10;\n\nCodeMirrorTextEditor._overrideModeWithPrefixedTokens('css', 'css-');\nCodeMirrorTextEditor._overrideModeWithPrefixedTokens('javascript', 'js-');\nCodeMirrorTextEditor._overrideModeWithPrefixedTokens('xml', 'xml-');\n\n// @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\nCodeMirror.commands.autocomplete = CodeMirrorTextEditor.autocompleteCommand;\n// @ts-expect-error TS doesn't find the property even though it's defined in codemirror-legacy.d.ts\nCodeMirror.commands.undoLastSelection = CodeMirrorTextEditor.undoLastSelectionCommand;\n// @ts-expect-error TS doesn't find the property even though it's defined in codemirror-legacy.d.ts\nCodeMirror.commands.selectNextOccurrence = CodeMirrorTextEditor.selectNextOccurrenceCommand;\n// @ts-expect-error TS doesn't find the property even though it's defined in codemirror-legacy.d.ts\nCodeMirror.commands.moveCamelLeft = CodeMirrorTextEditor.moveCamelLeftCommand.bind(null, false);\n// @ts-expect-error TS doesn't find the property even though it's defined in codemirror-legacy.d.ts\nCodeMirror.commands.selectCamelLeft = CodeMirrorTextEditor.moveCamelLeftCommand.bind(null, true);\n// @ts-expect-error TS doesn't find the property even though it's defined in codemirror-legacy.d.ts\nCodeMirror.commands.moveCamelRight = CodeMirrorTextEditor.moveCamelRightCommand.bind(null, false);\n// @ts-expect-error TS doesn't find the property even though it's defined in codemirror-legacy.d.ts\nCodeMirror.commands.selectCamelRight = CodeMirrorTextEditor.moveCamelRightCommand.bind(null, true);\n\n// https://crbug.com/1151919 * = CodeMirror.Editor\n/**\n * @param {*} codeMirror\n */\n// @ts-expect-error TS doesn't find the property even though it's defined in codemirror-legacy.d.ts\nCodeMirror.commands.UserIndent = function(codeMirror) {\n  const ranges = codeMirror.listSelections();\n  if (ranges.length === 0) {\n    return;\n  }\n\n  if (codeMirror.somethingSelected()) {\n    codeMirror.indentSelection('add');\n    return;\n  }\n\n  const indentation = Common.Settings.Settings.instance().moduleSetting('textEditorIndent').get();\n  codeMirror.replaceSelection(indentation);\n};\n\n// https://crbug.com/1151919 * = CodeMirror.Editor\n/**\n * @param {*} codeMirror\n * @return {!Object|undefined}\n */\n// @ts-expect-error TS doesn't find the property even though it's defined in codemirror-legacy.d.ts\nCodeMirror.commands.indentLessOrPass = function(codeMirror) {\n  const selections = codeMirror.listSelections();\n  if (selections.length === 1) {\n    const range = toRange(selections[0].anchor, selections[0].head);\n    if (range.isEmpty() && !/^\\s/.test(codeMirror.getLine(range.startLine))) {\n      return CodeMirror.Pass;\n    }\n  }\n  codeMirror.execCommand('indentLess');\n  return undefined;\n};\n\n// https://crbug.com/1151919 * = CodeMirror.Editor\n/**\n * @param {*} codeMirror\n */\n// @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\nCodeMirror.commands.gotoMatchingBracket = function(codeMirror) {\n  const updatedSelections = [];\n  const selections = codeMirror.listSelections();\n  for (let i = 0; i < selections.length; ++i) {\n    const selection = selections[i];\n    const cursor = selection.head;\n    // @ts-ignore findMatchingBracket types are incorrect\n    const matchingBracket = codeMirror.findMatchingBracket(cursor, false, {maxScanLines: 10000});\n    let updatedHead = cursor;\n    if (matchingBracket && matchingBracket.match) {\n      const columnCorrection = CodeMirror.cmpPos(matchingBracket.from, cursor) === 0 ? 1 : 0;\n      updatedHead = new CodeMirror.Pos(matchingBracket.to.line, matchingBracket.to.ch + columnCorrection);\n    }\n    updatedSelections.push({anchor: updatedHead, head: updatedHead});\n  }\n  codeMirror.setSelections(updatedSelections);\n};\n\n// https://crbug.com/1151919 * = CodeMirror.Editor\n/**\n * @param {*} codemirror\n */\n// @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\nCodeMirror.commands.undoAndReveal = function(codemirror) {\n  const scrollInfo = codemirror.getScrollInfo();\n  codemirror.execCommand('undo');\n  const cursor = codemirror.getCursor('start');\n  CodeMirrorTextEditor.getForCodeMirror(codemirror)._innerRevealLine(cursor.line, scrollInfo);\n  const autocompleteController = CodeMirrorTextEditor.getForCodeMirror(codemirror)._autocompleteController;\n  if (autocompleteController) {\n    autocompleteController.clearAutocomplete();\n  }\n};\n\n// https://crbug.com/1151919 * = CodeMirror.Editor\n/**\n * @param {*} codemirror\n */\n// @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\nCodeMirror.commands.redoAndReveal = function(codemirror) {\n  const scrollInfo = codemirror.getScrollInfo();\n  codemirror.execCommand('redo');\n  const cursor = codemirror.getCursor('start');\n  CodeMirrorTextEditor.getForCodeMirror(codemirror)._innerRevealLine(cursor.line, scrollInfo);\n  const autocompleteController = CodeMirrorTextEditor.getForCodeMirror(codemirror)._autocompleteController;\n  if (autocompleteController) {\n    autocompleteController.clearAutocomplete();\n  }\n};\n\n// https://crbug.com/1151919 * = CodeMirror.Editor\n/**\n * @param {*} codemirror\n * @return {!Object|undefined}\n */\n// @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\nCodeMirror.commands.dismiss = function(codemirror) {\n  const selections = codemirror.listSelections();\n  const selection = selections[0];\n  if (selections.length === 1) {\n    if (toRange(selection.anchor, selection.head).isEmpty()) {\n      return CodeMirror.Pass;\n    }\n    codemirror.setSelection(selection.anchor, selection.anchor, {scroll: false});\n    CodeMirrorTextEditor.getForCodeMirror(codemirror).scrollLineIntoView(selection.anchor.line);\n    return;\n  }\n\n  codemirror.setSelection(selection.anchor, selection.head, {scroll: false});\n  CodeMirrorTextEditor.getForCodeMirror(codemirror).scrollLineIntoView(selection.anchor.line);\n  return undefined;\n};\n\n// https://crbug.com/1151919 * = CodeMirror.Editor\n/**\n * @param {*} codemirror\n * @return {!Object|undefined}\n */\n// @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\nCodeMirror.commands.goSmartPageUp = function(codemirror) {\n  if (CodeMirrorTextEditor.getForCodeMirror(codemirror)\n          .selection()\n          .equal(TextUtils.TextRange.TextRange.createFromLocation(0, 0))) {\n    return CodeMirror.Pass;\n  }\n  codemirror.execCommand('goPageUp');\n  return undefined;\n};\n\n// https://crbug.com/1151919 * = CodeMirror.Editor\n/**\n * @param {*} codemirror\n * @return {!Object|undefined}\n */\n// @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\nCodeMirror.commands.goSmartPageDown = function(codemirror) {\n  if (CodeMirrorTextEditor.getForCodeMirror(codemirror)\n          .selection()\n          .equal(CodeMirrorTextEditor.getForCodeMirror(codemirror).fullRange().collapseToEnd())) {\n    return CodeMirror.Pass;\n  }\n  codemirror.execCommand('goPageDown');\n  return undefined;\n};\n\n/**\n * @implements {TextEditorPositionHandle}\n */\nexport class CodeMirrorPositionHandle {\n  // https://crbug.com/1151919 first * = CodeMirror.Editor, second * = CodeMirror.Pos\n  /**\n   * @param {*} codeMirror\n   * @param {*} pos\n   */\n  constructor(codeMirror, pos) {\n    this._codeMirror = codeMirror;\n    this._lineHandle = codeMirror.getLineHandle(pos.line);\n    this._columnNumber = pos.ch;\n  }\n\n  /**\n   * @override\n   * @return {?{lineNumber: number, columnNumber: number}}\n   */\n  resolve() {\n    const lineNumber = this._lineHandle ? this._codeMirror.getLineNumber(this._lineHandle) : null;\n    if (typeof lineNumber !== 'number') {\n      return null;\n    }\n    return {lineNumber: lineNumber, columnNumber: this._columnNumber};\n  }\n\n  /**\n   * @override\n   * @param {!TextEditorPositionHandle} argPositionHandle\n   * @return {boolean}\n   */\n  equal(argPositionHandle) {\n    const positionHandle = /** @type {!CodeMirrorPositionHandle} */ (argPositionHandle);\n    return positionHandle._lineHandle === this._lineHandle && positionHandle._columnNumber === this._columnNumber &&\n        positionHandle._codeMirror === this._codeMirror;\n  }\n}\n\nexport class SelectNextOccurrenceController {\n  // https://crbug.com/1151919 * = CodeMirror.Editor\n  /**\n   * @param {!CodeMirrorTextEditor} textEditor\n   * @param {*} codeMirror\n   */\n  constructor(textEditor, codeMirror) {\n    this._textEditor = textEditor;\n    this._codeMirror = codeMirror;\n  }\n\n  selectionWillChange() {\n    if (!this._muteSelectionListener) {\n      delete this._fullWordSelection;\n    }\n  }\n\n  /**\n   * @param {!Array.<!TextUtils.TextRange.TextRange>} selections\n   * @param {!TextUtils.TextRange.TextRange} range\n   * @return {boolean}\n   */\n  _findRange(selections, range) {\n    for (let i = 0; i < selections.length; ++i) {\n      if (range.equal(selections[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  undoLastSelection() {\n    this._muteSelectionListener = true;\n    this._codeMirror.execCommand('undoSelection');\n    this._muteSelectionListener = false;\n  }\n\n  selectNextOccurrence() {\n    const selections = this._textEditor.selections();\n    let anyEmptySelection = false;\n    for (let i = 0; i < selections.length; ++i) {\n      const selection = selections[i];\n      anyEmptySelection = anyEmptySelection || selection.isEmpty();\n      if (selection.startLine !== selection.endLine) {\n        return;\n      }\n    }\n    if (anyEmptySelection) {\n      this._expandSelectionsToWords(selections);\n      return;\n    }\n\n    const last = selections[selections.length - 1];\n    /** @type {?TextUtils.TextRange.TextRange} */\n    let next = last;\n    do {\n      next = next ? this._findNextOccurrence(next, Boolean(this._fullWordSelection)) : null;\n    } while (next && this._findRange(selections, next) && !next.equal(last));\n\n    if (!next) {\n      return;\n    }\n    selections.push(next);\n\n    this._muteSelectionListener = true;\n    this._textEditor.setSelections(selections, selections.length - 1);\n    delete this._muteSelectionListener;\n\n    this._textEditor.scrollLineIntoView(next.startLine);\n  }\n\n  /**\n   * @param {!Array.<!TextUtils.TextRange.TextRange>} selections\n   */\n  _expandSelectionsToWords(selections) {\n    const newSelections = [];\n    for (let i = 0; i < selections.length; ++i) {\n      const selection = selections[i];\n      const startRangeWord = this._textEditor.wordRangeForCursorPosition(\n                                 selection.startLine, selection.startColumn, TextUtils.TextUtils.Utils.isWordChar) ||\n          TextUtils.TextRange.TextRange.createFromLocation(selection.startLine, selection.startColumn);\n      const endRangeWord = this._textEditor.wordRangeForCursorPosition(\n                               selection.endLine, selection.endColumn, TextUtils.TextUtils.Utils.isWordChar) ||\n          TextUtils.TextRange.TextRange.createFromLocation(selection.endLine, selection.endColumn);\n      const newSelection = new TextUtils.TextRange.TextRange(\n          startRangeWord.startLine, startRangeWord.startColumn, endRangeWord.endLine, endRangeWord.endColumn);\n      newSelections.push(newSelection);\n    }\n    this._textEditor.setSelections(newSelections, newSelections.length - 1);\n    this._fullWordSelection = true;\n  }\n\n  /**\n   * @param {!TextUtils.TextRange.TextRange} range\n   * @param {boolean} fullWord\n   * @return {?TextUtils.TextRange.TextRange}\n   */\n  _findNextOccurrence(range, fullWord) {\n    range = range.normalize();\n    /** @type {number|undefined} */\n    let matchedLineNumber = undefined;\n    /** @type {number|undefined} */\n    let matchedColumnNumber = undefined;\n    const textToFind = this._textEditor.text(range);\n    /**\n     *\n     * @param {!RegExp} wordRegex\n     * @param {number} lineNumber\n     * @param {string} lineText\n     * @param {number} from\n     * @param {number} to\n     */\n    function findWordInLine(wordRegex, lineNumber, lineText, from, to) {\n      if (typeof matchedLineNumber === 'number') {\n        return true;\n      }\n      wordRegex.lastIndex = from;\n      const result = wordRegex.exec(lineText);\n      if (!result || result.index + textToFind.length > to) {\n        return false;\n      }\n      matchedLineNumber = lineNumber;\n      matchedColumnNumber = result.index;\n      return true;\n    }\n\n    /** @type {number} */\n    let iteratedLineNumber;\n    // https://crbug.com/1151919 * = CodeMirror.LineHandle\n    /**\n     *\n     * @param {!RegExp} regex\n     * @param {*} lineHandle\n     */\n    function lineIterator(regex, lineHandle) {\n      if (findWordInLine(regex, iteratedLineNumber++, lineHandle.text, 0, lineHandle.text.length)) {\n        return true;\n      }\n      return undefined;\n    }\n\n    let regexSource = Platform.StringUtilities.escapeForRegExp(textToFind);\n    if (fullWord) {\n      regexSource = '\\\\b' + regexSource + '\\\\b';\n    }\n    const wordRegex = new RegExp(regexSource, 'g');\n    const currentLineText = this._codeMirror.getLine(range.startLine);\n\n    findWordInLine(wordRegex, range.startLine, currentLineText, range.endColumn, currentLineText.length);\n    iteratedLineNumber = range.startLine + 1;\n    this._codeMirror.eachLine(range.startLine + 1, this._codeMirror.lineCount(), lineIterator.bind(null, wordRegex));\n    iteratedLineNumber = 0;\n    this._codeMirror.eachLine(0, range.startLine, lineIterator.bind(null, wordRegex));\n    findWordInLine(wordRegex, range.startLine, currentLineText, 0, range.startColumn);\n\n    if (typeof matchedLineNumber !== 'number' || typeof matchedColumnNumber !== 'number') {\n      return null;\n    }\n    const textToFindLength = textToFind ? textToFind.length : 0;\n    return new TextUtils.TextRange.TextRange(\n        /** @type {number} */ (matchedLineNumber), /** @type {number} */ (matchedColumnNumber),\n        /** @type {number} */ (matchedLineNumber), matchedColumnNumber + textToFindLength);\n  }\n}\n\n\n/**\n * @interface\n */\nexport class TextEditorPositionHandle {\n  /**\n   * @return {?{lineNumber: number, columnNumber: number}}\n   */\n  resolve() {\n    throw new Error('Not implemented here.');\n  }\n\n  /**\n   * @param {!TextEditorPositionHandle} positionHandle\n   * @return {boolean}\n   */\n  equal(positionHandle) {\n    throw new Error('Not implemented here.');\n  }\n}\n\nexport class TextEditorBookMark {\n  // https://crbug.com/1151919 * = CodeMirror.TextMarker\n  /**\n   * @param {*} marker\n   * @param {symbol} type\n   * @param {!CodeMirrorTextEditor} editor\n   */\n  constructor(marker, type, editor) {\n    this._marker = marker;\n    this._type = type;\n    this._editor = editor;\n  }\n\n  clear() {\n    const position = this._marker.find();\n    this._marker.clear();\n    if (position) {\n      // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n      this._editor._updateDecorations(position.line);\n    }\n  }\n\n  refresh() {\n    this._marker.changed();\n    const position = this._marker.find();\n    if (position) {\n      // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n      this._editor._updateDecorations(position.line);\n    }\n  }\n\n  /**\n   * @return {symbol}\n   */\n  type() {\n    return this._type;\n  }\n\n  /**\n   * @return {?TextUtils.TextRange.TextRange}\n   */\n  position() {\n    const pos = this._marker.find();\n    // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n    return pos ? TextUtils.TextRange.TextRange.createFromLocation(pos.line, pos.ch) : null;\n  }\n}\n\n/**\n * @implements {UI.TextEditor.TextEditorFactory}\n */\nexport class CodeMirrorTextEditorFactory {\n  /**\n   * @override\n   * @param {!UI.TextEditor.Options} options\n   * @return {!CodeMirrorTextEditor}\n   */\n  createEditor(options) {\n    return new CodeMirrorTextEditor(options);\n  }\n}\n\n// CodeMirror uses an offscreen <textarea> to detect input. Due to inconsistencies in the many browsers it supports,\n// it simplifies things by regularly checking if something is in the textarea, adding those characters to the document,\n// and then clearing the textarea. This breaks assistive technology that wants to read from CodeMirror, because the\n// <textarea> that they interact with is constantly empty.\n// Because we target up-to-date Chrome, we can guarantee consistent input events. This lets us leave the current\n// line from the editor in our <textarea>. CodeMirror still expects a mostly empty <textarea>, so we pass CodeMirror a\n// fake <textarea> that only contains the users input.\n// @ts-ignore\nexport class DevToolsAccessibleTextArea extends CodeMirror.inputStyles.textarea {\n  // https://crbug.com/1151919 * = CodeMirror.Editor\n  /**\n   * @param {*} codeMirror\n   */\n  constructor(codeMirror) {\n    super(codeMirror);\n\n    /** @type {!HTMLTextAreaElement} */\n    this.textarea;\n    // https://crbug.com/1151919 * = CodeMirror.Editor\n    /** @type {*} */\n    this.cm;\n\n    this.contextMenuPending = false;\n    this.composing = false;\n    /** @type {string} */\n    this.prevInput;\n  }\n  /**\n   * @override\n   * @param {!Object} display\n   */\n  init(display) {\n    super.init(display);\n    this.textarea.addEventListener('compositionstart', this._onCompositionStart.bind(this));\n  }\n\n  _onCompositionStart() {\n    if (this.textarea.selectionEnd === this.textarea.value.length) {\n      return;\n    }\n    // CodeMirror always expects the caret to be at the end of the textarea\n    // When in IME composition mode, clip the textarea to how CodeMirror expects it,\n    // and then let CodeMirror do it's thing.\n    this.textarea.value = this.textarea.value.substring(0, this.textarea.selectionEnd);\n    this.textarea.setSelectionRange(this.textarea.value.length, this.textarea.value.length);\n    this.prevInput = this.textarea.value;\n  }\n\n  /**\n   * @override\n   * @param {boolean=} typing - whether the user is currently typing\n   */\n  reset(typing) {\n    if (this.textAreaBusy(Boolean(typing))) {\n      super.reset(typing);\n      return;\n    }\n\n    // When navigating around the document, keep the current visual line in the textarea.\n    const cursor = this.cm.getCursor();\n    let start, end;\n    if (this.cm.getOption('lineWrapping')) {\n      // To get the visual line, compute the leftmost and rightmost character positions.\n      const top = this.cm.charCoords(cursor, 'page').top;\n      start = this.cm.coordsChar({left: -Infinity, top});\n      end = this.cm.coordsChar({left: Infinity, top});\n    } else {\n      // Limit the line to 1000 characters to prevent lag.\n      const offset = Math.floor(cursor.ch / 1000) * 1000;\n      start = {ch: offset, line: cursor.line};\n      end = {ch: offset + 1000, line: cursor.line};\n    }\n    this.textarea.value = this.cm.getRange(start, end);\n    const caretPosition = cursor.ch - start.ch;\n    this.textarea.setSelectionRange(caretPosition, caretPosition);\n    this.prevInput = this.textarea.value;\n  }\n\n  /**\n   * If the user is currently typing into the textarea or otherwise\n   * modifying it, we don't want to clobber their work.\n   *\n   * @protected\n   * @param {boolean} typing - whether the user is currently typing\n   * @return {boolean}\n   */\n  textAreaBusy(typing) {\n    return typing || this.contextMenuPending || this.composing || this.cm.somethingSelected();\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  poll() {\n    if (this.contextMenuPending || this.composing) {\n      return super.poll();\n    }\n    const text = this.textarea.value;\n    let start = 0;\n    const length = Math.min(this.prevInput.length, text.length);\n    while (start < length && this.prevInput[start] === text[start]) {\n      ++start;\n    }\n    let end = 0;\n    while (end < length - start && this.prevInput[this.prevInput.length - end - 1] === text[text.length - end - 1]) {\n      ++end;\n    }\n\n    // CodeMirror expects the user to be typing into a blank <textarea>.\n    // Pass a fake textarea into super.poll that only contains the users input.\n    /** @type {!HTMLTextAreaElement} */\n    const placeholder = this.textarea;\n    this.textarea = /** @type {!HTMLTextAreaElement} */ (document.createElement('textarea'));\n    this.textarea.value = text.substring(start, text.length - end);\n    this.textarea.setSelectionRange(placeholder.selectionStart - start, placeholder.selectionEnd - start);\n    this.prevInput = '';\n    const result = super.poll();\n    this.prevInput = text;\n    this.textarea = placeholder;\n    return result;\n  }\n}\n\n// @ts-ignore\nCodeMirror.inputStyles.devToolsAccessibleTextArea = DevToolsAccessibleTextArea;\n\n// https://crbug.com/1151919 * = CodeMirror.LineWidget\n/**\n * @typedef {{\n *  element: !Element,\n *  widget: *,\n *  update: ?function():void\n * }}\n */\n// @ts-ignore typedef\nexport let Decoration;\n"]}