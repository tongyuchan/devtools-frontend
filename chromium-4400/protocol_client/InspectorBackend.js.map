{"version":3,"file":"InspectorBackend.js","sourceRoot":"","sources":["../../../../../front_end/protocol_client/InspectorBackend.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport {NodeURL} from './NodeURL.js';\n\n/**\n * @typedef {string}\n */\nexport const ProtocolError = Symbol('Protocol.Error');\nexport const DevToolsStubErrorCode = -32015;\n// TODO(dgozman): we are not reporting generic errors in tests, but we should\n// instead report them and just have some expected errors in test expectations.\nconst _GenericError = -32000;\nconst _ConnectionClosedErrorCode = -32001;\n\nexport class InspectorBackend {\n  constructor() {\n    /** @type {!Map<string, !_AgentPrototype>} */\n    this._agentPrototypes = new Map();\n    /** @type {!Map<string, !_DispatcherPrototype>} */\n    this._dispatcherPrototypes = new Map();\n    this._initialized = false;\n  }\n\n  /**\n   * @param {string} error\n   * @param {!Object} messageObject\n   */\n  static reportProtocolError(error, messageObject) {\n    console.error(error + ': ' + JSON.stringify(messageObject));\n  }\n\n  /**\n   * @param {string} error\n   * @param {!Object} messageObject\n   */\n  static reportProtocolWarning(error, messageObject) {\n    console.warn(error + ': ' + JSON.stringify(messageObject));\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isInitialized() {\n    return this._initialized;\n  }\n\n  /**\n   * @param {string} domain\n   */\n  _addAgentGetterMethodToProtocolTargetPrototype(domain) {\n    let upperCaseLength = 0;\n    while (upperCaseLength < domain.length && domain[upperCaseLength].toLowerCase() !== domain[upperCaseLength]) {\n      ++upperCaseLength;\n    }\n\n    const methodName = domain.substr(0, upperCaseLength).toLowerCase() + domain.slice(upperCaseLength) + 'Agent';\n\n    /**\n     * @this {TargetBase}\n     */\n    function agentGetter() {\n      return this._agents[domain];\n    }\n\n    // @ts-ignore Method code generation\n    TargetBase.prototype[methodName] = agentGetter;\n\n    /**\n     * @this {TargetBase}\n     * @param {!_DispatcherPrototype} dispatcher\n     */\n    function registerDispatcher(dispatcher) {\n      this.registerDispatcher(domain, dispatcher);\n    }\n\n    // @ts-ignore Method code generation\n    TargetBase.prototype['register' + domain + 'Dispatcher'] = registerDispatcher;\n\n    /**\n     * @this {TargetBase}\n     * @param {!_DispatcherPrototype} dispatcher\n     */\n    function unregisterDispatcher(dispatcher) {\n      this.unregisterDispatcher(domain, dispatcher);\n    }\n\n    // @ts-ignore Method code generation\n    TargetBase.prototype['unregister' + domain + 'Dispatcher'] = unregisterDispatcher;\n  }\n\n  /**\n   * @param {string} domain\n   * @return {!_AgentPrototype}\n   */\n  _agentPrototype(domain) {\n    if (!this._agentPrototypes.has(domain)) {\n      this._agentPrototypes.set(domain, new _AgentPrototype(domain));\n      this._addAgentGetterMethodToProtocolTargetPrototype(domain);\n    }\n\n    return /** @type {!_AgentPrototype} */ (this._agentPrototypes.get(domain));\n  }\n\n  /**\n   * @param {string} domain\n   * @return {!_DispatcherPrototype}\n   */\n  _dispatcherPrototype(domain) {\n    if (!this._dispatcherPrototypes.has(domain)) {\n      this._dispatcherPrototypes.set(domain, new _DispatcherPrototype());\n    }\n    return /** @type {!_DispatcherPrototype} */ (this._dispatcherPrototypes.get(domain));\n  }\n\n  /**\n   * @param {string} method\n   * @param {!Array.<!{name: string, type: string, optional: boolean}>} signature\n   * @param {!Array.<string>} replyArgs\n   */\n  registerCommand(method, signature, replyArgs) {\n    const domainAndMethod = method.split('.');\n    this._agentPrototype(domainAndMethod[0]).registerCommand(domainAndMethod[1], signature, replyArgs);\n    this._initialized = true;\n  }\n\n  /**\n   * @param {string} type\n   * @param {!Object} values\n   */\n  registerEnum(type, values) {\n    const domainAndName = type.split('.');\n    const domain = domainAndName[0];\n    // @ts-ignore Protocol global namespace pollution\n    if (!Protocol[domain]) {\n      // @ts-ignore Protocol global namespace pollution\n      Protocol[domain] = {};\n    }\n\n    // @ts-ignore Protocol global namespace pollution\n    Protocol[domain][domainAndName[1]] = values;\n    this._initialized = true;\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {!Object} params\n   */\n  registerEvent(eventName, params) {\n    const domain = eventName.split('.')[0];\n    this._dispatcherPrototype(domain).registerEvent(eventName, params);\n    this._initialized = true;\n  }\n\n  /**\n   * @param {function((T|undefined)):void} clientCallback\n   * @param {string} errorPrefix\n   * @param {function(new:T,S):void=} constructor\n   * @param {T=} defaultValue\n   * @return {function(?string, S):void}\n   * @template T,S\n   */\n  wrapClientCallback(clientCallback, errorPrefix, constructor, defaultValue) {\n    /**\n     * @param {?string} error\n     * @param {S} value\n     * @template S\n     */\n    function callbackWrapper(error, value) {\n      if (error) {\n        console.error(errorPrefix + error);\n        clientCallback(defaultValue);\n        return;\n      }\n      if (constructor) {\n        // @ts-ignore Special casting\n        clientCallback(new constructor(value));\n      } else {\n        // @ts-ignore Special casting\n        clientCallback(value);\n      }\n    }\n    return callbackWrapper;\n  }\n}\n\n/** @type {function():!Connection} */\nlet _factory;\n\n/**\n * @interface\n */\nexport class Connection {\n  constructor() {\n    /** @type {?function(!Object):void} */\n    this._onMessage;\n  }\n\n  /**\n   * @param {function((!Object|string)):void} onMessage\n   */\n  setOnMessage(onMessage) {\n  }\n\n  /**\n   * @param {function(string):void} onDisconnect\n   */\n  setOnDisconnect(onDisconnect) {\n  }\n\n  /**\n   * @param {string} message\n   */\n  sendRawMessage(message) {\n  }\n\n  /**\n   * @return {!Promise<void>}\n   */\n  disconnect() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @param {function():!Connection} factory\n   */\n  static setFactory(factory) {\n    _factory = factory;\n  }\n\n  /**\n   * @return {function():!Connection}\n   */\n  static getFactory() {\n    return _factory;\n  }\n}\n\n/** @typedef {function(...*):void} */\nlet SendRawMessageCallback;  // eslint-disable-line no-unused-vars\n\nexport const test = {\n  /**\n   * This will get called for every protocol message.\n   * ProtocolClient.test.dumpProtocol = console.log\n   * @type {?function(string):void}\n   */\n  dumpProtocol: null,\n\n  /**\n   * Runs a function when no protocol activity is present.\n   * ProtocolClient.test.deprecatedRunAfterPendingDispatches(() => console.log('done'))\n   * @type {?function(function():void=):void}\n   */\n  deprecatedRunAfterPendingDispatches: null,\n\n  /**\n   * Sends a raw message over main connection.\n   * ProtocolClient.test.sendRawMessage('Page.enable', {}, console.log)\n   * @type {?function(string, ?Object, ?SendRawMessageCallback):void}\n   */\n  sendRawMessage: null,\n\n  /**\n   * Set to true to not log any errors.\n   */\n  suppressRequestErrors: false,\n\n  /**\n   * Set to get notified about any messages sent over protocol.\n   * @type {?function({domain: string, method: string, params: !Object, id: number}, ?TargetBase):void}\n   */\n  onMessageSent: null,\n\n  /**\n   * Set to get notified about any messages received over protocol.\n   * @type {?function(!Object, ?TargetBase):void}\n   */\n  onMessageReceived: null,\n};\n\nconst LongPollingMethods = new Set(['CSS.takeComputedStyleUpdates']);\n\nexport class SessionRouter {\n  /**\n   * @param {!Connection} connection\n   */\n  constructor(connection) {\n    this._connection = connection;\n    this._lastMessageId = 1;\n    this._pendingResponsesCount = 0;\n    /** @type {!Set<number>} */\n    this._pendingLongPollingMessageIds = new Set();\n    this._domainToLogger = new Map();\n\n    /** @type {!Map<string, {target: !TargetBase, callbacks: !Map<number, !_CallbackWithDebugInfo>, proxyConnection: (?Connection|undefined)}>} */\n    this._sessions = new Map();\n\n    /** @type {!Array<function():void>} */\n    this._pendingScripts = [];\n\n    test.deprecatedRunAfterPendingDispatches = this._deprecatedRunAfterPendingDispatches.bind(this);\n    test.sendRawMessage = this._sendRawMessageForTesting.bind(this);\n\n    this._connection.setOnMessage(this._onMessage.bind(this));\n\n    this._connection.setOnDisconnect(reason => {\n      const session = this._sessions.get('');\n      if (session) {\n        session.target.dispose(reason);\n      }\n    });\n  }\n\n  /**\n   * @param {!TargetBase} target\n   * @param {string} sessionId\n   * @param {?Connection=} proxyConnection\n   */\n  registerSession(target, sessionId, proxyConnection) {\n    // Only the Audits panel uses proxy connections. If it is ever possible to have multiple active at the\n    // same time, it should be tested thoroughly.\n    if (proxyConnection) {\n      for (const session of this._sessions.values()) {\n        if (session.proxyConnection) {\n          console.error('Multiple simultaneous proxy connections are currently unsupported');\n          break;\n        }\n      }\n    }\n\n    this._sessions.set(sessionId, {target, callbacks: new Map(), proxyConnection});\n  }\n\n  /**\n   * @param {string} sessionId\n   */\n  unregisterSession(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    for (const callback of session.callbacks.values()) {\n      SessionRouter.dispatchUnregisterSessionError(callback);\n    }\n    this._sessions.delete(sessionId);\n  }\n\n  /**\n   * @param {string} sessionId\n   * @return {?TargetBase}\n   */\n  _getTargetBySessionId(sessionId) {\n    const session = this._sessions.get(sessionId ? sessionId : '');\n    if (!session) {\n      return null;\n    }\n    return session.target;\n  }\n\n  /**\n   * @return {number}\n   */\n  _nextMessageId() {\n    return this._lastMessageId++;\n  }\n\n  /**\n   * @return {!Connection}\n   */\n  connection() {\n    return this._connection;\n  }\n\n  /**\n   * @param {string} sessionId\n   * @param {string} domain\n   * @param {string} method\n   * @param {?Object} params\n   * @param {!_Callback} callback\n   */\n  sendMessage(sessionId, domain, method, params, callback) {\n    const messageObject = {};\n    const messageId = this._nextMessageId();\n    messageObject.id = messageId;\n    messageObject.method = method;\n    if (params) {\n      messageObject.params = params;\n    }\n    if (sessionId) {\n      messageObject.sessionId = sessionId;\n    }\n\n    if (test.dumpProtocol) {\n      test.dumpProtocol('frontend: ' + JSON.stringify(messageObject));\n    }\n\n    if (test.onMessageSent) {\n      const paramsObject = JSON.parse(JSON.stringify(params || {}));\n      test.onMessageSent(\n          {domain, method, params: /** @type {!Object} */ (paramsObject), id: messageId},\n          this._getTargetBySessionId(sessionId));\n    }\n\n    ++this._pendingResponsesCount;\n    if (LongPollingMethods.has(method)) {\n      this._pendingLongPollingMessageIds.add(messageId);\n    }\n\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    session.callbacks.set(messageId, {callback, method});\n    this._connection.sendRawMessage(JSON.stringify(messageObject));\n  }\n\n  /**\n   * @param {string} method\n   * @param {?Object} params\n   * @param {?function(...*):void} callback\n   */\n  _sendRawMessageForTesting(method, params, callback) {\n    const domain = method.split('.')[0];\n    this.sendMessage('', domain, method, params, callback || (() => {}));\n  }\n\n  /**\n   * @param {!Object|string} message\n   */\n  _onMessage(message) {\n    if (test.dumpProtocol) {\n      test.dumpProtocol('backend: ' + ((typeof message === 'string') ? message : JSON.stringify(message)));\n    }\n\n    if (test.onMessageReceived) {\n      const messageObjectCopy = JSON.parse((typeof message === 'string') ? message : JSON.stringify(message));\n      test.onMessageReceived(\n          /** @type {!Object} */ (messageObjectCopy), this._getTargetBySessionId(messageObjectCopy.sessionId));\n    }\n\n    const messageObject =\n        /** @type {!{sessionId: string, url: string, id: number, error: ?Object, result: ?Object}|!{sessionId: string, url: string, method: string, params: !Array<string>}} */\n        ((typeof message === 'string') ? JSON.parse(message) : message);\n\n    // Send all messages to proxy connections.\n    let suppressUnknownMessageErrors = false;\n    for (const session of this._sessions.values()) {\n      if (!session.proxyConnection) {\n        continue;\n      }\n\n      if (!session.proxyConnection._onMessage) {\n        InspectorBackend.reportProtocolError(\n            'Protocol Error: the session has a proxyConnection with no _onMessage', messageObject);\n        continue;\n      }\n\n      session.proxyConnection._onMessage(messageObject);\n      suppressUnknownMessageErrors = true;\n    }\n\n    const sessionId = messageObject.sessionId || '';\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      if (!suppressUnknownMessageErrors) {\n        InspectorBackend.reportProtocolError('Protocol Error: the message with wrong session id', messageObject);\n      }\n      return;\n    }\n\n    // If this message is directly for the target controlled by the proxy connection, don't handle it.\n    if (session.proxyConnection) {\n      return;\n    }\n\n    if (session.target._needsNodeJSPatching) {\n      NodeURL.patch(messageObject);\n    }\n\n    if ('id' in messageObject) {  // just a response for some request\n      const callback = session.callbacks.get(messageObject.id);\n      session.callbacks.delete(messageObject.id);\n      if (!callback) {\n        if (!suppressUnknownMessageErrors) {\n          InspectorBackend.reportProtocolError('Protocol Error: the message with wrong id', messageObject);\n        }\n        return;\n      }\n\n      callback.callback(messageObject.error, messageObject.result);\n      --this._pendingResponsesCount;\n      this._pendingLongPollingMessageIds.delete(messageObject.id);\n\n      if (this._pendingScripts.length && !this._hasOutstandingNonLongPollingRequests()) {\n        this._deprecatedRunAfterPendingDispatches();\n      }\n    } else {\n      if (!('method' in messageObject)) {\n        InspectorBackend.reportProtocolError('Protocol Error: the message without method', messageObject);\n        return;\n      }\n\n      const method = messageObject.method.split('.');\n      const domainName = method[0];\n      if (!(domainName in session.target._dispatchers)) {\n        InspectorBackend.reportProtocolError(\n            `Protocol Error: the message ${messageObject.method} is for non-existing domain '${domainName}'`,\n            messageObject);\n        return;\n      }\n      session.target._dispatchers[domainName].dispatch(\n          method[1], /** @type {{method: string, params: ?Array<string>}} */ (messageObject));\n    }\n  }\n\n  _hasOutstandingNonLongPollingRequests() {\n    return this._pendingResponsesCount - this._pendingLongPollingMessageIds.size > 0;\n  }\n\n  /**\n   * @param {function():void=} script\n   */\n  _deprecatedRunAfterPendingDispatches(script) {\n    if (script) {\n      this._pendingScripts.push(script);\n    }\n\n    // Execute all promises.\n    setTimeout(() => {\n      if (!this._hasOutstandingNonLongPollingRequests()) {\n        this._executeAfterPendingDispatches();\n      } else {\n        this._deprecatedRunAfterPendingDispatches();\n      }\n    }, 0);\n  }\n\n  _executeAfterPendingDispatches() {\n    if (!this._hasOutstandingNonLongPollingRequests()) {\n      const scripts = this._pendingScripts;\n      this._pendingScripts = [];\n      for (let id = 0; id < scripts.length; ++id) {\n        scripts[id]();\n      }\n    }\n  }\n\n  /**\n   * @param {!_Callback} callback\n   * @param {string} method\n   */\n  static dispatchConnectionError(callback, method) {\n    const error = {\n      message: `Connection is closed, can\\'t dispatch pending call to ${method}`,\n      code: _ConnectionClosedErrorCode,\n      data: null\n    };\n    setTimeout(() => callback(error, null), 0);\n  }\n\n  /**\n   * @param {!_CallbackWithDebugInfo} callbackWithDebugInfo\n   */\n  static dispatchUnregisterSessionError({callback, method}) {\n    const error = {\n      message: `Session is unregistering, can\\'t dispatch pending call to ${method}`,\n      code: _ConnectionClosedErrorCode,\n      data: null\n    };\n    setTimeout(() => callback(error, null), 0);\n  }\n}\n\nexport class TargetBase {\n  /**\n   * @param {boolean} needsNodeJSPatching\n   * @param {?TargetBase} parentTarget\n   * @param {string} sessionId\n   * @param {?Connection} connection\n   */\n  constructor(needsNodeJSPatching, parentTarget, sessionId, connection) {\n    this._needsNodeJSPatching = needsNodeJSPatching;\n    this._sessionId = sessionId;\n\n    if ((!parentTarget && connection) || (!parentTarget && sessionId) || (connection && sessionId)) {\n      throw new Error('Either connection or sessionId (but not both) must be supplied for a child target');\n    }\n\n    /** @type {!SessionRouter} */\n    let router;\n    if (sessionId && parentTarget && parentTarget._router) {\n      router = parentTarget._router;\n    } else if (connection) {\n      router = new SessionRouter(connection);\n    } else {\n      router = new SessionRouter(_factory());\n    }\n\n    /** @type {?SessionRouter} */\n    this._router = router;\n\n    router.registerSession(this, this._sessionId);\n\n    /** @type {!Object<string,!_AgentPrototype>} */\n    this._agents = {};\n    for (const [domain, agentPrototype] of inspectorBackend._agentPrototypes) {\n      this._agents[domain] = Object.create(/** @type {!_AgentPrototype} */ (agentPrototype));\n      this._agents[domain]._target = this;\n    }\n\n    /** @type {!Object<string,_DispatcherPrototype>} */\n    this._dispatchers = {};\n    for (const [domain, dispatcherPrototype] of inspectorBackend._dispatcherPrototypes) {\n      this._dispatchers[domain] = Object.create(/** @type {!_DispatcherPrototype} */ (dispatcherPrototype));\n      this._dispatchers[domain]._dispatchers = [];\n    }\n  }\n\n  /**\n   * @param {string} domain\n   * @param {!Object} dispatcher\n   */\n  registerDispatcher(domain, dispatcher) {\n    if (!this._dispatchers[domain]) {\n      return;\n    }\n    this._dispatchers[domain].addDomainDispatcher(dispatcher);\n  }\n\n  /**\n   * @param {string} domain\n   * @param {!Object} dispatcher\n   */\n  unregisterDispatcher(domain, dispatcher) {\n    if (!this._dispatchers[domain]) {\n      return;\n    }\n    this._dispatchers[domain].removeDomainDispatcher(dispatcher);\n  }\n\n  /**\n   * @param {string} reason\n   */\n  dispose(reason) {\n    if (!this._router) {\n      return;\n    }\n    this._router.unregisterSession(this._sessionId);\n    this._router = null;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isDisposed() {\n    return !this._router;\n  }\n\n  markAsNodeJSForTest() {\n    this._needsNodeJSPatching = true;\n  }\n\n  /**\n   * @return {?SessionRouter}\n   */\n  router() {\n    return this._router;\n  }\n\n\n  // Agent accessors, keep alphabetically sorted.\n\n  /**\n   * @return {!ProtocolProxyApi.AccessibilityApi}\n   */\n  accessibilityAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.AnimationApi}\n   */\n  animationAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.ApplicationCacheApi}\n   */\n  applicationCacheAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.AuditsApi}\n   */\n  auditsAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.BackgroundServiceApi}\n   */\n  backgroundServiceAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.CacheStorageApi}\n   */\n  cacheStorageAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.CSSApi}\n   */\n  cssAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.DatabaseApi}\n   */\n  databaseAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.DebuggerApi}\n   */\n  debuggerAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.DeviceOrientationApi}\n   */\n  deviceOrientationAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.DOMApi}\n   */\n  domAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.DOMDebuggerApi}\n   */\n  domdebuggerAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.DOMSnapshotApi}\n   */\n  domsnapshotAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.DOMStorageApi}\n   */\n  domstorageAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.EmulationApi}\n   */\n  emulationAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.HeapProfilerApi}\n   */\n  heapProfilerAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.IndexedDBApi}\n   */\n  indexedDBAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.InputApi}\n   */\n  inputAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.IOApi}\n   */\n  ioAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.InspectorApi}\n   */\n  inspectorAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.LayerTreeApi}\n   */\n  layerTreeAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.LogApi}\n   */\n  logAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.MediaApi}\n   */\n  mediaAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.MemoryApi}\n   */\n  memoryAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.NetworkApi}\n   */\n  networkAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.OverlayApi}\n   */\n  overlayAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.PageApi}\n   */\n  pageAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.ProfilerApi}\n   */\n  profilerAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.PerformanceApi}\n   */\n  performanceAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.RuntimeApi}\n   */\n  runtimeAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.SecurityApi}\n   */\n  securityAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.ServiceWorkerApi}\n   */\n  serviceWorkerAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.StorageApi}\n   */\n  storageAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.TargetApi}\n   */\n  targetAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.TracingApi}\n   */\n  tracingAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.WebAudioApi}\n   */\n  webAudioAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @return {!ProtocolProxyApi.WebAuthnApi}\n   */\n  webAuthnAgent() {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n\n  // Dispatcher registration, keep alphabetically sorted.\n  /**\n   * @param {!ProtocolProxyApi.AnimationDispatcher} dispatcher\n   */\n  registerAnimationDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.ApplicationCacheDispatcher} dispatcher\n   */\n  registerApplicationCacheDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.AuditsDispatcher} dispatcher\n   */\n  registerAuditsDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.CSSDispatcher} dispatcher\n   */\n  registerCSSDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.DatabaseDispatcher} dispatcher\n   */\n  registerDatabaseDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.BackgroundServiceDispatcher} dispatcher\n   */\n  registerBackgroundServiceDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.DebuggerDispatcher} dispatcher\n   */\n  registerDebuggerDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.DebuggerDispatcher} dispatcher\n   */\n  unregisterDebuggerDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.DOMDispatcher} dispatcher\n   */\n  registerDOMDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.DOMStorageDispatcher} dispatcher\n   */\n  registerDOMStorageDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.HeapProfilerDispatcher} dispatcher\n   */\n  registerHeapProfilerDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n  /**\n   * @param {!ProtocolProxyApi.InspectorDispatcher} dispatcher\n   */\n  registerInspectorDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n  /**\n   * @param {!ProtocolProxyApi.LayerTreeDispatcher} dispatcher\n   */\n  registerLayerTreeDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.LogDispatcher} dispatcher\n   */\n  registerLogDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.MediaDispatcher} dispatcher\n   */\n  registerMediaDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.NetworkDispatcher} dispatcher\n   */\n  registerNetworkDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.OverlayDispatcher} dispatcher\n   */\n  registerOverlayDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.PageDispatcher} dispatcher\n   */\n  registerPageDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.ProfilerDispatcher} dispatcher\n   */\n  registerProfilerDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.RuntimeDispatcher} dispatcher\n   */\n  registerRuntimeDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.SecurityDispatcher} dispatcher\n   */\n  registerSecurityDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.ServiceWorkerDispatcher} dispatcher\n   */\n  registerServiceWorkerDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.StorageDispatcher} dispatcher\n   */\n  registerStorageDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.TargetDispatcher} dispatcher\n   */\n  registerTargetDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.TracingDispatcher} dispatcher\n   */\n  registerTracingDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  /**\n   * @param {!ProtocolProxyApi.WebAudioDispatcher} dispatcher\n   */\n  registerWebAudioDispatcher(dispatcher) {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n}\n\nclass _AgentPrototype {\n  /**\n   * @param {string} domain\n   */\n  constructor(domain) {\n    /** @type {!Object<string, !Array<string>>} */\n    this._replyArgs = {};\n    this._domain = domain;\n    /** @type {!TargetBase} */\n    this._target;\n  }\n\n  /**\n   * @param {string} methodName\n   * @param {!Array.<!{name: string, type: string, optional: boolean}>} signature\n   * @param {!Array.<string>} replyArgs\n   */\n  registerCommand(methodName, signature, replyArgs) {\n    const domainAndMethod = this._domain + '.' + methodName;\n\n    /**\n     * @param {...*} vararg\n     * @this {_AgentPrototype}\n     * @return {!Promise.<*>}\n     */\n    function sendMessagePromise(vararg) {\n      const params = Array.prototype.slice.call(arguments);\n      return _AgentPrototype.prototype._sendMessageToBackendPromise.call(this, domainAndMethod, signature, params);\n    }\n\n    // @ts-ignore Method code generation\n    this[methodName] = sendMessagePromise;\n\n    /**\n     * @param {!Object=} request\n     * @return {!Promise<?Object>}\n     * @this {_AgentPrototype}\n     */\n    function invoke(request = {}) {\n      return this._invoke(domainAndMethod, request);\n    }\n\n    // @ts-ignore Method code generation\n    this['invoke_' + methodName] = invoke;\n\n    this._replyArgs[domainAndMethod] = replyArgs;\n  }\n\n  /**\n   * @param {string} method\n   * @param {!Array.<!{name: string, type: string, optional: boolean}>} signature\n   * @param {!Array.<*>} args\n   * @param {function(string):void} errorCallback\n   * @return {?Object}\n   */\n  _prepareParameters(method, signature, args, errorCallback) {\n    /** @type {!Object<string, *>} */\n    const params = {};\n    let hasParams = false;\n\n    for (const param of signature) {\n      const paramName = param['name'];\n      const typeName = param['type'];\n      const optionalFlag = param['optional'];\n\n      if (!args.length && !optionalFlag) {\n        errorCallback(\n            `Protocol Error: Invalid number of arguments for method '${method}' call. ` +\n            `It must have the following arguments ${JSON.stringify(signature)}'.`);\n        return null;\n      }\n\n      const value = args.shift();\n      if (optionalFlag && typeof value === 'undefined') {\n        continue;\n      }\n\n      if (typeof value !== typeName) {\n        errorCallback(\n            `Protocol Error: Invalid type of argument '${paramName}' for method '${method}' call. ` +\n            `It must be '${typeName}' but it is '${typeof value}'.`);\n        return null;\n      }\n\n      params[paramName] = value;\n      hasParams = true;\n    }\n\n    if (args.length) {\n      errorCallback(`Protocol Error: Extra ${args.length} arguments in a call to method '${method}'.`);\n      return null;\n    }\n\n    return hasParams ? params : null;\n  }\n\n  /**\n   * @param {string} method\n   * @param {!Array<!{name: string, type: string, optional: boolean}>} signature\n   * @param {!Array<*>} args\n   * @return {!Promise<?>}\n   */\n  _sendMessageToBackendPromise(method, signature, args) {\n    let errorMessage;\n    /**\n     * @param {string} message\n     */\n    function onError(message) {\n      console.error(message);\n      errorMessage = message;\n    }\n    const params = this._prepareParameters(method, signature, args, onError);\n    if (errorMessage) {\n      return Promise.resolve(null);\n    }\n\n    return new Promise(resolve => {\n      /**\n       * @param {*} error\n       * @param {*} result\n       */\n      const callback = (error, result) => {\n        if (error) {\n          if (!test.suppressRequestErrors && error.code !== DevToolsStubErrorCode && error.code !== _GenericError &&\n              error.code !== _ConnectionClosedErrorCode) {\n            console.error('Request ' + method + ' failed. ' + JSON.stringify(error));\n          }\n\n          resolve(null);\n          return;\n        }\n\n        const args = this._replyArgs[method];\n        resolve(result && args.length ? result[args[0]] : undefined);\n      };\n\n      if (!this._target._router) {\n        SessionRouter.dispatchConnectionError(callback, method);\n      } else {\n        this._target._router.sendMessage(this._target._sessionId, this._domain, method, params, callback);\n      }\n    });\n  }\n\n  /**\n   * @param {string} method\n   * @param {?Object} request\n   * @return {!Promise<!Object>}\n   */\n  _invoke(method, request) {\n    return new Promise(fulfill => {\n      /**\n       * @param {*} error\n       * @param {*} result\n       */\n      const callback = (error, result) => {\n        if (error && !test.suppressRequestErrors && error.code !== DevToolsStubErrorCode &&\n            error.code !== _GenericError && error.code !== _ConnectionClosedErrorCode) {\n          console.error('Request ' + method + ' failed. ' + JSON.stringify(error));\n        }\n\n\n        if (!result) {\n          result = {};\n        }\n        if (error) {\n          // TODO(crbug.com/1011811): Remove Old lookup of ProtocolError\n          result[ProtocolError] = error.message;\n          result.getError = () => {\n            return error.message;\n          };\n        } else {\n          result.getError = () => {\n            return undefined;\n          };\n        }\n        fulfill(result);\n      };\n\n      if (!this._target._router) {\n        SessionRouter.dispatchConnectionError(callback, method);\n      } else {\n        this._target._router.sendMessage(this._target._sessionId, this._domain, method, request, callback);\n      }\n    });\n  }\n}\n\nclass _DispatcherPrototype {\n  constructor() {\n    /** @type {!Object<string, *>} */\n    this._eventArgs = {};\n    /** @type {!Array<*>} */\n    this._dispatchers;\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {!Object} params\n   */\n  registerEvent(eventName, params) {\n    this._eventArgs[eventName] = params;\n  }\n\n  /**\n   * @param {!Object} dispatcher\n   */\n  addDomainDispatcher(dispatcher) {\n    this._dispatchers.push(dispatcher);\n  }\n\n  /**\n   * @param {!Object} dispatcher\n   */\n  removeDomainDispatcher(dispatcher) {\n    const index = this._dispatchers.indexOf(dispatcher);\n    if (index === -1) {\n      return;\n    }\n    this._dispatchers.splice(index, 1);\n  }\n\n  /**\n   * @param {string} functionName\n   * @param {!{method: string, params: ?Object.<string, *>|undefined}} messageObject\n   */\n  dispatch(functionName, messageObject) {\n    if (!this._dispatchers.length) {\n      return;\n    }\n\n    if (!this._eventArgs[messageObject.method]) {\n      InspectorBackend.reportProtocolWarning(\n          `Protocol Warning: Attempted to dispatch an unspecified method '${messageObject.method}'`, messageObject);\n      return;\n    }\n\n    const messageArgument = {...messageObject.params};\n\n    for (let index = 0; index < this._dispatchers.length; ++index) {\n      const dispatcher = this._dispatchers[index];\n\n      if (functionName in dispatcher) {\n        dispatcher[functionName].call(dispatcher, messageArgument);\n      }\n    }\n  }\n}\n\n/**\n * Takes error and result.\n * @typedef {function(?Object, ?Object):void}\n */\n// @ts-ignore typedef\nexport let _Callback;\n\n/**\n * Takes error and result.\n * @typedef {!{callback: function(?Object, ?Object):void, method: string}}\n */\n// @ts-ignore typedef\nexport let _CallbackWithDebugInfo;\n\nexport const inspectorBackend = new InspectorBackend();\n"]}