{"version":3,"file":"FormatterWorkerPool.js","sourceRoot":"","sources":["../../../../../front_end/formatter/FormatterWorkerPool.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as FormatterActions from '../formatter_worker/FormatterActions.js';  // eslint-disable-line rulesdir/es_modules_import\n\nconst MAX_WORKERS = Math.min(2, navigator.hardwareConcurrency - 1);\n\n/** @type {!FormatterWorkerPool} */\nlet formatterWorkerPoolInstance;\n\nexport class FormatterWorkerPool {\n  constructor() {\n    /** @type {!Array<!Task>} */\n    this._taskQueue = [];\n    /** @type {!Map<!Common.Worker.WorkerWrapper, ?Task>} */\n    this._workerTasks = new Map();\n  }\n\n  /**\n   * @return {!FormatterWorkerPool}\n   */\n  static instance() {\n    if (!formatterWorkerPoolInstance) {\n      formatterWorkerPoolInstance = new FormatterWorkerPool();\n    }\n\n    return formatterWorkerPoolInstance;\n  }\n\n  /**\n   * @return {!Common.Worker.WorkerWrapper}\n   */\n  _createWorker() {\n    const worker = Common.Worker.WorkerWrapper.fromURL(\n        new URL('../formatter_worker/formatter_worker-entrypoint.js', import.meta.url));\n    worker.onmessage = this._onWorkerMessage.bind(this, worker);\n    worker.onerror = this._onWorkerError.bind(this, worker);\n    return worker;\n  }\n\n  _processNextTask() {\n    if (!this._taskQueue.length) {\n      return;\n    }\n\n    let freeWorker = [...this._workerTasks.keys()].find(worker => !this._workerTasks.get(worker));\n    if (!freeWorker && this._workerTasks.size < MAX_WORKERS) {\n      freeWorker = this._createWorker();\n    }\n    if (!freeWorker) {\n      return;\n    }\n\n    const task = this._taskQueue.shift();\n    if (task) {\n      this._workerTasks.set(freeWorker, task);\n      freeWorker.postMessage({method: task.method, params: task.params});\n    }\n  }\n\n  /**\n   * @param {!Common.Worker.WorkerWrapper} worker\n   * @param {!MessageEvent} event\n   */\n  _onWorkerMessage(worker, event) {\n    const task = this._workerTasks.get(worker);\n    if (!task) {\n      return;\n    }\n    if (task.isChunked && event.data && !event.data['isLastChunk']) {\n      task.callback(event.data);\n      return;\n    }\n\n    this._workerTasks.set(worker, null);\n    this._processNextTask();\n    task.callback(event.data ? event.data : null);\n  }\n\n  /**\n   * @param {!Common.Worker.WorkerWrapper} worker\n   * @param {!Event} event\n   */\n  _onWorkerError(worker, event) {\n    console.error(event);\n    const task = this._workerTasks.get(worker);\n    worker.terminate();\n    this._workerTasks.delete(worker);\n\n    const newWorker = this._createWorker();\n    this._workerTasks.set(newWorker, null);\n    this._processNextTask();\n    if (task) {\n      task.callback(null);\n    }\n  }\n\n  /**\n   * @param {string} methodName\n   * @param {!Object<string, string>} params\n   * @param {function(boolean, *):void} callback\n   */\n  _runChunkedTask(methodName, params, callback) {\n    const task = new Task(methodName, params, onData, true);\n    this._taskQueue.push(task);\n    this._processNextTask();\n\n    /**\n     * @param {?Object} data\n     */\n    function onData(data) {\n      if (!data) {\n        callback(true, null);\n        return;\n      }\n      const isLastChunk = 'isLastChunk' in data && Boolean(data['isLastChunk']);\n      const chunk = 'chunk' in data && data['chunk'];\n      callback(isLastChunk, chunk);\n    }\n  }\n\n  /**\n   * @param {!FormatterActions.FormatterActions} methodName\n   * @param {!Object<string, string>} params\n   * @return {!Promise<*>}\n   */\n  _runTask(methodName, params) {\n    return new Promise(resolve => {\n      const task = new Task(methodName, params, resolve, false);\n      this._taskQueue.push(task);\n      this._processNextTask();\n    });\n  }\n\n  /**\n   * @param {string} mimeType\n   * @param {string} content\n   * @param {string} indentString\n   * @return {!Promise<!FormatResult>}\n   */\n  format(mimeType, content, indentString) {\n    const parameters = {mimeType: mimeType, content: content, indentString: indentString};\n    return /** @type {!Promise<!FormatResult>} */ (this._runTask(FormatterActions.FormatterActions.FORMAT, parameters));\n  }\n\n  /**\n   * @param {string} content\n   * @return {!Promise<!Array<!{name: string, offset: number}>>}\n   */\n  javaScriptIdentifiers(content) {\n    return this._runTask(FormatterActions.FormatterActions.JAVASCRIPT_IDENTIFIERS, {content: content})\n        .then(ids => ids || []);\n  }\n\n  /**\n   * @param {string} content\n   * @return {!Promise<string>}\n   */\n  evaluatableJavaScriptSubstring(content) {\n    return this._runTask(FormatterActions.FormatterActions.EVALUATE_JAVASCRIPT_SUBSTRING, {content: content})\n        .then(text => text || '');\n  }\n\n  /**\n   * @param {string} content\n   * @param {function(boolean, !Array<!CSSRule>):void} callback\n   */\n  parseCSS(content, callback) {\n    this._runChunkedTask(FormatterActions.FormatterActions.PARSE_CSS, {content: content}, onDataChunk);\n\n    /**\n     * @param {boolean} isLastChunk\n     * @param {*} data\n     */\n    function onDataChunk(isLastChunk, data) {\n      const rules = /** @type {!Array<!CSSRule>} */ (data || []);\n      callback(isLastChunk, rules);\n    }\n  }\n\n  /**\n   * @param {string} content\n   * @param {function(boolean, !Array<!JSOutlineItem>):void} callback\n   */\n  javaScriptOutline(content, callback) {\n    this._runChunkedTask(FormatterActions.FormatterActions.JAVASCRIPT_OUTLINE, {content: content}, onDataChunk);\n\n    /**\n     * @param {boolean} isLastChunk\n     * @param {*} data\n     */\n    function onDataChunk(isLastChunk, data) {\n      const items = /** @type {!Array.<!JSOutlineItem>} */ (data || []);\n      callback(isLastChunk, items);\n    }\n  }\n\n  /**\n   * @param {string} content\n   * @param {string} mimeType\n   * @param {function(boolean, !Array<!OutlineItem>):void} callback\n   * @return {boolean}\n   */\n  outlineForMimetype(content, mimeType, callback) {\n    switch (mimeType) {\n      case 'text/html':\n      case 'text/javascript':\n        this.javaScriptOutline(content, javaScriptCallback);\n        return true;\n      case 'text/css':\n        this.parseCSS(content, cssCallback);\n        return true;\n    }\n    return false;\n\n    /**\n     * @param {boolean} isLastChunk\n     * @param {!Array<!JSOutlineItem>} items\n     */\n    function javaScriptCallback(isLastChunk, items) {\n      callback(\n          isLastChunk,\n          items.map(item => ({line: item.line, column: item.column, title: item.name, subtitle: item.arguments})));\n    }\n\n    /**\n     * @param {boolean} isLastChunk\n     * @param {!Array<!CSSRule>} rules\n     */\n    function cssCallback(isLastChunk, rules) {\n      callback(isLastChunk, rules.map(rule => {\n        const title = 'selectorText' in rule ? rule.selectorText : rule.atRule;\n        return {line: rule.lineNumber, subtitle: undefined, column: rule.columnNumber, title};\n      }));\n    }\n  }\n\n  /**\n   * @param {string} content\n   * @return {!Promise<?string>}\n   */\n  findLastExpression(content) {\n    return /** @type {!Promise<?string>} */ (\n        this._runTask(FormatterActions.FormatterActions.FIND_LAST_EXPRESSION, {content}));\n  }\n\n  /**\n   * @param {string} content\n   * @return {!Promise<?{baseExpression: string, receiver: string, argumentIndex: number, functionName: string}>}\n   */\n  findLastFunctionCall(content) {\n    return /** @type {!Promise<?{baseExpression: string, receiver: string, argumentIndex: number, functionName: string}>} */ (\n        this._runTask(FormatterActions.FormatterActions.FIND_LAST_FUNCTION_CALL, {content}));\n  }\n\n  /**\n   * @param {string} content\n   * @return {!Promise<!Array<string>>}\n   */\n  argumentsList(content) {\n    return /** @type {!Promise<!Array<string>>} */ (\n        this._runTask(FormatterActions.FormatterActions.ARGUMENTS_LIST, {content}));\n  }\n}\n\nclass Task {\n  /**\n   * @param {string} method\n   * @param {!Object<string, string>} params\n   * @param {function(?MessageEvent):void} callback\n   * @param {boolean=} isChunked\n   */\n  constructor(method, params, callback, isChunked) {\n    this.method = method;\n    this.params = params;\n    this.callback = callback;\n    this.isChunked = isChunked;\n  }\n}\n\nexport class FormatResult {\n  constructor() {\n    /** @type {string} */\n    this.content;\n    /** @type {!FormatMapping} */\n    this.mapping;\n  }\n}\n\n// eslint-disable-next-line no-unused-vars\nclass JSOutlineItem {\n  constructor() {\n    /** @type {string} */\n    this.name;\n    /** @type {(string|undefined)} */\n    this.arguments;\n    /** @type {number} */\n    this.line;\n    /** @type {number} */\n    this.column;\n  }\n}\n\n// eslint-disable-next-line no-unused-vars\nclass CSSProperty {\n  constructor() {\n    /** @type {string} */\n    this.name;\n    /** @type {!TextRange} */\n    this.nameRange;\n    /** @type {string} */\n    this.value;\n    /** @type {!TextRange} */\n    this.valueRange;\n    /** @type {!TextRange} */\n    this.range;\n    /** @type {(boolean|undefined)} */\n    this.disabled;\n  }\n}\n\n// eslint-disable-next-line no-unused-vars\nclass SCSSProperty {\n  constructor() {\n    /** @type {!TextRange} */\n    this.range;\n    /** @type {!TextRange} */\n    this.name;\n    /** @type {!TextRange} */\n    this.value;\n    /** @type {boolean} */\n    this.disabled;\n  }\n}\n\n// eslint-disable-next-line no-unused-vars\nclass SCSSRule {\n  constructor() {\n    /** @type {!Array<!TextRange>} */\n    this.selectors;\n    /** @type {!Array<!SCSSProperty>} */\n    this.properties;\n    /** @type {!TextRange} */\n    this.styleRange;\n  }\n}\n\n/**\n * @return {!FormatterWorkerPool}\n */\nexport function formatterWorkerPool() {\n  return FormatterWorkerPool.instance();\n}\n\n/** @typedef {{line: number, column: number, title: string, subtitle: (string|undefined) }} */\n// @ts-ignore typedef\nexport let OutlineItem;\n\n/** @typedef {{original: !Array<number>, formatted: !Array<number>}} */\n// @ts-ignore typedef\nexport let FormatMapping;\n\n/** @typedef {{selectorText: string, styleRange: !TextRange, lineNumber: number, columnNumber: number, properties: !Array<!CSSProperty>}} */\n// @ts-ignore typedef\nexport let CSSStyleRule;\n\n/**\n * @typedef {{atRule: string, lineNumber: number, columnNumber: number}}\n */\n// @ts-ignore typedef\nexport let CSSAtRule;\n\n/**\n * @typedef {(CSSStyleRule|CSSAtRule)}\n */\n// @ts-ignore typedef\nexport let CSSRule;\n\n/**\n * @typedef {{startLine: number, startColumn: number, endLine: number, endColumn: number}}\n */\n// @ts-ignore typedef\nexport let TextRange;\n"]}