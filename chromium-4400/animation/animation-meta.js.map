{"version":3,"file":"animation-meta.js","sourceRoot":"","sources":["../../../../../front_end/animation/animation-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,EAAC,EAAE,EAAC,MAAM,yBAAyB,CAAC;AAC3C,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAKlC,IAAI,qBAAmD,CAAC;AAExD,KAAK,UAAU,mBAAmB;IAChC,IAAI,CAAC,qBAAqB,EAAE;QAC1B,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QACrE,qBAAqB,GAAG,MAAM,MAAM,CAAC,gBAAgB,CAAC,CAAC;KACxD;IACD,OAAO,qBAAqB,CAAC;AAC/B,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,iCAA+C;IACvD,EAAE,EAAE,YAAY;IAChB,KAAK,EAAE,GAAsC,EAAE,CAAC,EAAE,CAAA,YAAY;IAC9D,aAAa,EAAE,iBAAiB;IAChC,WAAW,6BAA0C;IACrD,KAAK,EAAE,CAAC;IACR,KAAK,CAAC,QAAQ;QACZ,MAAM,SAAS,GAAG,MAAM,mBAAmB,EAAE,CAAC;QAC9C,OAAO,SAAS,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;IAClE,CAAC;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../platform/platform.js';\nimport {ls} from '../platform/platform.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Animation from './animation.js';\n\nlet loadedAnimationModule: (typeof Animation|undefined);\n\nasync function loadAnimationModule(): Promise<typeof Animation> {\n  if (!loadedAnimationModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('animation');\n    loadedAnimationModule = await import('./animation.js');\n  }\n  return loadedAnimationModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'animations',\n  title: (): Platform.UIString.LocalizedString => ls`Animations`,\n  commandPrompt: 'Show Animations',\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 0,\n  async loadView() {\n    const Animation = await loadAnimationModule();\n    return Animation.AnimationTimeline.AnimationTimeline.instance();\n  },\n});\n"]}