{"version":3,"file":"LiveHeapProfileView.js","sourceRoot":"","sources":["../../../../../front_end/profiler/LiveHeapProfileView.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as DataGrid from '../data_grid/data_grid.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {SamplingHeapProfileNode} from './HeapProfileView.js';  // eslint-disable-line no-unused-vars\n\nexport const UIStrings = {\n  /**\n  *@description Text for a heap profile type\n  */\n  jsHeap: 'JS Heap',\n  /**\n  *@description Text in Live Heap Profile View of a profiler tool\n  */\n  allocatedJsHeapSizeCurrentlyIn: 'Allocated JS heap size currently in use',\n  /**\n  *@description Text in Live Heap Profile View of a profiler tool\n  */\n  vms: 'VMs',\n  /**\n  *@description Text in Live Heap Profile View of a profiler tool\n  */\n  numberOfVmsSharingTheSameScript: 'Number of VMs sharing the same script source',\n  /**\n  *@description Text in Live Heap Profile View of a profiler tool\n  */\n  scriptUrl: 'Script URL',\n  /**\n  *@description Text in Live Heap Profile View of a profiler tool\n  */\n  urlOfTheScriptSource: 'URL of the script source',\n  /**\n  *@description Data grid name for Heap Profile data grids\n  */\n  heapProfile: 'Heap Profile',\n  /**\n  *@description Text in Live Heap Profile View of a profiler tool\n  *@example {1} PH1\n  */\n  anonymousScriptS: '(Anonymous Script {PH1})',\n  /**\n  *@description A unit\n  */\n  kb: 'kB',\n};\nconst str_ = i18n.i18n.registerUIStrings('profiler/LiveHeapProfileView.js', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/** @type {LiveHeapProfileView} */\nlet liveHeapProfileViewInstance;\n/**\n * @extends {UI.Widget.VBox}\n */\nexport class LiveHeapProfileView extends UI.Widget.VBox {\n  /** @private */\n  constructor() {\n    super(true);\n    /** @type {!Map<string, !GridNode>} */\n    this._gridNodeByUrl = new Map();\n    this.registerRequiredCSS('profiler/liveHeapProfile.css', {enableLegacyPatching: true});\n\n    this._setting = Common.Settings.Settings.instance().moduleSetting('memoryLiveHeapProfile');\n    const toolbar = new UI.Toolbar.Toolbar('live-heap-profile-toolbar', this.contentElement);\n\n    /** @type {!UI.ActionRegistration.Action }*/\n    this._toggleRecordAction =\n        /** @type {!UI.ActionRegistration.Action }*/ (\n            UI.ActionRegistry.ActionRegistry.instance().action('live-heap-profile.toggle-recording'));\n    /** @type {!UI.Toolbar.ToolbarToggle} */\n    this._toggleRecordButton =\n        /** @type {!UI.Toolbar.ToolbarToggle} */ (UI.Toolbar.Toolbar.createActionButton(this._toggleRecordAction));\n    this._toggleRecordButton.setToggled(this._setting.get());\n    toolbar.appendToolbarItem(this._toggleRecordButton);\n\n    const mainTarget = SDK.SDKModel.TargetManager.instance().mainTarget();\n    if (mainTarget && mainTarget.model(SDK.ResourceTreeModel.ResourceTreeModel)) {\n      const startWithReloadAction =\n          /** @type {!UI.ActionRegistration.Action }*/ (\n              UI.ActionRegistry.ActionRegistry.instance().action('live-heap-profile.start-with-reload'));\n      this._startWithReloadButton = UI.Toolbar.Toolbar.createActionButton(startWithReloadAction);\n      toolbar.appendToolbarItem(this._startWithReloadButton);\n    }\n\n    this._dataGrid = this._createDataGrid();\n    this._dataGrid.asWidget().show(this.contentElement);\n\n    this._currentPollId = 0;\n  }\n\n  static instance() {\n    if (!liveHeapProfileViewInstance) {\n      liveHeapProfileViewInstance = new LiveHeapProfileView();\n    }\n    return liveHeapProfileViewInstance;\n  }\n\n  /**\n   * @return {!DataGrid.SortableDataGrid.SortableDataGrid<!GridNode>}\n   */\n  _createDataGrid() {\n    /**\n     * @type {!DataGrid.DataGrid.ColumnDescriptor}\n     */\n    const defaultColumnConfig = {\n      id: '',\n      title: Common.UIString.LocalizedEmptyString,\n      width: undefined,\n      fixedWidth: true,\n      sortable: true,\n      align: DataGrid.DataGrid.Align.Right,\n      sort: DataGrid.DataGrid.Order.Descending,\n      titleDOMFragment: undefined,\n      editable: undefined,\n      nonSelectable: undefined,\n      longText: undefined,\n      disclosure: undefined,\n      weight: undefined,\n      allowInSortByEvenWhenHidden: undefined,\n      dataType: undefined,\n      defaultWeight: undefined,\n    };\n    const columns = [\n      {\n        ...defaultColumnConfig,\n        id: 'size',\n        title: i18nString(UIStrings.jsHeap),\n        width: '72px',\n        fixedWidth: true,\n        sortable: true,\n        align: DataGrid.DataGrid.Align.Right,\n        sort: DataGrid.DataGrid.Order.Descending,\n        tooltip: i18nString(UIStrings.allocatedJsHeapSizeCurrentlyIn),\n      },\n      {\n        ...defaultColumnConfig,\n        id: 'isolates',\n        title: i18nString(UIStrings.vms),\n        width: '40px',\n        fixedWidth: true,\n        align: DataGrid.DataGrid.Align.Right,\n        tooltip: i18nString(UIStrings.numberOfVmsSharingTheSameScript)\n      },\n      {\n        ...defaultColumnConfig,\n        id: 'url',\n        title: i18nString(UIStrings.scriptUrl),\n        fixedWidth: false,\n        sortable: true,\n        tooltip: i18nString(UIStrings.urlOfTheScriptSource)\n      },\n    ];\n    const dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n      displayName: i18nString(UIStrings.heapProfile),\n      columns,\n      editCallback: undefined,\n      deleteCallback: undefined,\n      refreshCallback: undefined\n    });\n    dataGrid.setResizeMethod(DataGrid.DataGrid.ResizeMethod.Last);\n    dataGrid.element.classList.add('flex-auto');\n    dataGrid.element.addEventListener('keydown', this._onKeyDown.bind(this), false);\n    dataGrid.addEventListener(DataGrid.DataGrid.Events.OpenedNode, this._revealSourceForSelectedNode, this);\n    dataGrid.addEventListener(DataGrid.DataGrid.Events.SortingChanged, this._sortingChanged, this);\n    for (const info of columns) {\n      const headerCell = dataGrid.headerTableHeader(info.id);\n      if (headerCell) {\n        headerCell.setAttribute('title', info.tooltip);\n      }\n    }\n    return dataGrid;\n  }\n\n  /**\n   * @override\n   */\n  wasShown() {\n    this._poll();\n    this._setting.addChangeListener(this._settingChanged, this);\n  }\n\n  /**\n   * @override\n   */\n  willHide() {\n    ++this._currentPollId;\n    this._setting.removeChangeListener(this._settingChanged, this);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} value\n   */\n  _settingChanged(value) {\n    this._toggleRecordButton.setToggled(/** @type {boolean} */ (value.data));\n  }\n\n  async _poll() {\n    const pollId = this._currentPollId;\n    do {\n      const isolates = Array.from(SDK.IsolateManager.IsolateManager.instance().isolates());\n      const profiles = await Promise.all(isolates.map(isolate => {\n        const heapProfilerModel = isolate.heapProfilerModel();\n        if (!heapProfilerModel) {\n          return null;\n        }\n\n        return heapProfilerModel.getSamplingProfile();\n      }));\n      if (this._currentPollId !== pollId) {\n        return;\n      }\n      this._update(isolates, profiles);\n      await new Promise(r => setTimeout(r, 3000));\n    } while (this._currentPollId === pollId);\n  }\n\n  /**\n   * @param {!Array<!SDK.IsolateManager.Isolate>} isolates\n   * @param {!Array<?Protocol.HeapProfiler.SamplingHeapProfile>} profiles\n   */\n  _update(isolates, profiles) {\n    /** @type {!Map<string, !{size: number, isolates: !Set<!SDK.IsolateManager.Isolate>}>} */\n    const dataByUrl = new Map();\n    profiles.forEach((profile, index) => {\n      if (profile) {\n        processNodeTree(isolates[index], '', profile.head);\n      }\n    });\n\n    const rootNode = this._dataGrid.rootNode();\n    const exisitingNodes = new Set();\n    for (const pair of dataByUrl) {\n      const url = /** @type {string} */ (pair[0]);\n      const size = /** @type {number} */ (pair[1].size);\n      const isolateCount = /** @type {number} */ (pair[1].isolates.size);\n      if (!url) {\n        console.info(`Node with empty URL: ${size} bytes`);  // eslint-disable-line no-console\n        continue;\n      }\n      let node = this._gridNodeByUrl.get(url);\n      if (node) {\n        node.updateNode(size, isolateCount);\n      } else {\n        node = new GridNode(url, size, isolateCount);\n        this._gridNodeByUrl.set(url, node);\n        rootNode.appendChild(node);\n      }\n      exisitingNodes.add(node);\n    }\n\n    for (const node of rootNode.children.slice()) {\n      if (!exisitingNodes.has(node)) {\n        node.remove();\n      }\n      const gridNode = /** @type {!GridNode} */ (node);\n      this._gridNodeByUrl.delete(gridNode._url);\n    }\n\n    this._sortingChanged();\n\n    /**\n     * @param {!SDK.IsolateManager.Isolate} isolate\n     * @param {string} parentUrl\n     * @param {!Protocol.HeapProfiler.SamplingHeapProfileNode} node\n     */\n    function processNodeTree(isolate, parentUrl, node) {\n      const url = node.callFrame.url || parentUrl || systemNodeName(node) || anonymousScriptName(node);\n      node.children.forEach(processNodeTree.bind(null, isolate, url));\n      if (!node.selfSize) {\n        return;\n      }\n      let data = dataByUrl.get(url);\n      if (!data) {\n        data = {size: 0, isolates: new Set()};\n        dataByUrl.set(url, data);\n      }\n      data.size += node.selfSize;\n      data.isolates.add(isolate);\n    }\n\n    /**\n     * @param {!Protocol.HeapProfiler.SamplingHeapProfileNode} node\n     * @return {string}\n     */\n    function systemNodeName(node) {\n      const name = node.callFrame.functionName;\n      return name.startsWith('(') && name !== '(root)' ? name : '';\n    }\n\n    /**\n     * @param {!Protocol.HeapProfiler.SamplingHeapProfileNode} node\n     * @return {string}\n     */\n    function anonymousScriptName(node) {\n      return Number(node.callFrame.scriptId) ? i18nString(UIStrings.anonymousScriptS, {PH1: node.callFrame.scriptId}) :\n                                               '';\n    }\n  }\n\n  /**\n   * @param {!KeyboardEvent} event\n   */\n  _onKeyDown(event) {\n    if (!(event.key === 'Enter')) {\n      return;\n    }\n    event.consume(true);\n    this._revealSourceForSelectedNode();\n  }\n\n  _revealSourceForSelectedNode() {\n    const node = /** @type {!GridNode} */ (this._dataGrid.selectedNode);\n    if (!node || !node._url) {\n      return;\n    }\n    const sourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(node._url);\n    if (sourceCode) {\n      Common.Revealer.reveal(sourceCode);\n    }\n  }\n\n  _sortingChanged() {\n    const columnId = this._dataGrid.sortColumnId();\n    if (!columnId) {\n      return;\n    }\n\n    /**\n     * @param {!DataGrid.SortableDataGrid.SortableDataGridNode<!GridNode>} a\n     * @param {!DataGrid.SortableDataGrid.SortableDataGridNode<!GridNode>} b\n     */\n    function sortByUrl(a, b) {\n      return /** @type {!GridNode} */ (b)._url.localeCompare(/** @type {!GridNode} */ (a)._url);\n    }\n\n    /**\n     * @param {!DataGrid.SortableDataGrid.SortableDataGridNode<!GridNode>} a\n     * @param {!DataGrid.SortableDataGrid.SortableDataGridNode<!GridNode>} b\n     */\n    function sortBySize(a, b) {\n      return /** @type {!GridNode} */ (b)._size - /** @type {!GridNode} */ (a)._size;\n    }\n\n    const sortFunction = columnId === 'url' ? sortByUrl : sortBySize;\n    this._dataGrid.sortNodes(sortFunction, this._dataGrid.isSortOrderAscending());\n  }\n\n  _toggleRecording() {\n    const enable = !this._setting.get();\n    if (enable) {\n      this._startRecording(false);\n    } else {\n      this._stopRecording();\n    }\n  }\n\n  /**\n   * @param {boolean=} reload\n   */\n  _startRecording(reload) {\n    this._setting.set(true);\n    if (!reload) {\n      return;\n    }\n    const mainTarget = SDK.SDKModel.TargetManager.instance().mainTarget();\n    if (!mainTarget) {\n      return;\n    }\n    const resourceTreeModel = /** @type {?SDK.ResourceTreeModel.ResourceTreeModel} */ (\n        mainTarget.model(SDK.ResourceTreeModel.ResourceTreeModel));\n    if (resourceTreeModel) {\n      resourceTreeModel.reloadPage();\n    }\n  }\n\n  async _stopRecording() {\n    this._setting.set(false);\n  }\n}\n\n/**\n * @extends {DataGrid.SortableDataGrid.SortableDataGridNode<*>}\n */\nexport class GridNode extends DataGrid.SortableDataGrid.SortableDataGridNode {\n  /**\n   * @param {string} url\n   * @param {number} size\n   * @param {number} isolateCount\n   */\n  constructor(url, size, isolateCount) {\n    super();\n    this._url = url;\n    this._size = size;\n    this._isolateCount = isolateCount;\n  }\n\n  /**\n   * @param {number} size\n   * @param {number} isolateCount\n   */\n  updateNode(size, isolateCount) {\n    if (this._size === size && this._isolateCount === isolateCount) {\n      return;\n    }\n    this._size = size;\n    this._isolateCount = isolateCount;\n    this.refresh();\n  }\n\n  /**\n   * @override\n   * @param {string} columnId\n   * @return {!HTMLElement}\n   */\n  createCell(columnId) {\n    const cell = this.createTD(columnId);\n    switch (columnId) {\n      case 'url':\n        cell.textContent = this._url;\n        break;\n      case 'size':\n        cell.textContent = Number.withThousandsSeparator(Math.round(this._size / 1e3));\n        cell.createChild('span', 'size-units').textContent = i18nString(UIStrings.kb);\n        break;\n      case 'isolates':\n        cell.textContent = `${this._isolateCount}`;\n        break;\n    }\n    return cell;\n  }\n}\n\n/** @type {!ActionDelegate} */\nlet profilerActionDelegateInstance;\n\n/**\n * @implements {UI.ActionRegistration.ActionDelegate}\n */\nexport class ActionDelegate {\n  /**\n   * @param {{forceNew: ?boolean}} opts\n   */\n  static instance(opts = {forceNew: null}) {\n    const {forceNew} = opts;\n    if (!profilerActionDelegateInstance || forceNew) {\n      profilerActionDelegateInstance = new ActionDelegate();\n    }\n    return profilerActionDelegateInstance;\n  }\n\n  /**\n   * @override\n   * @param {!UI.Context.Context} context\n   * @param {string} actionId\n   * @return {boolean}\n   */\n  handleAction(context, actionId) {\n    (async () => {\n      const profileViewId = 'live_heap_profile';\n      await UI.ViewManager.ViewManager.instance().showView(profileViewId);\n      const view = UI.ViewManager.ViewManager.instance().view(profileViewId);\n      if (view) {\n        const widget = await view.widget();\n        this._innerHandleAction(/** @type {!LiveHeapProfileView} */ (widget), actionId);\n      }\n    })();\n    return true;\n  }\n\n  /**\n   * @param {!LiveHeapProfileView} profilerView\n   * @param {string} actionId\n   */\n  _innerHandleAction(profilerView, actionId) {\n    switch (actionId) {\n      case 'live-heap-profile.toggle-recording':\n        profilerView._toggleRecording();\n        break;\n      case 'live-heap-profile.start-with-reload':\n        profilerView._startRecording(true);\n        break;\n      default:\n        console.assert(false, `Unknown action: ${actionId}`);\n    }\n  }\n}\n"]}