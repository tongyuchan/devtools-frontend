{"version":3,"file":"TopDownProfileDataGrid.js","sourceRoot":"","sources":["../../../../../front_end/profiler/TopDownProfileDataGrid.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2009 280 North Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as SDK from '../sdk/sdk.js';  // eslint-disable-line no-unused-vars\nimport * as UI from '../ui/ui.js';     // eslint-disable-line no-unused-vars\n\nimport {Formatter, ProfileDataGridNode, ProfileDataGridTree} from './ProfileDataGrid.js';  // eslint-disable-line no-unused-vars\n\nexport class TopDownProfileDataGridNode extends ProfileDataGridNode {\n  /**\n   * @param {!SDK.ProfileTreeModel.ProfileNode} profileNode\n   * @param {!TopDownProfileDataGridTree} owningTree\n   */\n  constructor(profileNode, owningTree) {\n    const hasChildren = Boolean(profileNode.children && profileNode.children.length);\n\n    super(profileNode, owningTree, hasChildren);\n\n    this._remainingChildren = profileNode.children;\n  }\n\n  /**\n   * @param {!TopDownProfileDataGridNode|!TopDownProfileDataGridTree} container\n   */\n  static _sharedPopulate(container) {\n    const children = container._remainingChildren;\n    const childrenLength = children.length;\n\n    for (let i = 0; i < childrenLength; ++i) {\n      container.appendChild(\n          new TopDownProfileDataGridNode(children[i], /** @type {!TopDownProfileDataGridTree} */ (container.tree)));\n    }\n\n    container._remainingChildren = [];\n  }\n\n  /**\n   * @param {!TopDownProfileDataGridNode|!TopDownProfileDataGridTree} container\n   * @param {string} aCallUID\n   */\n  static _excludeRecursively(container, aCallUID) {\n    if (container._remainingChildren.length > 0) {\n      /** @type {!TopDownProfileDataGridNode} */ (container).populate();\n    }\n\n    container.save();\n\n    const children = container.children;\n    let index = container.children.length;\n\n    while (index--) {\n      TopDownProfileDataGridNode._excludeRecursively(\n          /** @type {!TopDownProfileDataGridNode} */ (children[index]), aCallUID);\n    }\n\n    const child = container.childrenByCallUID.get(aCallUID);\n\n    if (child) {\n      ProfileDataGridNode.merge(container, child, true);\n    }\n  }\n\n  /**\n   * @override\n   */\n  populateChildren() {\n    TopDownProfileDataGridNode._sharedPopulate(this);\n  }\n}\n\nexport class TopDownProfileDataGridTree extends ProfileDataGridTree {\n  /**\n   * @param {!Formatter} formatter\n   * @param {!UI.SearchableView.SearchableView} searchableView\n   * @param {!SDK.ProfileTreeModel.ProfileNode} rootProfileNode\n   * @param {number} total\n   */\n  constructor(formatter, searchableView, rootProfileNode, total) {\n    super(formatter, searchableView, total);\n    this._remainingChildren = rootProfileNode.children;\n    ProfileDataGridNode.populate(this);\n  }\n\n  /**\n   * @override\n   * @param {!ProfileDataGridNode} profileDataGridNode\n   */\n  focus(profileDataGridNode) {\n    if (!profileDataGridNode) {\n      return;\n    }\n\n    this.save();\n    profileDataGridNode.savePosition();\n\n    this.children = [profileDataGridNode];\n    this.total = profileDataGridNode.total;\n  }\n\n  /**\n   * @override\n   * @param {!ProfileDataGridNode} profileDataGridNode\n   */\n  exclude(profileDataGridNode) {\n    if (!profileDataGridNode) {\n      return;\n    }\n\n    this.save();\n\n    TopDownProfileDataGridNode._excludeRecursively(this, profileDataGridNode.callUID);\n\n    if (this.lastComparator) {\n      this.sort(this.lastComparator, true);\n    }\n  }\n\n  /**\n   * @override\n   */\n  restore() {\n    if (!this._savedChildren) {\n      return;\n    }\n\n    this.children[0].restorePosition();\n\n    super.restore();\n  }\n\n  /**\n   * @override\n   */\n  populateChildren() {\n    TopDownProfileDataGridNode._sharedPopulate(this);\n  }\n}\n"]}