{"version":3,"file":"HeapSnapshotView.js","sourceRoot":"","sources":["../../../../../front_end/profiler/HeapSnapshotView.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Bindings from '../bindings/bindings.js';\nimport * as Common from '../common/common.js';\nimport * as Components from '../components/components.js';\nimport * as DataGrid from '../data_grid/data_grid.js';\nimport * as HeapSnapshotModel from '../heap_snapshot_model/heap_snapshot_model.js';\nimport * as Host from '../host/host.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as ObjectUI from '../object_ui/object_ui.js';\nimport * as PerfUI from '../perf_ui/perf_ui.js';\nimport * as Platform from '../platform/platform.js';\nimport * as Root from '../root/root.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';\n\nimport {AllocationDataGrid, HeapSnapshotConstructorsDataGrid, HeapSnapshotContainmentDataGrid, HeapSnapshotDiffDataGrid, HeapSnapshotRetainmentDataGrid, HeapSnapshotSortableDataGrid, HeapSnapshotSortableDataGridEvents,} from './HeapSnapshotDataGrids.js';  // eslint-disable-line no-unused-vars\nimport {AllocationGridNode, HeapSnapshotGenericObjectNode, HeapSnapshotGridNode} from './HeapSnapshotGridNodes.js';  // eslint-disable-line no-unused-vars\nimport {HeapSnapshotProxy, HeapSnapshotWorkerProxy} from './HeapSnapshotProxy.js';  // eslint-disable-line no-unused-vars\nimport {HeapTimelineOverview, IdsRangeChanged, Samples} from './HeapTimelineOverview.js';\nimport * as ModuleUIStrings from './ModuleUIStrings.js';\nimport {DataDisplayDelegate, Events as ProfileHeaderEvents, ProfileEvents as ProfileTypeEvents, ProfileHeader, ProfileType} from './ProfileHeader.js';  // eslint-disable-line no-unused-vars\nimport {ProfileSidebarTreeElement} from './ProfileSidebarTreeElement.js';\nimport {instance} from './ProfileTypeRegistry.js';\n\nexport const UIStrings = {\n  /**\n  *@description Text to find an item\n  */\n  find: 'Find',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  containment: 'Containment',\n  /**\n  *@description Retaining paths title text content in Heap Snapshot View of a profiler tool\n  */\n  retainers: 'Retainers',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  allocationStack: 'Allocation stack',\n  /**\n  *@description Screen reader label for a select box that chooses the perspective in the Memory panel when vieweing a Heap Snapshot\n  */\n  perspective: 'Perspective',\n  /**\n  *@description Screen reader label for a select box that chooses the snapshot to use as a base in the Memory panel when vieweing a Heap Snapshot\n  */\n  baseSnapshot: 'Base snapshot',\n  /**\n  *@description Text to filter result items\n  */\n  filter: 'Filter',\n  /**\n  *@description Filter label text in the Memory tool to filter class names for a heap snapshot\n  */\n  classFilter: 'Class filter',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  code: 'Code',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  strings: 'Strings',\n  /**\n  *@description Label on a pie chart in the statistics view for the Heap Snapshot tool\n  */\n  jsArrays: 'JS arrays',\n  /**\n  *@description Label on a pie chart in the statistics view for the Heap Snapshot tool\n  */\n  typedArrays: 'Typed arrays',\n  /**\n  *@description Label on a pie chart in the statistics view for the Heap Snapshot tool\n  */\n  systemObjects: 'System objects',\n  /**\n  *@description Text in Heap Profile View of a profiler tool\n  *@example {3 MB} PH1\n  */\n  selectedSizeS: 'Selected size: {PH1}',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  allObjects: 'All objects',\n  /**\n  *@description Title in Heap Snapshot View of a profiler tool\n  *@example {Profile 2} PH1\n  */\n  objectsAllocatedBeforeS: 'Objects allocated before {PH1}',\n  /**\n  *@description Title in Heap Snapshot View of a profiler tool\n  *@example {Profile 1} PH1\n  *@example {Profile 2} PH2\n  */\n  objectsAllocatedBetweenSAndS: 'Objects allocated between {PH1} and {PH2}',\n  /**\n  *@description Text for the summary view\n  */\n  summary: 'Summary',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  comparison: 'Comparison',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  allocation: 'Allocation',\n  /**\n  *@description Title text content in Heap Snapshot View of a profiler tool\n  */\n  liveObjects: 'Live objects',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  statistics: 'Statistics',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  heapSnapshot: 'Heap snapshot',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  takeHeapSnapshot: 'Take heap snapshot',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  heapSnapshots: 'HEAP SNAPSHOTS',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  heapSnapshotProfilesShowMemory:\n      'Heap snapshot profiles show memory distribution among your page\\'s JavaScript objects and related DOM nodes.',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  treatGlobalObjectsAsRoots:\n      'Treat global objects as roots (recommended, unchecking this exposes internal nodes and introduces excessive detail, but might help debugging cycles in retaining paths)',\n  /**\n  *@description Text in Heap Profile View of a profiler tool\n  */\n  snapshotting: 'Snapshotting…',\n  /**\n  *@description Profile title in Heap Snapshot View of a profiler tool\n  *@example {1} PH1\n  */\n  snapshotD: 'Snapshot {PH1}',\n  /**\n  *@description Text for a percentage value\n  *@example {13.0} PH1\n  */\n  percentagePlaceholder: '{PH1}%',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  allocationInstrumentationOn: 'Allocation instrumentation on timeline',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  stopRecordingHeapProfile: 'Stop recording heap profile',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  startRecordingHeapProfile: 'Start recording heap profile',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  recordAllocationStacksExtra: 'Record allocation stacks (extra performance overhead)',\n  /**\n  *@description Text in CPUProfile View of a profiler tool\n  */\n  recording: 'Recording…',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  allocationTimelines: 'ALLOCATION TIMELINES',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  AllocationTimelinesShow:\n      '\\n        Allocation timelines show instrumented JavaScript memory allocations over time.\\n        Once profile is recorded you can select a time interval to see objects that\\n        were allocated within it and still alive by the end of recording.\\n        Use this profile type to isolate memory leaks.',\n  /**\n  *@description Text when something is loading\n  */\n  loading: 'Loading…',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  *@example {30} PH1\n  */\n  savingD: 'Saving… {PH1}%',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  *@example {1,021} PH1\n  */\n  sKb: '{PH1} kB',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  heapMemoryUsage: 'Heap memory usage',\n  /**\n  *@description Text of a DOM element in Heap Snapshot View of a profiler tool\n  */\n  stackWasNotRecordedForThisObject:\n      'Stack was not recorded for this object because it had been allocated before this profile recording started.',\n};\nconst str_ = i18n.i18n.registerUIStrings('profiler/HeapSnapshotView.js', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n// The way this is handled is to workaround the strings inside the heap_snapshot_worker\n// If strings are removed from inside the worker strings can be declared in this module\n// as any other.\nconst moduleUIstr_ = i18n.i18n.registerUIStrings('profiler/ModuleUIStrings.js', ModuleUIStrings.UIStrings);\nconst moduleI18nString = i18n.i18n.getLocalizedString.bind(undefined, moduleUIstr_);\n/**\n * @implements {DataDisplayDelegate}\n * @implements {UI.SearchableView.Searchable}\n */\nexport class HeapSnapshotView extends UI.View.SimpleView {\n  /**\n   * @param {!DataDisplayDelegate} dataDisplayDelegate\n   * @param {!HeapProfileHeader} profile\n   */\n  constructor(dataDisplayDelegate, profile) {\n    super(i18nString(UIStrings.heapSnapshot));\n\n    /** @type {!Array<number>} */\n    this._searchResults = [];\n\n    this.element.classList.add('heap-snapshot-view');\n    this._profile = profile;\n    this._linkifier = new Components.Linkifier.Linkifier();\n    const profileType = profile.profileType();\n\n    profileType.addEventListener(HeapSnapshotProfileType.SnapshotReceived, this._onReceiveSnapshot, this);\n    profileType.addEventListener(ProfileTypeEvents.RemoveProfileHeader, this._onProfileHeaderRemoved, this);\n\n    const isHeapTimeline = profileType.id === TrackingHeapSnapshotProfileType.TypeId;\n    if (isHeapTimeline) {\n      this._createOverview();\n    }\n\n    this._parentDataDisplayDelegate = dataDisplayDelegate;\n\n    this._searchableView = new UI.SearchableView.SearchableView(this, null);\n    this._searchableView.setPlaceholder(i18nString(UIStrings.find), i18nString(UIStrings.find));\n    this._searchableView.show(this.element);\n\n    this._splitWidget = new UI.SplitWidget.SplitWidget(false, true, 'heapSnapshotSplitViewState', 200, 200);\n    this._splitWidget.show(this._searchableView.element);\n\n    const heapProfilerModel = profile.heapProfilerModel();\n    this._containmentDataGrid = new HeapSnapshotContainmentDataGrid(\n        heapProfilerModel, this, /* displayName */ i18nString(UIStrings.containment));\n    this._containmentDataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, this._selectionChanged, this);\n    this._containmentWidget = this._containmentDataGrid.asWidget();\n    this._containmentWidget.setMinimumSize(50, 25);\n\n    this._statisticsView = new HeapSnapshotStatisticsView();\n\n    this._constructorsDataGrid = new HeapSnapshotConstructorsDataGrid(heapProfilerModel, this);\n    this._constructorsDataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, this._selectionChanged, this);\n    this._constructorsWidget = this._constructorsDataGrid.asWidget();\n    this._constructorsWidget.setMinimumSize(50, 25);\n\n    this._diffDataGrid = new HeapSnapshotDiffDataGrid(heapProfilerModel, this);\n    this._diffDataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, this._selectionChanged, this);\n    this._diffWidget = this._diffDataGrid.asWidget();\n    this._diffWidget.setMinimumSize(50, 25);\n\n    /** @type {?AllocationDataGrid} */\n    this._allocationDataGrid = null;\n\n    if (isHeapTimeline) {\n      this._allocationDataGrid = new AllocationDataGrid(heapProfilerModel, this);\n      this._allocationDataGrid.addEventListener(\n          DataGrid.DataGrid.Events.SelectedNode, this._onSelectAllocationNode, this);\n      this._allocationWidget = this._allocationDataGrid.asWidget();\n      this._allocationWidget.setMinimumSize(50, 25);\n\n      this._allocationStackView = new HeapAllocationStackView(heapProfilerModel);\n      this._allocationStackView.setMinimumSize(50, 25);\n\n      this._tabbedPane = new UI.TabbedPane.TabbedPane();\n    }\n\n    this._retainmentDataGrid = new HeapSnapshotRetainmentDataGrid(heapProfilerModel, this);\n    this._retainmentWidget = this._retainmentDataGrid.asWidget();\n    this._retainmentWidget.setMinimumSize(50, 21);\n    this._retainmentWidget.element.classList.add('retaining-paths-view');\n\n    let splitWidgetResizer;\n    if (this._allocationStackView) {\n      this._tabbedPane = new UI.TabbedPane.TabbedPane();\n\n      this._tabbedPane.appendTab('retainers', i18nString(UIStrings.retainers), this._retainmentWidget);\n      this._tabbedPane.appendTab('allocation-stack', i18nString(UIStrings.allocationStack), this._allocationStackView);\n\n      splitWidgetResizer = this._tabbedPane.headerElement();\n      this._objectDetailsView = this._tabbedPane;\n    } else {\n      const retainmentViewHeader = document.createElement('div');\n      retainmentViewHeader.classList.add('heap-snapshot-view-resizer');\n      const retainingPathsTitleDiv = retainmentViewHeader.createChild('div', 'title');\n      const retainingPathsTitle = retainingPathsTitleDiv.createChild('span');\n      retainingPathsTitle.textContent = i18nString(UIStrings.retainers);\n\n      splitWidgetResizer = retainmentViewHeader;\n      this._objectDetailsView = new UI.Widget.VBox();\n      this._objectDetailsView.element.appendChild(retainmentViewHeader);\n      this._retainmentWidget.show(this._objectDetailsView.element);\n    }\n    this._splitWidget.hideDefaultResizer();\n    this._splitWidget.installResizer(splitWidgetResizer);\n\n    this._retainmentDataGrid.addEventListener(\n        DataGrid.DataGrid.Events.SelectedNode, this._inspectedObjectChanged, this);\n    this._retainmentDataGrid.reset();\n\n    this._perspectives = [];\n    this._comparisonPerspective = new ComparisonPerspective();\n    this._perspectives.push(new SummaryPerspective());\n    if (profile.profileType() !== instance.trackingHeapSnapshotProfileType) {\n      this._perspectives.push(this._comparisonPerspective);\n    }\n    this._perspectives.push(new ContainmentPerspective());\n    if (this._allocationWidget) {\n      this._perspectives.push(new AllocationPerspective());\n    }\n    this._perspectives.push(new StatisticsPerspective());\n\n    this._perspectiveSelect = new UI.Toolbar.ToolbarComboBox(\n        this._onSelectedPerspectiveChanged.bind(this), i18nString(UIStrings.perspective));\n    this._updatePerspectiveOptions();\n\n    this._baseSelect = new UI.Toolbar.ToolbarComboBox(this._changeBase.bind(this), i18nString(UIStrings.baseSnapshot));\n    this._baseSelect.setVisible(false);\n    this._updateBaseOptions();\n\n    this._filterSelect = new UI.Toolbar.ToolbarComboBox(this._changeFilter.bind(this), i18nString(UIStrings.filter));\n    this._filterSelect.setVisible(false);\n    this._updateFilterOptions();\n\n    this._classNameFilter = new UI.Toolbar.ToolbarInput(i18nString(UIStrings.classFilter));\n    this._classNameFilter.setVisible(false);\n    this._constructorsDataGrid.setNameFilter(this._classNameFilter);\n    this._diffDataGrid.setNameFilter(this._classNameFilter);\n\n    this._selectedSizeText = new UI.Toolbar.ToolbarText();\n\n    this._popoverHelper = new UI.PopoverHelper.PopoverHelper(this.element, this._getPopoverRequest.bind(this));\n    this._popoverHelper.setDisableOnClick(true);\n    this._popoverHelper.setHasPadding(true);\n    this.element.addEventListener('scroll', this._popoverHelper.hidePopover.bind(this._popoverHelper), true);\n\n    this._currentPerspectiveIndex = 0;\n    this._currentPerspective = this._perspectives[0];\n    this._currentPerspective.activate(this);\n    this._dataGrid = /** @type {?HeapSnapshotSortableDataGrid} */ (this._currentPerspective.masterGrid(this));\n\n    this._populate();\n    this._searchThrottler = new Common.Throttler.Throttler(0);\n\n    for (const existingProfile of this._profiles()) {\n      existingProfile.addEventListener(ProfileHeaderEvents.ProfileTitleChanged, this._updateControls, this);\n    }\n\n    /** @type {?HeapProfileHeader} */\n    this._baseProfile;\n  }\n\n  _createOverview() {\n    const profileType = this._profile.profileType();\n    this._trackingOverviewGrid = new HeapTimelineOverview();\n    this._trackingOverviewGrid.addEventListener(IdsRangeChanged, this._onIdsRangeChanged.bind(this));\n    if (!this._profile.fromFile() && profileType.profileBeingRecorded() === this._profile) {\n      profileType.addEventListener(TrackingHeapSnapshotProfileType.HeapStatsUpdate, this._onHeapStatsUpdate, this);\n      profileType.addEventListener(TrackingHeapSnapshotProfileType.TrackingStopped, this._onStopTracking, this);\n      this._trackingOverviewGrid.start();\n    }\n  }\n\n  _onStopTracking() {\n    this._profile.profileType().removeEventListener(\n        TrackingHeapSnapshotProfileType.HeapStatsUpdate, this._onHeapStatsUpdate, this);\n    this._profile.profileType().removeEventListener(\n        TrackingHeapSnapshotProfileType.TrackingStopped, this._onStopTracking, this);\n    if (this._trackingOverviewGrid) {\n      this._trackingOverviewGrid.stop();\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onHeapStatsUpdate(event) {\n    const samples = event.data;\n    if (samples && this._trackingOverviewGrid) {\n      this._trackingOverviewGrid.setSamples(event.data);\n    }\n  }\n\n  /**\n   * @return {!UI.SearchableView.SearchableView}\n   */\n  searchableView() {\n    return this._searchableView;\n  }\n\n  /**\n   * @override\n   * @param {?ProfileHeader} profile\n   * @return {?UI.Widget.Widget}\n   */\n  showProfile(profile) {\n    return this._parentDataDisplayDelegate.showProfile(profile);\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.HeapProfiler.HeapSnapshotObjectId} snapshotObjectId\n   * @param {string} perspectiveName\n   */\n  showObject(snapshotObjectId, perspectiveName) {\n    if (Number(snapshotObjectId) <= this._profile.maxJSObjectId) {\n      this.selectLiveObject(perspectiveName, snapshotObjectId);\n    } else {\n      this._parentDataDisplayDelegate.showObject(snapshotObjectId, perspectiveName);\n    }\n  }\n\n  /**\n   * @override\n   * @param {number} nodeIndex\n   * @return {!Promise<?Element>}\n   */\n  async linkifyObject(nodeIndex) {\n    const heapProfilerModel = this._profile.heapProfilerModel();\n    // heapProfilerModel is null if snapshot was loaded from file\n    if (!heapProfilerModel) {\n      return null;\n    }\n    const location = await this._profile.getLocation(nodeIndex);\n    if (!location) {\n      return null;\n    }\n    const debuggerModel = heapProfilerModel.runtimeModel().debuggerModel();\n    const rawLocation = debuggerModel.createRawLocationByScriptId(\n        String(location.scriptId), location.lineNumber, location.columnNumber);\n    if (!rawLocation) {\n      return null;\n    }\n    const script = rawLocation.script();\n    const sourceURL = script && script.sourceURL;\n    return sourceURL && this._linkifier ? this._linkifier.linkifyRawLocation(rawLocation, sourceURL) : null;\n  }\n\n  async _populate() {\n    const heapSnapshotProxy = await this._profile._loadPromise;\n\n    this._retrieveStatistics(heapSnapshotProxy);\n    if (this._dataGrid) {\n      this._dataGrid.setDataSource(heapSnapshotProxy, 0);\n    }\n\n    if (this._profile.profileType().id === TrackingHeapSnapshotProfileType.TypeId && this._profile.fromFile()) {\n      const samples = await heapSnapshotProxy.getSamples();\n      if (samples) {\n        console.assert(Boolean(samples.timestamps.length));\n        const profileSamples = new Samples();\n        profileSamples.sizes = samples.sizes;\n        profileSamples.ids = samples.lastAssignedIds;\n        profileSamples.timestamps = samples.timestamps;\n        profileSamples.max = samples.sizes;\n        profileSamples.totalTime = Math.max(samples.timestamps[samples.timestamps.length - 1] || 0, 10000);\n        if (this._trackingOverviewGrid) {\n          this._trackingOverviewGrid.setSamples(profileSamples);\n        }\n      }\n    }\n\n    const list = this._profiles();\n    const profileIndex = list.indexOf(this._profile);\n    this._baseSelect.setSelectedIndex(Math.max(0, profileIndex - 1));\n    if (this._trackingOverviewGrid) {\n      this._trackingOverviewGrid.updateGrid();\n    }\n  }\n\n  /**\n   * @param {!HeapSnapshotProxy} heapSnapshotProxy\n   * @return {!Promise<!HeapSnapshotModel.HeapSnapshotModel.Statistics>}\n   */\n  async _retrieveStatistics(heapSnapshotProxy) {\n    const statistics = await heapSnapshotProxy.getStatistics();\n\n    const records = [\n      {value: statistics.code, color: '#f77', title: i18nString(UIStrings.code)},\n      {value: statistics.strings, color: '#5e5', title: i18nString(UIStrings.strings)},\n      {value: statistics.jsArrays, color: '#7af', title: i18nString(UIStrings.jsArrays)},\n      {value: statistics.native, color: '#fc5', title: i18nString(UIStrings.typedArrays)},\n      {value: statistics.system, color: '#98f', title: i18nString(UIStrings.systemObjects)},\n    ];\n    this._statisticsView.setTotalAndRecords(statistics.total, records);\n    return statistics;\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onIdsRangeChanged(event) {\n    const minId = event.data.minId;\n    const maxId = event.data.maxId;\n    this._selectedSizeText.setText(\n        i18nString(UIStrings.selectedSizeS, {PH1: Platform.NumberUtilities.bytesToString(event.data.size)}));\n    if (this._constructorsDataGrid.snapshot) {\n      this._constructorsDataGrid.setSelectionRange(minId, maxId);\n    }\n  }\n\n  /**\n   * @override\n   * @return {!Promise<!Array<!UI.Toolbar.ToolbarItem>>}\n   */\n  async toolbarItems() {\n    /** @type {!Array<!UI.Toolbar.ToolbarItem>} */\n    const result = [this._perspectiveSelect, this._classNameFilter];\n    if (this._profile.profileType() !== instance.trackingHeapSnapshotProfileType) {\n      result.push(this._baseSelect, this._filterSelect);\n    }\n    result.push(this._selectedSizeText);\n    return result;\n  }\n\n  /**\n   * @override\n   */\n  willHide() {\n    this._currentSearchResultIndex = -1;\n    this._popoverHelper.hidePopover();\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  supportsCaseSensitiveSearch() {\n    return true;\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  supportsRegexSearch() {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  searchCanceled() {\n    this._currentSearchResultIndex = -1;\n    /** @type {!Array<number>} */\n    this._searchResults = [];\n  }\n\n  /**\n   * @param {?HeapSnapshotGridNode} node\n   */\n  _selectRevealedNode(node) {\n    if (node) {\n      node.select();\n    }\n  }\n\n  /**\n   * @override\n   * @param {!UI.SearchableView.SearchConfig} searchConfig\n   * @param {boolean} shouldJump\n   * @param {boolean=} jumpBackwards\n   */\n  performSearch(searchConfig, shouldJump, jumpBackwards) {\n    const nextQuery = new HeapSnapshotModel.HeapSnapshotModel.SearchConfig(\n        searchConfig.query.trim(), searchConfig.caseSensitive, searchConfig.isRegex, shouldJump,\n        jumpBackwards || false);\n\n    this._searchThrottler.schedule(this._performSearch.bind(this, nextQuery));\n  }\n\n  /**\n   * @param {!HeapSnapshotModel.HeapSnapshotModel.SearchConfig} nextQuery\n   * @return {!Promise<void>}\n   */\n  async _performSearch(nextQuery) {\n    // Call searchCanceled since it will reset everything we need before doing a new search.\n    this.searchCanceled();\n\n    if (!this._currentPerspective.supportsSearch()) {\n      return;\n    }\n\n    this.currentQuery = nextQuery;\n    const query = nextQuery.query.trim();\n\n    if (!query) {\n      return;\n    }\n\n    if (query.charAt(0) === '@') {\n      const snapshotNodeId = parseInt(query.substring(1), 10);\n      if (isNaN(snapshotNodeId)) {\n        return;\n      }\n      if (!this._dataGrid) {\n        return;\n      }\n      const node = await this._dataGrid.revealObjectByHeapSnapshotId(String(snapshotNodeId));\n      this._selectRevealedNode(node);\n      return;\n    }\n\n    if (!this._profile._snapshotProxy || !this._dataGrid) {\n      return;\n    }\n\n    const filter = this._dataGrid.nodeFilter();\n    this._searchResults = filter ? await this._profile._snapshotProxy.search(this.currentQuery, filter) : [];\n\n    this._searchableView.updateSearchMatchesCount(this._searchResults.length);\n    if (this._searchResults.length) {\n      this._currentSearchResultIndex = nextQuery.jumpBackward ? this._searchResults.length - 1 : 0;\n    }\n    await this._jumpToSearchResult(this._currentSearchResultIndex);\n  }\n\n  /**\n   * @override\n   */\n  jumpToNextSearchResult() {\n    if (!this._searchResults.length) {\n      return;\n    }\n    this._currentSearchResultIndex = (this._currentSearchResultIndex + 1) % this._searchResults.length;\n    this._searchThrottler.schedule(this._jumpToSearchResult.bind(this, this._currentSearchResultIndex));\n  }\n\n  /**\n   * @override\n   */\n  jumpToPreviousSearchResult() {\n    if (!this._searchResults.length) {\n      return;\n    }\n    this._currentSearchResultIndex =\n        (this._currentSearchResultIndex + this._searchResults.length - 1) % this._searchResults.length;\n    this._searchThrottler.schedule(this._jumpToSearchResult.bind(this, this._currentSearchResultIndex));\n  }\n\n  /**\n   * @param {number} searchResultIndex\n   * @return {!Promise<void>}\n   */\n  async _jumpToSearchResult(searchResultIndex) {\n    this._searchableView.updateCurrentMatchIndex(searchResultIndex);\n    if (searchResultIndex === -1) {\n      return;\n    }\n    if (!this._dataGrid) {\n      return;\n    }\n    const node = await this._dataGrid.revealObjectByHeapSnapshotId(String(this._searchResults[searchResultIndex]));\n    this._selectRevealedNode(node);\n  }\n\n  refreshVisibleData() {\n    if (!this._dataGrid) {\n      return;\n    }\n    let child = /** @type {?HeapSnapshotGridNode} */ (this._dataGrid.rootNode().children[0]);\n    while (child) {\n      child.refresh();\n      child = /** @type {?HeapSnapshotGridNode} */ (child.traverseNextNode(false, null, true));\n    }\n  }\n\n  _changeBase() {\n    if (this._baseProfile === this._profiles()[this._baseSelect.selectedIndex()]) {\n      return;\n    }\n\n    this._baseProfile = /** @type {!HeapProfileHeader} */ (this._profiles()[this._baseSelect.selectedIndex()]);\n    const dataGrid = /** @type {!HeapSnapshotDiffDataGrid} */ (this._dataGrid);\n    // Change set base data source only if main data source is already set.\n    if (dataGrid.snapshot) {\n      this._baseProfile._loadPromise.then(dataGrid.setBaseDataSource.bind(dataGrid));\n    }\n\n    if (!this.currentQuery || !this._searchResults) {\n      return;\n    }\n\n    // The current search needs to be performed again. First negate out previous match\n    // count by calling the search finished callback with a negative number of matches.\n    // Then perform the search again with the same query and callback.\n    this.performSearch(this.currentQuery, false);\n  }\n\n  _changeFilter() {\n    const profileIndex = this._filterSelect.selectedIndex() - 1;\n    if (!this._dataGrid) {\n      return;\n    }\n    /** @type {!HeapSnapshotConstructorsDataGrid} */ (this._dataGrid)\n        .filterSelectIndexChanged(/** @type {!Array<!HeapProfileHeader>} */ (this._profiles()), profileIndex);\n\n    if (!this.currentQuery || !this._searchResults) {\n      return;\n    }\n\n    // The current search needs to be performed again. First negate out previous match\n    // count by calling the search finished callback with a negative number of matches.\n    // Then perform the search again with the same query and callback.\n    this.performSearch(this.currentQuery, false);\n  }\n\n  /**\n   * @return {!Array.<!ProfileHeader>}\n   */\n  _profiles() {\n    return this._profile.profileType().getProfiles();\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _selectionChanged(event) {\n    const selectedNode = /** @type {!HeapSnapshotGridNode} */ (event.data);\n    this._setSelectedNodeForDetailsView(selectedNode);\n    this._inspectedObjectChanged(event);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onSelectAllocationNode(event) {\n    const selectedNode = /** @type {!AllocationGridNode} */ (event.data);\n    this._constructorsDataGrid.setAllocationNodeId(selectedNode.allocationNodeId());\n    this._setSelectedNodeForDetailsView(null);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _inspectedObjectChanged(event) {\n    const selectedNode = /** @type {!HeapSnapshotGridNode} */ (event.data);\n    const heapProfilerModel = this._profile.heapProfilerModel();\n    if (heapProfilerModel && selectedNode instanceof HeapSnapshotGenericObjectNode) {\n      heapProfilerModel.addInspectedHeapObject(String(selectedNode.snapshotNodeId));\n    }\n  }\n\n  /**\n   * @param {?HeapSnapshotGridNode} nodeItem\n   */\n  _setSelectedNodeForDetailsView(nodeItem) {\n    const dataSource = nodeItem && nodeItem.retainersDataSource();\n    if (dataSource) {\n      this._retainmentDataGrid.setDataSource(dataSource.snapshot, dataSource.snapshotNodeIndex);\n      if (this._allocationStackView) {\n        this._allocationStackView.setAllocatedObject(dataSource.snapshot, dataSource.snapshotNodeIndex);\n      }\n    } else {\n      if (this._allocationStackView) {\n        this._allocationStackView.clear();\n      }\n      this._retainmentDataGrid.reset();\n    }\n  }\n\n  /**\n   * @param {string} perspectiveTitle\n   * @return {!Promise<void>}\n   */\n  async _changePerspectiveAndWait(perspectiveTitle) {\n    const perspectiveIndex = this._perspectives.findIndex(perspective => perspective.title() === perspectiveTitle);\n    if (perspectiveIndex === -1 || this._currentPerspectiveIndex === perspectiveIndex) {\n      return;\n    }\n    const dataGrid = this._perspectives[perspectiveIndex].masterGrid(this);\n\n    if (!dataGrid) {\n      return;\n    }\n\n    const promise = dataGrid.once(HeapSnapshotSortableDataGridEvents.ContentShown);\n\n    const option = this._perspectiveSelect.options().find(option => option.value === String(perspectiveIndex));\n    this._perspectiveSelect.select(/** @type {!Element} */ (option));\n    this._changePerspective(perspectiveIndex);\n    return promise;\n  }\n\n  async _updateDataSourceAndView() {\n    const dataGrid = this._dataGrid;\n    if (!dataGrid || dataGrid.snapshot) {\n      return;\n    }\n\n    const snapshotProxy = await this._profile._loadPromise;\n\n    if (this._dataGrid !== dataGrid) {\n      return;\n    }\n    if (dataGrid.snapshot !== snapshotProxy) {\n      dataGrid.setDataSource(snapshotProxy, 0);\n    }\n    if (dataGrid !== this._diffDataGrid) {\n      return;\n    }\n    if (!this._baseProfile) {\n      this._baseProfile = /** @type {!HeapProfileHeader} */ (this._profiles()[this._baseSelect.selectedIndex()]);\n    }\n\n    const baseSnapshotProxy = await this._baseProfile._loadPromise;\n\n    if (this._diffDataGrid.baseSnapshot !== baseSnapshotProxy) {\n      this._diffDataGrid.setBaseDataSource(baseSnapshotProxy);\n    }\n  }\n\n  /**\n   * @param {!Event} event\n   */\n  _onSelectedPerspectiveChanged(event) {\n    this._changePerspective(Number(/** @type {!HTMLSelectElement} */ (event.target).selectedOptions[0].value));\n  }\n\n  /**\n   * @param {number} selectedIndex\n   */\n  _changePerspective(selectedIndex) {\n    if (selectedIndex === this._currentPerspectiveIndex) {\n      return;\n    }\n\n    this._currentPerspectiveIndex = selectedIndex;\n\n    this._currentPerspective.deactivate(this);\n    const perspective = this._perspectives[selectedIndex];\n    this._currentPerspective = perspective;\n    this._dataGrid = /** @type {!HeapSnapshotSortableDataGrid} */ (perspective.masterGrid(this));\n    perspective.activate(this);\n\n    this.refreshVisibleData();\n    if (this._dataGrid) {\n      this._dataGrid.updateWidths();\n    }\n\n    this._updateDataSourceAndView();\n\n    if (!this.currentQuery || !this._searchResults) {\n      return;\n    }\n\n    // The current search needs to be performed again. First negate out previous match\n    // count by calling the search finished callback with a negative number of matches.\n    // Then perform the search again the with same query and callback.\n    this.performSearch(this.currentQuery, false);\n  }\n\n  /**\n   * @param {string} perspectiveName\n   * @param {!Protocol.HeapProfiler.HeapSnapshotObjectId} snapshotObjectId\n   */\n  async selectLiveObject(perspectiveName, snapshotObjectId) {\n    await this._changePerspectiveAndWait(perspectiveName);\n    if (!this._dataGrid) {\n      return;\n    }\n    const node = await this._dataGrid.revealObjectByHeapSnapshotId(snapshotObjectId);\n    if (node) {\n      node.select();\n    } else {\n      Common.Console.Console.instance().error('Cannot find corresponding heap snapshot node');\n    }\n  }\n\n  /**\n   * @param {!Event} event\n   * @return {?UI.PopoverHelper.PopoverRequest}\n   */\n  _getPopoverRequest(event) {\n    const span = /** @type {?HTMLElement} */ (\n        UI.UIUtils.enclosingNodeOrSelfWithNodeName(/** @type {!Node} */ (event.target), 'span'));\n    const row = UI.UIUtils.enclosingNodeOrSelfWithNodeName(/** @type {!Node} */ (event.target), 'row');\n    if (!row) {\n      return null;\n    }\n    if (!this._dataGrid) {\n      return null;\n    }\n    const node = this._dataGrid.dataGridNodeFromNode(row) || this._containmentDataGrid.dataGridNodeFromNode(row) ||\n        this._constructorsDataGrid.dataGridNodeFromNode(row) || this._diffDataGrid.dataGridNodeFromNode(row) ||\n        (this._allocationDataGrid && this._allocationDataGrid.dataGridNodeFromNode(row)) ||\n        this._retainmentDataGrid.dataGridNodeFromNode(row);\n    const heapProfilerModel = this._profile.heapProfilerModel();\n    if (!node || !span || !heapProfilerModel) {\n      return null;\n    }\n    /** @type {?ObjectUI.ObjectPopoverHelper.ObjectPopoverHelper} */\n    let objectPopoverHelper;\n    return {\n      box: span.boxInWindow(),\n      show: async popover => {\n        if (!heapProfilerModel) {\n          return false;\n        }\n        const remoteObject =\n            await /** @type {!HeapSnapshotGridNode} */ (node).queryObjectContent(heapProfilerModel, 'popover');\n        if (!remoteObject) {\n          return false;\n        }\n        objectPopoverHelper =\n            await ObjectUI.ObjectPopoverHelper.ObjectPopoverHelper.buildObjectPopover(remoteObject, popover);\n        if (!objectPopoverHelper) {\n          heapProfilerModel.runtimeModel().releaseObjectGroup('popover');\n          return false;\n        }\n        return true;\n      },\n      hide: () => {\n        heapProfilerModel.runtimeModel().releaseObjectGroup('popover');\n        if (objectPopoverHelper) {\n          objectPopoverHelper.dispose();\n        }\n      }\n    };\n  }\n\n  _updatePerspectiveOptions() {\n    const multipleSnapshots = this._profiles().length > 1;\n    this._perspectiveSelect.removeOptions();\n    this._perspectives.forEach((perspective, index) => {\n      if (multipleSnapshots || perspective !== this._comparisonPerspective) {\n        this._perspectiveSelect.createOption(perspective.title(), String(index));\n      }\n    });\n  }\n\n  _updateBaseOptions() {\n    const list = this._profiles();\n    const selectedIndex = this._baseSelect.selectedIndex();\n\n    this._baseSelect.removeOptions();\n    for (const item of list) {\n      this._baseSelect.createOption(item.title);\n    }\n\n    if (selectedIndex > -1) {\n      this._baseSelect.setSelectedIndex(selectedIndex);\n    }\n  }\n\n  _updateFilterOptions() {\n    const list = this._profiles();\n    const selectedIndex = this._filterSelect.selectedIndex();\n\n    this._filterSelect.removeOptions();\n    this._filterSelect.createOption(i18nString(UIStrings.allObjects));\n    for (let i = 0; i < list.length; ++i) {\n      let title;\n      if (!i) {\n        title = i18nString(UIStrings.objectsAllocatedBeforeS, {PH1: list[i].title});\n      } else {\n        title = i18nString(UIStrings.objectsAllocatedBetweenSAndS, {PH1: list[i - 1].title, PH2: list[i].title});\n      }\n      this._filterSelect.createOption(title);\n    }\n\n    if (selectedIndex > -1) {\n      this._filterSelect.setSelectedIndex(selectedIndex);\n    }\n  }\n\n  _updateControls() {\n    this._updatePerspectiveOptions();\n    this._updateBaseOptions();\n    this._updateFilterOptions();\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onReceiveSnapshot(event) {\n    this._updateControls();\n    const profile = event.data;\n    profile.addEventListener(ProfileHeaderEvents.ProfileTitleChanged, this._updateControls, this);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onProfileHeaderRemoved(event) {\n    const profile = event.data;\n    profile.removeEventListener(ProfileHeaderEvents.ProfileTitleChanged, this._updateControls, this);\n\n    if (this._profile === profile) {\n      this.detach();\n      this._profile.profileType().removeEventListener(\n          HeapSnapshotProfileType.SnapshotReceived, this._onReceiveSnapshot, this);\n      this._profile.profileType().removeEventListener(\n          ProfileTypeEvents.RemoveProfileHeader, this._onProfileHeaderRemoved, this);\n      this.dispose();\n    } else {\n      this._updateControls();\n    }\n  }\n\n  dispose() {\n    this._linkifier.dispose();\n    this._popoverHelper.dispose();\n    if (this._allocationStackView) {\n      this._allocationStackView.clear();\n      if (this._allocationDataGrid) {\n        this._allocationDataGrid.dispose();\n      }\n    }\n    this._onStopTracking();\n    if (this._trackingOverviewGrid) {\n      this._trackingOverviewGrid.removeEventListener(IdsRangeChanged, this._onIdsRangeChanged.bind(this));\n    }\n  }\n}\n\nexport class Perspective {\n  /**\n   * @param {string} title\n   */\n  constructor(title) {\n    this._title = title;\n  }\n\n  /**\n   * @param {!HeapSnapshotView} heapSnapshotView\n   */\n  activate(heapSnapshotView) {\n  }\n\n  /**\n   * @param {!HeapSnapshotView} heapSnapshotView\n   */\n  deactivate(heapSnapshotView) {\n    heapSnapshotView._baseSelect.setVisible(false);\n    heapSnapshotView._filterSelect.setVisible(false);\n    heapSnapshotView._classNameFilter.setVisible(false);\n    if (heapSnapshotView._trackingOverviewGrid) {\n      heapSnapshotView._trackingOverviewGrid.detach();\n    }\n    if (heapSnapshotView._allocationWidget) {\n      heapSnapshotView._allocationWidget.detach();\n    }\n    if (heapSnapshotView._statisticsView) {\n      heapSnapshotView._statisticsView.detach();\n    }\n\n    heapSnapshotView._splitWidget.detach();\n    heapSnapshotView._splitWidget.detachChildWidgets();\n  }\n\n  /**\n   * @param {!HeapSnapshotView} heapSnapshotView\n   * @return {?DataGrid.DataGrid.DataGridImpl<!HeapSnapshotGridNode>}\n   */\n  masterGrid(heapSnapshotView) {\n    return null;\n  }\n\n  /**\n   * @return {string}\n   */\n  title() {\n    return this._title;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  supportsSearch() {\n    return false;\n  }\n}\n\nexport class SummaryPerspective extends Perspective {\n  constructor() {\n    super(i18nString(UIStrings.summary));\n  }\n\n  /**\n   * @override\n   * @param {!HeapSnapshotView} heapSnapshotView\n   */\n  activate(heapSnapshotView) {\n    heapSnapshotView._splitWidget.setMainWidget(heapSnapshotView._constructorsWidget);\n    heapSnapshotView._splitWidget.setSidebarWidget(heapSnapshotView._objectDetailsView);\n    heapSnapshotView._splitWidget.show(heapSnapshotView._searchableView.element);\n    heapSnapshotView._filterSelect.setVisible(true);\n    heapSnapshotView._classNameFilter.setVisible(true);\n    if (!heapSnapshotView._trackingOverviewGrid) {\n      return;\n    }\n    heapSnapshotView._trackingOverviewGrid.show(\n        heapSnapshotView._searchableView.element, heapSnapshotView._splitWidget.element);\n    heapSnapshotView._trackingOverviewGrid.update();\n    heapSnapshotView._trackingOverviewGrid.updateGrid();\n  }\n\n  /**\n   * @override\n   * @param {!HeapSnapshotView} heapSnapshotView\n   * @return {?DataGrid.DataGrid.DataGridImpl<!HeapSnapshotGridNode>}\n   */\n  masterGrid(heapSnapshotView) {\n    return heapSnapshotView._constructorsDataGrid;\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  supportsSearch() {\n    return true;\n  }\n}\n\nexport class ComparisonPerspective extends Perspective {\n  constructor() {\n    super(i18nString(UIStrings.comparison));\n  }\n\n  /**\n   * @override\n   * @param {!HeapSnapshotView} heapSnapshotView\n   */\n  activate(heapSnapshotView) {\n    heapSnapshotView._splitWidget.setMainWidget(heapSnapshotView._diffWidget);\n    heapSnapshotView._splitWidget.setSidebarWidget(heapSnapshotView._objectDetailsView);\n    heapSnapshotView._splitWidget.show(heapSnapshotView._searchableView.element);\n    heapSnapshotView._baseSelect.setVisible(true);\n    heapSnapshotView._classNameFilter.setVisible(true);\n  }\n\n  /**\n   * @override\n   * @param {!HeapSnapshotView} heapSnapshotView\n   * @return {?DataGrid.DataGrid.DataGridImpl<!HeapSnapshotGridNode>}\n   */\n  masterGrid(heapSnapshotView) {\n    return heapSnapshotView._diffDataGrid;\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  supportsSearch() {\n    return true;\n  }\n}\n\nexport class ContainmentPerspective extends Perspective {\n  constructor() {\n    super(i18nString(UIStrings.containment));\n  }\n\n  /**\n   * @override\n   * @param {!HeapSnapshotView} heapSnapshotView\n   */\n  activate(heapSnapshotView) {\n    heapSnapshotView._splitWidget.setMainWidget(heapSnapshotView._containmentWidget);\n    heapSnapshotView._splitWidget.setSidebarWidget(heapSnapshotView._objectDetailsView);\n    heapSnapshotView._splitWidget.show(heapSnapshotView._searchableView.element);\n  }\n\n  /**\n   * @override\n   * @param {!HeapSnapshotView} heapSnapshotView\n   * @return {?DataGrid.DataGrid.DataGridImpl<!HeapSnapshotGridNode>}\n   */\n  masterGrid(heapSnapshotView) {\n    return heapSnapshotView._containmentDataGrid;\n  }\n}\n\nexport class AllocationPerspective extends Perspective {\n  constructor() {\n    super(i18nString(UIStrings.allocation));\n    this._allocationSplitWidget =\n        new UI.SplitWidget.SplitWidget(false, true, 'heapSnapshotAllocationSplitViewState', 200, 200);\n    this._allocationSplitWidget.setSidebarWidget(new UI.Widget.VBox());\n  }\n\n  /**\n   * @override\n   * @param {!HeapSnapshotView} heapSnapshotView\n   */\n  activate(heapSnapshotView) {\n    if (heapSnapshotView._allocationWidget) {\n      this._allocationSplitWidget.setMainWidget(heapSnapshotView._allocationWidget);\n    }\n    heapSnapshotView._splitWidget.setMainWidget(heapSnapshotView._constructorsWidget);\n    heapSnapshotView._splitWidget.setSidebarWidget(heapSnapshotView._objectDetailsView);\n\n    const allocatedObjectsView = new UI.Widget.VBox();\n    const resizer = document.createElement('div');\n    resizer.classList.add('heap-snapshot-view-resizer');\n    const title = resizer.createChild('div', 'title').createChild('span');\n    title.textContent = i18nString(UIStrings.liveObjects);\n    this._allocationSplitWidget.hideDefaultResizer();\n    this._allocationSplitWidget.installResizer(resizer);\n    allocatedObjectsView.element.appendChild(resizer);\n    heapSnapshotView._splitWidget.show(allocatedObjectsView.element);\n    this._allocationSplitWidget.setSidebarWidget(allocatedObjectsView);\n\n    this._allocationSplitWidget.show(heapSnapshotView._searchableView.element);\n\n    heapSnapshotView._constructorsDataGrid.clear();\n    if (heapSnapshotView._allocationDataGrid) {\n      const selectedNode = /** @type {!AllocationGridNode} */ (heapSnapshotView._allocationDataGrid.selectedNode);\n      if (selectedNode) {\n        heapSnapshotView._constructorsDataGrid.setAllocationNodeId(selectedNode.allocationNodeId());\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {!HeapSnapshotView} heapSnapshotView\n   */\n  deactivate(heapSnapshotView) {\n    this._allocationSplitWidget.detach();\n    super.deactivate(heapSnapshotView);\n  }\n\n  /**\n   * @override\n   * @param {!HeapSnapshotView} heapSnapshotView\n   * @return {?DataGrid.DataGrid.DataGridImpl<!HeapSnapshotGridNode>}\n   */\n  masterGrid(heapSnapshotView) {\n    return heapSnapshotView._allocationDataGrid;\n  }\n}\n\nexport class StatisticsPerspective extends Perspective {\n  constructor() {\n    super(i18nString(UIStrings.statistics));\n  }\n\n  /**\n   * @override\n   * @param {!HeapSnapshotView} heapSnapshotView\n   */\n  activate(heapSnapshotView) {\n    heapSnapshotView._statisticsView.show(heapSnapshotView._searchableView.element);\n  }\n\n  /**\n   * @override\n   * @param {!HeapSnapshotView} heapSnapshotView\n   * @return {?DataGrid.DataGrid.DataGridImpl<!HeapSnapshotGridNode>}\n   */\n  masterGrid(heapSnapshotView) {\n    return null;\n  }\n}\n\n/**\n * @implements {SDK.SDKModel.SDKModelObserver<!SDK.HeapProfilerModel.HeapProfilerModel>}\n */\nexport class HeapSnapshotProfileType extends ProfileType {\n  /**\n   * @param {string=} id\n   * @param {string=} title\n   */\n  constructor(id, title) {\n    super(id || HeapSnapshotProfileType.TypeId, title || i18nString(UIStrings.heapSnapshot));\n    SDK.SDKModel.TargetManager.instance().observeModels(SDK.HeapProfilerModel.HeapProfilerModel, this);\n    SDK.SDKModel.TargetManager.instance().addModelListener(\n        SDK.HeapProfilerModel.HeapProfilerModel, SDK.HeapProfilerModel.Events.ResetProfiles, this._resetProfiles, this);\n    SDK.SDKModel.TargetManager.instance().addModelListener(\n        SDK.HeapProfilerModel.HeapProfilerModel, SDK.HeapProfilerModel.Events.AddHeapSnapshotChunk,\n        this._addHeapSnapshotChunk, this);\n    SDK.SDKModel.TargetManager.instance().addModelListener(\n        SDK.HeapProfilerModel.HeapProfilerModel, SDK.HeapProfilerModel.Events.ReportHeapSnapshotProgress,\n        this._reportHeapSnapshotProgress, this);\n    this._treatGlobalObjectsAsRoots =\n        Common.Settings.Settings.instance().createSetting('treatGlobalObjectsAsRoots', true);\n    /** @type {?UI.UIUtils.CheckboxLabel} */\n    this._customContent = null;\n  }\n\n  /**\n   * @override\n   * @param {!SDK.HeapProfilerModel.HeapProfilerModel} heapProfilerModel\n   */\n  modelAdded(heapProfilerModel) {\n    heapProfilerModel.enable();\n  }\n\n  /**\n   * @override\n   * @param {!SDK.HeapProfilerModel.HeapProfilerModel} heapProfilerModel\n   */\n  modelRemoved(heapProfilerModel) {\n  }\n\n  /**\n   * @override\n   * @return {!Array<!HeapProfileHeader>}\n   */\n  getProfiles() {\n    return /** @type {!Array<!HeapProfileHeader>} */ (super.getProfiles());\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  fileExtension() {\n    return '.heapsnapshot';\n  }\n\n  /**\n   * @override\n   */\n  get buttonTooltip() {\n    return i18nString(UIStrings.takeHeapSnapshot);\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  isInstantProfile() {\n    return true;\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  buttonClicked() {\n    this._takeHeapSnapshot();\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.ProfilesHeapProfileTaken);\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  get treeItemTitle() {\n    return i18nString(UIStrings.heapSnapshots);\n  }\n\n  /**\n   * @override\n   */\n  get description() {\n    return i18nString(UIStrings.heapSnapshotProfilesShowMemory);\n  }\n\n  /**\n   * @override\n   * @return {?Element}\n   */\n  customContent() {\n    const checkboxSetting = UI.SettingsUI.createSettingCheckbox(\n        i18nString(UIStrings.treatGlobalObjectsAsRoots), this._treatGlobalObjectsAsRoots, true);\n    this._customContent = /** @type {!UI.UIUtils.CheckboxLabel} */ (checkboxSetting);\n    const showOptionToNotTreatGlobalObjectsAsRoots =\n        Root.Runtime.experiments.isEnabled('showOptionToNotTreatGlobalObjectsAsRoots');\n    return showOptionToNotTreatGlobalObjectsAsRoots ? checkboxSetting : null;\n  }\n\n  /**\n   * @override\n   * @param {boolean} enable\n   */\n  setCustomContentEnabled(enable) {\n    if (this._customContent) {\n      this._customContent.checkboxElement.disabled = !enable;\n    }\n  }\n\n  /**\n   * @override\n   * @param {string} title\n   * @return {!ProfileHeader}\n   */\n  createProfileLoadedFromFile(title) {\n    return new HeapProfileHeader(null, this, title);\n  }\n\n  async _takeHeapSnapshot() {\n    if (this.profileBeingRecorded()) {\n      return;\n    }\n    const heapProfilerModel = UI.Context.Context.instance().flavor(SDK.HeapProfilerModel.HeapProfilerModel);\n    if (!heapProfilerModel) {\n      return;\n    }\n\n    let profile = new HeapProfileHeader(heapProfilerModel, this);\n    this.setProfileBeingRecorded(profile);\n    this.addProfile(profile);\n    profile.updateStatus(i18nString(UIStrings.snapshotting));\n\n    await heapProfilerModel.takeHeapSnapshot(true, this._treatGlobalObjectsAsRoots.get());\n    // ------------ ASYNC ------------\n    profile = /** @type {!HeapProfileHeader} */ (this.profileBeingRecorded());\n    profile.title = i18nString(UIStrings.snapshotD, {PH1: profile.uid});\n    profile._finishLoad();\n    this.setProfileBeingRecorded(null);\n    this.dispatchEventToListeners(ProfileTypeEvents.ProfileComplete, profile);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _addHeapSnapshotChunk(event) {\n    const profile = /** @type {?HeapProfileHeader} */ (this.profileBeingRecorded());\n    if (!profile) {\n      return;\n    }\n    const chunk = /** @type {string} */ (event.data);\n    profile.transferChunk(chunk);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _reportHeapSnapshotProgress(event) {\n    const profile = /** @type {?HeapProfileHeader} */ (this.profileBeingRecorded());\n    if (!profile) {\n      return;\n    }\n    const data = /** @type {{done: number, total: number, finished: boolean}} */ (event.data);\n    profile.updateStatus(\n        i18nString(UIStrings.percentagePlaceholder, {PH1: ((data.done / data.total) * 100).toFixed(0)}), true);\n    if (data.finished) {\n      profile._prepareToLoad();\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _resetProfiles(event) {\n    const heapProfilerModel = /** @type {!SDK.HeapProfilerModel.HeapProfilerModel} */ (event.data);\n    for (const profile of this.getProfiles()) {\n      if (profile.heapProfilerModel() === heapProfilerModel) {\n        this.removeProfile(profile);\n      }\n    }\n  }\n\n  /**\n   * @param {!ProfileHeader} profile\n   */\n  _snapshotReceived(profile) {\n    if (this.profileBeingRecorded() === profile) {\n      this.setProfileBeingRecorded(null);\n    }\n    this.dispatchEventToListeners(HeapSnapshotProfileType.SnapshotReceived, profile);\n  }\n}\n\nHeapSnapshotProfileType.TypeId = 'HEAP';\nHeapSnapshotProfileType.SnapshotReceived = 'SnapshotReceived';\n\nexport class TrackingHeapSnapshotProfileType extends HeapSnapshotProfileType {\n  constructor() {\n    super(TrackingHeapSnapshotProfileType.TypeId, i18nString(UIStrings.allocationInstrumentationOn));\n    this._recordAllocationStacksSetting =\n        Common.Settings.Settings.instance().createSetting('recordAllocationStacks', false);\n    /** @type {?UI.UIUtils.CheckboxLabel} */\n    this._customContent = null;\n    this._recording = false;\n  }\n\n  /**\n   * @override\n   * @param {!SDK.HeapProfilerModel.HeapProfilerModel} heapProfilerModel\n   */\n  modelAdded(heapProfilerModel) {\n    super.modelAdded(heapProfilerModel);\n    heapProfilerModel.addEventListener(SDK.HeapProfilerModel.Events.HeapStatsUpdate, this._heapStatsUpdate, this);\n    heapProfilerModel.addEventListener(SDK.HeapProfilerModel.Events.LastSeenObjectId, this._lastSeenObjectId, this);\n  }\n\n  /**\n   * @override\n   * @param {!SDK.HeapProfilerModel.HeapProfilerModel} heapProfilerModel\n   */\n  modelRemoved(heapProfilerModel) {\n    super.modelRemoved(heapProfilerModel);\n    heapProfilerModel.removeEventListener(SDK.HeapProfilerModel.Events.HeapStatsUpdate, this._heapStatsUpdate, this);\n    heapProfilerModel.removeEventListener(SDK.HeapProfilerModel.Events.LastSeenObjectId, this._lastSeenObjectId, this);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _heapStatsUpdate(event) {\n    if (!this._profileSamples) {\n      return;\n    }\n    const samples = /** @type {!Array.<number>} */ (event.data);\n    let index;\n    for (let i = 0; i < samples.length; i += 3) {\n      index = samples[i];\n      const size = samples[i + 2];\n      this._profileSamples.sizes[index] = size;\n      if (!this._profileSamples.max[index]) {\n        this._profileSamples.max[index] = size;\n      }\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _lastSeenObjectId(event) {\n    const profileSamples = this._profileSamples;\n    if (!profileSamples) {\n      return;\n    }\n    const data = /** @type {{lastSeenObjectId: number, timestamp: number}} */ (event.data);\n    const currentIndex = Math.max(profileSamples.ids.length, profileSamples.max.length - 1);\n    profileSamples.ids[currentIndex] = data.lastSeenObjectId;\n    if (!profileSamples.max[currentIndex]) {\n      profileSamples.max[currentIndex] = 0;\n      profileSamples.sizes[currentIndex] = 0;\n    }\n    profileSamples.timestamps[currentIndex] = data.timestamp;\n    if (profileSamples.totalTime < data.timestamp - profileSamples.timestamps[0]) {\n      profileSamples.totalTime *= 2;\n    }\n    this.dispatchEventToListeners(TrackingHeapSnapshotProfileType.HeapStatsUpdate, this._profileSamples);\n    const profile = this.profileBeingRecorded();\n    if (profile) {\n      profile.updateStatus(null, true);\n    }\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  hasTemporaryView() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  get buttonTooltip() {\n    return this._recording ? i18nString(UIStrings.stopRecordingHeapProfile) :\n                             i18nString(UIStrings.startRecordingHeapProfile);\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  isInstantProfile() {\n    return false;\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  buttonClicked() {\n    return this._toggleRecording();\n  }\n\n  _startRecordingProfile() {\n    if (this.profileBeingRecorded()) {\n      return;\n    }\n    const heapProfilerModel = this._addNewProfile();\n    if (!heapProfilerModel) {\n      return;\n    }\n    heapProfilerModel.startTrackingHeapObjects(this._recordAllocationStacksSetting.get());\n  }\n\n  /**\n   * @override\n   * @return {?Element}\n   */\n  customContent() {\n    const checkboxSetting = UI.SettingsUI.createSettingCheckbox(\n        i18nString(UIStrings.recordAllocationStacksExtra), this._recordAllocationStacksSetting, true);\n    this._customContent = /** @type {!UI.UIUtils.CheckboxLabel} */ (checkboxSetting);\n    return checkboxSetting;\n  }\n\n  /**\n   * @override\n   * @param {boolean} enable\n   */\n  setCustomContentEnabled(enable) {\n    if (this._customContent) {\n      this._customContent.checkboxElement.disabled = !enable;\n    }\n  }\n\n  /**\n   * @return {?SDK.HeapProfilerModel.HeapProfilerModel}\n   */\n  _addNewProfile() {\n    const heapProfilerModel = UI.Context.Context.instance().flavor(SDK.HeapProfilerModel.HeapProfilerModel);\n    if (!heapProfilerModel) {\n      return null;\n    }\n    this.setProfileBeingRecorded(new HeapProfileHeader(heapProfilerModel, this, undefined));\n    this._profileSamples = new Samples();\n    /** @type {*} */ (this.profileBeingRecorded())._profileSamples = this._profileSamples;\n    this._recording = true;\n    this.addProfile(/** @type {!ProfileHeader} */ (this.profileBeingRecorded()));\n    /** @type {!HeapProfileHeader} */ (this.profileBeingRecorded()).updateStatus(i18nString(UIStrings.recording));\n    this.dispatchEventToListeners(TrackingHeapSnapshotProfileType.TrackingStarted);\n    return heapProfilerModel;\n  }\n\n  async _stopRecordingProfile() {\n    let profile = /** @type {!HeapProfileHeader} */ (this.profileBeingRecorded());\n    profile.updateStatus(i18nString(UIStrings.snapshotting));\n    const stopPromise = /** @type {!SDK.HeapProfilerModel.HeapProfilerModel} */ (profile.heapProfilerModel())\n                            .stopTrackingHeapObjects(true);\n    this._recording = false;\n    this.dispatchEventToListeners(TrackingHeapSnapshotProfileType.TrackingStopped);\n    await stopPromise;\n    // ------------ ASYNC ------------\n    profile = /** @type {!HeapProfileHeader} */ (this.profileBeingRecorded());\n    if (!profile) {\n      return;\n    }\n    profile._finishLoad();\n    this._profileSamples = null;\n    this.setProfileBeingRecorded(null);\n    this.dispatchEventToListeners(ProfileTypeEvents.ProfileComplete, profile);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  _toggleRecording() {\n    if (this._recording) {\n      this._stopRecordingProfile();\n    } else {\n      this._startRecordingProfile();\n    }\n    return this._recording;\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  fileExtension() {\n    return '.heaptimeline';\n  }\n\n  /**\n   * @override\n   */\n  get treeItemTitle() {\n    return i18nString(UIStrings.allocationTimelines);\n  }\n\n  /**\n   * @override\n   */\n  get description() {\n    return i18nString(UIStrings.AllocationTimelinesShow);\n  }\n\n  /**\n   * @override\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _resetProfiles(event) {\n    const wasRecording = this._recording;\n    // Clear current profile to avoid stopping backend.\n    this.setProfileBeingRecorded(null);\n    super._resetProfiles(event);\n    this._profileSamples = null;\n    if (wasRecording) {\n      this._addNewProfile();\n    }\n  }\n\n  /**\n   * @override\n   */\n  profileBeingRecordedRemoved() {\n    this._stopRecordingProfile();\n    this._profileSamples = null;\n  }\n}\n\n/** @override */\nTrackingHeapSnapshotProfileType.TypeId = 'HEAP-RECORD';\n\nTrackingHeapSnapshotProfileType.HeapStatsUpdate = 'HeapStatsUpdate';\nTrackingHeapSnapshotProfileType.TrackingStarted = 'TrackingStarted';\nTrackingHeapSnapshotProfileType.TrackingStopped = 'TrackingStopped';\n\nexport class HeapProfileHeader extends ProfileHeader {\n  /**\n   * @param {?SDK.HeapProfilerModel.HeapProfilerModel} heapProfilerModel\n   * @param {!HeapSnapshotProfileType} type\n   * @param {string=} title\n   */\n  constructor(heapProfilerModel, type, title) {\n    super(type, title || i18nString(UIStrings.snapshotD, {PH1: type.nextProfileUid()}));\n    this._heapProfilerModel = heapProfilerModel;\n    this.maxJSObjectId = -1;\n    /** @type {?HeapSnapshotWorkerProxy} */\n    this._workerProxy = null;\n    /** @type {?Common.StringOutputStream.OutputStream} */\n    this._receiver = null;\n    /** @type {?HeapSnapshotProxy} */\n    this._snapshotProxy = null;\n    /** @type {!Promise<!HeapSnapshotProxy>} */\n    this._loadPromise = new Promise(resolve => {\n      this._fulfillLoad = resolve;\n    });\n    this._totalNumberOfChunks = 0;\n    this._bufferedWriter = null;\n    /** @type {?function():void} */\n    this._onTempFileReady = null;\n  }\n\n  /**\n   * @return {?SDK.HeapProfilerModel.HeapProfilerModel}\n   */\n  heapProfilerModel() {\n    return this._heapProfilerModel;\n  }\n\n  /**\n   * @param {number} nodeIndex\n   * @return {!Promise<?HeapSnapshotModel.HeapSnapshotModel.Location>}\n   */\n  async getLocation(nodeIndex) {\n    if (!this._snapshotProxy) {\n      return null;\n    }\n    return this._snapshotProxy.getLocation(nodeIndex);\n  }\n\n  /**\n   * @override\n   * @param {!DataDisplayDelegate} dataDisplayDelegate\n   * @return {!ProfileSidebarTreeElement}\n   */\n  createSidebarTreeElement(dataDisplayDelegate) {\n    return new ProfileSidebarTreeElement(dataDisplayDelegate, this, 'heap-snapshot-sidebar-tree-item');\n  }\n\n  /**\n   * @override\n   * @param {!DataDisplayDelegate} dataDisplayDelegate\n   * @return {!HeapSnapshotView}\n   */\n  createView(dataDisplayDelegate) {\n    return new HeapSnapshotView(dataDisplayDelegate, this);\n  }\n\n  _prepareToLoad() {\n    console.assert(!this._receiver, 'Already loading');\n    this._setupWorker();\n    this.updateStatus(i18nString(UIStrings.loading), true);\n  }\n\n  _finishLoad() {\n    if (!this._wasDisposed && this._receiver) {\n      this._receiver.close();\n    }\n    if (!this._bufferedWriter) {\n      return;\n    }\n    this._didWriteToTempFile(this._bufferedWriter);\n  }\n\n  /**\n   * @param {!Bindings.TempFile.TempFile} tempFile\n   */\n  _didWriteToTempFile(tempFile) {\n    if (this._wasDisposed) {\n      if (tempFile) {\n        tempFile.remove();\n      }\n      return;\n    }\n    this.tempFile = tempFile;\n    if (!tempFile) {\n      this._failedToCreateTempFile = true;\n    }\n    if (this._onTempFileReady) {\n      this._onTempFileReady();\n      this._onTempFileReady = null;\n    }\n  }\n\n  _setupWorker() {\n    console.assert(!this._workerProxy, 'HeapSnapshotWorkerProxy already exists');\n    this._workerProxy = new HeapSnapshotWorkerProxy(this._handleWorkerEvent.bind(this));\n    this._workerProxy.addEventListener(HeapSnapshotWorkerProxy.Events.Wait, event => {\n      this.updateStatus(null, /** @type {boolean} */ (event.data));\n    }, this);\n    this._receiver = this._workerProxy.createLoader(this.uid, this._snapshotReceived.bind(this));\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {*} data\n   */\n  _handleWorkerEvent(eventName, data) {\n    if (HeapSnapshotModel.HeapSnapshotModel.HeapSnapshotProgressEvent.BrokenSnapshot === eventName) {\n      const error = /** @type {string} */ (data);\n      Common.Console.Console.instance().error(error);\n      return;\n    }\n\n    if (HeapSnapshotModel.HeapSnapshotModel.HeapSnapshotProgressEvent.Update !== eventName) {\n      return;\n    }\n    const serializedMessage = /** @type {string} */ (data);\n    const messageObject =\n        /** @type {!{messageParts: string, values: !Array<*>}} */ (i18n.i18n.deserializeUIString(serializedMessage));\n    // We know all strings from the worker are declared inside a single file so we can\n    // use a custom function.\n    this.updateStatus(moduleI18nString(messageObject.messageParts, messageObject.values));\n  }\n\n  /**\n   * @override\n   */\n  dispose() {\n    if (this._workerProxy) {\n      this._workerProxy.dispose();\n    }\n    this.removeTempFile();\n    this._wasDisposed = true;\n  }\n\n  _didCompleteSnapshotTransfer() {\n    if (!this._snapshotProxy) {\n      return;\n    }\n    this.updateStatus(Platform.NumberUtilities.bytesToString(this._snapshotProxy.totalSize), false);\n  }\n\n  /**\n   * @param {string} chunk\n   */\n  transferChunk(chunk) {\n    if (!this._bufferedWriter) {\n      this._bufferedWriter = new Bindings.TempFile.TempFile();\n    }\n    this._bufferedWriter.write([chunk]);\n\n    ++this._totalNumberOfChunks;\n    if (this._receiver) {\n      this._receiver.write(chunk);\n    }\n  }\n\n  /**\n   * @param {!HeapSnapshotProxy} snapshotProxy\n   */\n  _snapshotReceived(snapshotProxy) {\n    if (this._wasDisposed) {\n      return;\n    }\n    this._receiver = null;\n    this._snapshotProxy = snapshotProxy;\n    this.maxJSObjectId = snapshotProxy.maxJSObjectId();\n    this._didCompleteSnapshotTransfer();\n    if (this._workerProxy) {\n      this._workerProxy.startCheckingForLongRunningCalls();\n    }\n    this.notifySnapshotReceived();\n  }\n\n  notifySnapshotReceived() {\n    if (this._snapshotProxy) {\n      this._fulfillLoad(this._snapshotProxy);\n    }\n    /** @type {!HeapSnapshotProfileType} */ (this.profileType())._snapshotReceived(this);\n    if (this.canSaveToFile()) {\n      this.dispatchEventToListeners(ProfileHeaderEvents.ProfileReceived);\n    }\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  canSaveToFile() {\n    return !this.fromFile() && Boolean(this._snapshotProxy);\n  }\n\n  /**\n   * @override\n   */\n  saveToFile() {\n    const fileOutputStream = new Bindings.FileUtils.FileOutputStream();\n    this._fileName = this._fileName ||\n        'Heap-' + Platform.DateUtilities.toISO8601Compact(new Date()) + this.profileType().fileExtension();\n    /**\n     * @param {boolean} accepted\n     */\n    const onOpen = async accepted => {\n      if (!accepted) {\n        return;\n      }\n      if (this._failedToCreateTempFile) {\n        Common.Console.Console.instance().error('Failed to open temp file with heap snapshot');\n        fileOutputStream.close();\n        return;\n      }\n      if (this.tempFile) {\n        const error = /** @type {?{message: string}} */ (\n            await this.tempFile.copyToOutputStream(fileOutputStream, this._onChunkTransferred.bind(this)));\n        if (error) {\n          Common.Console.Console.instance().error('Failed to read heap snapshot from temp file: ' + error.message);\n        }\n        this._didCompleteSnapshotTransfer();\n        return;\n      }\n      this._onTempFileReady = () => {\n        onOpen(accepted);\n      };\n      this._updateSaveProgress(0, 1);\n    };\n\n    fileOutputStream.open(this._fileName).then(onOpen.bind(this));\n  }\n\n  /**\n   * @param {!Bindings.FileUtils.ChunkedReader} reader\n   */\n  _onChunkTransferred(reader) {\n    this._updateSaveProgress(reader.loadedSize(), reader.fileSize());\n  }\n\n  /**\n   * @param {number} value\n   * @param {number} total\n   */\n  _updateSaveProgress(value, total) {\n    const percentValue = ((total && value / total) * 100).toFixed(0);\n    this.updateStatus(i18nString(UIStrings.savingD, {PH1: percentValue}));\n  }\n\n  /**\n   * @override\n   * @param {!File} file\n   * @return {!Promise<?DOMError>}\n   */\n  async loadFromFile(file) {\n    this.updateStatus(i18nString(UIStrings.loading), true);\n    this._setupWorker();\n    const reader = new Bindings.FileUtils.ChunkedFileReader(file, 10000000);\n    const success = await reader.read(/** @type {!Common.StringOutputStream.OutputStream} */ (this._receiver));\n    if (!success) {\n      const error = /** @type {?{message: string}} */ (reader.error());\n      if (error) {\n        this.updateStatus(error.message);\n      }\n    }\n    return success ? null : reader.error();\n  }\n}\n\nexport class HeapSnapshotStatisticsView extends UI.Widget.VBox {\n  constructor() {\n    super();\n    this.element.classList.add('heap-snapshot-statistics-view');\n    this._pieChart = new PerfUI.PieChart.PieChart();\n    this.setTotalAndRecords(0, []);\n    this._pieChart.classList.add('heap-snapshot-stats-pie-chart');\n    this.element.appendChild(this._pieChart);\n  }\n\n  /**\n   * @param {number} value\n   * @return {string}\n   */\n  static _valueFormatter(value) {\n    return i18nString(UIStrings.sKb, {PH1: Number.withThousandsSeparator(Math.round(value / 1000))});\n  }\n\n  /**\n   * @param {number} total\n   * @param {!Array<!PerfUI.PieChart.Slice>} records\n   */\n  setTotalAndRecords(total, records) {\n    this._pieChart.data = {\n      chartName: i18nString(UIStrings.heapMemoryUsage),\n      size: 150,\n      formatter: HeapSnapshotStatisticsView._valueFormatter,\n      showLegend: true,\n      total,\n      slices: records\n    };\n  }\n}\n\nexport class HeapAllocationStackView extends UI.Widget.Widget {\n  /**\n   * @param {?SDK.HeapProfilerModel.HeapProfilerModel} heapProfilerModel\n   */\n  constructor(heapProfilerModel) {\n    super();\n    this._heapProfilerModel = heapProfilerModel;\n    this._linkifier = new Components.Linkifier.Linkifier();\n    /** @type {!Array<!HTMLElement>} */\n    this._frameElements = [];\n  }\n\n  /**\n   * @param {!Element} link\n   * @param {!Event} event\n   */\n  _onContextMenu(link, event) {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    if (!contextMenu.containsTarget(link)) {\n      contextMenu.appendApplicableItems(link);\n    }\n    contextMenu.show();\n    event.consume(true);\n  }\n\n  /**\n   * @param {!KeyboardEvent} event\n   */\n  _onStackViewKeydown(event) {\n    const target = /** @type {?HTMLElement} */ (event.target);\n    if (!target) {\n      return;\n    }\n    if (event.key === 'Enter') {\n      const link = stackFrameToURLElement.get(target);\n      if (!link) {\n        return;\n      }\n      const linkInfo = Components.Linkifier.Linkifier.linkInfo(link);\n      if (!linkInfo) {\n        return;\n      }\n      if (Components.Linkifier.Linkifier.invokeFirstAction(linkInfo)) {\n        event.consume(true);\n      }\n      return;\n    }\n\n    let navDown;\n    const keyboardEvent = /** @type {!KeyboardEvent} */ (event);\n    if (keyboardEvent.key === 'ArrowUp') {\n      navDown = false;\n    } else if (keyboardEvent.key === 'ArrowDown') {\n      navDown = true;\n    } else {\n      return;\n    }\n\n    const index = this._frameElements.indexOf(target);\n    if (index === -1) {\n      return;\n    }\n    const nextIndex = navDown ? index + 1 : index - 1;\n    if (nextIndex < 0 || nextIndex >= this._frameElements.length) {\n      return;\n    }\n\n    const nextFrame = this._frameElements[nextIndex];\n    nextFrame.tabIndex = 0;\n    target.tabIndex = -1;\n    nextFrame.focus();\n    event.consume(true);\n  }\n\n  /**\n   * @param {!HeapSnapshotProxy} snapshot\n   * @param {number} snapshotNodeIndex\n   */\n  async setAllocatedObject(snapshot, snapshotNodeIndex) {\n    this.clear();\n    const frames = await snapshot.allocationStack(snapshotNodeIndex);\n\n    if (!frames) {\n      const stackDiv = this.element.createChild('div', 'no-heap-allocation-stack');\n      UI.UIUtils.createTextChild(stackDiv, i18nString(UIStrings.stackWasNotRecordedForThisObject));\n      return;\n    }\n\n    const stackDiv = this.element.createChild('div', 'heap-allocation-stack');\n    stackDiv.addEventListener('keydown', this._onStackViewKeydown.bind(this), false);\n    for (const frame of frames) {\n      const frameDiv = /** @type {!HTMLElement} */ (stackDiv.createChild('div', 'stack-frame'));\n      this._frameElements.push(frameDiv);\n      frameDiv.tabIndex = -1;\n      const name = frameDiv.createChild('div');\n      name.textContent = UI.UIUtils.beautifyFunctionName(frame.functionName);\n      if (!frame.scriptId) {\n        continue;\n      }\n      const target = this._heapProfilerModel ? this._heapProfilerModel.target() : null;\n      const options = {columnNumber: frame.column - 1};\n      const urlElement = this._linkifier.linkifyScriptLocation(\n          target, String(frame.scriptId), frame.scriptName, frame.line - 1,\n          /** @type {!Components.Linkifier.LinkifyOptions} */ (options));\n      frameDiv.appendChild(urlElement);\n      stackFrameToURLElement.set(frameDiv, urlElement);\n      frameDiv.addEventListener('contextmenu', this._onContextMenu.bind(this, urlElement));\n    }\n    this._frameElements[0].tabIndex = 0;\n  }\n\n  clear() {\n    this.element.removeChildren();\n    this._frameElements = [];\n    this._linkifier.reset();\n  }\n}\n\n/** @type {!WeakMap<!HTMLElement, !HTMLElement>} */\nconst stackFrameToURLElement = new WeakMap();\n"]}