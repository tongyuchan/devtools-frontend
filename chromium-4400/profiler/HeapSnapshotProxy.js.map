{"version":3,"file":"HeapSnapshotProxy.js","sourceRoot":"","sources":["../../../../../front_end/profiler/HeapSnapshotProxy.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport * as HeapSnapshotModel from '../heap_snapshot_model/heap_snapshot_model.js';  // eslint-disable-line no-unused-vars\nimport * as i18n from '../i18n/i18n.js';\nimport {ChildrenProvider} from './ChildrenProvider.js';  // eslint-disable-line no-unused-vars\n\nexport const UIStrings = {\n  /**\n  *@description Text in Heap Snapshot Proxy of a profiler tool\n  *@example {functionName} PH1\n  */\n  anErrorOccurredWhenACallToMethod: 'An error occurred when a call to method \\'{PH1}\\' was requested',\n};\nconst str_ = i18n.i18n.registerUIStrings('profiler/HeapSnapshotProxy.js', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class HeapSnapshotWorkerProxy extends Common.ObjectWrapper.ObjectWrapper {\n  /**\n   * @param {function(string, *):void} eventHandler\n   */\n  constructor(eventHandler) {\n    super();\n    this._eventHandler = eventHandler;\n    this._nextObjectId = 1;\n    this._nextCallId = 1;\n    /** @type {!Map<number, function(*):void>} */\n    this._callbacks = new Map();\n    /** @type {!Set<number>} */\n    this._previousCallbacks = new Set();\n    // We use the legacy file here, as below we postMessage and expect certain objects to be\n    // defined on the global scope. Ideally we use some sort of import-export mechanism across\n    // worker boundaries, but that requires a partial rewrite of the heap_snapshot_worker.\n    this._worker = Common.Worker.WorkerWrapper.fromURL(\n        new URL('../heap_snapshot_worker/heap_snapshot_worker-legacy.js', import.meta.url));\n    this._worker.onmessage = this._messageReceived.bind(this);\n  }\n\n  /**\n   * @param {number} profileUid\n   * @param {function(!HeapSnapshotProxy):void} snapshotReceivedCallback\n   * @return {!HeapSnapshotLoaderProxy}\n   */\n  createLoader(profileUid, snapshotReceivedCallback) {\n    const objectId = this._nextObjectId++;\n    const proxy = new HeapSnapshotLoaderProxy(this, objectId, profileUid, snapshotReceivedCallback);\n    this._postMessage({\n      callId: this._nextCallId++,\n      disposition: 'create',\n      objectId: objectId,\n      methodName: 'HeapSnapshotWorker.HeapSnapshotLoader'\n    });\n    return proxy;\n  }\n\n  dispose() {\n    this._worker.terminate();\n    if (this._interval) {\n      clearInterval(this._interval);\n    }\n  }\n\n  /**\n   * @param {number} objectId\n   */\n  disposeObject(objectId) {\n    this._postMessage({callId: this._nextCallId++, disposition: 'dispose', objectId: objectId});\n  }\n\n  /**\n   * @param {string} script\n   * @param {function(*):void} callback\n   */\n  evaluateForTest(script, callback) {\n    const callId = this._nextCallId++;\n    this._callbacks.set(callId, callback);\n    this._postMessage({callId: callId, disposition: 'evaluateForTest', source: script});\n  }\n\n  /**\n   * @param {?function(...?):void} callback\n   * @param {string} objectId\n   * @param {string} methodName\n   * @param {function(new:T, ...?)} proxyConstructor\n   * @return {?Object}\n   * @template T\n   */\n  callFactoryMethod(callback, objectId, methodName, proxyConstructor) {\n    const callId = this._nextCallId++;\n    const methodArguments = Array.prototype.slice.call(arguments, 4);\n    const newObjectId = this._nextObjectId++;\n\n    if (callback) {\n      this._callbacks.set(callId, remoteResult => {\n        callback(remoteResult ? new proxyConstructor(this, newObjectId) : null);\n      });\n      this._postMessage({\n        callId: callId,\n        disposition: 'factory',\n        objectId: objectId,\n        methodName: methodName,\n        methodArguments: methodArguments,\n        newObjectId: newObjectId\n      });\n      return null;\n    }\n    this._postMessage({\n      callId: callId,\n      disposition: 'factory',\n      objectId: objectId,\n      methodName: methodName,\n      methodArguments: methodArguments,\n      newObjectId: newObjectId\n    });\n    return new proxyConstructor(this, newObjectId);\n  }\n\n  /**\n   * @param {function(*):void} callback\n   * @param {string} objectId\n   * @param {string} methodName\n   */\n  callMethod(callback, objectId, methodName) {\n    const callId = this._nextCallId++;\n    const methodArguments = Array.prototype.slice.call(arguments, 3);\n    if (callback) {\n      this._callbacks.set(callId, callback);\n    }\n    this._postMessage({\n      callId: callId,\n      disposition: 'method',\n      objectId: objectId,\n      methodName: methodName,\n      methodArguments: methodArguments\n    });\n  }\n\n  startCheckingForLongRunningCalls() {\n    if (this._interval) {\n      return;\n    }\n    this._checkLongRunningCalls();\n    this._interval = setInterval(this._checkLongRunningCalls.bind(this), 300);\n  }\n\n  _checkLongRunningCalls() {\n    for (const callId of this._previousCallbacks) {\n      if (!this._callbacks.has(callId)) {\n        this._previousCallbacks.delete(callId);\n      }\n    }\n    const hasLongRunningCalls = Boolean(this._previousCallbacks.size);\n    this.dispatchEventToListeners(HeapSnapshotWorkerProxy.Events.Wait, hasLongRunningCalls);\n    for (const callId of this._callbacks.keys()) {\n      this._previousCallbacks.add(callId);\n    }\n  }\n\n  /**\n   * @param {!MessageEvent} event\n   */\n  _messageReceived(event) {\n    const data = event.data;\n    if (data.eventName) {\n      if (this._eventHandler) {\n        this._eventHandler(data.eventName, data.data);\n      }\n      return;\n    }\n    if (data.error) {\n      if (data.errorMethodName) {\n        Common.Console.Console.instance().error(\n            i18nString(UIStrings.anErrorOccurredWhenACallToMethod, {PH1: data.errorMethodName}));\n      }\n      Common.Console.Console.instance().error(data['errorCallStack']);\n      this._callbacks.delete(data.callId);\n      return;\n    }\n    const callback = this._callbacks.get(data.callId);\n    if (!callback) {\n      return;\n    }\n    this._callbacks.delete(data.callId);\n    callback(data.result);\n  }\n\n  /**\n   * @param {*} message\n   */\n  _postMessage(message) {\n    this._worker.postMessage(message);\n  }\n}\n\nHeapSnapshotWorkerProxy.Events = {\n  Wait: Symbol('Wait')\n};\n\nexport class HeapSnapshotProxyObject {\n  /**\n   * @param {!HeapSnapshotWorkerProxy} worker\n   * @param {number} objectId\n   */\n  constructor(worker, objectId) {\n    this._worker = worker;\n    this._objectId = objectId;\n  }\n\n  /**\n   * @param {string} workerMethodName\n   * @param {!Array.<*>} args\n   */\n  _callWorker(workerMethodName, args) {\n    args.splice(1, 0, this._objectId);\n    const worker = /** @type {*} */ (this._worker)[workerMethodName];\n    if (!worker) {\n      throw new Error(`Could not find worker with name ${workerMethodName}.`);\n    }\n    return worker.apply(this._worker, args);\n  }\n\n  dispose() {\n    this._worker.disposeObject(this._objectId);\n  }\n\n  disposeWorker() {\n    this._worker.dispose();\n  }\n\n  /**\n   * @param {?function(...?):void} callback\n   * @param {string} methodName\n   * @param {function (new:T, ...?)} proxyConstructor\n   * @param {...*} var_args\n   * @return {!T}\n   * @template T\n   */\n  callFactoryMethod(callback, methodName, proxyConstructor, ...var_args) {\n    return this._callWorker('callFactoryMethod', Array.prototype.slice.call(arguments, 0));\n  }\n\n  /**\n   * @param {string} methodName\n   * @param {...*} var_args\n   * @return {!Promise.<!T>}\n   * @template T\n   */\n  _callMethodPromise(methodName, ...var_args) {\n    const args = Array.prototype.slice.call(arguments);\n    return new Promise(resolve => this._callWorker('callMethod', [resolve, ...args]));\n  }\n}\n\n/**\n * @implements {Common.StringOutputStream.OutputStream}\n */\nexport class HeapSnapshotLoaderProxy extends HeapSnapshotProxyObject {\n  /**\n   * @param {!HeapSnapshotWorkerProxy} worker\n   * @param {number} objectId\n   * @param {number} profileUid\n   * @param {function(!HeapSnapshotProxy):void} snapshotReceivedCallback\n   */\n  constructor(worker, objectId, profileUid, snapshotReceivedCallback) {\n    super(worker, objectId);\n    this._profileUid = profileUid;\n    this._snapshotReceivedCallback = snapshotReceivedCallback;\n  }\n\n  /**\n   * @override\n   * @param {string} chunk\n   * @return {!Promise<void>}\n   */\n  async write(chunk) {\n    await this._callMethodPromise('write', chunk);\n  }\n\n  /**\n   * @override\n   */\n  async close() {\n    await this._callMethodPromise('close');\n    const snapshotProxy =\n        await new Promise(resolve => this.callFactoryMethod(resolve, 'buildSnapshot', HeapSnapshotProxy));\n    this.dispose();\n    snapshotProxy.setProfileUid(this._profileUid);\n    await snapshotProxy.updateStaticData();\n    this._snapshotReceivedCallback(snapshotProxy);\n  }\n}\n\nexport class HeapSnapshotProxy extends HeapSnapshotProxyObject {\n  /**\n   * @param {!HeapSnapshotWorkerProxy} worker\n   * @param {number} objectId\n   */\n  constructor(worker, objectId) {\n    super(worker, objectId);\n    /** @type {?HeapSnapshotModel.HeapSnapshotModel.StaticData} */\n    this._staticData = null;\n  }\n\n  /**\n   * @param {!HeapSnapshotModel.HeapSnapshotModel.SearchConfig} searchConfig\n   * @param {!HeapSnapshotModel.HeapSnapshotModel.NodeFilter} filter\n   * @return {!Promise<!Array<number>>}\n   */\n  search(searchConfig, filter) {\n    return this._callMethodPromise('search', searchConfig, filter);\n  }\n\n  /**\n   * @param {!HeapSnapshotModel.HeapSnapshotModel.NodeFilter} filter\n   * @return {!Promise<!Object<string, !HeapSnapshotModel.HeapSnapshotModel.Aggregate>>}\n   */\n  aggregatesWithFilter(filter) {\n    return this._callMethodPromise('aggregatesWithFilter', filter);\n  }\n\n  /**\n   * @return {!Promise<!Object.<string, !HeapSnapshotModel.HeapSnapshotModel.AggregateForDiff>>}\n   */\n  aggregatesForDiff() {\n    return this._callMethodPromise('aggregatesForDiff');\n  }\n\n  /**\n   * @param {string} baseSnapshotId\n   * @param {!Object<string, !HeapSnapshotModel.HeapSnapshotModel.AggregateForDiff>} baseSnapshotAggregates\n   * @return {!Promise<!Object<string, !HeapSnapshotModel.HeapSnapshotModel.Diff>>}\n   */\n  calculateSnapshotDiff(baseSnapshotId, baseSnapshotAggregates) {\n    return this._callMethodPromise('calculateSnapshotDiff', baseSnapshotId, baseSnapshotAggregates);\n  }\n\n  /**\n   * @param {number} snapshotObjectId\n   * @return {!Promise<?string>}\n   */\n  nodeClassName(snapshotObjectId) {\n    return this._callMethodPromise('nodeClassName', snapshotObjectId);\n  }\n\n  /**\n   * @param {number} nodeIndex\n   * @return {!HeapSnapshotProviderProxy}\n   */\n  createEdgesProvider(nodeIndex) {\n    return this.callFactoryMethod(null, 'createEdgesProvider', HeapSnapshotProviderProxy, nodeIndex);\n  }\n\n  /**\n   * @param {number} nodeIndex\n   * @return {!HeapSnapshotProviderProxy}\n   */\n  createRetainingEdgesProvider(nodeIndex) {\n    return this.callFactoryMethod(null, 'createRetainingEdgesProvider', HeapSnapshotProviderProxy, nodeIndex);\n  }\n\n  /**\n   * @param {string} baseSnapshotId\n   * @param {string} className\n   * @return {?HeapSnapshotProviderProxy}\n   */\n  createAddedNodesProvider(baseSnapshotId, className) {\n    return this.callFactoryMethod(\n        null, 'createAddedNodesProvider', HeapSnapshotProviderProxy, baseSnapshotId, className);\n  }\n\n  /**\n   * @param {!Array.<number>} nodeIndexes\n   * @return {?HeapSnapshotProviderProxy}\n   */\n  createDeletedNodesProvider(nodeIndexes) {\n    return this.callFactoryMethod(null, 'createDeletedNodesProvider', HeapSnapshotProviderProxy, nodeIndexes);\n  }\n\n  /**\n   * @param {function(*):boolean} filter\n   * @return {?HeapSnapshotProviderProxy}\n   */\n  createNodesProvider(filter) {\n    return this.callFactoryMethod(null, 'createNodesProvider', HeapSnapshotProviderProxy, filter);\n  }\n\n  /**\n   * @param {string} className\n   * @param {!HeapSnapshotModel.HeapSnapshotModel.NodeFilter} nodeFilter\n   * @return {?HeapSnapshotProviderProxy}\n   */\n  createNodesProviderForClass(className, nodeFilter) {\n    return this.callFactoryMethod(\n        null, 'createNodesProviderForClass', HeapSnapshotProviderProxy, className, nodeFilter);\n  }\n\n  /**\n   * @return {!Promise<!Array<!HeapSnapshotModel.HeapSnapshotModel.SerializedAllocationNode>>}\n   */\n  allocationTracesTops() {\n    return this._callMethodPromise('allocationTracesTops');\n  }\n\n  /**\n   * @param {number} nodeId\n   * @return {!Promise<!HeapSnapshotModel.HeapSnapshotModel.AllocationNodeCallers>}\n   */\n  allocationNodeCallers(nodeId) {\n    return this._callMethodPromise('allocationNodeCallers', nodeId);\n  }\n\n  /**\n   * @param {number} nodeIndex\n   * @return {!Promise<?Array<!HeapSnapshotModel.HeapSnapshotModel.AllocationStackFrame>>}\n   */\n  allocationStack(nodeIndex) {\n    return this._callMethodPromise('allocationStack', nodeIndex);\n  }\n\n  /**\n   * @override\n   */\n  dispose() {\n    throw new Error('Should never be called');\n  }\n\n  get nodeCount() {\n    if (!this._staticData) {\n      return 0;\n    }\n    return this._staticData.nodeCount;\n  }\n\n  get rootNodeIndex() {\n    if (!this._staticData) {\n      return 0;\n    }\n    return this._staticData.rootNodeIndex;\n  }\n\n  /**\n   * @return {!Promise<void>}\n   */\n  async updateStaticData() {\n    this._staticData = await this._callMethodPromise('updateStaticData');\n  }\n\n  /**\n   * @return {!Promise<!HeapSnapshotModel.HeapSnapshotModel.Statistics>}\n   */\n  getStatistics() {\n    return this._callMethodPromise('getStatistics');\n  }\n\n  /**\n   * @param {number} nodeIndex\n   * @return {!Promise<?HeapSnapshotModel.HeapSnapshotModel.Location>}\n   */\n  getLocation(nodeIndex) {\n    return this._callMethodPromise('getLocation', nodeIndex);\n  }\n\n  /**\n   * @return {!Promise.<?HeapSnapshotModel.HeapSnapshotModel.Samples>}\n   */\n  getSamples() {\n    return this._callMethodPromise('getSamples');\n  }\n\n  get totalSize() {\n    if (!this._staticData) {\n      return 0;\n    }\n    return this._staticData.totalSize;\n  }\n\n  get uid() {\n    return this._profileUid;\n  }\n\n  /**\n   * @param {string} profileUid\n   */\n  setProfileUid(profileUid) {\n    this._profileUid = profileUid;\n  }\n\n  /**\n   * @return {number}\n   */\n  maxJSObjectId() {\n    if (!this._staticData) {\n      return 0;\n    }\n    return this._staticData.maxJSObjectId;\n  }\n}\n\n/**\n * @implements {ChildrenProvider}\n */\nexport class HeapSnapshotProviderProxy extends HeapSnapshotProxyObject {\n  /**\n   * @param {!HeapSnapshotWorkerProxy} worker\n   * @param {number} objectId\n   */\n  constructor(worker, objectId) {\n    super(worker, objectId);\n  }\n\n  /**\n   * @override\n   * @param {number} snapshotObjectId\n   * @return {!Promise<number>}\n   */\n  nodePosition(snapshotObjectId) {\n    return this._callMethodPromise('nodePosition', snapshotObjectId);\n  }\n\n  /**\n   * @override\n   * @return {!Promise<boolean>}\n   */\n  isEmpty() {\n    return this._callMethodPromise('isEmpty');\n  }\n\n  /**\n   * @override\n   * @param {number} startPosition\n   * @param {number} endPosition\n   * @return {!Promise<!HeapSnapshotModel.HeapSnapshotModel.ItemsRange>}\n   */\n  serializeItemsRange(startPosition, endPosition) {\n    return this._callMethodPromise('serializeItemsRange', startPosition, endPosition);\n  }\n\n  /**\n   * @override\n   * @param {!HeapSnapshotModel.HeapSnapshotModel.ComparatorConfig} comparator\n   * @return {!Promise<void>}\n   */\n  async sortAndRewind(comparator) {\n    await this._callMethodPromise('sortAndRewind', comparator);\n  }\n}\n"]}