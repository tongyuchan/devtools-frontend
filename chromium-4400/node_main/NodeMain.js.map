{"version":3,"file":"NodeMain.js","sourceRoot":"","sources":["../../../../../front_end/node_main/NodeMain.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Components from '../components/components.js';\nimport * as Host from '../host/host.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as ProtocolClient from '../protocol_client/protocol_client.js';  // eslint-disable-line no-unused-vars\nimport * as SDK from '../sdk/sdk.js';\n\nexport const UIStrings = {\n  /**\n  *@description Text that refers to the main target\n  */\n  main: 'Main',\n  /**\n  *@description Text in Node Main of the Sources panel when debugging a Node.js app\n  *@example {example.com} PH1\n  */\n  nodejsS: 'Node.js: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('node_main/NodeMain.js', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/**\n * @implements {Common.Runnable.Runnable}\n */\nexport class NodeMainImpl extends Common.ObjectWrapper.ObjectWrapper {\n  /**\n   * @override\n   */\n  async run() {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.ConnectToNodeJSFromFrontend);\n    SDK.Connections.initMainConnection(async () => {\n      const target = SDK.SDKModel.TargetManager.instance().createTarget(\n          'main', i18nString(UIStrings.main), SDK.SDKModel.Type.Browser, null);\n      target.setInspectedURL('Node.js');\n    }, Components.TargetDetachedDialog.TargetDetachedDialog.webSocketConnectionLost);\n  }\n}\n\n/**\n * @implements {ProtocolProxyApi.TargetDispatcher}\n */\nexport class NodeChildTargetManager extends SDK.SDKModel.SDKModel {\n  /**\n   * @param {!SDK.SDKModel.Target} parentTarget\n   */\n  constructor(parentTarget) {\n    super(parentTarget);\n    this._targetManager = parentTarget.targetManager();\n    this._parentTarget = parentTarget;\n    this._targetAgent = parentTarget.targetAgent();\n    /** @type {!Map<string, !SDK.SDKModel.Target>} */\n    this._childTargets = new Map();\n    /** @type {!Map<string, !NodeConnection>} */\n    this._childConnections = new Map();\n\n    parentTarget.registerTargetDispatcher(this);\n    this._targetAgent.invoke_setDiscoverTargets({discover: true});\n\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.DevicesDiscoveryConfigChanged, this._devicesDiscoveryConfigChanged, this);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(false);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(true);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _devicesDiscoveryConfigChanged(event) {\n    const config = /** @type {!Adb.Config} */ (event.data);\n    const locations = [];\n    for (const address of config.networkDiscoveryConfig) {\n      const parts = address.split(':');\n      const port = parseInt(parts[1], 10);\n      if (parts[0] && port) {\n        locations.push({host: parts[0], port: port});\n      }\n    }\n    this._targetAgent.invoke_setRemoteLocations({locations});\n  }\n\n  /**\n   * @override\n   */\n  dispose() {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.removeEventListener(\n        Host.InspectorFrontendHostAPI.Events.DevicesDiscoveryConfigChanged, this._devicesDiscoveryConfigChanged, this);\n\n    for (const sessionId of this._childTargets.keys()) {\n      this.detachedFromTarget({sessionId});\n    }\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Target.TargetCreatedEvent} event\n   */\n  targetCreated({targetInfo}) {\n    if (targetInfo.type === 'node' && !targetInfo.attached) {\n      this._targetAgent.invoke_attachToTarget({targetId: targetInfo.targetId, flatten: false});\n    }\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Target.TargetInfoChangedEvent} event\n   */\n  targetInfoChanged(event) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Target.TargetDestroyedEvent} event\n   */\n  targetDestroyed(event) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Target.AttachedToTargetEvent} event\n   */\n  attachedToTarget({sessionId, targetInfo}) {\n    const name = i18nString(UIStrings.nodejsS, {PH1: targetInfo.url});\n    const connection = new NodeConnection(this._targetAgent, sessionId);\n    this._childConnections.set(sessionId, connection);\n    const target = this._targetManager.createTarget(\n        targetInfo.targetId, name, SDK.SDKModel.Type.Node, this._parentTarget, undefined, undefined, connection);\n    this._childTargets.set(sessionId, target);\n    target.runtimeAgent().invoke_runIfWaitingForDebugger();\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Target.DetachedFromTargetEvent} event\n   */\n  detachedFromTarget({sessionId}) {\n    const childTarget = this._childTargets.get(sessionId);\n    if (childTarget) {\n      childTarget.dispose('target terminated');\n    }\n    this._childTargets.delete(sessionId);\n    this._childConnections.delete(sessionId);\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Target.ReceivedMessageFromTargetEvent} event\n   */\n  receivedMessageFromTarget({sessionId, message}) {\n    const connection = this._childConnections.get(sessionId);\n    const onMessage = connection ? connection._onMessage : null;\n    if (onMessage) {\n      onMessage.call(null, message);\n    }\n  }\n\n  /**\n   * @param {!Protocol.Target.TargetCrashedEvent} event\n   */\n  targetCrashed(event) {\n  }\n}\n\n/**\n * @implements {ProtocolClient.InspectorBackend.Connection}\n */\nexport class NodeConnection {\n  /**\n   * @param {!ProtocolProxyApi.TargetApi} targetAgent\n   * @param {string} sessionId\n   */\n  constructor(targetAgent, sessionId) {\n    this._targetAgent = targetAgent;\n    this._sessionId = sessionId;\n    this._onMessage = null;\n    this._onDisconnect = null;\n  }\n\n  /**\n   * @override\n   * @param {function((!Object|string)):void} onMessage\n   */\n  setOnMessage(onMessage) {\n    this._onMessage = onMessage;\n  }\n\n  /**\n   * @override\n   * @param {function(string):void} onDisconnect\n   */\n  setOnDisconnect(onDisconnect) {\n    this._onDisconnect = onDisconnect;\n  }\n\n  /**\n   * @override\n   * @param {string} message\n   */\n  sendRawMessage(message) {\n    this._targetAgent.invoke_sendMessageToTarget({message, sessionId: this._sessionId});\n  }\n\n  /**\n   * @override\n   * @return {!Promise<void>}\n   */\n  async disconnect() {\n    if (this._onDisconnect) {\n      this._onDisconnect.call(null, 'force disconnect');\n    }\n    this._onDisconnect = null;\n    this._onMessage = null;\n    await this._targetAgent.invoke_detachFromTarget({sessionId: this._sessionId});\n  }\n}\n\nSDK.SDKModel.SDKModel.register(NodeChildTargetManager, SDK.SDKModel.Capability.Target, true);\n"]}