{"version":3,"file":"node_main-meta.js","sourceRoot":"","sources":["../../../../../front_end/node_main/node_main-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAKlC,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB;;MAEE;IACF,UAAU,EAAE,YAAY;IACxB;;KAEC;IACD,IAAI,EAAE,MAAM;CACb,CAAC;AAEF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,6BAA6B,EAAE,SAAS,CAAC,CAAC;AACnF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEpF,IAAI,oBAAiD,CAAC;AAEtD,KAAK,UAAU,kBAAkB;IAC/B,IAAI,CAAC,oBAAoB,EAAE;QACzB,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QACrE,oBAAoB,GAAG,MAAM,MAAM,CAAC,gBAAgB,CAAC,CAAC;KACvD;IACD,OAAO,oBAAoB,CAAC;AAC9B,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,qBAAyC;IACjD,EAAE,EAAE,iBAAiB;IACrB,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC;IACvC,aAAa,EAAE,iBAAiB;IAChC,KAAK,EAAE,CAAC;IACR,KAAK,CAAC,QAAQ;QACZ,MAAM,QAAQ,GAAG,MAAM,kBAAkB,EAAE,CAAC;QAC5C,OAAO,QAAQ,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;IACvE,CAAC;IACD,IAAI,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;CACnC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../i18n/i18n.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as NodeMain from './node_main.js';\n\nexport const UIStrings = {\n  /**\n  *@description Text that refers to the network connection\n  */\n  connection: 'Connection',\n  /**\n *@description A tag of Node.js Connection Panel that can be searched in the command menu\n */\n  node: 'node',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('node_main/node_main-meta.ts', UIStrings);\nconst i18nString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedNodeMainModule: (typeof NodeMain|undefined);\n\nasync function loadNodeMainModule(): Promise<typeof NodeMain> {\n  if (!loadedNodeMainModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('node_main');\n    loadedNodeMainModule = await import('./node_main.js');\n  }\n  return loadedNodeMainModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'node-connection',\n  title: i18nString(UIStrings.connection),\n  commandPrompt: 'Show Connection',\n  order: 0,\n  async loadView() {\n    const NodeMain = await loadNodeMainModule();\n    return NodeMain.NodeConnectionsPanel.NodeConnectionsPanel.instance();\n  },\n  tags: [i18nString(UIStrings.node)],\n});\n"]}