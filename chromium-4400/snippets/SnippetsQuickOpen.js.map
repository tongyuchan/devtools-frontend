{"version":3,"file":"SnippetsQuickOpen.js","sourceRoot":"","sources":["../../../../../front_end/snippets/SnippetsQuickOpen.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,uDAAuD;AAEvD,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AAGzD,OAAO,EAAC,qBAAqB,EAAE,mBAAmB,EAAC,MAAM,8BAA8B,CAAC;AAExF,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB;;MAEE;IACF,eAAe,EAAE,oBAAoB;CACtC,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,EAAE,SAAS,CAAC,CAAC;AACrF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,MAAM,OAAO,iBAAkB,SAAQ,SAAS,CAAC,kBAAkB,CAAC,QAAQ;IAE1E;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IACD,UAAU,CAAC,SAAsB,EAAE,YAAoB;QACrD,IAAI,SAAS,KAAK,IAAI,EAAE;YACtB,OAAO;SACR;QACD,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,YAAY,CAAC,MAAc;QACzB,OAAO,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,GAAG,mBAAmB,EAAE,CAAC,aAAa,EAAE,CAAC;IACzD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;IAC/B,CAAC;IAED,SAAS,CAAC,SAAiB;QACzB,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC;IAC1C,CAAC;IAED,UAAU,CAAC,SAAiB,EAAE,KAAa,EAAE,YAAqB,EAAE,gBAAyB;QAC3F,YAAY,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QACtE,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACxC,SAAS,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,eAAe,CAAC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAC7F,CAAC;CACF","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../i18n/i18n.js';\nimport * as QuickOpen from '../quick_open/quick_open.js';\nimport * as Workspace from '../workspace/workspace.js';  // eslint-disable-line no-unused-vars\n\nimport {evaluateScriptSnippet, findSnippetsProject} from './ScriptSnippetFileSystem.js';\n\nexport const UIStrings = {\n  /**\n  *@description Text in Snippets Quick Open of the Sources panel when opening snippets\n  */\n  noSnippetsFound: 'No snippets found.',\n};\nconst str_ = i18n.i18n.registerUIStrings('snippets/SnippetsQuickOpen.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class SnippetsQuickOpen extends QuickOpen.FilteredListWidget.Provider {\n  _snippets: Workspace.UISourceCode.UISourceCode[];\n  constructor() {\n    super();\n    this._snippets = [];\n  }\n  selectItem(itemIndex: number|null, _promptValue: string): void {\n    if (itemIndex === null) {\n      return;\n    }\n    evaluateScriptSnippet(this._snippets[itemIndex]);\n  }\n\n  notFoundText(_query: string): string {\n    return i18nString(UIStrings.noSnippetsFound);\n  }\n\n  attach(): void {\n    this._snippets = findSnippetsProject().uiSourceCodes();\n  }\n\n  detach(): void {\n    this._snippets = [];\n  }\n\n  itemCount(): number {\n    return this._snippets.length;\n  }\n\n  itemKeyAt(itemIndex: number): string {\n    return this._snippets[itemIndex].name();\n  }\n\n  renderItem(itemIndex: number, query: string, titleElement: Element, _subtitleElement: Element): void {\n    titleElement.textContent = unescape(this._snippets[itemIndex].name());\n    titleElement.classList.add('monospace');\n    QuickOpen.FilteredListWidget.FilteredListWidget.highlightRanges(titleElement, query, true);\n  }\n}\n"]}