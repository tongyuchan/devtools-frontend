{"version":3,"file":"mobile_throttling-meta.js","sourceRoot":"","sources":["../../../../../front_end/mobile_throttling/mobile_throttling-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAKlC,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB;;MAEE;IACF,UAAU,EAAE,YAAY;CACzB,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,6CAA6C,EAAE,SAAS,CAAC,CAAC;AACnG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEpF,IAAI,4BAAiE,CAAC;AAEtE,KAAK,UAAU,0BAA0B;IACvC,IAAI,CAAC,4BAA4B,EAAE;QACjC,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QAC7E,4BAA4B,GAAG,MAAM,MAAM,CAAC,wBAAwB,CAAC,CAAC;KACvE;IACD,OAAO,4BAA4B,CAAC;AACtC,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,qCAAiD;IACzD,EAAE,EAAE,uBAAuB;IAC3B,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC;IACvC,aAAa,EAAE,iBAAiB;IAChC,KAAK,EAAE,EAAE;IACT,KAAK,CAAC,QAAQ;QACZ,MAAM,gBAAgB,GAAG,MAAM,0BAA0B,EAAE,CAAC;QAC5D,OAAO,gBAAgB,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC;IACjF,CAAC;IACD,QAAQ,EAAE;QACR,yBAAyB;KAC1B;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../i18n/i18n.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as MobileThrottling from './mobile_throttling.js';\n\nexport const UIStrings = {\n  /**\n  *@description Text for throttling the network\n  */\n  throttling: 'Throttling',\n};\nconst str_ = i18n.i18n.registerUIStrings('mobile_throttling/mobile_throttling-meta.ts', UIStrings);\nconst i18nString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedMobileThrottlingModule: (typeof MobileThrottling|undefined);\n\nasync function loadMobileThrottlingModule(): Promise<typeof MobileThrottling> {\n  if (!loadedMobileThrottlingModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('mobile_throttling');\n    loadedMobileThrottlingModule = await import('./mobile_throttling.js');\n  }\n  return loadedMobileThrottlingModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'throttling-conditions',\n  title: i18nString(UIStrings.throttling),\n  commandPrompt: 'Show Throttling',\n  order: 35,\n  async loadView() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return MobileThrottling.ThrottlingSettingsTab.ThrottlingSettingsTab.instance();\n  },\n  settings: [\n    'customNetworkConditions',\n  ],\n});\n"]}