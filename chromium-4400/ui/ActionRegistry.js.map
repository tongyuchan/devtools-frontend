{"version":3,"file":"ActionRegistry.js","sourceRoot":"","sources":["../../../../../front_end/ui/ActionRegistry.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC,CAAE,qCAAqC;AAE/E,OAAO,EAAS,6BAA6B,EAAE,wBAAwB,EAAsB,MAAM,yBAAyB,CAAC,CAAE,qCAAqC;AACpK,OAAO,EAAC,OAAO,EAAC,MAAM,cAAc,CAAC,CAAE,qCAAqC;AAE5E,wCAAwC;AACxC,IAAI,sBAAsB,CAAC;AAE3B,MAAM,OAAO,cAAc;IACzB;;OAEG;IACH;QACE,qCAAqC;QACrC,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,EAAC,QAAQ,EAAE,IAAI,EAAC;QACrC,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,sBAAsB,IAAI,QAAQ,EAAE;YACvC,sBAAsB,GAAG,IAAI,cAAc,EAAE,CAAC;SAC/C;QAED,OAAO,sBAAsB,CAAC;IAChC,CAAC;IAED,MAAM,CAAC,cAAc;QACnB,sBAAsB,GAAG,SAAS,CAAC;IACrC,CAAC;IAED,gBAAgB;QACd,MAAM,0BAA0B,GAAG,6BAA6B,EAAE,CAAC;QACnE,KAAK,MAAM,MAAM,IAAI,0BAA0B,EAAE;YAC/C,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;YAC3C,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE;gBAC5B,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aAC1B;SACF;QACD,0DAA0D;QAC1D,0EAA0E;QAC1E,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QAEtF;;;WAGG;QACH,SAAS,iBAAiB,CAAC,SAAS;YAClC,MAAM,QAAQ,GAAG,SAAS,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC;YACjD,IAAI,CAAC,QAAQ,EAAE;gBACb,OAAO,CAAC,KAAK,CAAC,sCAAsC,SAAS,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;gBACnF,OAAO;aACR;YACD,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBACnC,MAAM,IAAI,KAAK,CAAC,wBAAwB,QAAQ,GAAG,CAAC,CAAC;aACtD;YACD,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEjD,MAAM,MAAM,GAAG,IAAI,wBAAwB,CAAC,SAAS,CAAC,CAAC;YACvD,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE;gBACxC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;aACzC;iBAAM;gBACL,OAAO,CAAC,KAAK,CAAC,sDAAsD,QAAQ,EAAE,CAAC,CAAC;aACjF;YACD,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,EAAE;gBAC/B,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aAC1B;QACH,CAAC;IACH,CAAC;IAED;;OAEG;IACH,gBAAgB;QACd,OAAO,IAAI,CAAC,iBAAiB,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;IACnF,CAAC;IAED;;OAEG;IACH,OAAO;QACL,OAAO,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC;IACzC,CAAC;IAED;;;;OAIG;IACH,iBAAiB,CAAC,SAAS,EAAE,OAAO;QAClC,8CAA8C;QAC9C,MAAM,UAAU,GAAG,EAAE,CAAC;QACtB,2CAA2C;QAC3C,MAAM,8BAA8B,GAAG,EAAE,CAAC;QAC1C,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;YAChC,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC/C,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE;gBAC9B,IAAI,MAAM,YAAY,wBAAwB,EAAE;oBAC9C,0DAA0D;oBAC1D,0EAA0E;oBAC1E,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;iBACrC;qBAAM,IAAI,gCAAgC;gBAC5B,mCAAmC,CAAC,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,EAAE;oBAC/E,8BAA8B,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;iBACnF;aACF;SACF;QACD,+GAA+G;QAC/G,+GAA+G;QAC/G,2EAA2E;QAC3E,MAAM,0BAA0B,GAAG,CAAC,GAAG,OAAO,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEnH,OAAO,CAAC,GAAG,0BAA0B,EAAE,GAAG,8BAA8B,CAAC,CAAC;QAE1E;;;;WAIG;QACH,SAAS,iBAAiB,CAAC,SAAS;YAClC,MAAM,QAAQ,GAAG,qBAAqB,CAAC,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC;YACzE,OAAO,sBAAsB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,CAAC;QAED;;;;WAIG;QACH,SAAS,gCAAgC,CAAC,MAAM,EAAE,mBAAmB;YACnE,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;YAC3C,IAAI,CAAC,YAAY,EAAE;gBACjB,OAAO,IAAI,CAAC;aACb;YACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBAC5C,MAAM,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;gBACpC,MAAM,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,mBAAmB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBAChF,IAAI,UAAU,EAAE;oBACd,OAAO,IAAI,CAAC;iBACb;aACF;YACD,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,QAAQ;QACb,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;IACjD,CAAC;CACF","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Root from '../root/root.js';  // eslint-disable-line no-unused-vars\n\nimport {Action, getRegisteredActionExtensions, LegacyActionRegistration, PreRegisteredAction} from './ActionRegistration.js';  // eslint-disable-line no-unused-vars\nimport {Context} from './Context.js';  // eslint-disable-line no-unused-vars\n\n/** @type {!ActionRegistry|undefined} */\nlet actionRegistryInstance;\n\nexport class ActionRegistry {\n  /**\n   * @private\n   */\n  constructor() {\n    /** @type {!Map.<string, !Action>} */\n    this._actionsById = new Map();\n    this._registerActions();\n  }\n\n  /**\n   * @param {{forceNew: ?boolean}} opts\n   */\n  static instance(opts = {forceNew: null}) {\n    const {forceNew} = opts;\n    if (!actionRegistryInstance || forceNew) {\n      actionRegistryInstance = new ActionRegistry();\n    }\n\n    return actionRegistryInstance;\n  }\n\n  static removeInstance() {\n    actionRegistryInstance = undefined;\n  }\n\n  _registerActions() {\n    const registeredActionExtensions = getRegisteredActionExtensions();\n    for (const action of registeredActionExtensions) {\n      this._actionsById.set(action.id(), action);\n      if (!action.canInstantiate()) {\n        action.setEnabled(false);\n      }\n    }\n    // This call is done for the legacy Actions in module.json\n    // TODO(crbug.com/1134103): Remove this call when all actions are migrated\n    Root.Runtime.Runtime.instance().extensions('action').forEach(registerExtension, this);\n\n    /**\n     * @param {!Root.Runtime.Extension} extension\n     * @this {ActionRegistry}\n     */\n    function registerExtension(extension) {\n      const actionId = extension.descriptor().actionId;\n      if (!actionId) {\n        console.error(`No actionId provided for extension ${extension.descriptor().name}`);\n        return;\n      }\n      if (this._actionsById.get(actionId)) {\n        throw new Error(`Duplicate action id '${actionId}'`);\n      }\n      console.assert(!this._actionsById.get(actionId));\n\n      const action = new LegacyActionRegistration(extension);\n      if (!action.category() || action.title()) {\n        this._actionsById.set(actionId, action);\n      } else {\n        console.error(`Category actions require a title for command menu: ${actionId}`);\n      }\n      if (!extension.canInstantiate()) {\n        action.setEnabled(false);\n      }\n    }\n  }\n\n  /**\n   * @return {!Array.<!Action>}\n   */\n  availableActions() {\n    return this.applicableActions([...this._actionsById.keys()], Context.instance());\n  }\n\n  /**\n   * @return {!Array.<!Action>}\n   */\n  actions() {\n    return [...this._actionsById.values()];\n  }\n\n  /**\n   * @param {!Array.<string>} actionIds\n   * @param {!Context} context\n   * @return {!Array.<!Action>}\n   */\n  applicableActions(actionIds, context) {\n    /** @type {!Array<!Root.Runtime.Extension>} */\n    const extensions = [];\n    /** @type {!Array<!PreRegisteredAction>} */\n    const applicablePreRegisteredActions = [];\n    for (const actionId of actionIds) {\n      const action = this._actionsById.get(actionId);\n      if (action && action.enabled()) {\n        if (action instanceof LegacyActionRegistration) {\n          // This call is done for the legacy Actions in module.json\n          // TODO(crbug.com/1134103): Remove this call when all actions are migrated\n          extensions.push(action.extension());\n        } else if (isActionApplicableToContextTypes(\n                       /** @type {!PreRegisteredAction} */ (action), context.flavors())) {\n          applicablePreRegisteredActions.push(/** @type {!PreRegisteredAction} */ (action));\n        }\n      }\n    }\n    // The call done to Context.applicableExtensions to validate if a legacy Runtime Action extension is applicable\n    // will be replaced by isActionApplicableToContextTypes(), which does not rely on Runtime to do the validation.\n    // TODO(crbug.com/1134103): Remove this call when all actions are migrated.\n    const applicableActionExtensions = [...context.applicableExtensions(extensions)].map(extensionToAction.bind(this));\n\n    return [...applicableActionExtensions, ...applicablePreRegisteredActions];\n\n    /**\n     * @param {!Root.Runtime.Extension} extension\n     * @return {!Action}\n     * @this {ActionRegistry}\n     */\n    function extensionToAction(extension) {\n      const actionId = /** @type {string} */ (extension.descriptor().actionId);\n      return /** @type {!Action} */ (this.action(actionId));\n    }\n\n    /**\n     * @param {!PreRegisteredAction} action\n     * @param {!Set.<?>} currentContextTypes\n     * @return {boolean}\n     */\n    function isActionApplicableToContextTypes(action, currentContextTypes) {\n      const contextTypes = action.contextTypes();\n      if (!contextTypes) {\n        return true;\n      }\n      for (let i = 0; i < contextTypes.length; ++i) {\n        const contextType = contextTypes[i];\n        const isMatching = Boolean(contextType) && currentContextTypes.has(contextType);\n        if (isMatching) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  /**\n   * @param {string} actionId\n   * @return {?Action}\n   */\n  action(actionId) {\n    return this._actionsById.get(actionId) || null;\n  }\n}\n"]}