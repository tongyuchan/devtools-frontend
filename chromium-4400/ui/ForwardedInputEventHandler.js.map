{"version":3,"file":"ForwardedInputEventHandler.js","sourceRoot":"","sources":["../../../../../front_end/ui/ForwardedInputEventHandler.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AAExC,OAAO,EAAC,OAAO,EAAC,MAAM,cAAc,CAAC,CAAE,qCAAqC;AAC5E,OAAO,EAAC,gBAAgB,EAAC,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAC,iBAAiB,EAAE,gBAAgB,EAAC,MAAM,uBAAuB,CAAC,CAAE,qCAAqC;AAGjH,MAAM,OAAO,0BAA0B;IACrC;QACE,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,MAAM,CAAC,gBAAgB,CAC5E,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IAC/F,CAAC;IAED;;OAEG;IACH,oBAAoB,CAAC,KAAK;QACxB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,MAAM,IAAI,GAAG,qBAAqB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,MAAM,GAAG,GAAG,qBAAqB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7C,MAAM,OAAO,GAAG,qBAAqB,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrD,MAAM,SAAS,GAAG,qBAAqB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEzD,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,OAAO;SACR;QAED,MAAM,OAAO,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QACnC,MAAM,gBAAgB,GAAG,gBAAgB,CAAC,QAAQ,EAAE,CAAC;QAErD,OAAO,CAAC,SAAS,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACjE,gBAAgB,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;QAC9E,OAAO,CAAC,SAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;CACF;AAED,IAAI,0BAA0B,EAAE,CAAC","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';  // eslint-disable-line no-unused-vars\nimport * as Host from '../host/host.js';\n\nimport {Context} from './Context.js';  // eslint-disable-line no-unused-vars\nimport {KeyboardShortcut} from './KeyboardShortcut.js';\nimport {ForwardedShortcut, ShortcutRegistry} from './ShortcutRegistry.js';  // eslint-disable-line no-unused-vars\n\n\nexport class ForwardedInputEventHandler {\n  constructor() {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.KeyEventUnhandled, this._onKeyEventUnhandled, this);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onKeyEventUnhandled(event) {\n    const data = event.data;\n    const type = /** @type {string} */ (data.type);\n    const key = /** @type {string} */ (data.key);\n    const keyCode = /** @type {number} */ (data.keyCode);\n    const modifiers = /** @type {number} */ (data.modifiers);\n\n    if (type !== 'keydown') {\n      return;\n    }\n\n    const context = Context.instance();\n    const shortcutRegistry = ShortcutRegistry.instance();\n\n    context.setFlavor(ForwardedShortcut, ForwardedShortcut.instance);\n    shortcutRegistry.handleKey(KeyboardShortcut.makeKey(keyCode, modifiers), key);\n    context.setFlavor(ForwardedShortcut, null);\n  }\n}\n\nnew ForwardedInputEventHandler();\n"]}