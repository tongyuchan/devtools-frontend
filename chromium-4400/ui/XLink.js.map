{"version":3,"file":"XLink.js","sourceRoot":"","sources":["../../../../../front_end/ui/XLink.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../host/host.js';\nimport * as Platform from '../platform/platform.js';\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport {ContextMenu, Provider} from './ContextMenu.js';  // eslint-disable-line no-unused-vars\nimport {html} from './Fragment.js';\nimport {Tooltip} from './Tooltip.js';\nimport {addReferrerToURLIfNecessary, copyLinkAddressLabel, MaxLengthForDisplayedURLs, openLinkExternallyLabel} from './UIUtils.js';\nimport {XElement} from './XElement.js';\n\n/**\n * @extends {XElement}\n */\nexport class XLink extends XElement {\n  /**\n   * @param {string} url\n   * @param {string=} linkText\n   * @param {string=} className\n   * @param {boolean=} preventClick\n   * @return {!HTMLElement}\n   */\n  static create(url, linkText, className, preventClick) {\n    if (!linkText) {\n      linkText = url;\n    }\n    className = className || '';\n    url = addReferrerToURLIfNecessary(url);\n    // clang-format off\n    // TODO(dgozman): migrate css from 'devtools-link' to 'x-link'.\n    const element = html`\n        <x-link href='${url}' class='${className} devtools-link' ${preventClick ? 'no-click' : ''}\n        >${Platform.StringUtilities.trimMiddle(linkText, MaxLengthForDisplayedURLs)}</x-link>`;\n    // clang-format on\n    return /** @type {!HTMLElement} */ (element);\n  }\n\n  constructor() {\n    super();\n\n    this.style.setProperty('display', 'inline');\n    ARIAUtils.markAsLink(this);\n    this.tabIndex = 0;\n    this.target = '_blank';\n    this.rel = 'noopener';\n\n    /** @type {?string} */\n    this._href = null;\n    this._clickable = true;\n\n    /** @type {function(!Event):void} */\n    this._onClick = event => {\n      event.consume(true);\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(/** @type {string} */ (this._href));\n    };\n    /** @type {function(!Event):void} */\n    this._onKeyDown = event => {\n      if (isEnterOrSpaceKey(event)) {\n        event.consume(true);\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(/** @type {string} */ (this._href));\n      }\n    };\n  }\n\n  /**\n   * @override\n   * @return {!Array<string>}\n   */\n  static get observedAttributes() {\n    // TODO(dgozman): should be super.observedAttributes, but it does not compile.\n    return XElement.observedAttributes.concat(['href', 'no-click']);\n  }\n\n  /**\n   * @param {string} attr\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @override\n   */\n  attributeChangedCallback(attr, oldValue, newValue) {\n    if (attr === 'no-click') {\n      this._clickable = !newValue;\n      this._updateClick();\n      return;\n    }\n\n    if (attr === 'href') {\n      // For invalid or non-absolute URLs, `href` should remain `null`.\n      if (!newValue) {\n        newValue = '';\n      }\n      let href = null;\n      let url = null;\n      try {\n        url = new URL(newValue);\n        href = url.toString();\n      } catch {\n      }\n      if (url && url.protocol === 'javascript:') {\n        href = null;\n      }\n\n      this._href = href;\n      Tooltip.install(this, newValue);\n      this._updateClick();\n      return;\n    }\n\n    super.attributeChangedCallback(attr, oldValue, newValue);\n  }\n\n  _updateClick() {\n    if (this._href !== null && this._clickable) {\n      this.addEventListener('click', this._onClick, false);\n      this.addEventListener('keydown', this._onKeyDown, false);\n      this.style.setProperty('cursor', 'pointer');\n    } else {\n      this.removeEventListener('click', this._onClick, false);\n      this.removeEventListener('keydown', this._onKeyDown, false);\n      this.style.removeProperty('cursor');\n    }\n  }\n}\n\n/**\n * @implements {Provider}\n */\nexport class ContextMenuProvider {\n  /**\n   * @override\n   * @param {!Event} event\n   * @param {!ContextMenu} contextMenu\n   * @param {!Object} target\n   */\n  appendApplicableItems(event, contextMenu, target) {\n    let targetNode = /** @type {?Node} */ (target);\n    while (targetNode && !(targetNode instanceof XLink)) {\n      targetNode = targetNode.parentNodeOrShadowHost();\n    }\n    if (!targetNode || !targetNode._href) {\n      return;\n    }\n    /** @type {!XLink} */\n    const node = targetNode;\n    contextMenu.revealSection().appendItem(openLinkExternallyLabel(), () => {\n      if (node._href) {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(node._href);\n      }\n    });\n    contextMenu.revealSection().appendItem(copyLinkAddressLabel(), () => {\n      if (node._href) {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(node._href);\n      }\n    });\n  }\n}\n\nself.customElements.define('x-link', XLink);\n"]}