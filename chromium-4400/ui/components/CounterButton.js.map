{"version":3,"file":"CounterButton.js","sourceRoot":"","sources":["../../../../../../front_end/ui/components/CounterButton.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,OAAO,MAAM,wCAAwC,CAAC;AAclE,MAAM,OAAO,aAAc,SAAQ,WAAW;IAA9C;;QACmB,WAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;QACpD,iBAAY,GAAe,GAAG,EAAE,GAAE,CAAC,CAAC;QACpC,aAAQ,GAAkB,EAAE,CAAC;IAuEvC,CAAC;IArEC,IAAI,IAAI,CAAC,IAAuB;QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,SAAS,CAAC,MAAgB;QACxB,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC1C,MAAM,IAAI,KAAK,CAAC,mCAAmC,IAAI,CAAC,QAAQ,CAAC,MAAM,YAAY,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;SACrG;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACtC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;SACpC;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,cAAc,CAAC,KAAY;QACjC,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEO,MAAM;QACZ,qDAAqD;QACrD,mBAAmB;QACnB,OAAO,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAkCQ,IAAI,CAAC,cAAc;QACzD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CACxE,OAAO,CAAC,IAAI,CAAA;;cAEJ,EAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAa;;2CAE5E,OAAO,CAAC,KAAK;gBACxC,CAAC;KACZ,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC;QACvC,kBAAkB;IACpB,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../../third_party/lit-html/lit-html.js';\nimport {IconData} from './Icon.js';\n\nexport interface CounterData {\n  iconName: string;\n  iconColor?: string;\n  count?: number;\n}\n\nexport interface CounterButtonData {\n  clickHandler: () => void;\n  counters: CounterData[];\n}\n\nexport class CounterButton extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private clickHandler: () => void = () => {};\n  private counters: CounterData[] = [];\n\n  set data(data: CounterButtonData) {\n    this.counters = data.counters;\n    this.clickHandler = data.clickHandler;\n    this.render();\n  }\n\n  setCounts(counts: number[]): void {\n    if (counts.length !== this.counters.length) {\n      throw new Error(`Wrong number of texts, expected ${this.counters.length} but got ${counts.length}`);\n    }\n    for (let i = 0; i < counts.length; ++i) {\n      this.counters[i].count = counts[i];\n    }\n    this.render();\n  }\n\n  private onClickHandler(event: Event): void {\n    event.preventDefault();\n    this.clickHandler();\n  }\n\n  private render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return LitHtml.render(LitHtml.html`\n      <style>\n        :host {\n          white-space: normal;\n        }\n\n        .counter-button {\n          cursor: pointer;\n          background-color: var(--toolbar-bg-color);\n          border: 1px solid var(--divider-color);\n          border-radius: 2px;\n          color: var(--tab-selected-fg-color);\n          margin-right: 2px;\n          display: inline-flex;\n          align-items: center;\n        }\n\n        .counter-button:hover,\n        .counter-button:focus-visible {\n          background-color: var(--toolbar-hover-bg-color);\n        }\n\n        .counter-button-title {\n          margin-left: 0.5ex;\n        }\n\n        .status-icon {\n          margin-left: 1ex;\n        }\n\n        .status-icon:first-child {\n          margin-left: inherit;\n        }\n      </style>\n      <button class=\"counter-button\" @click=${this.onClickHandler}>\n      ${this.counters.filter(counter => Boolean(counter.count)).map(counter =>\n      LitHtml.html`\n      <devtools-icon class=\"status-icon\"\n      .data=${{iconName: counter.iconName, color: counter.iconColor || '', width: '1.5ex', height: '1.5ex'} as IconData}>\n      </devtools-icon>\n      <span class=\"counter-button-title\">${counter.count}</span>\n      </button>`)}\n    `, this.shadow, { eventContext: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('counter-button', CounterButton);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'counter-button': CounterButton;\n  }\n}\n"]}