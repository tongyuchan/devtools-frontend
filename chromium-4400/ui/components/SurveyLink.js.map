{"version":3,"file":"SurveyLink.js","sourceRoot":"","sources":["../../../../../../front_end/ui/components/SurveyLink.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../common/common.js';\nimport * as Host from '../../host/host.js';  // eslint-disable-line no-unused-vars\nimport * as LitHtml from '../../third_party/lit-html/lit-html.js';\n\nimport type {IconData} from './Icon.js';\n\nconst ls = Common.ls;\n\nexport type CanShowSurveyCallback = (result: Host.InspectorFrontendHostAPI.CanShowSurveyResult) => void;\nexport type ShowSurveyCallback = (result: Host.InspectorFrontendHostAPI.ShowSurveyResult) => void;\n\nexport interface SurveyLinkData {\n  trigger: string;\n  promptText: Common.UIString.LocalizedString;\n  canShowSurvey: (trigger: string, callback: CanShowSurveyCallback) => void;\n  showSurvey: (trigger: string, callback: ShowSurveyCallback) => void;\n}\n\nconst enum State {\n  Checking = 'Checking',  // (begin state) -> ShowLink | DontShowLink\n  ShowLink = 'ShowLink',  // -> Sending\n  Sending = 'Sending',    // -> SurveyShown | Failed\n  SurveyShown = 'SurveyShown',\n  Failed = 'Failed',\n  DontShowLink = 'DontShowLink'\n}\n\n// A link to a survey. The link is rendered aysnchronously because we need to first check if\n// canShowSurvey succeeds.\nexport class SurveyLink extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private trigger = '';\n  private promptText = Common.UIString.LocalizedEmptyString;\n  private canShowSurvey: (trigger: string, callback: CanShowSurveyCallback) => void = () => {};\n  private showSurvey: (trigger: string, callback: ShowSurveyCallback) => void = () => {};\n  private state: State = State.Checking;\n\n  // Re-setting data will cause the state to go back to 'Checking' which hides the link.\n  set data(data: SurveyLinkData) {\n    this.trigger = data.trigger;\n    this.promptText = data.promptText;\n    this.canShowSurvey = data.canShowSurvey;\n    this.showSurvey = data.showSurvey;\n\n    this.checkSurvey();\n  }\n\n  private checkSurvey(): void {\n    this.state = State.Checking;\n    this.canShowSurvey(this.trigger, ({canShowSurvey}) => {\n      if (!canShowSurvey) {\n        this.state = State.DontShowLink;\n      } else {\n        this.state = State.ShowLink;\n      }\n      this.render();\n    });\n  }\n\n  private sendSurvey(): void {\n    this.state = State.Sending;\n    this.render();\n    this.showSurvey(this.trigger, ({surveyShown}) => {\n      if (!surveyShown) {\n        this.state = State.Failed;\n      } else {\n        this.state = State.SurveyShown;\n      }\n      this.render();\n    });\n  }\n\n  private render(): void {\n    if (this.state === State.Checking || this.state === State.DontShowLink) {\n      return;\n    }\n\n    let linkText = this.promptText;\n    if (this.state === State.Sending) {\n      linkText = ls`Opening survey â€¦`;\n    } else if (this.state === State.SurveyShown) {\n      linkText = ls`Thank you for your feedback`;\n    } else if (this.state === State.Failed) {\n      linkText = ls`An error occurred with the survey`;\n    }\n\n    let linkState = '';\n    if (this.state === State.Sending) {\n      linkState = 'pending-link';\n    } else if (this.state === State.Failed || this.state === State.SurveyShown) {\n      linkState = 'disabled-link';\n    }\n\n    const ariaDisabled = this.state !== State.ShowLink;\n\n    // clang-format off\n    const output = LitHtml.html`\n      <style>\n        .link-icon {\n          vertical-align: sub;\n          margin-right: 0.5ch;\n        }\n\n        .link {\n          padding: 4px 0 0 0;\n          text-decoration: underline;\n          cursor: pointer;\n          font-size: 14px;\n          color: var(--issue-link);\n          border: none;\n          background: none;\n        }\n\n        .link:focus:not(:focus-visible) {\n          outline: none;\n        }\n\n        .pending-link {\n          opacity: 75%;\n          pointer-events: none;\n          cursor: default;\n          text-decoration: none;\n        }\n\n        .disabled-link {\n          pointer-events: none;\n          cursor: default;\n          text-decoration: none;\n        }\n      </style>\n      <button class=\"link ${linkState}\" tabindex=${ariaDisabled ? '-1' : '0'} aria-disabled=${ariaDisabled} @click=${this.sendSurvey}>\n        <devtools-icon class=\"link-icon\" .data=${{iconName: 'feedback_thin_16x16_icon', color: 'var(--issue-link)', width: '16px', height: '16px'} as IconData}></devtools-icon><!--\n      -->${linkText}\n      </button>\n    `;\n    // clang-format on\n    LitHtml.render(output, this.shadow, {eventContext: this});\n  }\n}\n\ncustomElements.define('devtools-survey-link', SurveyLink);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-survey-link': SurveyLink;\n  }\n}\n"]}