{"version":3,"file":"ServiceManager.js","sourceRoot":"","sources":["../../../../../front_end/services/ServiceManager.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';  // eslint-disable-line no-unused-vars\nimport * as Host from '../host/host.js';\nimport * as Root from '../root/root.js';\n\nexport class ServiceManager {\n  /**\n   * @param {string} serviceName\n   * @return {!Promise<?Service>}\n   */\n  createRemoteService(serviceName) {\n    if (!this._remoteConnection) {\n      const url = Root.Runtime.Runtime.queryParam('service-backend');\n      if (!url) {\n        console.error('No endpoint address specified');\n        return /** @type {!Promise<?Service>} */ (Promise.resolve(null));\n      }\n      this._remoteConnection = new Connection(new RemoteServicePort(url));\n    }\n    return this._remoteConnection._createService(serviceName);\n  }\n\n  /**\n   * @param {string} appName\n   * @param {string} serviceName\n   * @return {!Promise<?Service>}\n   */\n  createAppService(appName, serviceName) {\n    let url = appName + '.js';\n    const remoteBase = Root.Runtime.Runtime.queryParam('remoteBase');\n    const debugFrontend = Root.Runtime.Runtime.queryParam('debugFrontend');\n    const isUnderTest = Host.InspectorFrontendHost.isUnderTest();\n\n    const queryParams = [];\n    if (remoteBase) {\n      queryParams.push('remoteBase=' + remoteBase);\n    }\n    if (debugFrontend) {\n      queryParams.push('debugFrontend=' + debugFrontend);\n    }\n    if (isUnderTest) {\n      queryParams.push('isUnderTest=true');\n    }\n\n    if (queryParams.length) {\n      url += `?${queryParams.join('&')}`;\n    }\n\n    const worker = new Worker(url, {type: 'module'});\n    const connection = new Connection(new WorkerServicePort(worker));\n    return connection._createService(serviceName);\n  }\n}\n\nexport class Connection {\n  /**\n   * @param {!ServicePort} port\n   */\n  constructor(port) {\n    this._port = port;\n    this._port.setHandlers(this._onMessage.bind(this), this._connectionClosed.bind(this));\n\n    this._lastId = 1;\n    /** @type {!Map<number, function(?Object):void>}*/\n    this._callbacks = new Map();\n    /** @type {!Map<string, !Service>}*/\n    this._services = new Map();\n  }\n\n  /**\n   * @param {string} serviceName\n   * @return {!Promise<?Service>}\n   */\n  _createService(serviceName) {\n    return this._sendCommand(serviceName + '.create').then(result => {\n      if (!result) {\n        console.error('Could not initialize service: ' + serviceName);\n        return null;\n      }\n      const service = new Service(this, serviceName, result.id);\n      this._services.set(serviceName + ':' + result.id, service);\n      return service;\n    });\n  }\n\n  /**\n   * @param {!Service} service\n   */\n  _serviceDisposed(service) {\n    this._services.delete(service._serviceName + ':' + service._objectId);\n    if (!this._services.size) {\n      // Terminate the connection since it is no longer used.\n      this._port.close();\n    }\n  }\n\n  /**\n   * @param {string} method\n   * @param {!Object=} params\n   * @return {!Promise<?Object<string, ?>>}\n   */\n  _sendCommand(method, params) {\n    const id = this._lastId++;\n    const message = JSON.stringify({id: id, method: method, params: params || {}});\n    return this._port.send(message).then(success => {\n      if (!success) {\n        return Promise.resolve(null);\n      }\n      return new Promise(fulfill => this._callbacks.set(id, fulfill));\n    });\n  }\n\n  /**\n   * @param {string} data\n   */\n  _onMessage(data) {\n    let object;\n    try {\n      object = JSON.parse(data);\n    } catch (e) {\n      console.error(e);\n      return;\n    }\n    if (object.id) {\n      if (object.error) {\n        console.error('Service error: ' + object.error);\n      }\n      const callback = this._callbacks.get(object.id);\n      if (callback) {\n        callback(object.error ? null : object.result);\n        this._callbacks.delete(object.id);\n      }\n      return;\n    }\n\n    const tokens = object.method.split('.');\n    const serviceName = tokens[0];\n    const methodName = tokens[1];\n    const service = this._services.get(serviceName + ':' + object.params.id);\n    if (!service) {\n      console.error('Unable to lookup stub for ' + serviceName + ':' + object.params.id);\n      return;\n    }\n    service._dispatchNotification(methodName, object.params);\n  }\n\n  _connectionClosed() {\n    for (const callback of this._callbacks.values()) {\n      callback(null);\n    }\n    this._callbacks.clear();\n    for (const service of this._services.values()) {\n      service._dispatchNotification('disposed');\n    }\n    this._services.clear();\n  }\n}\n\nexport class Service {\n  /**\n   * @param {!Connection} connection\n   * @param {string} serviceName\n   * @param {string} objectId\n   */\n  constructor(connection, serviceName, objectId) {\n    this._connection = connection;\n    this._serviceName = serviceName;\n    this._objectId = objectId;\n    /** @type {!Map<string, function(!Object=):void>}*/\n    this._notificationHandlers = new Map();\n  }\n\n  /**\n   * @return {!Promise<?>}\n   */\n  dispose() {\n    const params = {id: this._objectId};\n    return this._connection._sendCommand(this._serviceName + '.dispose', params).then(() => {\n      this._connection._serviceDisposed(this);\n    });\n  }\n\n  /**\n   * @param {string} methodName\n   * @param {function(!Object=):void} handler\n   */\n  on(methodName, handler) {\n    this._notificationHandlers.set(methodName, handler);\n  }\n\n  /**\n   * @param {string} methodName\n   * @param {!Object<string, ?>=} params\n   * @return {!Promise<?>}\n   */\n  send(methodName, params) {\n    params = params || {};\n    params.id = this._objectId;\n    return this._connection._sendCommand(this._serviceName + '.' + methodName, params);\n  }\n\n  /**\n   * @param {string} methodName\n   * @param {!Object=} params\n   */\n  _dispatchNotification(methodName, params) {\n    const handler = this._notificationHandlers.get(methodName);\n    if (!handler) {\n      console.error('Could not report notification \\'' + methodName + '\\' on \\'' + this._objectId + '\\'');\n      return;\n    }\n    handler(params);\n  }\n}\n\n/**\n * @implements {ServicePort}\n */\nexport class RemoteServicePort {\n  /**\n   * @param {string} url\n   */\n  constructor(url) {\n    this._url = url;\n    /** @type {?WebSocket} */\n    this._socket;\n  }\n\n  /**\n   * @override\n   * @param {function(string):void} messageHandler\n   * @param {function():void} closeHandler\n   */\n  setHandlers(messageHandler, closeHandler) {\n    this._messageHandler = messageHandler;\n    this._closeHandler = closeHandler;\n  }\n\n  /**\n   * @return {!Promise<boolean>}\n   */\n  _open() {\n    if (!this._connectionPromise) {\n      this._connectionPromise = new Promise(promiseBody.bind(this));\n    }\n    return this._connectionPromise;\n\n    /**\n     * @param {function(boolean):void} fulfill\n     * @this {RemoteServicePort}\n     */\n    function promiseBody(fulfill) {\n      /** @type {?WebSocket} */\n      let socket;\n      try {\n        socket = new WebSocket(/** @type {string} */ (this._url));\n        socket.onmessage = onMessage.bind(this);\n        socket.onclose = onClose.bind(this);\n        socket.onopen = onConnect.bind(this);\n      } catch (e) {\n        fulfill(false);\n      }\n\n      /**\n       * @this {RemoteServicePort}\n       */\n      function onConnect() {\n        this._socket = socket;\n        fulfill(true);\n      }\n\n      /**\n       * @param {!Common.EventTarget.EventTargetEvent} event\n       * @this {RemoteServicePort}\n       */\n      function onMessage(event) {\n        if (this._messageHandler) {\n          this._messageHandler(event.data);\n        }\n      }\n\n      /**\n       * @this {RemoteServicePort}\n       */\n      function onClose() {\n        if (!this._socket) {\n          fulfill(false);\n        }\n        this._socketClosed(Boolean(this._socket));\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {string} message\n   * @return {!Promise<boolean>}\n   */\n  send(message) {\n    return this._open().then(() => {\n      if (this._socket) {\n        this._socket.send(message);\n        return true;\n      }\n      return false;\n    });\n  }\n\n  /**\n   * @override\n   * @return {!Promise<?>}\n   */\n  close() {\n    return this._open().then(() => {\n      if (this._socket) {\n        this._socket.close();\n        this._socketClosed(true);\n      }\n      return true;\n    });\n  }\n\n  /**\n   * @param {boolean=} notifyClient\n   */\n  _socketClosed(notifyClient) {\n    this._socket = null;\n    delete this._connectionPromise;\n    if (notifyClient && this._closeHandler) {\n      this._closeHandler();\n    }\n  }\n}\n\n/**\n * @implements {ServicePort}\n */\nexport class WorkerServicePort {\n  /**\n   * @param {!Worker} worker\n   */\n  constructor(worker) {\n    this._worker = worker;\n\n    /** @type {function(boolean):void} */\n    let fulfill;\n    this._workerPromise = new Promise(resolve => {\n      fulfill = resolve;\n    });\n\n    this._worker.onmessage = onMessage.bind(this);\n\n    /**\n     * @param {!MessageEvent} event\n     * @this {WorkerServicePort}\n     */\n    function onMessage(event) {\n      if (event.data === 'workerReady') {\n        fulfill(true);\n        return;\n      }\n      if (this._messageHandler) {\n        this._messageHandler(event.data);\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {function(string):void} messageHandler\n   * @param {function():void} closeHandler\n   */\n  setHandlers(messageHandler, closeHandler) {\n    this._messageHandler = messageHandler;\n    this._closeHandler = closeHandler;\n  }\n\n  /**\n   * @override\n   * @param {string} message\n   * @return {!Promise<boolean>}\n   */\n  send(message) {\n    return this._workerPromise.then(() => {\n      try {\n        this._worker.postMessage(message);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    });\n  }\n\n  /**\n   * @override\n   * @return {!Promise<?>}\n   */\n  close() {\n    return this._workerPromise.then(() => {\n      if (this._worker) {\n        this._worker.terminate();\n      }\n      return false;\n    });\n  }\n}\n"]}