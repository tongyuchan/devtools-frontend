{"version":3,"file":"number-utilities.js","sourceRoot":"","sources":["../../../../../front_end/platform/number-utilities.js"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,QAAQ,EAAC,MAAM,eAAe,CAAC;AAEvC;;;;;GAKG;AACH,MAAM,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IACrC,IAAI,aAAa,GAAG,GAAG,CAAC;IACxB,IAAI,GAAG,GAAG,GAAG,EAAE;QACb,aAAa,GAAG,GAAG,CAAC;KACrB;SAAM,IAAI,GAAG,GAAG,GAAG,EAAE;QACpB,aAAa,GAAG,GAAG,CAAC;KACrB;IACD,OAAO,aAAa,CAAC;AACvB,CAAC,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1B,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC3B,CAAC,CAAC;AAEF;;;GAGG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,CAAC,EAAE;IACnC,IAAI,KAAK,GAAG,IAAI,EAAE;QAChB,OAAO,QAAQ,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;KACrC;IAED,MAAM,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC;IAC/B,IAAI,SAAS,GAAG,GAAG,EAAE;QACnB,OAAO,QAAQ,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;KAC1C;IACD,IAAI,SAAS,GAAG,IAAI,EAAE;QACpB,OAAO,QAAQ,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;KAC1C;IAED,MAAM,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC;IACnC,IAAI,SAAS,GAAG,GAAG,EAAE;QACnB,OAAO,QAAQ,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;KAC1C;IACD,OAAO,QAAQ,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;AAC3C,CAAC,CAAC;AAEF;;;GAGG;AACH,MAAM,CAAC,MAAM,iBAAiB,GAAG,KAAK,CAAC,EAAE;IACvC,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;QACzC,OAAO,KAAK,CAAC;KACd;IACD,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAC7B,OAAO,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACzD,CAAC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,KAAK,GAAG,CAAC,KAAK,EAAE,SAAS,GAAG,CAAC,EAAE,EAAE;IAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;IACrC,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;AACzC,CAAC,CAAC","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {UIString} from './UIString.js';\n\n/**\n * @param {number} num\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport const clamp = (num, min, max) => {\n  let clampedNumber = num;\n  if (num < min) {\n    clampedNumber = min;\n  } else if (num > max) {\n    clampedNumber = max;\n  }\n  return clampedNumber;\n};\n\n/**\n * @param {number} m\n * @param {number} n\n * @return {number}\n */\nexport const mod = (m, n) => {\n  return ((m % n) + n) % n;\n};\n\n/**\n * @param {number} bytes\n * @return {string}\n */\nexport const bytesToString = bytes => {\n  if (bytes < 1000) {\n    return UIString('%.0f\\xA0B', bytes);\n  }\n\n  const kilobytes = bytes / 1000;\n  if (kilobytes < 100) {\n    return UIString('%.1f\\xA0kB', kilobytes);\n  }\n  if (kilobytes < 1000) {\n    return UIString('%.0f\\xA0kB', kilobytes);\n  }\n\n  const megabytes = kilobytes / 1000;\n  if (megabytes < 100) {\n    return UIString('%.1f\\xA0MB', megabytes);\n  }\n  return UIString('%.0f\\xA0MB', megabytes);\n};\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport const toFixedIfFloating = value => {\n  if (!value || Number.isNaN(Number(value))) {\n    return value;\n  }\n  const number = Number(value);\n  return number % 1 ? number.toFixed(3) : String(number);\n};\n\n/**\n * Rounds a number (including float) down.\n *\n * @param {number} value\n * @param {number} precision\n * @return {number}\n */\nexport const floor = (value, precision = 0) => {\n  const mult = Math.pow(10, precision);\n  return Math.floor(value * mult) / mult;\n};\n"]}