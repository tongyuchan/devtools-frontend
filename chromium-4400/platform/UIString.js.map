{"version":3,"file":"UIString.js","sourceRoot":"","sources":["../../../../../front_end/platform/UIString.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BG;AAEH,OAAO,KAAK,eAAe,MAAM,uBAAuB,CAAC;AAEzD,MAAM,kBAAkB;CAEvB;AAGD,MAAM,CAAC,MAAM,oBAAoB,GAAG,EAAqB,CAAC;AAE1D,MAAM,UAAU,QAAQ,CAAC,MAAc,EAAE,GAAG,OAAkB;IAC5D,OAAO,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAoB,CAAC;AACjH,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,MAAc,EAAE,SAAoB,EAAE;IACtE,MAAM,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC;IAC9B,MAAM,iBAAiB,GAAG,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC;IACjD,OAAO,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;AAC3C,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,iBAA0B;IAC5D,IAAI,CAAC,iBAAiB,EAAE;QACtB,OAAO,EAAE,CAAC;KACX;IAED,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;AACvC,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,MAAc;IACrC,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,OAAO,cAAc;IAIzB,YAAY,MAAc;QACxB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,eAAe;YAChB,eAAe,CAAC,oBAAoB,CAAC,IAAI,CAAC,eAAe,EAAE,eAAe,CAAC,kBAAkB,CAAC,CAAC;IACrG,CAAC;IAED,MAAM,CAAC,GAAG,OAAkB;QAC1B,OAAO,eAAe;aACjB,MAAM,CACH,IAAI,CAAC,eAAe,EAAE,SAAS,EAAE,eAAe,CAAC,kBAAkB,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EACxF,IAAI,CAAC,eAAe,CAAC;aACxB,eAAe,CAAC;IACvB,CAAC;CACF;AAED,MAAM,oBAAoB,GAAG,IAAI,OAAO,EAAE,CAAC;AAE3C,MAAM,UAAU,EAAE,CAAC,OAAoC,EAAE,GAAG,MAAiB;IAC3E,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC/B,OAAO,OAA0B,CAAC;KACnC;IACD,IAAI,kBAAkB,GAAG,oBAAoB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAC3D,IAAI,CAAC,kBAAkB,EAAE;QACvB,kBAAkB,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,oBAAoB,CAAC,GAAG,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;KACvD;IACD,OAAO,QAAQ,CAAC,kBAAkB,EAAE,GAAG,MAAM,CAAC,CAAC;AACjD,CAAC","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc.  All rights reserved.\n * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2007 Matt Lilek (pewtermoose@gmail.com).\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as StringUtilities from './string-utilities.js';\n\nclass LocalizedStringTag {\n  private localizationTag: (string|undefined);\n}\nexport type LocalizedString = string&LocalizedStringTag;\n\nexport const LocalizedEmptyString = '' as LocalizedString;\n\nexport function UIString(string: string, ..._vararg: unknown[]): LocalizedString {\n  return StringUtilities.vsprintf(localize(string), Array.prototype.slice.call(arguments, 1)) as LocalizedString;\n}\n\nexport function serializeUIString(string: string, values: unknown[] = []): string {\n  const messageParts = [string];\n  const serializedMessage = {messageParts, values};\n  return JSON.stringify(serializedMessage);\n}\n\nexport function deserializeUIString(serializedMessage?: string): unknown {\n  if (!serializedMessage) {\n    return {};\n  }\n\n  return JSON.parse(serializedMessage);\n}\n\nexport function localize(string: string): string {\n  return string;\n}\n\nexport class UIStringFormat {\n  private localizedFormat: string;\n  private tokenizedFormat: StringUtilities.FormatterToken[];\n\n  constructor(format: string) {\n    this.localizedFormat = localize(format);\n    this.tokenizedFormat =\n        StringUtilities.tokenizeFormatString(this.localizedFormat, StringUtilities.standardFormatters);\n  }\n\n  format(..._vararg: unknown[]): string {\n    return StringUtilities\n        .format(\n            this.localizedFormat, arguments, StringUtilities.standardFormatters, '', (a, b) => a + b,\n            this.tokenizedFormat)\n        .formattedResult;\n  }\n}\n\nconst _substitutionStrings = new WeakMap();\n\nexport function ls(strings: TemplateStringsArray|string, ...vararg: unknown[]): LocalizedString {\n  if (typeof strings === 'string') {\n    return strings as LocalizedString;\n  }\n  let substitutionString = _substitutionStrings.get(strings);\n  if (!substitutionString) {\n    substitutionString = strings.join('%s');\n    _substitutionStrings.set(strings, substitutionString);\n  }\n  return UIString(substitutionString, ...vararg);\n}\n"]}