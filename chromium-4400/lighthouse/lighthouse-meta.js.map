{"version":3,"file":"lighthouse-meta.js","sourceRoot":"","sources":["../../../../../front_end/lighthouse/lighthouse-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AAExC,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAKlC,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB;;MAEE;IACF,UAAU,EAAE,YAAY;IACxB;;MAEE;IACF,GAAG,EAAE,KAAK;IACV;;OAEG;IACH,aAAa,EAAE,YAAY;CAC5B,CAAC;AAEF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,EAAE,SAAS,CAAC,CAAC;AACrF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,IAAI,sBAAqD,CAAC;AAE1D,KAAK,UAAU,oBAAoB;IACjC,IAAI,CAAC,sBAAsB,EAAE;QAC3B,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;QACtE,sBAAsB,GAAG,MAAM,MAAM,CAAC,iBAAiB,CAAC,CAAC;KAC1D;IACD,OAAO,sBAAsB,CAAC;AAChC,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,qBAAyC;IACjD,EAAE,EAAE,YAAY;IAChB,KAAK,EAAE,GAAsC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC;IAChF,aAAa,EAAE,iBAAiB;IAChC,KAAK,EAAE,EAAE;IACT,KAAK,CAAC,QAAQ;QACZ,MAAM,UAAU,GAAG,MAAM,oBAAoB,EAAE,CAAC;QAChD,OAAO,UAAU,CAAC,eAAe,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IAC/D,CAAC;IACD,IAAI,EAAE;QACJ,GAAsC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC;QAC5E,GAAsC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;KACnE;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../i18n/i18n.js';\nimport type * as Platform from '../platform/platform.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Lighthouse from './lighthouse.js';\n\nexport const UIStrings = {\n  /**\n  *@description Title of the 'Lighthouse' tool\n  */\n  lighthouse: 'Lighthouse',\n  /**\n  *@description A tag of Application Panel that can be searched in the command menu\n  */\n  pwa: 'pwa',\n  /**\n   *@description A tag of Lighthouse tool that can be searched in the command menu\n   */\n  lighthouseTag: 'lighthouse',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('lighthouse/lighthouse-meta.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet loadedLighthouseModule: (typeof Lighthouse|undefined);\n\nasync function loadLighthouseModule(): Promise<typeof Lighthouse> {\n  if (!loadedLighthouseModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('lighthouse');\n    loadedLighthouseModule = await import('./lighthouse.js');\n  }\n  return loadedLighthouseModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'lighthouse',\n  title: (): Platform.UIString.LocalizedString => i18nString(UIStrings.lighthouse),\n  commandPrompt: 'Show Lighthouse',\n  order: 90,\n  async loadView() {\n    const Lighthouse = await loadLighthouseModule();\n    return Lighthouse.LighthousePanel.LighthousePanel.instance();\n  },\n  tags: [\n    (): Platform.UIString.LocalizedString => i18nString(UIStrings.lighthouseTag),\n    (): Platform.UIString.LocalizedString => i18nString(UIStrings.pwa),\n  ],\n});\n"]}