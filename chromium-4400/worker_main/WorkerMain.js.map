{"version":3,"file":"WorkerMain.js","sourceRoot":"","sources":["../../../../../front_end/worker_main/WorkerMain.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,qBAAqB,CAAC;AAC9C,OAAO,KAAK,UAAU,MAAM,6BAA6B,CAAC;AAC1D,OAAO,KAAK,gBAAgB,MAAM,2CAA2C,CAAC;AAC9E,OAAO,EAAC,EAAE,EAAC,MAAM,yBAAyB,CAAC;AAC3C,OAAO,KAAK,GAAG,MAAM,eAAe,CAAC;AAErC;;GAEG;AACH,MAAM,OAAO,cAAe,SAAQ,MAAM,CAAC,aAAa,CAAC,aAAa;IACpE;;OAEG;IACH,KAAK,CAAC,GAAG;QACP,GAAG,CAAC,WAAW,CAAC,kBAAkB,CAAC,KAAK,IAAI,EAAE;YAC5C,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,CAAA,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QAC9G,CAAC,EAAE,UAAU,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,CAAC;QACjF,IAAI,gBAAgB,CAAC,qBAAqB,CAAC,qBAAqB,EAAE,CAAC;IACrE,CAAC;CACF;AAED,GAAG,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,OAAO,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,kBAAkB,EAAC,EAAE,EAAE;IACvF,gGAAgG;IAChG,IAAI,MAAM,CAAC,YAAY,EAAE,IAAI,MAAM,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,kBAAkB,EAAE;QACrG,OAAO;KACR;IACD,MAAM,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;IACpE,IAAI,CAAC,aAAa,EAAE;QAClB,OAAO;KACR;IACD,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,EAAE;QACnC,MAAM,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;KAC3E;IACD,aAAa,CAAC,KAAK,EAAE,CAAC;AACxB,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Components from '../components/components.js';\nimport * as MobileThrottling from '../mobile_throttling/mobile_throttling.js';\nimport {ls} from '../platform/platform.js';\nimport * as SDK from '../sdk/sdk.js';\n\n/**\n * @implements {Common.Runnable.Runnable}\n */\nexport class WorkerMainImpl extends Common.ObjectWrapper.ObjectWrapper {\n  /**\n   * @override\n   */\n  async run() {\n    SDK.Connections.initMainConnection(async () => {\n      SDK.SDKModel.TargetManager.instance().createTarget('main', ls`Main`, SDK.SDKModel.Type.ServiceWorker, null);\n    }, Components.TargetDetachedDialog.TargetDetachedDialog.webSocketConnectionLost);\n    new MobileThrottling.NetworkPanelIndicator.NetworkPanelIndicator();\n  }\n}\n\nSDK.ChildTargetManager.ChildTargetManager.install(async ({target, waitingForDebugger}) => {\n  // Only pause the new worker if debugging SW - we are going through the pause on start checkbox.\n  if (target.parentTarget() || target.type() !== SDK.SDKModel.Type.ServiceWorker || !waitingForDebugger) {\n    return;\n  }\n  const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n  if (!debuggerModel) {\n    return;\n  }\n  if (!debuggerModel.isReadyToPause()) {\n    await debuggerModel.once(SDK.DebuggerModel.Events.DebuggerIsReadyToPause);\n  }\n  debuggerModel.pause();\n});\n"]}