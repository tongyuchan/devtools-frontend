{"version":3,"file":"DebuggerLanguagePlugins.js","sourceRoot":"","sources":["../../../../../front_end/bindings/DebuggerLanguagePlugins.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport {ls} from '../platform/platform.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\nimport {DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';  // eslint-disable-line no-unused-vars\nimport {NetworkProject} from './NetworkProject.js';\n\nclass SourceType {\n  /**\n   * @param {!TypeInfo} typeInfo\n   * @param {!Array<!SourceType>} members\n   * @param {!Map<*, !SourceType>} typeMap\n   */\n  constructor(typeInfo, members, typeMap) {\n    this.typeInfo = typeInfo;\n    this.members = members;\n    this.typeMap = typeMap;\n  }\n\n  /** Create a type graph\n   * @param {!Array<!TypeInfo>} typeInfos\n   * @return {?SourceType}\n   */\n  static create(typeInfos) {\n    if (typeInfos.length === 0) {\n      return null;\n    }\n    /** @type Map<*, !SourceType> */\n    const typeMap = new Map();\n    for (const typeInfo of typeInfos) {\n      typeMap.set(typeInfo.typeId, new SourceType(typeInfo, [], typeMap));\n    }\n\n    for (const sourceType of typeMap.values()) {\n      sourceType.members = sourceType.typeInfo.members.map(({typeId}) => {\n        const memberType = typeMap.get(typeId);\n        if (!memberType) {\n          throw new Error(`Incomplete type information for type ${typeInfos[0].typeNames[0] || '<anonymous>'}`);\n        }\n        return memberType;\n      });\n    }\n\n    return typeMap.get(typeInfos[0].typeId) || null;\n  }\n}\n\n/**\n * Generates the raw module ID for a script, which is used\n * to uniquely identify the debugging data for a script on\n * the responsible language plugin.\n * @param {!SDK.Script.Script} script\n * @return the unique raw module ID for the script.\n */\nfunction rawModuleIdForScript(script) {\n  return `${script.sourceURL}@${script.hash}`;\n}\n\n/**\n * @param {!SDK.DebuggerModel.CallFrame} callFrame\n * @return {!RawLocation}\n */\nfunction getRawLocation(callFrame) {\n  const {script} = callFrame;\n  return {\n    rawModuleId: rawModuleIdForScript(script),\n    codeOffset: callFrame.location().columnNumber - (script.codeOffset() || 0),\n    inlineFrameIndex: callFrame.inlineFrameIndex\n  };\n}\n\n/**\n * @param {!SDK.DebuggerModel.CallFrame} callFrame\n * @param {!SDK.RemoteObject.RemoteObject} object\n * @return {!Promise<*>}\n */\nasync function resolveRemoteObject(callFrame, object) {\n  if (typeof object.value !== 'undefined') {\n    return object.value;\n  }\n\n  const response = await callFrame.debuggerModel.target().runtimeAgent().invoke_callFunctionOn(\n      {functionDeclaration: 'function() { return this; }', objectId: object.objectId, returnByValue: true});\n  const {result} = response;\n  if (!result) {\n    return undefined;\n  }\n  return result.value;\n}\n\n// Debugger language plugins present source-language values as trees with mixed dynamic and static structural\n// information. The static structure is defined by the variable's static type in the source language. Formatters are\n// able to present source-language values in an arbitrary user-friendly way, which contributes the dynamic structural\n// information. The classes StaticallyTypedValue and FormatedValueNode respectively implement the static and dynamic\n// parts in the RemoteObject tree that defines the presentation of the source-language value in the debugger UI.\n//\n// struct S {\n//   int i;\n//   struct A {\n//     int j;\n//   } a[3];\n// } s\n//\n// The RemoteObject tree representing the C struct above could look like the graph below with a formatter for the type\n// struct A[3], interleaving static and dynamic representations:\n//\n// StaticallyTypedValueNode   -->  s: struct S\n//                                 \\\n//                                 |\\\n// StaticallyTypedValueNode   -->  | i: int\n//                                 \\\n//                                  \\\n// StaticallyTypedValueNode   -->    a: struct A[3]\n//                                   \\\n//                                   |\\\n// FormattedValueNode         -->    | 0: struct A\n//                                   | \\\n//                                   |  \\\n// StaticallyTypedValueNode   -->    |   j: int\n//                                   .\n//                                   .\n//                                   .\n\n/** Create a new value tree from an expression.\n * @param {!SDK.DebuggerModel.CallFrame} callFrame\n * @param {!DebuggerLanguagePlugin} plugin\n * @param {string} expression\n * @param {!SDK.RuntimeModel.EvaluationOptions} evalOptions\n * @return {!Promise<!SDK.RemoteObject.RemoteObject>}\n */\nasync function getValueTreeForExpression(callFrame, plugin, expression, evalOptions) {\n  const location = getRawLocation(callFrame);\n\n  let typeInfo;\n  try {\n    typeInfo = await plugin.getTypeInfo(expression, location);\n  } catch (e) {\n    FormattingError.throwLocal(callFrame, e.message);\n  }\n  // If there's no type information we cannot represent this expression.\n  if (!typeInfo) {\n    return new SDK.RemoteObject.LocalJSONObject(undefined);\n  }\n  const {base, typeInfos} = typeInfo;\n  const sourceType = SourceType.create(typeInfos);\n  if (!sourceType) {\n    return new SDK.RemoteObject.LocalJSONObject(undefined);\n  }\n  if (sourceType.typeInfo.hasValue && !sourceType.typeInfo.canExpand && base) {\n    // Need to run the formatter for the expression result.\n    return formatSourceValue(callFrame, plugin, sourceType, base, [], evalOptions);\n  }\n\n  // Create a new value tree with static information for the root.\n  return new StaticallyTypedValueNode(callFrame, plugin, sourceType, base, [], evalOptions);\n}\n\n/** Run the formatter for the value defined by the pair of base and fieldChain.\n * @param {!SDK.DebuggerModel.CallFrame} callFrame\n * @param {!DebuggerLanguagePlugin} plugin\n * @param {!SourceType} sourceType\n * @param {!EvalBase} base\n * @param {!Array<!FieldInfo>} field\n * @param {!SDK.RuntimeModel.EvaluationOptions} evalOptions\n * @return {!Promise<!FormattedValueNode>}\n */\nasync function formatSourceValue(callFrame, plugin, sourceType, base, field, evalOptions) {\n  const location = getRawLocation(callFrame);\n\n  let evalCode = await plugin.getFormatter({base, field}, location);\n  if (!evalCode) {\n    evalCode = {js: ''};\n  }\n  const response = await callFrame.debuggerModel.target().debuggerAgent().invoke_evaluateOnCallFrame({\n    callFrameId: callFrame.id,\n    expression: evalCode.js,\n    objectGroup: evalOptions.objectGroup,\n    includeCommandLineAPI: evalOptions.includeCommandLineAPI,\n    silent: evalOptions.silent,\n    returnByValue: evalOptions.returnByValue,\n    generatePreview: evalOptions.generatePreview,\n    throwOnSideEffect: evalOptions.throwOnSideEffect,\n    timeout: evalOptions.timeout,\n  });\n  const error = response.getError();\n  if (error) {\n    throw new Error(error);\n  }\n\n  const {result, exceptionDetails} = response;\n  if (exceptionDetails) {\n    throw new FormattingError(callFrame.debuggerModel.runtimeModel().createRemoteObject(result), exceptionDetails);\n  }\n  // Wrap the formatted result into a FormattedValueNode.\n  const object = new FormattedValueNode(callFrame, sourceType, plugin, result, null, evalOptions);\n  // Check whether the formatter returned a plain object or and object alongisde a formatter tag.\n  const unpackedResultObject = await unpackResultObject(object);\n  const node = unpackedResultObject || object;\n\n  if (typeof node.value === 'undefined' && node.type !== 'undefined') {\n    node.description = sourceType.typeInfo.typeNames[0];\n  }\n\n  return node;\n\n  /**\n   * @param {!FormattedValueNode} object\n   * @return {!Promise<?FormattedValueNode>}\n   */\n  async function unpackResultObject(object) {\n    const {tag, value} = await object.findProperties('tag', 'value');\n    if (!tag || !value) {\n      return null;\n    }\n    const {className, symbol} = await tag.findProperties('className', 'symbol');\n    if (!className || !symbol) {\n      return null;\n    }\n    const resolvedClassName = className.value;\n    if (typeof resolvedClassName !== 'string' || typeof symbol.objectId === 'undefined') {\n      return null;\n    }\n\n    value.formatterTag = {symbol: symbol.objectId, className: resolvedClassName};\n    return value;\n  }\n}\n\n// Formatters produce proper JavaScript objects, which are mirrored as RemoteObjects. To implement interleaving of\n// formatted and statically typed values, formatters may insert markers in the JavaScript objects. The markers contain\n// the static type information (`EvalBase`)to create a new StaticallyTypedValueNode tree root. Markers are identified by\n// their className and the presence of a special Symbol property. Both the class name and the symbol are defined by the\n// `formatterTag` property.\n//\n// A FormattedValueNode is a RemoteObject whose properties can be either FormattedValueNodes or\n// StaticallyTypedValueNodes. The class hooks into the creation of RemoteObjects for properties to check whether a\n// property is a marker.\nclass FormattedValueNode extends SDK.RemoteObject.RemoteObjectImpl {\n  /**\n   * @param {!SDK.DebuggerModel.CallFrame} callFrame\n   * @param {!DebuggerLanguagePlugin} plugin\n   * @param {!SourceType} sourceType\n   * @param {!Protocol.Runtime.RemoteObject} object\n   * @param {?{className: string, symbol: string }} formatterTag\n   * @param {!SDK.RuntimeModel.EvaluationOptions} evalOptions\n   */\n  constructor(callFrame, sourceType, plugin, object, formatterTag, evalOptions) {\n    super(\n        callFrame.debuggerModel.runtimeModel(), object.objectId, object.type, object.subtype, object.value,\n        object.unserializableValue, object.description, object.preview, object.customPreview, object.className);\n\n    this._plugin = plugin;\n    this._sourceType = sourceType;\n    this._callFrame = callFrame;\n\n    // The tag describes how to identify a marker by its className and its identifier symbol's object id.\n    /** @type {?{className: string, symbol: string }} */\n    this.formatterTag = formatterTag;\n\n    this._evalOptions = evalOptions;\n  }\n\n  /**\n   * @param {...string} properties\n   * @return {!Promise<!Object<string, !FormattedValueNode|undefined>>}\n   */\n  async findProperties(...properties) {\n    /** @type {!Object<string, !FormattedValueNode|undefined>} */\n    const result = {};\n    for (const prop of (await this.getOwnProperties(false)).properties || []) {\n      if (properties.indexOf(prop.name) >= 0) {\n        if (prop.value) {\n          result[prop.name] = /** @type {!FormattedValueNode|undefined} */ (prop.value);\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Hook into RemoteObject creation for properties to check whether a property is a marker.\n   * @override\n   * @param {!Protocol.Runtime.RemoteObject} newObject\n   */\n  async _createRemoteObject(newObject) {\n    // Check if the property RemoteObject is a marker\n    const base = await this._getEvalBaseFromObject(newObject);\n    if (!base) {\n      return new FormattedValueNode(\n          this._callFrame, this._sourceType, this._plugin, newObject, this.formatterTag, this._evalOptions);\n    }\n\n    // Property is a marker, check if it's just static type information or if we need to run formatters for the value.\n    const newSourceType = this._sourceType.typeMap.get(base.rootType.typeId);\n    if (!newSourceType) {\n      throw new Error('Unknown typeId in eval base');\n    }\n    // The marker refers to a value that needs to be formatted, so run the formatter.\n    if (base.rootType.hasValue && !base.rootType.canExpand && base) {\n      return formatSourceValue(this._callFrame, this._plugin, newSourceType, base, [], this._evalOptions);\n    }\n\n    // The marker is just static information, so start a new subtree with a static type info root.\n    return new StaticallyTypedValueNode(this._callFrame, this._plugin, newSourceType, base, [], this._evalOptions);\n  }\n\n  /**\n   * Check whether an object is a marker and if so return the EvalBase it contains.\n   * @param {!Protocol.Runtime.RemoteObject} object\n   * @return {!Promise<?EvalBase>}\n   */\n  async _getEvalBaseFromObject(object) {\n    const {objectId} = object;\n    if (!object || !this.formatterTag) {\n      return null;\n    }\n\n    // A marker is definitively identified by the symbol property. To avoid checking the properties of all objects,\n    // check the className first for an early exit.\n    const {className, symbol} = this.formatterTag;\n    if (className !== object.className) {\n      return null;\n    }\n\n    const response = await this.debuggerModel().target().runtimeAgent().invoke_callFunctionOn(\n        {functionDeclaration: 'function(sym) { return this[sym]; }', objectId, arguments: [{objectId: symbol}]});\n    const {result} = response;\n    if (!result || result.type === 'undefined') {\n      return null;\n    }\n\n    // The object is a marker, so pull the static type information from its symbol property. The symbol property is not\n    // a formatted value per se, but we wrap it as one to be able to call `findProperties`.\n    const baseObject =\n        new FormattedValueNode(this._callFrame, this._sourceType, this._plugin, result, null, this._evalOptions);\n    const {payload, rootType} = await baseObject.findProperties('payload', 'rootType');\n    if (typeof payload === 'undefined' || typeof rootType === 'undefined') {\n      return null;\n    }\n    const value = await resolveRemoteObject(this._callFrame, payload);\n    const {typeId} = await rootType.findProperties('typeId', 'rootType');\n    if (typeof value === 'undefined' || typeof typeId === 'undefined') {\n      return null;\n    }\n\n    const newSourceType = this._sourceType.typeMap.get(typeId.value);\n    if (!newSourceType) {\n      return null;\n    }\n\n    return {payload: value, rootType: newSourceType.typeInfo};\n  }\n}\n\nclass FormattingError extends Error {\n  /**\n   * @param {!SDK.RemoteObject.RemoteObject} exception\n   * @param {!Protocol.Runtime.ExceptionDetails} exceptionDetails\n   */\n  constructor(exception, exceptionDetails) {\n    const {description} = exceptionDetails.exception || {};\n    super(description || exceptionDetails.text);\n    this.exception = exception;\n    this.exceptionDetails = exceptionDetails;\n  }\n\n  /**\n   * @param {!SDK.DebuggerModel.CallFrame} callFrame\n   * @param {string} message\n   */\n  static throwLocal(callFrame, message) {\n    /** @type {!Protocol.Runtime.RemoteObject} */\n    const exception = {\n      type: Protocol.Runtime.RemoteObjectType.Object,\n      subtype: Protocol.Runtime.RemoteObjectSubtype.Error,\n      description: message\n    };\n    /** @type {!Protocol.Runtime.ExceptionDetails} */\n    const exceptionDetails = {text: 'Uncaught', exceptionId: -1, columnNumber: 0, lineNumber: 0, exception};\n    const errorObject = callFrame.debuggerModel.runtimeModel().createRemoteObject(exception);\n    throw new FormattingError(errorObject, exceptionDetails);\n  }\n}\n\n// This class implements a `RemoteObject` for source language value whose immediate properties are defined purely by\n// static type information. Static type information is expressed by an `EvalBase` together with a `fieldChain`. The\n// latter is necessary to express navigating through type members. We don't know how to make sense of an `EvalBase`'s\n// payload here, which is why member navigation is relayed to the formatter via the `fieldChain`.\nclass StaticallyTypedValueNode extends SDK.RemoteObject.RemoteObjectImpl {\n  /**\n   * @param {!SDK.DebuggerModel.CallFrame} callFrame\n   * @param {!DebuggerLanguagePlugin} plugin\n   * @param {!SourceType} sourceType The source type for this node.\n   * @param {?EvalBase} base Base type information for the root of the current statically typed subtree.\n   * @param {!Array<!FieldInfo>} fieldChain A sequence of `FieldInfo`s gathered on the path from the base to this node.\n   * @param {!SDK.RuntimeModel.EvaluationOptions} evalOptions\n   */\n  constructor(callFrame, plugin, sourceType, base, fieldChain, evalOptions) {\n    const typeName = sourceType.typeInfo.typeNames[0] || '<anonymous>';\n    const variableType = 'object';\n    super(\n        callFrame.debuggerModel.runtimeModel(),\n        /* objectId=*/ undefined,\n        /* type=*/ variableType,\n        /* subtype=*/ undefined, /* value=*/ null, /* unserializableValue=*/ undefined,\n        /* description=*/ typeName, /* preview=*/ undefined, /* customPreview=*/ undefined, /* className=*/ typeName);\n    this._variableType = variableType;\n    this._callFrame = callFrame;\n    this._plugin = plugin;\n    /** @type {!SourceType} */\n    this._sourceType = sourceType;\n    this._base = base;\n    this._fieldChain = fieldChain;\n    this._hasChildren = true;\n    this._evalOptions = evalOptions;\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  get type() {\n    return this._variableType;\n  }\n\n  /**\n   * @param {!SourceType} sourceType\n   * @param {!FieldInfo} fieldInfo\n   * @return {!Promise<!SDK.RemoteObject.RemoteObject>}\n   */\n  async _expandMember(sourceType, fieldInfo) {\n    if (sourceType.typeInfo.hasValue && !sourceType.typeInfo.canExpand && this._base) {\n      return formatSourceValue(\n          this._callFrame, this._plugin, sourceType, this._base, this._fieldChain.concat(fieldInfo), this._evalOptions);\n    }\n    return new StaticallyTypedValueNode(\n        this._callFrame, this._plugin, sourceType, this._base, this._fieldChain.concat(fieldInfo), this._evalOptions);\n  }\n\n  /**\n   * @override\n   * @param {boolean} ownProperties\n   * @param {boolean} accessorPropertiesOnly\n   * @param {boolean} generatePreview\n   * @return {!Promise<!SDK.RemoteObject.GetPropertiesResult>}\n   */\n  async doGetProperties(ownProperties, accessorPropertiesOnly, generatePreview) {\n    const {typeInfo} = this._sourceType;\n    if (accessorPropertiesOnly || !typeInfo.canExpand) {\n      return /** @type {!SDK.RemoteObject.GetPropertiesResult} */ ({properties: [], internalProperties: []});\n    }\n\n    if (typeInfo.members.length > 0) {\n      // This value doesn't have a formatter, but we can eagerly expand arrays in the frontend if the size is known.\n      if (typeInfo.arraySize > 0) {\n        const {typeId} = this._sourceType.typeInfo.members[0];\n        /** @type {!Array<!SDK.RemoteObject.RemoteObjectProperty>} */\n        const properties = [];\n        const elementTypeInfo = this._sourceType.members[0];\n        for (let i = 0; i < typeInfo.arraySize; ++i) {\n          const name = `${i}`;\n          const elementField = {name, typeId, offset: elementTypeInfo.typeInfo.size * i};\n          properties.push(new SDK.RemoteObject.RemoteObjectProperty(\n              name, await this._expandMember(elementTypeInfo, elementField), /* enumerable=*/ false,\n              /* writable=*/ false,\n              /* isOwn=*/ true,\n              /* wasThrown=*/ false));\n        }\n        return /** @type {!SDK.RemoteObject.GetPropertiesResult} */ ({properties, internalProperties: []});\n      }\n\n      // The node is expanded, just make remote objects for its members\n      const members = Promise.all(this._sourceType.members.map(async (memberTypeInfo, idx) => {\n        const fieldInfo = this._sourceType.typeInfo.members[idx];\n        const propertyObject = await this._expandMember(memberTypeInfo, fieldInfo);\n        const name = fieldInfo.name || '';\n        return new SDK.RemoteObject.RemoteObjectProperty(\n            name, propertyObject, /* enumerable=*/ false, /* writable=*/ false, /* isOwn=*/ true,\n            /* wasThrown=*/ false);\n      }));\n      return /** @type {!SDK.RemoteObject.GetPropertiesResult} */ ({properties: await members, internalProperties: []});\n    }\n\n\n    return /** @type {!SDK.RemoteObject.GetPropertiesResult} */ ({properties: [], internalProperties: []});\n  }\n}\n\nclass NamespaceObject extends SDK.RemoteObject.LocalJSONObject {\n  /**\n   * @param {*} value\n   */\n  constructor(value) {\n    super(value);\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  get description() {\n    return this.type;\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  get type() {\n    return 'namespace';\n  }\n}\n\nclass SourceScopeRemoteObject extends SDK.RemoteObject.RemoteObjectImpl {\n  /**\n   * @param {!SDK.DebuggerModel.CallFrame} callFrame\n   * @param {!DebuggerLanguagePlugin} plugin\n   * @param {!RawLocation} location\n   */\n  constructor(callFrame, plugin, location) {\n    super(callFrame.debuggerModel.runtimeModel(), undefined, 'object', undefined, null);\n    /** @type {!Array<!Variable>} */\n    this.variables = [];\n    this._callFrame = callFrame;\n    this._plugin = plugin;\n    this._location = location;\n  }\n\n  /**\n   * @override\n   * @param {boolean} ownProperties\n   * @param {boolean} accessorPropertiesOnly\n   * @param {boolean} generatePreview\n   * @return {!Promise<!SDK.RemoteObject.GetPropertiesResult>}\n   */\n  async doGetProperties(ownProperties, accessorPropertiesOnly, generatePreview) {\n    if (accessorPropertiesOnly) {\n      return /** @type {!SDK.RemoteObject.GetPropertiesResult} */ ({properties: [], internalProperties: []});\n    }\n\n    const properties = [];\n    /** @type {!Object<string, !SDK.RemoteObject.RemoteObject>} */\n    const namespaces = {};\n\n    /**\n     * @param {string} name\n     * @param {!SDK.RemoteObject.RemoteObject} obj\n     */\n    function makeProperty(name, obj) {\n      return new SDK.RemoteObject.RemoteObjectProperty(\n          name, obj,\n          /* enumerable=*/ false, /* writable=*/ false, /* isOwn=*/ true, /* wasThrown=*/ false);\n    }\n\n    for (const variable of this.variables) {\n      let sourceVar;\n      try {\n        sourceVar = await getValueTreeForExpression(\n            this._callFrame, this._plugin, variable.name,\n            /** @type {!SDK.RuntimeModel.EvaluationOptions} */\n            ({\n              generatePreview: false,\n              includeCommandLineAPI: true,\n              objectGroup: 'backtrace',\n              returnByValue: false,\n              silent: false\n            }));\n      } catch (e) {\n        console.warn(e);\n        sourceVar = new SDK.RemoteObject.LocalJSONObject(undefined);\n      }\n      if (variable.nestedName && variable.nestedName.length > 1) {\n        let parent = namespaces;\n        for (let index = 0; index < variable.nestedName.length - 1; index++) {\n          const nestedName = variable.nestedName[index];\n          let child = parent[nestedName];\n          if (!child) {\n            child = new NamespaceObject({});\n            parent[nestedName] = child;\n          }\n          parent = child.value;\n        }\n        const name = variable.nestedName[variable.nestedName.length - 1];\n        parent[name] = sourceVar;\n      } else {\n        properties.push(makeProperty(variable.name, sourceVar));\n      }\n    }\n\n    for (const namespace in namespaces) {\n      properties.push(makeProperty(namespace, /** @type {!SDK.RemoteObject.RemoteObject} */ (namespaces[namespace])));\n    }\n\n    return /** @type {!SDK.RemoteObject.GetPropertiesResult} */ ({properties: properties, internalProperties: []});\n  }\n}\n\n/**\n * @implements {SDK.DebuggerModel.ScopeChainEntry}\n */\nexport class SourceScope {\n  /**\n   * @param {!SDK.DebuggerModel.CallFrame} callFrame\n   * @param {string} type\n   * @param {string} typeName\n   * @param {string|undefined} icon\n   * @param {!DebuggerLanguagePlugin} plugin\n   * @param {!RawLocation} location\n   */\n  constructor(callFrame, type, typeName, icon, plugin, location) {\n    this._callFrame = callFrame;\n    this._type = type;\n    this._typeName = typeName;\n    this._icon = icon;\n    this._object = new SourceScopeRemoteObject(callFrame, plugin, location);\n    this._name = type;\n    /** @type {?SDK.DebuggerModel.Location} */\n    this._startLocation = null;\n    /** @type {?SDK.DebuggerModel.Location} */\n    this._endLocation = null;\n  }\n\n  /**\n   * @param {string} name\n   * @return {!Promise<?SDK.RemoteObject.RemoteObject>}\n   */\n  async getVariableValue(name) {\n    for (let v = 0; v < this._object.variables.length; ++v) {\n      if (this._object.variables[v].name !== name) {\n        continue;\n      }\n      const properties = await this._object.getAllProperties(false, false);\n      if (!properties.properties) {\n        continue;\n      }\n      const {value} = properties.properties[v];\n      if (value) {\n        return value;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   * @return {!SDK.DebuggerModel.CallFrame}\n   */\n  callFrame() {\n    return this._callFrame;\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  type() {\n    return this._type;\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  typeName() {\n    return this._typeName;\n  }\n\n  /**\n   * @override\n   * @return {string|undefined}\n   */\n  name() {\n    return undefined;\n  }\n\n  /**\n   * @override\n   * @return {?SDK.DebuggerModel.Location}\n   */\n  startLocation() {\n    return this._startLocation;\n  }\n\n  /**\n   * @override\n   * @return {?SDK.DebuggerModel.Location}\n   */\n  endLocation() {\n    return this._endLocation;\n  }\n\n  /**\n   * @override\n   * @return {!SourceScopeRemoteObject}\n   */\n  object() {\n    return this._object;\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  description() {\n    return '';\n  }\n\n  /**\n   * @override\n   */\n  icon() {\n    return this._icon;\n  }\n}\n\n/**\n * @implements {SDK.SDKModel.SDKModelObserver<!SDK.DebuggerModel.DebuggerModel>}\n */\nexport class DebuggerLanguagePluginManager {\n  /**\n   * @param {!SDK.SDKModel.TargetManager} targetManager\n   * @param {!Workspace.Workspace.WorkspaceImpl} workspace\n   * @param {!DebuggerWorkspaceBinding} debuggerWorkspaceBinding\n   */\n  constructor(targetManager, workspace, debuggerWorkspaceBinding) {\n    this._workspace = workspace;\n    this._debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    /** @type {!Array<!DebuggerLanguagePlugin>} */\n    this._plugins = [];\n\n    /** @type {!Map<!SDK.DebuggerModel.DebuggerModel, !ModelData>} */\n    this._debuggerModelToData = new Map();\n    targetManager.observeModels(SDK.DebuggerModel.DebuggerModel, this);\n\n    /**\n     * @type {!Map<string, !{\n     *   rawModuleId: string,\n     *   plugin: !DebuggerLanguagePlugin,\n     *   scripts: !Array<!SDK.Script.Script>,\n     *   addRawModulePromise: !Promise<!Array<string>>\n     * }>}\n     */\n    this._rawModuleHandles = new Map();\n  }\n\n  /**\n   * @param {!SDK.DebuggerModel.CallFrame} callFrame\n   * @param {!SDK.RuntimeModel.EvaluationOptions} options\n   * @returns {!Promise<?SDK.RuntimeModel.EvaluationResult>}\n   */\n  async _evaluateOnCallFrame(callFrame, options) {\n    const {script} = callFrame;\n    const {expression} = options;\n    const {plugin} = await this._rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return null;\n    }\n    const location = getRawLocation(callFrame);\n    const sourceLocations = await plugin.rawLocationToSourceLocation(location);\n    if (sourceLocations.length === 0) {\n      return null;\n    }\n\n    try {\n      const object = await getValueTreeForExpression(callFrame, plugin, expression, options);\n      return {object, exceptionDetails: undefined};\n    } catch (error) {\n      if (error instanceof FormattingError) {\n        const {exception: object, exceptionDetails} = error;\n        return {object, exceptionDetails};\n      }\n      return {error: error.message};\n    }\n  }\n\n  /**\n   * @param {!Array<!SDK.DebuggerModel.CallFrame>} callFrames\n   * @return {!Promise<!Array<!SDK.DebuggerModel.CallFrame>>}\n   */\n  _expandCallFrames(callFrames) {\n    return Promise\n        .all(callFrames.map(async callFrame => {\n          const {frames} = await this.getFunctionInfo(callFrame);\n          if (frames.length) {\n            return frames.map(({name}, index) => callFrame.createVirtualCallFrame(index, name));\n          }\n          return callFrame;\n        }))\n        .then(callFrames => callFrames.flat());\n  }\n\n  /**\n   * @override\n   * @param {!SDK.DebuggerModel.DebuggerModel} debuggerModel\n   */\n  modelAdded(debuggerModel) {\n    this._debuggerModelToData.set(debuggerModel, new ModelData(debuggerModel, this._workspace));\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this._globalObjectCleared, this);\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.ParsedScriptSource, this._parsedScriptSource, this);\n    debuggerModel.setEvaluateOnCallFrameCallback(this._evaluateOnCallFrame.bind(this));\n    debuggerModel.setExpandCallFramesCallback(this._expandCallFrames.bind(this));\n  }\n\n  /**\n   * @override\n   * @param {!SDK.DebuggerModel.DebuggerModel} debuggerModel\n   */\n  modelRemoved(debuggerModel) {\n    debuggerModel.removeEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this._globalObjectCleared, this);\n    debuggerModel.removeEventListener(SDK.DebuggerModel.Events.ParsedScriptSource, this._parsedScriptSource, this);\n    debuggerModel.setEvaluateOnCallFrameCallback(null);\n    debuggerModel.setExpandCallFramesCallback(null);\n    const modelData = this._debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      modelData._dispose();\n      this._debuggerModelToData.delete(debuggerModel);\n    }\n    this._rawModuleHandles.forEach((rawModuleHandle, rawModuleId) => {\n      const scripts = rawModuleHandle.scripts.filter(script => script.debuggerModel !== debuggerModel);\n      if (scripts.length === 0) {\n        rawModuleHandle.plugin.removeRawModule(rawModuleId).catch(error => {\n          Common.Console.Console.instance().error(ls`Error in debugger language plugin: ${error.message}`);\n        });\n        this._rawModuleHandles.delete(rawModuleId);\n      } else {\n        rawModuleHandle.scripts = scripts;\n      }\n    });\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _globalObjectCleared(event) {\n    const debuggerModel = /** @type {!SDK.DebuggerModel.DebuggerModel} */ (event.data);\n    this.modelRemoved(debuggerModel);\n    this.modelAdded(debuggerModel);\n  }\n\n  /**\n   * @param {!DebuggerLanguagePlugin} plugin\n   */\n  addPlugin(plugin) {\n    this._plugins.push(plugin);\n    for (const debuggerModel of this._debuggerModelToData.keys()) {\n      for (const script of debuggerModel.scripts()) {\n        if (this.hasPluginForScript(script)) {\n          continue;\n        }\n        this._parsedScriptSource({data: script});\n      }\n    }\n  }\n\n  /**\n   * @param {!DebuggerLanguagePlugin} plugin\n   */\n  removePlugin(plugin) {\n    this._plugins = this._plugins.filter(p => p !== plugin);\n    const scripts = new Set();\n    this._rawModuleHandles.forEach((rawModuleHandle, rawModuleId) => {\n      if (rawModuleHandle.plugin !== plugin) {\n        return;\n      }\n      rawModuleHandle.scripts.forEach(script => scripts.add(script));\n      this._rawModuleHandles.delete(rawModuleId);\n    });\n    for (const script of scripts) {\n      const modelData = /** @type {!ModelData} */ (this._debuggerModelToData.get(script.debuggerModel));\n      modelData._removeScript(script);\n\n      // Let's see if we have another plugin that's happy to\n      // take this orphaned script now. This is important to\n      // get right, since the same plugin might race during\n      // unregister/register and we might already have the\n      // new instance of the plugin added before we remove\n      // the previous instance.\n      this._parsedScriptSource({data: script});\n    }\n  }\n\n  /**\n   * @param {!SDK.Script.Script} script\n   * @return {boolean}\n   */\n  hasPluginForScript(script) {\n    const rawModuleId = rawModuleIdForScript(script);\n    const rawModuleHandle = this._rawModuleHandles.get(rawModuleId);\n    return rawModuleHandle !== undefined && rawModuleHandle.scripts.includes(script);\n  }\n\n  /**\n   * Returns the responsible language plugin and the raw module ID for a script.\n   *\n   * This ensures that the `addRawModule` call finishes first such that the\n   * caller can immediately issue calls to the returned plugin without the\n   * risk of racing with the `addRawModule` call. The returned plugin will be\n   * set to undefined to indicate that there's no plugin for the script.\n   *\n   * @param {!SDK.Script.Script} script\n   * @return {!Promise<!{rawModuleId: string, plugin: ?DebuggerLanguagePlugin}>}\n   */\n  async _rawModuleIdAndPluginForScript(script) {\n    const rawModuleId = rawModuleIdForScript(script);\n    const rawModuleHandle = this._rawModuleHandles.get(rawModuleId);\n    if (rawModuleHandle) {\n      await rawModuleHandle.addRawModulePromise;\n      if (rawModuleHandle === this._rawModuleHandles.get(rawModuleId)) {\n        return {rawModuleId, plugin: rawModuleHandle.plugin};\n      }\n    }\n    return {rawModuleId, plugin: null};\n  }\n\n  /**\n   * @param {!SDK.DebuggerModel.Location} rawLocation\n   * @return {!Promise<?Workspace.UISourceCode.UILocation>}\n   */\n  async rawLocationToUILocation(rawLocation) {\n    const script = rawLocation.script();\n    if (!script) {\n      return null;\n    }\n    const {rawModuleId, plugin} = await this._rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return null;\n    }\n\n    const pluginLocation = {\n      rawModuleId,\n      // RawLocation.columnNumber is the byte offset in the full raw wasm module. Plugins expect the offset in the code\n      // section, so subtract the offset of the code section in the module here.\n      codeOffset: rawLocation.columnNumber - (script.codeOffset() || 0),\n      inlineFrameIndex: rawLocation.inlineFrameIndex\n    };\n\n    try {\n      const sourceLocations = await plugin.rawLocationToSourceLocation(pluginLocation);\n      for (const sourceLocation of sourceLocations) {\n        const modelData = this._debuggerModelToData.get(script.debuggerModel);\n        if (!modelData) {\n          continue;\n        }\n        const uiSourceCode = modelData._project.uiSourceCodeForURL(sourceLocation.sourceFileURL);\n        if (!uiSourceCode) {\n          continue;\n        }\n        // Absence of column information is indicated by the value `-1` in talking to language plugins.\n        return uiSourceCode.uiLocation(\n            sourceLocation.lineNumber, sourceLocation.columnNumber >= 0 ? sourceLocation.columnNumber : undefined);\n      }\n    } catch (error) {\n      Common.Console.Console.instance().error(ls`Error in debugger language plugin: ${error.message}`);\n    }\n    return null;\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @param {number} lineNumber\n   * @param {number=} columnNumber\n   * @return {!Promise<?Array<!{start: !SDK.DebuggerModel.Location, end: !SDK.DebuggerModel.Location}>>} Returns null if this manager does not have a plugin for it.\n   */\n  uiLocationToRawLocationRanges(uiSourceCode, lineNumber, columnNumber = -1) {\n    /** @type {!Array<!Promise<!Array<!{start: !SDK.DebuggerModel.Location, end: !SDK.DebuggerModel.Location}>>>} */\n    const locationPromises = [];\n    this.scriptsForUISourceCode(uiSourceCode).forEach(script => {\n      const rawModuleId = rawModuleIdForScript(script);\n      const rawModuleHandle = this._rawModuleHandles.get(rawModuleId);\n      if (!rawModuleHandle) {\n        return;\n      }\n      const {plugin} = rawModuleHandle;\n      locationPromises.push(getLocations(rawModuleId, plugin, script));\n    });\n    if (locationPromises.length === 0) {\n      return Promise.resolve(null);\n    }\n\n    return Promise.all(locationPromises).then(locations => locations.flat()).catch(error => {\n      Common.Console.Console.instance().error(ls`Error in debugger language plugin: ${error.message}`);\n      return null;\n    });\n\n    /**\n     * @param {string} rawModuleId\n     * @param {!DebuggerLanguagePlugin} plugin\n     * @param {!SDK.Script.Script} script\n     * @return {!Promise<!Array<!{start: !SDK.DebuggerModel.Location, end: !SDK.DebuggerModel.Location}>>}\n     */\n    async function getLocations(rawModuleId, plugin, script) {\n      const pluginLocation = {rawModuleId, sourceFileURL: uiSourceCode.url(), lineNumber, columnNumber};\n\n      const rawLocations = await plugin.sourceLocationToRawLocation(pluginLocation);\n      if (!rawLocations) {\n        return [];\n      }\n      return rawLocations.map(\n          m => ({\n            start: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.startOffset) + (script.codeOffset() || 0)),\n            end: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.endOffset) + (script.codeOffset() || 0))\n          }));\n    }\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @param {number} lineNumber\n   * @param {number=} columnNumber\n   * @return {!Promise<?Array<!SDK.DebuggerModel.Location>>} Returns null if this manager does not have a plugin for it.\n   */\n  async uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber) {\n    const locationRanges = await this.uiLocationToRawLocationRanges(uiSourceCode, lineNumber, columnNumber);\n    if (!locationRanges) {\n      return null;\n    }\n    return locationRanges.map(({start}) => start);\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @return {!Array<!SDK.Script.Script>}\n   */\n  scriptsForUISourceCode(uiSourceCode) {\n    for (const modelData of this._debuggerModelToData.values()) {\n      const scripts = modelData._uiSourceCodeToScripts.get(uiSourceCode);\n      if (scripts) {\n        return scripts;\n      }\n    }\n    return [];\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _parsedScriptSource(event) {\n    const script = /** @type {!SDK.Script.Script} */ (event.data);\n    if (!script.sourceURL) {\n      return;\n    }\n\n    for (const plugin of this._plugins) {\n      if (!plugin.handleScript(script)) {\n        return;\n      }\n      const rawModuleId = rawModuleIdForScript(script);\n      let rawModuleHandle = this._rawModuleHandles.get(rawModuleId);\n      if (!rawModuleHandle) {\n        const sourceFileURLsPromise = (async () => {\n          const console = Common.Console.Console.instance();\n          const url = script.sourceURL;\n          const symbolsUrl = (script.debugSymbols && script.debugSymbols.externalURL) || '';\n          if (symbolsUrl) {\n            console.log(ls`[${plugin.name}] Loading debug symbols for ${url} (via ${symbolsUrl})...`);\n          } else {\n            console.log(ls`[${plugin.name}] Loading debug symbols for ${url}...`);\n          }\n          try {\n            const code = (!symbolsUrl && url.startsWith('wasm://')) ? await script.getWasmBytecode() : undefined;\n            const sourceFileURLs = await plugin.addRawModule(rawModuleId, symbolsUrl, {url, code});\n            // Check that the handle isn't stale by now. This works because the code that assigns to\n            // `rawModuleHandle` below will run before this code because of the `await` in the preceding\n            // line. This is primarily to avoid logging the message below, which would give the developer\n            // the misleading information that we're done, while in reality it was a stale call that finished.\n            if (rawModuleHandle !== this._rawModuleHandles.get(rawModuleId)) {\n              return [];\n            }\n            if (sourceFileURLs.length === 0) {\n              console.warn(ls`[${plugin.name}] Loaded debug symbols for ${url}, but didn't find any source files`);\n            } else {\n              console.log(\n                  ls`[${plugin.name}] Loaded debug symbols for ${url}, found ${sourceFileURLs.length} source file(s)`);\n            }\n            return sourceFileURLs;\n          } catch (error) {\n            console.error(ls`[${plugin.name}] Failed to load debug symbols for ${url} (${error.message})`);\n            this._rawModuleHandles.delete(rawModuleId);\n            return [];\n          }\n        })();\n        rawModuleHandle = {rawModuleId, plugin, scripts: [script], addRawModulePromise: sourceFileURLsPromise};\n        this._rawModuleHandles.set(rawModuleId, rawModuleHandle);\n      } else {\n        rawModuleHandle.scripts.push(script);\n      }\n\n      // Wait for the addRawModule call to finish and\n      // update the project. It's important to check\n      // for the DebuggerModel again, which may disappear\n      // in the meantime...\n      rawModuleHandle.addRawModulePromise.then(sourceFileURLs => {\n        // The script might have disappeared meanwhile...\n        if (script.debuggerModel.scriptForId(script.scriptId) === script) {\n          const modelData = this._debuggerModelToData.get(script.debuggerModel);\n          if (modelData) {  // The DebuggerModel could have disappeared meanwhile...\n            modelData._addSourceFiles(script, sourceFileURLs);\n            this._debuggerWorkspaceBinding.updateLocations(script);\n          }\n        }\n      });\n      return;\n    }\n  }\n\n  /**\n   * @param {!SDK.DebuggerModel.CallFrame} callFrame\n   * @return {!Promise<?Array<!SourceScope>>}\n   */\n  async resolveScopeChain(callFrame) {\n    const script = callFrame.script;\n    const {rawModuleId, plugin} = await this._rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return null;\n    }\n\n    const location = {\n      rawModuleId,\n      codeOffset: callFrame.location().columnNumber - (script.codeOffset() || 0),\n      inlineFrameIndex: callFrame.inlineFrameIndex\n    };\n\n    try {\n      const sourceMapping = await plugin.rawLocationToSourceLocation(location);\n      if (sourceMapping.length === 0) {\n        return null;\n      }\n      /** @type {!Map<string, !SourceScope>} */\n      const scopes = new Map();\n      const variables = await plugin.listVariablesInScope(location);\n      for (const variable of variables || []) {\n        let scope = scopes.get(variable.scope);\n        if (!scope) {\n          const {type, typeName, icon} = await plugin.getScopeInfo(variable.scope);\n          scope = new SourceScope(callFrame, type, typeName, icon, plugin, location);\n          scopes.set(variable.scope, scope);\n        }\n        scope.object().variables.push(variable);\n      }\n      return Array.from(scopes.values());\n    } catch (error) {\n      Common.Console.Console.instance().error(ls`Error in debugger language plugin: ${error.message}`);\n      return null;\n    }\n  }\n\n  /**\n   * @param {!SDK.DebuggerModel.CallFrame} callFrame\n   * @return {!Promise<!{frames: !Array<!FunctionInfo>}>}\n   */\n  async getFunctionInfo(callFrame) {\n    const noDwarfInfo = {frames: []};\n    if (!callFrame) {\n      return noDwarfInfo;\n    }\n    const script = callFrame.script;\n    const {rawModuleId, plugin} = await this._rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return noDwarfInfo;\n    }\n\n    /** @type {!RawLocation}} */\n    const location = {\n      rawModuleId,\n      codeOffset: callFrame.location().columnNumber - (script.codeOffset() || 0),\n    };\n\n    try {\n      return await plugin.getFunctionInfo(location);\n    } catch (error) {\n      Common.Console.Console.instance().warn(ls`Error in debugger language plugin: ${error.message}`);\n      return noDwarfInfo;\n    }\n  }\n\n  /**\n   * @param {!SDK.DebuggerModel.Location} rawLocation\n   * @return {!Promise<!Array<!{start: !SDK.DebuggerModel.Location, end: !SDK.DebuggerModel.Location}>>} Returns an empty list if this manager does not have a plugin for it.\n   */\n  async getInlinedFunctionRanges(rawLocation) {\n    const script = rawLocation.script();\n    if (!script) {\n      return [];\n    }\n    const {rawModuleId, plugin} = await this._rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return [];\n    }\n\n    const pluginLocation = {\n      rawModuleId,\n      // RawLocation.columnNumber is the byte offset in the full raw wasm module. Plugins expect the offset in the code\n      // section, so subtract the offset of the code section in the module here.\n      codeOffset: rawLocation.columnNumber - (script.codeOffset() || 0),\n    };\n\n    try {\n      const locations = await plugin.getInlinedFunctionRanges(pluginLocation);\n      return locations.map(\n          m => ({\n            start: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.startOffset) + (script.codeOffset() || 0)),\n            end: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.endOffset) + (script.codeOffset() || 0))\n          }));\n    } catch (error) {\n      Common.Console.Console.instance().warn(ls`Error in debugger language plugin: ${error.message}`);\n      return [];\n    }\n  }\n\n  /**\n   * @param {!SDK.DebuggerModel.Location} rawLocation\n   * @return {!Promise<!Array<!{start: !SDK.DebuggerModel.Location, end: !SDK.DebuggerModel.Location}>>} Returns an empty list if this manager does not have a plugin for it.\n   */\n  async getInlinedCalleesRanges(rawLocation) {\n    const script = rawLocation.script();\n    if (!script) {\n      return [];\n    }\n    const {rawModuleId, plugin} = await this._rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return [];\n    }\n\n    const pluginLocation = {\n      rawModuleId,\n      // RawLocation.columnNumber is the byte offset in the full raw wasm module. Plugins expect the offset in the code\n      // section, so subtract the offset of the code section in the module here.\n      codeOffset: rawLocation.columnNumber - (script.codeOffset() || 0),\n    };\n\n    try {\n      const locations = await plugin.getInlinedCalleesRanges(pluginLocation);\n      return locations.map(\n          m => ({\n            start: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.startOffset) + (script.codeOffset() || 0)),\n            end: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.endOffset) + (script.codeOffset() || 0))\n          }));\n    } catch (error) {\n      Common.Console.Console.instance().warn(ls`Error in debugger language plugin: ${error.message}`);\n      return [];\n    }\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   */\n  async getMappedLines(uiSourceCode) {\n    const rawModuleIds =\n        await Promise.all(this.scriptsForUISourceCode(uiSourceCode).map(s => this._rawModuleIdAndPluginForScript(s)));\n\n    /** @type {Set<number> | undefined} */\n    let mappedLines;\n    for (const {rawModuleId, plugin} of rawModuleIds) {\n      if (!plugin) {\n        continue;\n      }\n      const lines = await plugin.getMappedLines(rawModuleId, uiSourceCode.url());\n\n      if (lines === undefined) {\n        continue;\n      }\n      if (mappedLines === undefined) {\n        mappedLines = new Set(lines);\n      } else {\n        /**\n         * @param {number} l\n         */\n        lines.forEach(l => /** @type {!Set<number>} */ (mappedLines).add(l));\n      }\n    }\n    return mappedLines;\n  }\n}\n\nclass ModelData {\n  /**\n   * @param {!SDK.DebuggerModel.DebuggerModel} debuggerModel\n   * @param {!Workspace.Workspace.WorkspaceImpl} workspace\n   */\n  constructor(debuggerModel, workspace) {\n    this._debuggerModel = debuggerModel;\n    this._project = new ContentProviderBasedProject(\n        workspace, 'language_plugins::' + debuggerModel.target().id(), Workspace.Workspace.projectTypes.Network, '',\n        false /* isServiceProject */);\n    NetworkProject.setTargetForProject(this._project, debuggerModel.target());\n\n    /** @type {!Map<!Workspace.UISourceCode.UISourceCode, !Array<!SDK.Script.Script>>} */\n    this._uiSourceCodeToScripts = new Map();\n  }\n\n  /**\n   * @param {!SDK.Script.Script} script\n   * @param {!Array<string>} urls\n   */\n  _addSourceFiles(script, urls) {\n    const initiator = script.createPageResourceLoadInitiator();\n    for (const url of urls) {\n      let uiSourceCode = this._project.uiSourceCodeForURL(url);\n      if (!uiSourceCode) {\n        uiSourceCode = this._project.createUISourceCode(url, Common.ResourceType.resourceTypes.SourceMapScript);\n        NetworkProject.setInitialFrameAttribution(uiSourceCode, script.frameId);\n\n        // Bind the uiSourceCode to the script first before we add the\n        // uiSourceCode to the project and thereby notify the rest of\n        // the system about the new source file.\n        // https://crbug.com/1150295 is an example where the breakpoint\n        // resolution logic kicks in right after adding the uiSourceCode\n        // and at that point we already need to have the mapping in place\n        // otherwise we will not get the breakpoint right.\n        this._uiSourceCodeToScripts.set(uiSourceCode, [script]);\n\n        const contentProvider = new SDK.CompilerSourceMappingContentProvider.CompilerSourceMappingContentProvider(\n            url, Common.ResourceType.resourceTypes.SourceMapScript, initiator);\n        const mimeType = Common.ResourceType.ResourceType.mimeFromURL(url) || 'text/javascript';\n        this._project.addUISourceCodeWithProvider(uiSourceCode, contentProvider, null, mimeType);\n      } else {\n        // The same uiSourceCode can be provided by different scripts,\n        // but we don't expect that to happen frequently.\n        const scripts = /** @type {!Array<!SDK.Script.Script>} */ (this._uiSourceCodeToScripts.get(uiSourceCode));\n        if (!scripts.includes(script)) {\n          scripts.push(script);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!SDK.Script.Script} script\n   */\n  _removeScript(script) {\n    this._uiSourceCodeToScripts.forEach((scripts, uiSourceCode) => {\n      scripts = scripts.filter(s => s !== script);\n      if (scripts.length === 0) {\n        this._uiSourceCodeToScripts.delete(uiSourceCode);\n        this._project.removeUISourceCode(uiSourceCode.url());\n      } else {\n        this._uiSourceCodeToScripts.set(uiSourceCode, scripts);\n      }\n    });\n  }\n\n  _dispose() {\n    this._project.dispose();\n  }\n}\n\n/** Raw modules represent compiled JavaScript Scripts or Wasm Modules\n * @typedef {{\n *            url: string,\n *            code: (ArrayBuffer|undefined)\n *          }}\n */\n// @ts-ignore typedef\nexport let RawModule;\n\n/** Code ranges in raw modules\n * @typedef {{\n *            rawModuleId:string,\n *            startOffset:number,\n *            endOffset:number\n *          }}\n */\n// @ts-ignore typedef\nexport let RawLocationRange;\n\n/** Offsets in raw modules\n * @typedef {{\n *            rawModuleId: string,\n *            codeOffset: number,\n *            inlineFrameIndex?: number\n *          }}\n */\n// @ts-ignore typedef\nexport let RawLocation;\n\n/** Locations in source files. A columnNumber of `-1` indicates that the location refers to the whole line.\n * @typedef {{\n *            rawModuleId: string,\n *            sourceFileURL: string,\n *            lineNumber: number,\n *            columnNumber: number\n *          }}\n */\n// @ts-ignore typedef\nexport let SourceLocation;\n\n/** A source language variable\n * @typedef {{\n *            scope: string,\n *            name: string,\n *            type: string,\n *            nestedName: ?Array<string>\n *          }}\n */\n// @ts-ignore typedef\nexport let Variable;\n\n/** The value of a source language variable\n * @typedef {{\n *            value: (string|!Array<!VariableValue>),\n *            js_type: string,\n *            type: string,\n *            name: string\n *          }}\n */\n// @ts-ignore typedef\nexport let VariableValue;\n\n\n/** Either the code of an evaluator module or a constant representation of a variable\n * @typedef {{\n *            code: (!ArrayBuffer|undefined),\n *            constantValue: (!VariableValue|undefined)\n *          }}\n */\n// @ts-ignore typedef\nexport let EvaluatorModule;\n\n/** Description of a scope\n * @typedef {{\n *            type: string,\n *            typeName: string,\n *            icon: (string|undefined)\n *          }}\n */\n// @ts-ignore typedef\nexport let ScopeInfo;\n\n/** Either the code of an evaluator module or a constant representation of a variable\n * @typedef {{\n *            name: string\n *          }}\n */\n// @ts-ignore typedef\nexport let FunctionInfo;\n\n/**\n * @typedef {{\n *            name: (string|undefined),\n *            offset: number,\n *            typeId: *\n *}}\n */\n// @ts-ignore typedef\nexport let FieldInfo;\n/**\n * @typedef {{\n *            typeNames: !Array<string>,\n *            typeId: *,\n *            members: !Array<!FieldInfo>,\n *            alignment: number,\n *            arraySize: number,\n *            size: number,\n *            canExpand: boolean,\n *            hasValue: boolean\n *          }}\n */\n// @ts-ignore typedef\nexport let TypeInfo;\n\n/**\n * @typedef {{\n *            rootType: TypeInfo,\n *            payload: *\n *}}\n*/\n// @ts-ignore typedef\nexport let EvalBase;\n\nexport class DebuggerLanguagePlugin {\n  /**\n   * @param {string} name The user visible name for the plugin.\n   */\n  constructor(name) {\n    this.name = name;\n  }\n\n  /**\n   * @param {!SDK.Script.Script} script\n   * @return {boolean} True if this plugin should handle this script\n   */\n  handleScript(script) {\n    throw new Error('Not implemented yet');\n  }\n\n  dispose() {\n  }\n\n  /** Notify the plugin about a new script\n   * @param {string} rawModuleId\n   * @param {string} symbolsURL - URL of a file providing the debug symbols for this module\n   * @param {!RawModule} rawModule\n   * @return {!Promise<!Array<string>>} - An array of URLs for the source files for the raw module\n  */\n  async addRawModule(rawModuleId, symbolsURL, rawModule) {\n    throw new Error('Not implemented yet');\n  }\n\n  /** Find locations in raw modules from a location in a source file\n   * @param {!SourceLocation} sourceLocation\n   * @return {!Promise<!Array<!RawLocationRange>>}\n  */\n  async sourceLocationToRawLocation(sourceLocation) {\n    throw new Error('Not implemented yet');\n  }\n\n  /** Find locations in source files from a location in a raw module\n   * @param {!RawLocation} rawLocation\n   * @return {!Promise<!Array<!SourceLocation>>}\n  */\n  async rawLocationToSourceLocation(rawLocation) {\n    throw new Error('Not implemented yet');\n  }\n\n  /** Return detailed information about a scope\n   * @param {string} type\n   * @return {!Promise<!ScopeInfo>}\n   */\n  async getScopeInfo(type) {\n    throw new Error('Not implemented yet');\n  }\n\n  /** List all variables in lexical scope at a given location in a raw module\n   * @param {!RawLocation} rawLocation\n   * @return {!Promise<!Array<!Variable>>}\n  */\n  async listVariablesInScope(rawLocation) {\n    throw new Error('Not implemented yet');\n  }\n\n  /** Evaluate the content of a variable in a given lexical scope\n   * @param {string} name\n   * @param {!RawLocation} location\n   * @return {!Promise<?EvaluatorModule>}\n  */\n  async evaluateVariable(name, location) {\n    throw new Error('Not implemented yet');\n  }\n\n  /**\n   * Notifies the plugin that a script is removed.\n   * @param {string} rawModuleId\n   * @return {!Promise<void>}\n   */\n  removeRawModule(rawModuleId) {\n    throw new Error('Not implemented yet');\n  }\n\n  /**\n   * @param {string} expression\n   * @param {!RawLocation} context\n   * @return {!Promise<?{typeInfos: !Array<!TypeInfo>, base: !EvalBase}>}\n   */\n  getTypeInfo(expression, context) {\n    throw new Error('Not implemented yet');\n  }\n\n  /**\n   * @param {string|!{base: !EvalBase, field: !Array<!FieldInfo>}} expressionOrField\n   * @param {!RawLocation} context\n   * @return {!Promise<?{js:string}>}\n   */\n  getFormatter(expressionOrField, context) {\n    throw new Error('Not implemented yet');\n  }\n\n  /** Find locations in source files from a location in a raw module\n   * @param {!RawLocation} rawLocation\n   * @return {!Promise<!{frames: !Array<!FunctionInfo>}>}\n  */\n  async getFunctionInfo(rawLocation) {\n    throw new Error('Not implemented yet');\n  }\n\n  /** Find locations in raw modules corresponding to the inline function\n   *  that rawLocation is in. Used for stepping out of an inline function.\n   * @param {!RawLocation} rawLocation\n   * @return {!Promise<!Array<!RawLocationRange>>}\n  */\n  async getInlinedFunctionRanges(rawLocation) {\n    throw new Error('Not implemented yet');\n  }\n\n  /** Find locations in raw modules corresponding to inline functions\n   *  called by the function or inline frame that rawLocation is in.\n   *  Used for stepping over inline functions.\n   * @param {!RawLocation} rawLocation\n   * @return {!Promise<!Array<!RawLocationRange>>}\n  */\n  async getInlinedCalleesRanges(rawLocation) {\n    throw new Error('Not implemented yet');\n  }\n\n  /**\n   * @param {string} rawModuleId\n   * @param {string} sourceFileURL\n   * @return {!Promise<!Array<number>|undefined>}\n   */\n  async getMappedLines(rawModuleId, sourceFileURL) {\n    throw new Error('Not implemented yet');\n  }\n}\n"]}