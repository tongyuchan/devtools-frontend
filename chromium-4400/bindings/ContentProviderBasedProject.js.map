{"version":3,"file":"ContentProviderBasedProject.js","sourceRoot":"","sources":["../../../../../front_end/bindings/ContentProviderBasedProject.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';  // eslint-disable-line no-unused-vars\nimport {ls} from '../platform/platform.js';\nimport * as TextUtils from '../text_utils/text_utils.js';  // eslint-disable-line no-unused-vars\nimport * as Workspace from '../workspace/workspace.js';\n\n/**\n * @typedef {{\n *   mimeType: string,\n *   metadata: ?Workspace.UISourceCode.UISourceCodeMetadata\n * }}\n */\nlet UISourceCodeData;  // eslint-disable-line no-unused-vars\n\n/**\n * @implements {Workspace.Workspace.Project}\n */\nexport class ContentProviderBasedProject extends Workspace.Workspace.ProjectStore {\n  /**\n   * @param {!Workspace.Workspace.WorkspaceImpl} workspace\n   * @param {string} id\n   * @param {!Workspace.Workspace.projectTypes} type\n   * @param {string} displayName\n   * @param {boolean} isServiceProject\n   */\n  constructor(workspace, id, type, displayName, isServiceProject) {\n    super(workspace, id, type, displayName);\n    /** @type {!Map<string, !TextUtils.ContentProvider.ContentProvider>} */\n    this._contentProviders = new Map();\n    this._isServiceProject = isServiceProject;\n    /** @type {!WeakMap<!Workspace.UISourceCode.UISourceCode, !UISourceCodeData>} */\n    this._uiSourceCodeToData = new WeakMap();\n    workspace.addProject(this);\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @returns {!Promise<!TextUtils.ContentProvider.DeferredContent>}\n   */\n  async requestFileContent(uiSourceCode) {\n    const contentProvider =\n        /** @type {!TextUtils.ContentProvider.ContentProvider} */ (this._contentProviders.get(uiSourceCode.url()));\n    try {\n      const [content, isEncoded] =\n          await Promise.all([contentProvider.requestContent(), contentProvider.contentEncoded()]);\n      return {content: content.content, isEncoded, error: 'error' in content && content.error || ''};\n    } catch (err) {\n      // TODO(rob.paveza): CRBug 1013683 - Consider propagating exceptions full-stack\n      return {content: null, isEncoded: false, error: err ? String(err) : ls`Unknown error loading file`};\n    }\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  isServiceProject() {\n    return this._isServiceProject;\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @return {!Promise<?Workspace.UISourceCode.UISourceCodeMetadata>}\n   */\n  async requestMetadata(uiSourceCode) {\n    const {metadata} = /** @type {!UISourceCodeData} */ (this._uiSourceCodeToData.get(uiSourceCode));\n    return metadata;\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  canSetFileContent() {\n    return false;\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @param {string} newContent\n   * @param {boolean} isBase64\n   * @return {!Promise<void>}\n   */\n  async setFileContent(uiSourceCode, newContent, isBase64) {\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @return {string}\n   */\n  fullDisplayName(uiSourceCode) {\n    let parentPath = uiSourceCode.parentURL().replace(/^(?:https?|file)\\:\\/\\//, '');\n    try {\n      parentPath = decodeURI(parentPath);\n    } catch (e) {\n    }\n    return parentPath + '/' + uiSourceCode.displayName(true);\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @return {string}\n   */\n  mimeType(uiSourceCode) {\n    const {mimeType} = /** @type {!UISourceCodeData} */ (this._uiSourceCodeToData.get(uiSourceCode));\n    return mimeType;\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  canRename() {\n    return false;\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @param {string} newName\n   * @param {function(boolean, string=, string=, !Common.ResourceType.ResourceType=):void} callback\n   */\n  rename(uiSourceCode, newName, callback) {\n    const path = uiSourceCode.url();\n    this.performRename(path, newName, innerCallback.bind(this));\n\n    /**\n     * @param {boolean} success\n     * @param {string=} newName\n     * @this {ContentProviderBasedProject}\n     */\n    function innerCallback(success, newName) {\n      if (success && newName) {\n        const copyOfPath = path.split('/');\n        copyOfPath[copyOfPath.length - 1] = newName;\n        const newPath = copyOfPath.join('/');\n        const contentProvider =\n            /** @type {!TextUtils.ContentProvider.ContentProvider} */ (this._contentProviders.get(path));\n        this._contentProviders.set(newPath, contentProvider);\n        this._contentProviders.delete(path);\n        this.renameUISourceCode(uiSourceCode, newName);\n      }\n      callback(success, newName);\n    }\n  }\n\n  /**\n   * @override\n   * @param {string} path\n   */\n  excludeFolder(path) {\n  }\n\n  /**\n   * @override\n   * @param {string} path\n   * @return {boolean}\n   */\n  canExcludeFolder(path) {\n    return false;\n  }\n\n  /**\n   * @override\n   * @param {string} path\n   * @param {?string} name\n   * @param {string} content\n   * @param {boolean=} isBase64\n   * @return {!Promise<?Workspace.UISourceCode.UISourceCode>}\n   */\n  async createFile(path, name, content, isBase64) {\n    return null;\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  canCreateFile() {\n    return false;\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   */\n  deleteFile(uiSourceCode) {\n  }\n\n  /**\n   * @override\n   */\n  remove() {\n  }\n\n  /**\n   * @param {string} path\n   * @param {string} newName\n   * @param {function(boolean, string=):void} callback\n   */\n  performRename(path, newName, callback) {\n    callback(false);\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @param {string} query\n   * @param {boolean} caseSensitive\n   * @param {boolean} isRegex\n   * @return {!Promise<!Array<!TextUtils.ContentProvider.SearchMatch>>}\n   */\n  searchInFileContent(uiSourceCode, query, caseSensitive, isRegex) {\n    const contentProvider =\n        /** @type {!TextUtils.ContentProvider.ContentProvider} */ (this._contentProviders.get(uiSourceCode.url()));\n    return contentProvider.searchInContent(query, caseSensitive, isRegex);\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.Workspace.ProjectSearchConfig} searchConfig\n   * @param {!Array<string>} filesMathingFileQuery\n   * @param {!Common.Progress.Progress} progress\n   * @return {!Promise<!Array<string>>}\n   */\n  async findFilesMatchingSearchRequest(searchConfig, filesMathingFileQuery, progress) {\n    /** @type {!Array<string>} */\n    const result = [];\n    progress.setTotalWork(filesMathingFileQuery.length);\n    await Promise.all(filesMathingFileQuery.map(searchInContent.bind(this)));\n    progress.done();\n    return result;\n\n    /**\n     * @param {string} path\n     * @this {ContentProviderBasedProject}\n     */\n    async function searchInContent(path) {\n      const contentProvider =\n          /** @type {!TextUtils.ContentProvider.ContentProvider} */ (this._contentProviders.get(path));\n      let allMatchesFound = true;\n      for (const query of searchConfig.queries().slice()) {\n        const searchMatches =\n            await contentProvider.searchInContent(query, !searchConfig.ignoreCase(), searchConfig.isRegex());\n        if (!searchMatches.length) {\n          allMatchesFound = false;\n          break;\n        }\n      }\n      if (allMatchesFound) {\n        result.push(path);\n      }\n      progress.worked(1);\n    }\n  }\n\n  /**\n   * @override\n   * @param {!Common.Progress.Progress} progress\n   */\n  indexContent(progress) {\n    Promise.resolve().then(progress.done.bind(progress));\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @param {!TextUtils.ContentProvider.ContentProvider} contentProvider\n   * @param {?Workspace.UISourceCode.UISourceCodeMetadata} metadata\n   * @param {string} mimeType\n   */\n  addUISourceCodeWithProvider(uiSourceCode, contentProvider, metadata, mimeType) {\n    this._contentProviders.set(uiSourceCode.url(), contentProvider);\n    this._uiSourceCodeToData.set(uiSourceCode, {mimeType, metadata});\n    this.addUISourceCode(uiSourceCode);\n  }\n\n  /**\n   * @param {string} url\n   * @param {!TextUtils.ContentProvider.ContentProvider} contentProvider\n   * @param {string} mimeType\n   * @return {!Workspace.UISourceCode.UISourceCode}\n   */\n  addContentProvider(url, contentProvider, mimeType) {\n    const uiSourceCode = this.createUISourceCode(url, contentProvider.contentType());\n    this.addUISourceCodeWithProvider(uiSourceCode, contentProvider, null, mimeType);\n    return uiSourceCode;\n  }\n\n  /**\n   * @param {string} path\n   */\n  removeFile(path) {\n    this._contentProviders.delete(path);\n    this.removeUISourceCode(path);\n  }\n\n  reset() {\n    this._contentProviders.clear();\n    this.removeProject();\n    this.workspace().addProject(this);\n  }\n\n  dispose() {\n    this._contentProviders.clear();\n    this.removeProject();\n  }\n}\n"]}