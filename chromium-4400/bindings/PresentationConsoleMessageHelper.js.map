{"version":3,"file":"PresentationConsoleMessageHelper.js","sourceRoot":"","sources":["../../../../../front_end/bindings/PresentationConsoleMessageHelper.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';  // eslint-disable-line no-unused-vars\nimport * as SDK from '../sdk/sdk.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\nimport {LiveLocation, LiveLocationPool} from './LiveLocation.js';  // eslint-disable-line no-unused-vars\n\n/** @type {!WeakMap<!SDK.DebuggerModel.DebuggerModel, !PresentationConsoleMessageHelper>} */\nconst debuggerModelToMessageHelperMap = new WeakMap();\n\n/**\n * @implements {SDK.SDKModel.SDKModelObserver<!SDK.DebuggerModel.DebuggerModel>}\n */\nexport class PresentationConsoleMessageManager {\n  constructor() {\n    SDK.SDKModel.TargetManager.instance().observeModels(SDK.DebuggerModel.DebuggerModel, this);\n\n    SDK.ConsoleModel.ConsoleModel.instance().addEventListener(\n        SDK.ConsoleModel.Events.ConsoleCleared, this._consoleCleared, this);\n    SDK.ConsoleModel.ConsoleModel.instance().addEventListener(\n        SDK.ConsoleModel.Events.MessageAdded,\n        event => this._consoleMessageAdded(/** @type {!SDK.ConsoleModel.ConsoleMessage} */ (event.data)));\n    SDK.ConsoleModel.ConsoleModel.instance().messages().forEach(this._consoleMessageAdded, this);\n  }\n\n  /**\n   * @override\n   * @param {!SDK.DebuggerModel.DebuggerModel} debuggerModel\n   */\n  modelAdded(debuggerModel) {\n    debuggerModelToMessageHelperMap.set(debuggerModel, new PresentationConsoleMessageHelper(debuggerModel));\n  }\n\n  /**\n   * @override\n   * @param {!SDK.DebuggerModel.DebuggerModel} debuggerModel\n   */\n  modelRemoved(debuggerModel) {\n    const helper = debuggerModelToMessageHelperMap.get(debuggerModel);\n    if (helper) {\n      helper._consoleCleared();\n    }\n  }\n\n  /**\n   * @param {!SDK.ConsoleModel.ConsoleMessage} message\n   */\n  _consoleMessageAdded(message) {\n    const runtimeModel = message.runtimeModel();\n    if (!message.isErrorOrWarning() || !message.runtimeModel() ||\n        message.source === SDK.ConsoleModel.MessageSource.Violation || !runtimeModel) {\n      return;\n    }\n    const helper = debuggerModelToMessageHelperMap.get(runtimeModel.debuggerModel());\n    if (helper) {\n      helper._consoleMessageAdded(message);\n    }\n  }\n\n  _consoleCleared() {\n    for (const debuggerModel of SDK.SDKModel.TargetManager.instance().models(SDK.DebuggerModel.DebuggerModel)) {\n      const helper = debuggerModelToMessageHelperMap.get(debuggerModel);\n      if (helper) {\n        helper._consoleCleared();\n      }\n    }\n  }\n}\n\nexport class PresentationConsoleMessageHelper {\n  /**\n   * @param {!SDK.DebuggerModel.DebuggerModel} debuggerModel\n   */\n  constructor(debuggerModel) {\n    this._debuggerModel = debuggerModel;\n\n    /** @type {!Map<string, !Array.<!SDK.ConsoleModel.ConsoleMessage>>} */\n    this._pendingConsoleMessages = new Map();\n\n    /** @type {!Array.<!PresentationConsoleMessage>} */\n    this._presentationConsoleMessages = [];\n\n    // TODO(dgozman): queueMicrotask because we race with DebuggerWorkspaceBinding on ParsedScriptSource event delivery.\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.ParsedScriptSource, event => {\n      queueMicrotask(() => {\n        this._parsedScriptSource(event);\n      });\n    });\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this._debuggerReset, this);\n\n    this._locationPool = new LiveLocationPool();\n  }\n\n  /**\n   * @param {!SDK.ConsoleModel.ConsoleMessage} message\n   */\n  _consoleMessageAdded(message) {\n    const rawLocation = this._rawLocation(message);\n    if (rawLocation) {\n      this._addConsoleMessageToScript(message, rawLocation);\n    } else {\n      this._addPendingConsoleMessage(message);\n    }\n  }\n\n  /**\n   * @param {!SDK.ConsoleModel.ConsoleMessage} message\n   * @return {?SDK.DebuggerModel.Location}\n   */\n  _rawLocation(message) {\n    if (message.scriptId) {\n      return this._debuggerModel.createRawLocationByScriptId(message.scriptId, message.line, message.column);\n    }\n    const callFrame = message.stackTrace && message.stackTrace.callFrames ? message.stackTrace.callFrames[0] : null;\n    if (callFrame) {\n      return this._debuggerModel.createRawLocationByScriptId(\n          callFrame.scriptId, callFrame.lineNumber, callFrame.columnNumber);\n    }\n    if (message.url) {\n      return this._debuggerModel.createRawLocationByURL(message.url, message.line, message.column);\n    }\n    return null;\n  }\n\n  /**\n   * @param {!SDK.ConsoleModel.ConsoleMessage} message\n   * @param {!SDK.DebuggerModel.Location} rawLocation\n   */\n  _addConsoleMessageToScript(message, rawLocation) {\n    this._presentationConsoleMessages.push(new PresentationConsoleMessage(message, rawLocation, this._locationPool));\n  }\n\n  /**\n   * @param {!SDK.ConsoleModel.ConsoleMessage} message\n   */\n  _addPendingConsoleMessage(message) {\n    if (!message.url) {\n      return;\n    }\n    const pendingMessages = this._pendingConsoleMessages.get(message.url);\n    if (!pendingMessages) {\n      this._pendingConsoleMessages.set(message.url, [message]);\n    } else {\n      pendingMessages.push(message);\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _parsedScriptSource(event) {\n    const script = /** @type {!SDK.Script.Script} */ (event.data);\n\n    const messages = this._pendingConsoleMessages.get(script.sourceURL);\n    if (!messages) {\n      return;\n    }\n\n    const pendingMessages = [];\n    for (const message of messages) {\n      const rawLocation = this._rawLocation(message);\n      if (rawLocation && script.scriptId === rawLocation.scriptId) {\n        this._addConsoleMessageToScript(message, rawLocation);\n      } else {\n        pendingMessages.push(message);\n      }\n    }\n\n    if (pendingMessages.length) {\n      this._pendingConsoleMessages.set(script.sourceURL, pendingMessages);\n    } else {\n      this._pendingConsoleMessages.delete(script.sourceURL);\n    }\n  }\n\n  _consoleCleared() {\n    this._pendingConsoleMessages = new Map();\n    this._debuggerReset();\n  }\n\n  _debuggerReset() {\n    for (const message of this._presentationConsoleMessages) {\n      message.dispose();\n    }\n    this._presentationConsoleMessages = [];\n    this._locationPool.disposeAll();\n  }\n}\n\nexport class PresentationConsoleMessage {\n  /**\n   * @param {!SDK.ConsoleModel.ConsoleMessage} message\n   * @param {!SDK.DebuggerModel.Location} rawLocation\n   * @param {!LiveLocationPool} locationPool\n   */\n  constructor(message, rawLocation, locationPool) {\n    this._text = message.messageText;\n    this._level = message.level === SDK.ConsoleModel.MessageLevel.Error ? Workspace.UISourceCode.Message.Level.Error :\n                                                                          Workspace.UISourceCode.Message.Level.Warning;\n    DebuggerWorkspaceBinding.instance().createLiveLocation(rawLocation, this._updateLocation.bind(this), locationPool);\n  }\n\n  /**\n   * @param {!LiveLocation} liveLocation\n   */\n  async _updateLocation(liveLocation) {\n    if (this._uiMessage) {\n      this._uiMessage.remove();\n    }\n    const uiLocation = await liveLocation.uiLocation();\n    if (!uiLocation) {\n      return;\n    }\n    this._uiMessage =\n        uiLocation.uiSourceCode.addLineMessage(this._level, this._text, uiLocation.lineNumber, uiLocation.columnNumber);\n  }\n\n  dispose() {\n    if (this._uiMessage) {\n      this._uiMessage.remove();\n    }\n  }\n}\n"]}