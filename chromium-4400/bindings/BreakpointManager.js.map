{"version":3,"file":"BreakpointManager.js","sourceRoot":"","sources":["../../../../../front_end/bindings/BreakpointManager.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as TextUtils from '../text_utils/text_utils.js';  // eslint-disable-line no-unused-vars\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';  // eslint-disable-line no-unused-vars\nimport {LiveLocation, LiveLocationPool} from './LiveLocation.js';        // eslint-disable-line no-unused-vars\n\n/**\n * @type {!BreakpointManager}\n */\nlet breakpointManagerInstance;\n\nexport class BreakpointManager extends Common.ObjectWrapper.ObjectWrapper {\n  /**\n   * @private\n   * @param {!SDK.SDKModel.TargetManager} targetManager\n   * @param {!Workspace.Workspace.WorkspaceImpl} workspace\n   * @param {!DebuggerWorkspaceBinding} debuggerWorkspaceBinding\n   */\n  constructor(targetManager, workspace, debuggerWorkspaceBinding) {\n    super();\n    this._storage = new Storage();\n    this._workspace = workspace;\n    this._targetManager = targetManager;\n    this._debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    /** @type {!Map<!Workspace.UISourceCode.UISourceCode, !Map<string, !BreakpointLocation>>} */\n    this._breakpointsForUISourceCode = new Map();\n    /** @type {!Map<string, !Breakpoint>} */\n    this._breakpointByStorageId = new Map();\n\n    this._workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeAdded, this._uiSourceCodeAdded, this);\n    this._workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeRemoved, this._uiSourceCodeRemoved, this);\n    this._workspace.addEventListener(Workspace.Workspace.Events.ProjectRemoved, this._projectRemoved, this);\n  }\n\n  /**\n   * @param {{forceNew: ?boolean, targetManager: ?SDK.SDKModel.TargetManager, workspace: ?Workspace.Workspace.WorkspaceImpl, debuggerWorkspaceBinding: ?DebuggerWorkspaceBinding}} opts\n   */\n  static instance(opts = {forceNew: null, targetManager: null, workspace: null, debuggerWorkspaceBinding: null}) {\n    const {forceNew, targetManager, workspace, debuggerWorkspaceBinding} = opts;\n    if (!breakpointManagerInstance || forceNew) {\n      if (!targetManager || !workspace || !debuggerWorkspaceBinding) {\n        throw new Error(\n            `Unable to create settings: targetManager, workspace, and debuggerWorkspaceBinding must be provided: ${\n                new Error().stack}`);\n      }\n\n      breakpointManagerInstance = new BreakpointManager(targetManager, workspace, debuggerWorkspaceBinding);\n    }\n\n    return breakpointManagerInstance;\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} lineNumber\n   * @param {number=} columnNumber\n   * @return {string}\n   */\n  static _breakpointStorageId(url, lineNumber, columnNumber) {\n    if (!url) {\n      return '';\n    }\n    return `${url}:${lineNumber}` + (typeof columnNumber === 'number' ? `:${columnNumber}` : '');\n  }\n\n  /**\n   * @param {string} fromURL\n   * @param {!Workspace.UISourceCode.UISourceCode} toSourceCode\n   */\n  async copyBreakpoints(fromURL, toSourceCode) {\n    const breakpointItems = this._storage.breakpointItems(fromURL);\n    for (const item of breakpointItems) {\n      await this.setBreakpoint(toSourceCode, item.lineNumber, item.columnNumber, item.condition, item.enabled);\n    }\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   */\n  _restoreBreakpoints(uiSourceCode) {\n    const url = uiSourceCode.url();\n    if (!url) {\n      return;\n    }\n\n    this._storage.mute();\n    const breakpointItems = this._storage.breakpointItems(url);\n    for (const item of breakpointItems) {\n      this._innerSetBreakpoint(uiSourceCode, item.lineNumber, item.columnNumber, item.condition, item.enabled);\n    }\n    this._storage.unmute();\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _uiSourceCodeAdded(event) {\n    const uiSourceCode = /** @type {!Workspace.UISourceCode.UISourceCode} */ (event.data);\n    this._restoreBreakpoints(uiSourceCode);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _uiSourceCodeRemoved(event) {\n    const uiSourceCode = /** @type {!Workspace.UISourceCode.UISourceCode} */ (event.data);\n    this._removeUISourceCode(uiSourceCode);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _projectRemoved(event) {\n    const project = /** @type {!Workspace.Workspace.Project} */ (event.data);\n    for (const uiSourceCode of project.uiSourceCodes()) {\n      this._removeUISourceCode(uiSourceCode);\n    }\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   */\n  _removeUISourceCode(uiSourceCode) {\n    const breakpoints = this.breakpointLocationsForUISourceCode(uiSourceCode);\n    breakpoints.forEach(bp => bp.breakpoint.removeUISourceCode(uiSourceCode));\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @param {number} lineNumber\n   * @param {number|undefined} columnNumber\n   * @param {string} condition\n   * @param {boolean} enabled\n   * @return {!Promise<!Breakpoint>}\n   */\n  async setBreakpoint(uiSourceCode, lineNumber, columnNumber, condition, enabled) {\n    let uiLocation = new Workspace.UISourceCode.UILocation(uiSourceCode, lineNumber, columnNumber);\n    const normalizedLocation = await this._debuggerWorkspaceBinding.normalizeUILocation(uiLocation);\n    if (normalizedLocation.id() !== uiLocation.id()) {\n      Common.Revealer.reveal(normalizedLocation);\n      uiLocation = normalizedLocation;\n    }\n    return this._innerSetBreakpoint(\n        uiLocation.uiSourceCode, uiLocation.lineNumber, uiLocation.columnNumber, condition, enabled);\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @param {number} lineNumber\n   * @param {number|undefined} columnNumber\n   * @param {string} condition\n   * @param {boolean} enabled\n   * @return {!Breakpoint}\n   */\n  _innerSetBreakpoint(uiSourceCode, lineNumber, columnNumber, condition, enabled) {\n    const itemId = BreakpointManager._breakpointStorageId(uiSourceCode.url(), lineNumber, columnNumber);\n    let breakpoint = this._breakpointByStorageId.get(itemId);\n    if (breakpoint) {\n      breakpoint._updateState(condition, enabled);\n      breakpoint.addUISourceCode(uiSourceCode);\n      breakpoint._updateBreakpoint();\n      return breakpoint;\n    }\n    breakpoint = new Breakpoint(this, uiSourceCode, uiSourceCode.url(), lineNumber, columnNumber, condition, enabled);\n    this._breakpointByStorageId.set(itemId, breakpoint);\n    return breakpoint;\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UILocation} uiLocation\n   * @return {?BreakpointLocation}\n   */\n  findBreakpoint(uiLocation) {\n    const breakpoints = this._breakpointsForUISourceCode.get(uiLocation.uiSourceCode);\n    return breakpoints ? (breakpoints.get(uiLocation.id())) || null : null;\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @param {!TextUtils.TextRange.TextRange} textRange\n   * @return {!Promise<!Array<!Workspace.UISourceCode.UILocation>>}\n   */\n  async possibleBreakpoints(uiSourceCode, textRange) {\n    const {pluginManager} = this._debuggerWorkspaceBinding;\n    if (pluginManager) {\n      // TODO(bmeurer): Refactor this logic, as for DWARF and sourcemaps, it doesn't make sense\n      //                to even ask V8 for possible break locations, since these are determined\n      //                from the debugging information.\n      const rawLocations = await pluginManager.uiLocationToRawLocations(uiSourceCode, textRange.startLine);\n      if (rawLocations) {\n        const uiLocations = [];\n        for (const rawLocation of rawLocations) {\n          const uiLocation = await this._debuggerWorkspaceBinding.rawLocationToUILocation(rawLocation);\n          if (uiLocation) {\n            uiLocations.push(uiLocation);\n          }\n        }\n        return uiLocations;\n      }\n    }\n    const startLocationsPromise = DebuggerWorkspaceBinding.instance().uiLocationToRawLocations(\n        uiSourceCode, textRange.startLine, textRange.startColumn);\n    const endLocationsPromise = DebuggerWorkspaceBinding.instance().uiLocationToRawLocations(\n        uiSourceCode, textRange.endLine, textRange.endColumn);\n    const [startLocations, endLocations] = await Promise.all([startLocationsPromise, endLocationsPromise]);\n    const endLocationByModel = new Map();\n    for (const location of endLocations) {\n      endLocationByModel.set(location.debuggerModel, location);\n    }\n    let startLocation = null;\n    let endLocation = null;\n    for (const location of startLocations) {\n      const endLocationCandidate = endLocationByModel.get(location.debuggerModel);\n      if (endLocationCandidate) {\n        startLocation = location;\n        endLocation = endLocationCandidate;\n        break;\n      }\n    }\n    if (!startLocation || !endLocation) {\n      return [];\n    }\n\n    return startLocation.debuggerModel\n        .getPossibleBreakpoints(startLocation, endLocation, /* restrictToFunction */ false)\n        .then(toUILocations.bind(this));\n\n    /**\n     * @this {!BreakpointManager}\n     * @param {!Array<!SDK.DebuggerModel.BreakLocation>} locations\n     * @return {!Promise<!Array<!Workspace.UISourceCode.UILocation>>}\n     */\n    async function toUILocations(locations) {\n      const sortedLocationsPromises =\n          locations.map(location => this._debuggerWorkspaceBinding.rawLocationToUILocation(location));\n      const nullableLocations = await Promise.all(sortedLocationsPromises);\n      const sortedLocations = /** @type {!Array<!Workspace.UISourceCode.UILocation>} */ (\n          nullableLocations.filter(location => location && location.uiSourceCode === uiSourceCode));\n      if (!sortedLocations.length) {\n        return [];\n      }\n      sortedLocations.sort(Workspace.UISourceCode.UILocation.comparator);\n      let lastLocation = sortedLocations[0];\n      const result = [lastLocation];\n      for (const location of sortedLocations) {\n        if (location.id() !== lastLocation.id()) {\n          result.push(location);\n          lastLocation = location;\n        }\n      }\n      return result;\n    }\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @return {!Array<!BreakpointLocation>}\n   */\n  breakpointLocationsForUISourceCode(uiSourceCode) {\n    const breakpoints = this._breakpointsForUISourceCode.get(uiSourceCode);\n    return breakpoints ? Array.from(breakpoints.values()) : [];\n  }\n\n  /**\n   * @return {!Array<!BreakpointLocation>}\n   */\n  allBreakpointLocations() {\n    const result = [];\n    for (const breakpoints of this._breakpointsForUISourceCode.values()) {\n      result.push(...breakpoints.values());\n    }\n    return result;\n  }\n\n  /**\n   * @param {!Breakpoint} breakpoint\n   * @param {boolean} removeFromStorage\n   */\n  _removeBreakpoint(breakpoint, removeFromStorage) {\n    if (removeFromStorage) {\n      this._storage._removeBreakpoint(breakpoint);\n    }\n    this._breakpointByStorageId.delete(breakpoint._breakpointStorageId());\n  }\n\n  /**\n   * @param {!Breakpoint} breakpoint\n   * @param {!Workspace.UISourceCode.UILocation} uiLocation\n   */\n  _uiLocationAdded(breakpoint, uiLocation) {\n    let breakpoints = this._breakpointsForUISourceCode.get(uiLocation.uiSourceCode);\n    if (!breakpoints) {\n      breakpoints = new Map();\n      this._breakpointsForUISourceCode.set(uiLocation.uiSourceCode, breakpoints);\n    }\n    const breakpointLocation = {breakpoint: breakpoint, uiLocation: uiLocation};\n    breakpoints.set(uiLocation.id(), breakpointLocation);\n    this.dispatchEventToListeners(Events.BreakpointAdded, breakpointLocation);\n  }\n\n  /**\n   * @param {!Breakpoint} breakpoint\n   * @param {!Workspace.UISourceCode.UILocation} uiLocation\n   */\n  _uiLocationRemoved(breakpoint, uiLocation) {\n    const breakpoints = this._breakpointsForUISourceCode.get(uiLocation.uiSourceCode);\n    if (!breakpoints) {\n      return;\n    }\n    const breakpointLocation = breakpoints.get(uiLocation.id()) || null;\n    if (!breakpointLocation) {\n      return;\n    }\n    breakpoints.delete(uiLocation.id());\n    if (breakpoints.size === 0) {\n      this._breakpointsForUISourceCode.delete(uiLocation.uiSourceCode);\n    }\n    this.dispatchEventToListeners(Events.BreakpointRemoved, {breakpoint: breakpoint, uiLocation: uiLocation});\n  }\n}\n\n/** @enum {symbol} */\nexport const Events = {\n  BreakpointAdded: Symbol('breakpoint-added'),\n  BreakpointRemoved: Symbol('breakpoint-removed')\n};\n\n/**\n * @implements {SDK.SDKModel.SDKModelObserver<!SDK.DebuggerModel.DebuggerModel>}\n */\nexport class Breakpoint {\n  /**\n   * @param {!BreakpointManager} breakpointManager\n   * @param {!Workspace.UISourceCode.UISourceCode} primaryUISourceCode\n   * @param {string} url\n   * @param {number} lineNumber\n   * @param {number|undefined} columnNumber\n   * @param {string} condition\n   * @param {boolean} enabled\n   */\n  constructor(breakpointManager, primaryUISourceCode, url, lineNumber, columnNumber, condition, enabled) {\n    this._breakpointManager = breakpointManager;\n    this._url = url;\n    this._lineNumber = lineNumber;\n    this._columnNumber = columnNumber;\n\n    /** @type {!Set<!Workspace.UISourceCode.UILocation>} */\n    this._uiLocations = new Set();  // Bound locations\n    /** @type {!Set<!Workspace.UISourceCode.UISourceCode>} */\n    this._uiSourceCodes = new Set();  // All known UISourceCodes with this url\n\n    /** @type {string} */ this._condition;\n    /** @type {boolean} */ this._enabled;\n    /** @type {boolean} */ this._isRemoved;\n\n    /** @type {?Breakpoint.State} */\n    this._currentState = null;\n\n    /** @type {!Map.<!SDK.DebuggerModel.DebuggerModel, !ModelBreakpoint>}*/\n    this._modelBreakpoints = new Map();\n    this._updateState(condition, enabled);\n    this.addUISourceCode(primaryUISourceCode);\n    this._breakpointManager._targetManager.observeModels(SDK.DebuggerModel.DebuggerModel, this);\n  }\n\n  /**\n   * @return {!Promise<void>}\n   */\n  async refreshInDebugger() {\n    if (!this._isRemoved) {\n      const breakpoints = Array.from(this._modelBreakpoints.values());\n      await Promise.all(breakpoints.map(breakpoint => breakpoint._refreshBreakpoint()));\n    }\n  }\n\n  /**\n   * @override\n   * @param {!SDK.DebuggerModel.DebuggerModel} debuggerModel\n   */\n  modelAdded(debuggerModel) {\n    const debuggerWorkspaceBinding = this._breakpointManager._debuggerWorkspaceBinding;\n    this._modelBreakpoints.set(debuggerModel, new ModelBreakpoint(debuggerModel, this, debuggerWorkspaceBinding));\n  }\n\n  /**\n   * @override\n   * @param {!SDK.DebuggerModel.DebuggerModel} debuggerModel\n   */\n  modelRemoved(debuggerModel) {\n    const modelBreakpoint = this._modelBreakpoints.get(debuggerModel);\n    this._modelBreakpoints.delete(debuggerModel);\n\n    if (!modelBreakpoint) {\n      return;\n    }\n    modelBreakpoint._cleanUpAfterDebuggerIsGone();\n    modelBreakpoint._removeEventListeners();\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   */\n  addUISourceCode(uiSourceCode) {\n    if (!this._uiSourceCodes.has(uiSourceCode)) {\n      this._uiSourceCodes.add(uiSourceCode);\n      if (!this.bound()) {\n        this._breakpointManager._uiLocationAdded(this, this._defaultUILocation(uiSourceCode));\n      }\n    }\n  }\n\n  clearUISourceCodes() {\n    if (!this.bound()) {\n      this._removeAllUnboundLocations();\n    }\n    this._uiSourceCodes.clear();\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   */\n  removeUISourceCode(uiSourceCode) {\n    if (this._uiSourceCodes.has(uiSourceCode)) {\n      this._uiSourceCodes.delete(uiSourceCode);\n      if (!this.bound()) {\n        this._breakpointManager._uiLocationRemoved(this, this._defaultUILocation(uiSourceCode));\n      }\n    }\n\n    // Do we need to do this? Not sure if bound locations will leak...\n    if (this.bound()) {\n      for (const uiLocation of this._uiLocations) {\n        if (uiLocation.uiSourceCode === uiSourceCode) {\n          this._uiLocations.delete(uiLocation);\n          this._breakpointManager._uiLocationRemoved(this, uiLocation);\n        }\n      }\n\n      if (!this.bound() && !this._isRemoved) {\n        // Switch to unbound locations\n        this._addAllUnboundLocations();\n      }\n    }\n  }\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._url;\n  }\n\n  /**\n   * @return {number}\n   */\n  lineNumber() {\n    return this._lineNumber;\n  }\n\n  /**\n   * @return {number=}\n   */\n  columnNumber() {\n    return this._columnNumber;\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UILocation} uiLocation\n   */\n  _uiLocationAdded(uiLocation) {\n    if (this._isRemoved) {\n      return;\n    }\n    if (!this.bound()) {\n      // This is our first bound location; remove all unbound locations\n      this._removeAllUnboundLocations();\n    }\n    this._uiLocations.add(uiLocation);\n    this._breakpointManager._uiLocationAdded(this, uiLocation);\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UILocation} uiLocation\n   */\n  _uiLocationRemoved(uiLocation) {\n    if (this._uiLocations.has(uiLocation)) {\n      this._uiLocations.delete(uiLocation);\n      this._breakpointManager._uiLocationRemoved(this, uiLocation);\n      if (!this.bound() && !this._isRemoved) {\n        this._addAllUnboundLocations();\n      }\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  enabled() {\n    return this._enabled;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  bound() {\n    return this._uiLocations.size !== 0;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasBoundScript() {\n    for (const uiSourceCode of this._uiSourceCodes) {\n      if (uiSourceCode.project().type() === Workspace.Workspace.projectTypes.Network) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {boolean} enabled\n   */\n  setEnabled(enabled) {\n    this._updateState(this._condition, enabled);\n  }\n\n  /**\n   * @return {string}\n   */\n  condition() {\n    return this._condition;\n  }\n\n  /**\n   * @param {string} condition\n   */\n  setCondition(condition) {\n    this._updateState(condition, this._enabled);\n  }\n\n  /**\n   * @param {string} condition\n   * @param {boolean} enabled\n   */\n  _updateState(condition, enabled) {\n    if (this._enabled === enabled && this._condition === condition) {\n      return;\n    }\n    this._enabled = enabled;\n    this._condition = condition;\n    this._breakpointManager._storage._updateBreakpoint(this);\n    this._updateBreakpoint();\n  }\n\n  _updateBreakpoint() {\n    if (!this.bound()) {\n      this._removeAllUnboundLocations();\n      if (!this._isRemoved) {\n        this._addAllUnboundLocations();\n      }\n    }\n    for (const modelBreakpoint of this._modelBreakpoints.values()) {\n      modelBreakpoint._scheduleUpdateInDebugger();\n    }\n  }\n\n  /**\n   * @param {boolean} keepInStorage\n   */\n  remove(keepInStorage) {\n    this._isRemoved = true;\n    const removeFromStorage = !keepInStorage;\n    for (const modelBreakpoint of this._modelBreakpoints.values()) {\n      modelBreakpoint._scheduleUpdateInDebugger();\n      modelBreakpoint._removeEventListeners();\n    }\n\n    this._breakpointManager._removeBreakpoint(this, removeFromStorage);\n    this._breakpointManager._targetManager.unobserveModels(SDK.DebuggerModel.DebuggerModel, this);\n    this.clearUISourceCodes();\n  }\n\n  /**\n   * @return {string}\n   */\n  _breakpointStorageId() {\n    return BreakpointManager._breakpointStorageId(this._url, this._lineNumber, this._columnNumber);\n  }\n\n  _resetLocations() {\n    this.clearUISourceCodes();\n    for (const modelBreakpoint of this._modelBreakpoints.values()) {\n      modelBreakpoint._resetLocations();\n    }\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @return {!Workspace.UISourceCode.UILocation}\n   */\n  _defaultUILocation(uiSourceCode) {\n    return uiSourceCode.uiLocation(this._lineNumber, this._columnNumber);\n  }\n\n  _removeAllUnboundLocations() {\n    for (const uiSourceCode of this._uiSourceCodes) {\n      this._breakpointManager._uiLocationRemoved(this, this._defaultUILocation(uiSourceCode));\n    }\n  }\n\n  _addAllUnboundLocations() {\n    for (const uiSourceCode of this._uiSourceCodes) {\n      this._breakpointManager._uiLocationAdded(this, this._defaultUILocation(uiSourceCode));\n    }\n  }\n}\n\nexport class ModelBreakpoint {\n  /**\n   * @param {!SDK.DebuggerModel.DebuggerModel} debuggerModel\n   * @param {!Breakpoint} breakpoint\n   * @param {!DebuggerWorkspaceBinding} debuggerWorkspaceBinding\n   */\n  constructor(debuggerModel, breakpoint, debuggerWorkspaceBinding) {\n    this._debuggerModel = debuggerModel;\n    this._breakpoint = breakpoint;\n    this._debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    this._liveLocations = new LiveLocationPool();\n\n    /** @type {!Map<!LiveLocation, !Workspace.UISourceCode.UILocation>} */\n    this._uiLocations = new Map();\n    this._debuggerModel.addEventListener(\n        SDK.DebuggerModel.Events.DebuggerWasDisabled, this._cleanUpAfterDebuggerIsGone, this);\n    this._debuggerModel.addEventListener(\n        SDK.DebuggerModel.Events.DebuggerWasEnabled, this._scheduleUpdateInDebugger, this);\n    this._hasPendingUpdate = false;\n    this._isUpdating = false;\n    this._cancelCallback = false;\n    this._currentState = null;\n    /** @type {string[]} */\n    this._breakpointIds = [];\n    if (this._debuggerModel.debuggerEnabled()) {\n      this._scheduleUpdateInDebugger();\n    }\n  }\n\n  _resetLocations() {\n    for (const uiLocation of this._uiLocations.values()) {\n      this._breakpoint._uiLocationRemoved(uiLocation);\n    }\n\n    this._uiLocations.clear();\n    this._liveLocations.disposeAll();\n  }\n\n  _scheduleUpdateInDebugger() {\n    if (this._isUpdating) {\n      this._hasPendingUpdate = true;\n      return;\n    }\n\n    this._isUpdating = true;\n    this._updateInDebugger(this._didUpdateInDebugger.bind(this));\n  }\n\n  _didUpdateInDebugger() {\n    this._isUpdating = false;\n    if (this._hasPendingUpdate) {\n      this._hasPendingUpdate = false;\n      this._scheduleUpdateInDebugger();\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  _scriptDiverged() {\n    for (const uiSourceCode of this._breakpoint._uiSourceCodes) {\n      const scriptFile = this._debuggerWorkspaceBinding.scriptFile(uiSourceCode, this._debuggerModel);\n      if (scriptFile && scriptFile.hasDivergedFromVM()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {function():void} callback\n   * @return {!Promise<void>}\n   */\n  async _updateInDebugger(callback) {\n    if (this._debuggerModel.target().isDisposed()) {\n      this._cleanUpAfterDebuggerIsGone();\n      callback();\n      return;\n    }\n\n    const lineNumber = this._breakpoint._lineNumber;\n    const columnNumber = this._breakpoint._columnNumber;\n    const condition = this._breakpoint.condition();\n\n    /** @type {SDK.DebuggerModel.Location[]} */\n    let debuggerLocations = [];\n    for (const uiSourceCode of this._breakpoint._uiSourceCodes) {\n      const {pluginManager} = DebuggerWorkspaceBinding.instance();\n      if (pluginManager) {\n        // We have a separate code path for plugins as the requirements for setting a breakpoint\n        // on every inlined/unrolled location aren't the same as the requirements for translating\n        // ui locations to raw locations in general.\n\n        const locationRanges =\n            await pluginManager.uiLocationToRawLocationRanges(uiSourceCode, lineNumber, columnNumber);\n        if (locationRanges && locationRanges.length) {\n          const script = locationRanges[0].start.script();\n          debuggerLocations = locationRanges.map(({start}) => start).filter(dl => dl.script() === script);\n          break;\n        }\n      }\n      // Fall back to general case.\n      const locations =\n          await DebuggerWorkspaceBinding.instance().uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n      debuggerLocations = locations.filter(location => location.debuggerModel === this._debuggerModel);\n\n      if (debuggerLocations.length > 0) {\n        // Only want first location\n        debuggerLocations = [debuggerLocations[0]];\n        break;\n      }\n    }\n    /** @type {Breakpoint.State | null} */\n    let newState = null;\n    if (this._breakpoint._isRemoved || !this._breakpoint.enabled() || this._scriptDiverged()) {\n      newState = null;\n    } else if (debuggerLocations.length > 0 && debuggerLocations[0].script()) {\n      const script = debuggerLocations[0].script();\n      if (!script) {\n        return;\n      }\n      const sourcePositions =\n          debuggerLocations.map(loc => ({lineNumber: loc.lineNumber, columnNumber: loc.columnNumber}));\n      if (script.sourceURL) {\n        newState = new Breakpoint.State(script.sourceURL, null, null, sourcePositions, condition);\n      } else {\n        newState = new Breakpoint.State(null, script.scriptId, script.hash, sourcePositions, condition);\n      }\n    } else if (this._breakpoint._currentState && this._breakpoint._currentState.url) {\n      const position = this._breakpoint._currentState;\n      newState = new Breakpoint.State(position.url, null, null, position.positions, condition);\n    } else if (this._breakpoint._uiSourceCodes.size > 0) {  // Uncertain if this condition is necessary\n      newState = new Breakpoint.State(this._breakpoint.url(), null, null, [{lineNumber, columnNumber}], condition);\n    }\n    if (this._breakpointIds.length && Breakpoint.State.equals(newState, this._currentState)) {\n      callback();\n      return;\n    }\n\n    this._breakpoint._currentState = newState;\n\n    if (this._breakpointIds.length) {\n      await this._refreshBreakpoint();\n      callback();\n      return;\n    }\n\n    if (!newState) {\n      callback();\n      return;\n    }\n\n    this._currentState = newState;\n    // Assigning to constant so TypeScript can be sure this isn't null.\n    const {url, scriptId, scriptHash} = newState;\n    let resultPromises;\n    if (url) {\n      resultPromises = newState.positions.map(\n          ({lineNumber, columnNumber}) =>\n              this._debuggerModel.setBreakpointByURL(url, lineNumber, columnNumber, condition));\n    } else if (scriptId && scriptHash) {\n      resultPromises = newState.positions.map(\n          ({lineNumber, columnNumber}) => this._debuggerModel.setBreakpointInAnonymousScript(\n              scriptId, scriptHash, lineNumber, columnNumber, condition));\n    }\n\n    if (resultPromises) {\n      const results = await Promise.all(resultPromises);\n      /** @type {string[]} */\n      const breakpointIds = [];\n      /** @type {SDK.DebuggerModel.Location[]} */\n      let combinedLocations = [];\n      for (const {breakpointId, locations} of results) {\n        if (breakpointId) {\n          breakpointIds.push(breakpointId);\n          combinedLocations = combinedLocations.concat(locations);\n        }\n      }\n      await this._didSetBreakpointInDebugger(callback, breakpointIds, combinedLocations);\n    }\n  }\n\n  async _refreshBreakpoint() {\n    if (!this._breakpointIds.length) {\n      return;\n    }\n    this._resetLocations();\n    await Promise.all(this._breakpointIds.map(id => this._debuggerModel.removeBreakpoint(id)));\n    this._didRemoveFromDebugger();\n    this._currentState = null;\n    this._scheduleUpdateInDebugger();\n  }\n\n  /**\n   * @param {function():void} callback\n   * @param {Protocol.Debugger.BreakpointId[]} breakpointIds\n   * @param {!Array.<!SDK.DebuggerModel.Location>} locations\n   */\n  async _didSetBreakpointInDebugger(callback, breakpointIds, locations) {\n    if (this._cancelCallback) {\n      this._cancelCallback = false;\n      callback();\n      return;\n    }\n\n    if (!breakpointIds.length) {\n      this._breakpoint.remove(true);\n      callback();\n      return;\n    }\n\n    this._breakpointIds = breakpointIds;\n    for (const debuggerId of this._breakpointIds) {\n      this._debuggerModel.addBreakpointListener(\n          debuggerId, /**\n            * @param {!Common.EventTarget.EventTargetEvent} event\n            */\n          event => this._breakpointResolved(event), this);\n    }\n    for (const location of locations) {\n      if (!(await this._addResolvedLocation(location))) {\n        break;\n      }\n    }\n    callback();\n  }\n\n  _didRemoveFromDebugger() {\n    if (this._cancelCallback) {\n      this._cancelCallback = false;\n      return;\n    }\n\n    this._resetLocations();\n    for (const debuggerId of this._breakpointIds) {\n      this._debuggerModel.removeBreakpointListener(\n          debuggerId, /**\n        * @param {!Common.EventTarget.EventTargetEvent} event\n        */\n          event => this._breakpointResolved(event), this);\n    }\n    this._breakpointIds = [];\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  async _breakpointResolved(event) {\n    await this._addResolvedLocation(/** @type {!SDK.DebuggerModel.Location}*/ (event.data));\n  }\n\n  /**\n   * @param {!LiveLocation} liveLocation\n   */\n  async _locationUpdated(liveLocation) {\n    const oldUILocation = this._uiLocations.get(liveLocation);\n    const uiLocation = await liveLocation.uiLocation();\n\n    if (oldUILocation) {\n      this._breakpoint._uiLocationRemoved(oldUILocation);\n    }\n\n    if (uiLocation) {\n      this._uiLocations.set(liveLocation, uiLocation);\n      this._breakpoint._uiLocationAdded(uiLocation);\n    } else {\n      this._uiLocations.delete(liveLocation);\n    }\n  }\n\n  /**\n   * @param {!SDK.DebuggerModel.Location} location\n   * @return {!Promise<boolean>}\n   */\n  async _addResolvedLocation(location) {\n    const uiLocation = await this._debuggerWorkspaceBinding.rawLocationToUILocation(location);\n    if (!uiLocation) {\n      return false;\n    }\n    const breakpointLocation = this._breakpoint._breakpointManager.findBreakpoint(uiLocation);\n    if (breakpointLocation && breakpointLocation.breakpoint !== this._breakpoint) {\n      // location clash\n      this._breakpoint.remove(false /* keepInStorage */);\n      return false;\n    }\n    await this._debuggerWorkspaceBinding.createLiveLocation(\n        location, this._locationUpdated.bind(this), this._liveLocations);\n    return true;\n  }\n\n  _cleanUpAfterDebuggerIsGone() {\n    if (this._isUpdating) {\n      this._cancelCallback = true;\n    }\n\n    this._resetLocations();\n    this._currentState = null;\n    if (this._breakpointIds.length) {\n      this._didRemoveFromDebugger();\n    }\n  }\n\n  _removeEventListeners() {\n    this._debuggerModel.removeEventListener(\n        SDK.DebuggerModel.Events.DebuggerWasDisabled, this._cleanUpAfterDebuggerIsGone, this);\n    this._debuggerModel.removeEventListener(\n        SDK.DebuggerModel.Events.DebuggerWasEnabled, this._scheduleUpdateInDebugger, this);\n  }\n}\n\nBreakpoint.State = class {\n  /**\n   * @param {?string} url\n   * @param {?string} scriptId\n   * @param {?string} scriptHash\n   * @param {Array.<{lineNumber: number, columnNumber?: number}>} positions\n   * @param {string} condition\n   */\n  constructor(url, scriptId, scriptHash, positions, condition) {\n    this.url = url;\n    this.scriptId = scriptId;\n    this.scriptHash = scriptHash;\n    this.positions = positions;\n    this.condition = condition;\n  }\n\n  /**\n   * @param {?Breakpoint.State|undefined} stateA\n   * @param {?Breakpoint.State|undefined} stateB\n   * @return {boolean}\n   */\n  static equals(stateA, stateB) {\n    if (!stateA || !stateB) {\n      return false;\n    }\n    if (stateA.url === stateB.url && stateA.scriptId === stateB.scriptId && stateA.scriptHash === stateB.scriptHash &&\n        stateA.positions.length === stateB.positions.length && stateA.condition === stateB.condition) {\n      for (let i = 0; i < stateA.positions.length; i++) {\n        if (stateA.positions[i].lineNumber !== stateB.positions[i].lineNumber ||\n            stateA.positions[i].columnNumber !== stateB.positions[i].columnNumber) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n};\n\n\nclass Storage {\n  constructor() {\n    this._setting = Common.Settings.Settings.instance().createLocalSetting('breakpoints', []);\n    /** @type {!Map<string, !Storage.Item>} */\n    this._breakpoints = new Map();\n    const items = /** @type {!Array<!Storage.Item>} */ (this._setting.get());\n    for (const item of items) {\n      this._breakpoints.set(BreakpointManager._breakpointStorageId(item.url, item.lineNumber, item.columnNumber), item);\n    }\n    /** @type {boolean|undefined} */ this._muted;\n  }\n\n  mute() {\n    this._muted = true;\n  }\n\n  unmute() {\n    delete this._muted;\n  }\n\n  /**\n   * @param {string} url\n   * @return {!Array<!Storage.Item>}\n   */\n  breakpointItems(url) {\n    return Array.from(this._breakpoints.values()).filter(item => item.url === url);\n  }\n\n  /**\n   * @param {!Breakpoint} breakpoint\n   */\n  _updateBreakpoint(breakpoint) {\n    if (this._muted || !breakpoint._breakpointStorageId()) {\n      return;\n    }\n    this._breakpoints.set(breakpoint._breakpointStorageId(), new Storage.Item(breakpoint));\n    this._save();\n  }\n\n  /**\n   * @param {!Breakpoint} breakpoint\n   */\n  _removeBreakpoint(breakpoint) {\n    if (!this._muted) {\n      this._breakpoints.delete(breakpoint._breakpointStorageId());\n      this._save();\n    }\n  }\n\n  _save() {\n    this._setting.set(Array.from(this._breakpoints.values()));\n  }\n}\n\nStorage.Item = class {\n  /**\n   * @param {!Breakpoint} breakpoint\n   */\n  constructor(breakpoint) {\n    this.url = breakpoint._url;\n    this.lineNumber = breakpoint.lineNumber();\n    this.columnNumber = breakpoint.columnNumber();\n    this.condition = breakpoint.condition();\n    this.enabled = breakpoint.enabled();\n  }\n};\n\n/** @typedef {{\n *    breakpoint: !Breakpoint,\n *    uiLocation: !Workspace.UISourceCode.UILocation\n *  }}\n */\n// @ts-ignore typedef\nexport let BreakpointLocation;\n"]}