{"version":3,"file":"CLSLinkifier.js","sourceRoot":"","sources":["../../../../../front_end/timeline/CLSLinkifier.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,GAAG,MAAM,eAAe,CAAC;AAErC,MAAM,OAAO,OAAO;IAClB;;;OAGG;IACH,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC;QAC/B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAC,CAAC;QAC7C,IAAI,CAAC,YAAY,GAAG,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAC,CAAC;IACtD,CAAC;CACF;AAED;;GAEG;AACH,MAAM,OAAO,SAAS;IACpB;;;;;OAKG;IACH,OAAO,CAAC,MAAM,EAAE,OAAO;QACrB,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC5C,MAAM,IAAI,GAAG,uBAAuB,CAAC,CAAC,MAAM,CAAC,CAAC;QAC9C,MAAM,EAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,MAAM,GAAG,CAAC;QAEvE,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5F,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,CAAC;QAE1F,OAAO,IAAI,CAAC;IACd,CAAC;CACF","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';  // eslint-disable-line no-unused-vars\nimport * as SDK from '../sdk/sdk.js';\n\nexport class CLSRect {\n  /**\n   *\n   * @param {!Array<number>} data\n   */\n  constructor([x, y, width, height]) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.color = {r: 238, g: 111, b: 99, a: 0.4};\n    this.outlineColor = {r: 238, g: 111, b: 99, a: 0.7};\n  }\n}\n\n/**\n * @implements {Common.Linkifier.Linkifier}\n */\nexport class Linkifier {\n  /**\n   * @override\n   * @param {!Object} object\n   * @param {!Common.Linkifier.Options=} options\n   * @return {!Node}\n   */\n  linkify(object, options) {\n    const link = document.createElement('span');\n    const rect = /** @type {!CLSRect} */ (object);\n    const {x, y, width, height} = rect;\n    link.textContent = `Location: [${x},${y}], Size: [${width}x${height}]`;\n\n    link.addEventListener('mouseover', () => SDK.OverlayModel.OverlayModel.highlightRect(rect));\n    link.addEventListener('mouseleave', () => SDK.OverlayModel.OverlayModel.clearHighlight());\n\n    return link;\n  }\n}\n"]}