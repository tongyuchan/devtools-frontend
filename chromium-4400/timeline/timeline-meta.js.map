{"version":3,"file":"timeline-meta.js","sourceRoot":"","sources":["../../../../../front_end/timeline/timeline-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,EAAC,EAAE,EAAC,MAAM,yBAAyB,CAAC;AAC3C,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAOlC,IAAI,oBAAiD,CAAC;AAEtD,IAAI,oBAAiD,CAAC;AAGtD,KAAK,UAAU,kBAAkB;IAC/B,IAAI,CAAC,oBAAoB,EAAE;QACzB,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QACpE,oBAAoB,GAAG,MAAM,MAAM,CAAC,eAAe,CAAC,CAAC;KACtD;IACD,OAAO,oBAAoB,CAAC;AAC9B,CAAC;AAGD,8EAA8E;AAC9E,2EAA2E;AAC3E,0EAA0E;AAC1E,4EAA4E;AAC5E,iFAAiF;AACjF,KAAK,UAAU,kBAAkB;IAC/B,IAAI,CAAC,oBAAoB,EAAE;QACzB,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QACpE,oBAAoB,GAAG,MAAM,MAAM,CAAC,yBAAyB,CAAC,CAAC;KAChE;IACD,OAAO,oBAAoB,CAAC;AAC9B,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,qBAAyC;IACjD,EAAE,EAAE,UAAU;IACd,KAAK,EAAE,GAAsC,EAAE,CAAC,EAAE,CAAA,aAAa;IAC/D,aAAa,EAAE,kBAAkB;IACjC,KAAK,EAAE,EAAE;IACT,KAAK,CAAC,QAAQ;QACZ,MAAM,QAAQ,GAAG,MAAM,kBAAkB,EAAE,CAAC;QAC5C,OAAO,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;IACzD,CAAC;CACF,CAAC,CAAC;AAEH,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,qBAAyC;IACjD,EAAE,EAAE,aAAa;IACjB,KAAK,EAAE,GAAsC,EAAE,CAAC,EAAE,CAAA,qBAAqB;IACvE,aAAa,EAAE,0BAA0B;IACzC,WAAW,6BAA0C;IACrD,KAAK,EAAE,EAAE;IACT,KAAK,CAAC,QAAQ;QACZ,MAAM,QAAQ,GAAG,MAAM,kBAAkB,EAAE,CAAC;QAC5C,OAAO,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IAC3D,CAAC;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../platform/platform.js';\nimport {ls} from '../platform/platform.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Timeline from './timeline.js';\n\nimport type * as Profiler from '../profiler/profiler.js';\n\nlet loadedTimelineModule: (typeof Timeline|undefined);\n\nlet loadedProfilerModule: (typeof Profiler|undefined);\n\n\nasync function loadTimelineModule(): Promise<typeof Timeline> {\n  if (!loadedTimelineModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('timeline');\n    loadedTimelineModule = await import('./timeline.js');\n  }\n  return loadedTimelineModule;\n}\n\n\n// The profiler module is imported here because the view with id `js_profiler`\n// is implemented by `JSProfilerPanel` in profiler. It cannot be registered\n// in the profiler module as it belongs to the shell app and thus all apps\n// that extend from shell will have such view registered. This would cause a\n// collision with js_app as a separate view with the same id is registered in it.\nasync function loadProfilerModule(): Promise<typeof Profiler> {\n  if (!loadedProfilerModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('profiler');\n    loadedProfilerModule = await import('../profiler/profiler.js');\n  }\n  return loadedProfilerModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'timeline',\n  title: (): Platform.UIString.LocalizedString => ls`Performance`,\n  commandPrompt: 'Show Performance',\n  order: 50,\n  async loadView() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.TimelinePanel.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'js_profiler',\n  title: (): Platform.UIString.LocalizedString => ls`JavaScript Profiler`,\n  commandPrompt: 'Show JavaScript Profiler',\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 65,\n  async loadView() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.ProfilesPanel.JSProfilerPanel.instance();\n  },\n});\n"]}