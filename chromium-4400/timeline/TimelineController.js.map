{"version":3,"file":"TimelineController.js","sourceRoot":"","sources":["../../../../../front_end/timeline/TimelineController.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Bindings from '../bindings/bindings.js';\nimport * as Common from '../common/common.js';\nimport * as Extensions from '../extensions/extensions.js';  // eslint-disable-line no-unused-vars\nimport * as Platform from '../platform/platform.js';\nimport * as ProtocolClient from '../protocol_client/protocol_client.js';\nimport * as Root from '../root/root.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as TimelineModel from '../timeline_model/timeline_model.js';\n\nimport {ExtensionTracingSession} from './ExtensionTracingSession.js';\nimport {PerformanceModel} from './PerformanceModel.js';\nimport {Client as TimelineLoaderClient} from './TimelineLoader.js';  // eslint-disable-line no-unused-vars\n\n/**\n * @implements {SDK.SDKModel.SDKModelObserver<!SDK.CPUProfilerModel.CPUProfilerModel>}\n * @implements {SDK.TracingManager.TracingManagerClient}\n */\nexport class TimelineController {\n  /**\n   * @param {!SDK.SDKModel.Target} target\n   * @param {!Client} client\n   */\n  constructor(target, client) {\n    this._target = target;\n    this._tracingManager = target.model(SDK.TracingManager.TracingManager);\n    this._performanceModel = new PerformanceModel();\n    this._performanceModel.setMainTarget(target);\n    this._client = client;\n\n    const backingStorage = new Bindings.TempFile.TempFileBackingStorage();\n    this._tracingModel = new SDK.TracingModel.TracingModel(backingStorage);\n\n    /** @type {!Array<!ExtensionTracingSession>} */\n    this._extensionSessions = [];\n    SDK.SDKModel.TargetManager.instance().observeModels(SDK.CPUProfilerModel.CPUProfilerModel, this);\n  }\n\n  dispose() {\n    SDK.SDKModel.TargetManager.instance().unobserveModels(SDK.CPUProfilerModel.CPUProfilerModel, this);\n  }\n\n  /**\n   * @return {!SDK.SDKModel.Target}\n   */\n  mainTarget() {\n    return this._target;\n  }\n\n  /**\n   * @param {!RecordingOptions} options\n   * @param {!Array<!Extensions.ExtensionTraceProvider.ExtensionTraceProvider>} providers\n   * @return {!Promise<!Object>}\n   */\n  async startRecording(options, providers) {\n    this._extensionTraceProviders = Extensions.ExtensionServer.ExtensionServer.instance().traceProviders().slice();\n\n    /**\n     * @param {string} category\n     * @return {string}\n     */\n    function disabledByDefault(category) {\n      return 'disabled-by-default-' + category;\n    }\n    const categoriesArray = [\n      '-*',\n      'devtools.timeline',\n      disabledByDefault('devtools.timeline'),\n      disabledByDefault('devtools.timeline.frame'),\n      'v8.execute',\n      TimelineModel.TimelineModel.TimelineModelImpl.Category.Console,\n      TimelineModel.TimelineModel.TimelineModelImpl.Category.UserTiming,\n      TimelineModel.TimelineModel.TimelineModelImpl.Category.Loading,\n    ];\n    categoriesArray.push(TimelineModel.TimelineModel.TimelineModelImpl.Category.LatencyInfo);\n\n    if (Root.Runtime.experiments.isEnabled('timelineV8RuntimeCallStats') && options.enableJSSampling) {\n      categoriesArray.push(disabledByDefault('v8.runtime_stats_sampling'));\n    }\n    if (!Root.Runtime.Runtime.queryParam('timelineTracingJSProfileDisabled') && options.enableJSSampling) {\n      categoriesArray.push(disabledByDefault('v8.cpu_profiler'));\n    }\n    categoriesArray.push(disabledByDefault('devtools.timeline.stack'));\n    if (Root.Runtime.experiments.isEnabled('timelineInvalidationTracking')) {\n      categoriesArray.push(disabledByDefault('devtools.timeline.invalidationTracking'));\n    }\n    if (options.capturePictures) {\n      categoriesArray.push(\n          disabledByDefault('devtools.timeline.layers'), disabledByDefault('devtools.timeline.picture'),\n          disabledByDefault('blink.graphics_context_annotations'));\n    }\n    if (options.captureFilmStrip) {\n      categoriesArray.push(disabledByDefault('devtools.screenshot'));\n    }\n\n    this._extensionSessions = providers.map(provider => new ExtensionTracingSession(provider, this._performanceModel));\n    this._extensionSessions.forEach(session => session.start());\n    this._performanceModel.setRecordStartTime(Date.now());\n    const response = await this._startRecordingWithCategories(categoriesArray.join(','), options.enableJSSampling);\n    if (!response) {\n      throw new Error('Missing backend response');\n    }\n    if (ProtocolClient.InspectorBackend.ProtocolError in response) {\n      await this._waitForTracingToStop(false);\n      await SDK.SDKModel.TargetManager.instance().resumeAllTargets();\n    }\n    return response;\n  }\n\n  /**\n   * @return {!Promise<!PerformanceModel>}\n   */\n  async stopRecording() {\n    if (this._tracingManager) {\n      this._tracingManager.stop();\n    }\n\n    this._client.loadingStarted();\n    await this._waitForTracingToStop(true);\n    this._allSourcesFinished();\n    return this._performanceModel;\n  }\n\n\n  /**\n   * @param {boolean} awaitTracingCompleteCallback - Whether to wait for the _tracingCompleteCallback to happen\n   * @return {!Promise<void>}\n   */\n  async _waitForTracingToStop(awaitTracingCompleteCallback) {\n    const tracingStoppedPromises = [];\n    if (this._tracingManager && awaitTracingCompleteCallback) {\n      tracingStoppedPromises.push(new Promise(resolve => {\n        this._tracingCompleteCallback = resolve;\n      }));\n    }\n    tracingStoppedPromises.push(this._stopProfilingOnAllModels());\n\n    const extensionCompletionPromises = this._extensionSessions.map(session => session.stop());\n    if (extensionCompletionPromises.length) {\n      tracingStoppedPromises.push(\n          Promise.race([Promise.all(extensionCompletionPromises), new Promise(r => setTimeout(r, 5000))]));\n    }\n    await Promise.all(tracingStoppedPromises);\n  }\n\n  /**\n   * @override\n   * @param {!SDK.CPUProfilerModel.CPUProfilerModel} cpuProfilerModel\n   */\n  modelAdded(cpuProfilerModel) {\n    if (this._profiling) {\n      cpuProfilerModel.startRecording();\n    }\n  }\n\n  /**\n   * @override\n   * @param {!SDK.CPUProfilerModel.CPUProfilerModel} cpuProfilerModel\n   */\n  modelRemoved(cpuProfilerModel) {\n    // FIXME: We'd like to stop profiling on the target and retrieve a profile\n    // but it's too late. Backend connection is closed.\n  }\n\n  /**\n   * @return {!Promise<void>}\n   */\n  async _startProfilingOnAllModels() {\n    this._profiling = true;\n    const models = SDK.SDKModel.TargetManager.instance().models(SDK.CPUProfilerModel.CPUProfilerModel);\n    await Promise.all(models.map(model => model.startRecording()));\n  }\n\n  /**\n   * @param {string} targetId\n   * @param {?Protocol.Profiler.Profile} cpuProfile\n   */\n  _addCpuProfile(targetId, cpuProfile) {\n    if (!cpuProfile) {\n      Common.Console.Console.instance().warn(Common.UIString.UIString('CPU profile for a target is not available.'));\n      return;\n    }\n    if (!this._cpuProfiles) {\n      this._cpuProfiles = new Map();\n    }\n    this._cpuProfiles.set(targetId, cpuProfile);\n  }\n\n  /**\n   * @return {!Promise<void>}\n   */\n  async _stopProfilingOnAllModels() {\n    const models =\n        this._profiling ? SDK.SDKModel.TargetManager.instance().models(SDK.CPUProfilerModel.CPUProfilerModel) : [];\n    this._profiling = false;\n    const promises = [];\n    for (const model of models) {\n      const targetId = model.target().id();\n      const modelPromise = model.stopRecording().then(this._addCpuProfile.bind(this, targetId));\n      promises.push(modelPromise);\n    }\n    await Promise.all(promises);\n  }\n\n  /**\n   * @param {string} categories\n   * @param {boolean=} enableJSSampling\n   * @return {!Promise<!Object|undefined>}\n   */\n  async _startRecordingWithCategories(categories, enableJSSampling) {\n    // There might be a significant delay in the beginning of timeline recording\n    // caused by starting CPU profiler, that needs to traverse JS heap to collect\n    // all the functions data.\n    await SDK.SDKModel.TargetManager.instance().suspendAllTargets('performance-timeline');\n    if (enableJSSampling && Root.Runtime.Runtime.queryParam('timelineTracingJSProfileDisabled')) {\n      await this._startProfilingOnAllModels();\n    }\n    if (!this._tracingManager) {\n      return;\n    }\n\n    return this._tracingManager.start(this, categories, '');\n  }\n\n  /**\n   * @param {!Array.<!SDK.TracingManager.EventPayload>} events\n   * @override\n   */\n  traceEventsCollected(events) {\n    this._tracingModel.addEvents(events);\n  }\n\n  /**\n   * @override\n   */\n  tracingComplete() {\n    if (!this._tracingCompleteCallback) {\n      return;\n    }\n    this._tracingCompleteCallback(undefined);\n    this._tracingCompleteCallback = null;\n  }\n\n  _allSourcesFinished() {\n    this._client.processingStarted();\n    setTimeout(() => this._finalizeTrace(), 0);\n  }\n\n  /**\n   * @return {!Promise<void>}\n   */\n  async _finalizeTrace() {\n    this._injectCpuProfileEvents();\n    await SDK.SDKModel.TargetManager.instance().resumeAllTargets();\n    this._tracingModel.tracingComplete();\n    this._client.loadingComplete(this._tracingModel);\n  }\n\n  /**\n   * @param {number} pid\n   * @param {number} tid\n   * @param {?Protocol.Profiler.Profile} cpuProfile\n   */\n  _injectCpuProfileEvent(pid, tid, cpuProfile) {\n    if (!cpuProfile) {\n      return;\n    }\n    // TODO(crbug/1011811): This event type is not compatible with the SDK.TracingManager.EventPayload.\n    // EventPayload requires many properties to be defined but it's not clear if they will have\n    // any side effects.\n    const cpuProfileEvent = /** @type {*} */ ({\n      cat: SDK.TracingModel.DevToolsMetadataEventCategory,\n      ph: SDK.TracingModel.Phase.Instant,\n      ts: this._tracingModel.maximumRecordTime() * 1000,\n      pid: pid,\n      tid: tid,\n      name: TimelineModel.TimelineModel.RecordType.CpuProfile,\n      args: {data: {cpuProfile: cpuProfile}}\n    });\n    this._tracingModel.addEvents([cpuProfileEvent]);\n  }\n\n  /**\n   * @return {?Map<string, number>}\n   */\n  _buildTargetToProcessIdMap() {\n    const metadataEventTypes = TimelineModel.TimelineModel.TimelineModelImpl.DevToolsMetadataEvent;\n    const metadataEvents = this._tracingModel.devToolsMetadataEvents();\n    const browserMetaEvent = metadataEvents.find(e => e.name === metadataEventTypes.TracingStartedInBrowser);\n    if (!browserMetaEvent) {\n      return null;\n    }\n\n    /** @type {!Platform.MapUtilities.Multimap<string, string>} */\n    const pseudoPidToFrames = new Platform.MapUtilities.Multimap();\n    /** @type {!Map<string, number>} */\n    const targetIdToPid = new Map();\n    /** @type {!Array<*>} */\n    const frames = browserMetaEvent.args.data.frames;\n    for (const frameInfo of frames) {\n      targetIdToPid.set(frameInfo.frame, frameInfo.processId);\n    }\n    for (const event of metadataEvents) {\n      const data = event.args.data;\n      switch (event.name) {\n        case metadataEventTypes.FrameCommittedInBrowser:\n          if (data.processId) {\n            targetIdToPid.set(data.frame, data.processId);\n          } else {\n            pseudoPidToFrames.set(data.processPseudoId, data.frame);\n          }\n          break;\n        case metadataEventTypes.ProcessReadyInBrowser:\n          for (const frame of pseudoPidToFrames.get(data.processPseudoId) || []) {\n            targetIdToPid.set(frame, data.processId);\n          }\n          break;\n      }\n    }\n    const mainFrame = frames.find(frame => !frame.parent);\n    const mainRendererProcessId = mainFrame.processId;\n    const mainProcess = this._tracingModel.processById(mainRendererProcessId);\n    if (mainProcess) {\n      const target = SDK.SDKModel.TargetManager.instance().mainTarget();\n      if (target) {\n        targetIdToPid.set(target.id(), mainProcess.id());\n      }\n    }\n    return targetIdToPid;\n  }\n\n  _injectCpuProfileEvents() {\n    if (!this._cpuProfiles) {\n      return;\n    }\n\n    const metadataEventTypes = TimelineModel.TimelineModel.TimelineModelImpl.DevToolsMetadataEvent;\n    const metadataEvents = this._tracingModel.devToolsMetadataEvents();\n\n    const targetIdToPid = this._buildTargetToProcessIdMap();\n    if (targetIdToPid) {\n      for (const [id, profile] of this._cpuProfiles) {\n        const pid = targetIdToPid.get(id);\n        if (!pid) {\n          continue;\n        }\n        const process = this._tracingModel.processById(pid);\n        const thread =\n            process && process.threadByName(TimelineModel.TimelineModel.TimelineModelImpl.RendererMainThreadName);\n        if (thread) {\n          this._injectCpuProfileEvent(pid, thread.id(), profile);\n        }\n      }\n    } else {\n      // Legacy backends support.\n      const filteredEvents = metadataEvents.filter(event => event.name === metadataEventTypes.TracingStartedInPage);\n      const mainMetaEvent = filteredEvents[filteredEvents.length - 1];\n      if (mainMetaEvent) {\n        const pid = mainMetaEvent.thread.process().id();\n        if (this._tracingManager) {\n          const mainCpuProfile = this._cpuProfiles.get(this._tracingManager.target().id());\n          this._injectCpuProfileEvent(pid, mainMetaEvent.thread.id(), mainCpuProfile);\n        }\n      } else {\n        // Or there was no tracing manager in the main target at all, in this case build the model full\n        // of cpu profiles.\n        let tid = 0;\n        for (const pair of this._cpuProfiles) {\n          const target = SDK.SDKModel.TargetManager.instance().targetById(pair[0]);\n          const name = target && target.name();\n          this._tracingModel.addEvents(\n              TimelineModel.TimelineJSProfile.TimelineJSProfileProcessor.buildTraceProfileFromCpuProfile(\n                  pair[1], ++tid, /* injectPageEvent */ tid === 1, name));\n        }\n      }\n    }\n\n    const workerMetaEvents =\n        metadataEvents.filter(event => event.name === metadataEventTypes.TracingSessionIdForWorker);\n    for (const metaEvent of workerMetaEvents) {\n      const workerId = metaEvent.args['data']['workerId'];\n      const cpuProfile = this._cpuProfiles.get(workerId);\n      this._injectCpuProfileEvent(\n          metaEvent.thread.process().id(), metaEvent.args['data']['workerThreadId'], cpuProfile);\n    }\n    this._cpuProfiles = null;\n  }\n\n  /**\n   * @param {number} usage\n   * @override\n   */\n  tracingBufferUsage(usage) {\n    this._client.recordingProgress(usage);\n  }\n\n  /**\n   * @param {number} progress\n   * @override\n   */\n  eventsRetrievalProgress(progress) {\n    this._client.loadingProgress(progress);\n  }\n}\n\n/**\n * @interface\n * @extends {TimelineLoaderClient}\n */\nexport class Client {\n  /**\n   * @param {number} usage\n   */\n  recordingProgress(usage) {\n  }\n\n  loadingStarted() {\n  }\n\n  processingStarted() {\n  }\n\n  /**\n   * @param {number=} progress\n   */\n  loadingProgress(progress) {\n  }\n\n  /**\n   * @param {?SDK.TracingModel.TracingModel} tracingModel\n   */\n  loadingComplete(tracingModel) {\n  }\n}\n\n/**\n * @typedef {!{\n *   enableJSSampling: (boolean|undefined),\n *   capturePictures: (boolean|undefined),\n *   captureFilmStrip: (boolean|undefined),\n *   startCoverage: (boolean|undefined)\n * }}\n */\n// @ts-ignore typedef\nexport let RecordingOptions;\n"]}