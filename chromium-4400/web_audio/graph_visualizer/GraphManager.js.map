{"version":3,"file":"GraphManager.js","sourceRoot":"","sources":["../../../../../../front_end/web_audio/graph_visualizer/GraphManager.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,wBAAwB,CAAC,CAAE,qCAAqC;AAExF,OAAO,EAAC,MAAM,IAAI,UAAU,EAAE,SAAS,EAAC,MAAM,gBAAgB,CAAC;AAE/D,6DAA6D;AAC7D,6EAA6E;AAC7E,MAAM,OAAO,YAAa,SAAQ,MAAM,CAAC,aAAa,CAAC,aAAa;IAClE;QACE,KAAK,EAAE,CAAC;QAER,iEAAiE;QACjE,IAAI,CAAC,oBAAoB,GAAG,IAAI,GAAG,EAAE,CAAC;IACxC,CAAC;IAED;;OAEG;IACH,aAAa,CAAC,SAAS;QACrB,MAAM,KAAK,GAAG,IAAI,SAAS,CAAC,SAAS,CAAC,CAAC;QACvC,+CAA+C;QAC/C,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QAChF,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;IAED;;OAEG;IACH,cAAc,CAAC,SAAS;QACtB,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;YAC7C,OAAO;SACR;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvD,IAAI,CAAC,KAAK,EAAE;YACV,OAAO;SACR;QAED,KAAK,CAAC,mBAAmB,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QACnF,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAC9C,CAAC;IAED;;OAEG;IACH,UAAU,CAAC,SAAS;QAClB,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC;IACpC,CAAC;IAED;;;;;;OAMG;IACH,QAAQ,CAAC,SAAS;QAChB,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC;IAC1D,CAAC;IAED;;OAEG;IACH,mBAAmB,CAAC,KAAK;QACvB,MAAM,KAAK,GAAG,yBAAyB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;IAChE,CAAC;CACF","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../common/common.js';  // eslint-disable-line no-unused-vars\n\nimport {Events as ViewEvents, GraphView} from './GraphView.js';\n\n// A class that maps each context to its corresponding graph.\n// It controls which graph to render when the context is switched or updated.\nexport class GraphManager extends Common.ObjectWrapper.ObjectWrapper {\n  constructor() {\n    super();\n\n    /** @type {!Map<!Protocol.WebAudio.GraphObjectId, !GraphView>} */\n    this._graphMapByContextId = new Map();\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.GraphObjectId} contextId\n   */\n  createContext(contextId) {\n    const graph = new GraphView(contextId);\n    // When a graph has any update, request redraw.\n    graph.addEventListener(ViewEvents.ShouldRedraw, this._notifyShouldRedraw, this);\n    this._graphMapByContextId.set(contextId, graph);\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.GraphObjectId} contextId\n   */\n  destroyContext(contextId) {\n    if (!this._graphMapByContextId.has(contextId)) {\n      return;\n    }\n\n    const graph = this._graphMapByContextId.get(contextId);\n    if (!graph) {\n      return;\n    }\n\n    graph.removeEventListener(ViewEvents.ShouldRedraw, this._notifyShouldRedraw, this);\n    this._graphMapByContextId.delete(contextId);\n  }\n\n  /**\n   * @param {string} contextId\n   */\n  hasContext(contextId) {\n    return this._graphMapByContextId.has(contextId);\n  }\n\n  clearGraphs() {\n    this._graphMapByContextId.clear();\n  }\n\n  /**\n   * Get graph by contextId.\n   * If the user starts listening for WebAudio events after the page has been running a context for awhile,\n   * the graph might be undefined.\n   * @param {!Protocol.WebAudio.GraphObjectId} contextId\n   * @return {?GraphView}\n   */\n  getGraph(contextId) {\n    return this._graphMapByContextId.get(contextId) || null;\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _notifyShouldRedraw(event) {\n    const graph = /** @type {!GraphView} */ (event.data);\n    this.dispatchEventToListeners(ViewEvents.ShouldRedraw, graph);\n  }\n}\n"]}