{"version":3,"file":"TargetDetachedDialog.js","sourceRoot":"","sources":["../../../../../front_end/components/TargetDetachedDialog.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,GAAG,MAAM,eAAe,CAAC;AACrC,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAElC,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB;;MAEE;IACF,qBAAqB,EAAE,wBAAwB;CAChD,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,oCAAoC,EAAE,SAAS,CAAC,CAAC;AAC1F,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACtE;;GAEG;AACH,MAAM,OAAO,oBAAqB,SAAQ,GAAG,CAAC,QAAQ,CAAC,QAAQ;IAC7D;;OAEG;IACH,YAAY,MAAM;QAChB,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,MAAM,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC;QACzC,MAAM,CAAC,cAAc,EAAE,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED;;;OAGG;IACH,QAAQ,CAAC,EAAC,MAAM,EAAC;QACf,EAAE,CAAC,+BAA+B,CAAC,+BAA+B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAClF,CAAC;IAED,MAAM,CAAC,uBAAuB;QAC5B,EAAE,CAAC,+BAA+B,CAAC,+BAA+B,CAAC,IAAI,CACnE,UAAU,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;IACnD,CAAC;IAED;;OAEG;IACH,aAAa;QACX,sFAAsF;QACtF,sFAAsF;QACtF,mCAAmC;QACnC,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,YAAY,EAAE,EAAE;YAChC,OAAO;SACR;QACD,MAAM,MAAM,GAAG,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACtC,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACjE,MAAM,CAAC,cAAc,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,EAAE,CAAC,mBAAmB;aACrB,mBAAmB,CAAC,GAAG,EAAE;YACxB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QACjC,CAAC,CAAC;aACD,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAEjC,2EAA2E;QAC3E,uEAAuE;QACvE,yDAAyD;QACzD,aAAa;QACb,MAAM,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,wBAAwB;QACtB,IAAI,CAAC,MAAM,EAAE,CAAC,YAAY,EAAE,CAAC,8BAA8B,EAAE,CAAC;QAC9D,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAChC;IACH,CAAC;CACF;AAED,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,oBAAoB,EAAE,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../i18n/i18n.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';\n\nexport const UIStrings = {\n  /**\n  *@description Text on the remote debugging window to indicate the connection is lost\n  */\n  websocketDisconnected: 'WebSocket disconnected',\n};\nconst str_ = i18n.i18n.registerUIStrings('components/TargetDetachedDialog.js', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/**\n * @implements {ProtocolProxyApi.InspectorDispatcher}\n */\nexport class TargetDetachedDialog extends SDK.SDKModel.SDKModel {\n  /**\n   * @param {!SDK.SDKModel.Target} target\n   */\n  constructor(target) {\n    super(target);\n    target.registerInspectorDispatcher(this);\n    target.inspectorAgent().invoke_enable();\n    this._hideCrashedDialog = null;\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Inspector.DetachedEvent} event\n   */\n  detached({reason}) {\n    UI.RemoteDebuggingTerminatedScreen.RemoteDebuggingTerminatedScreen.show(reason);\n  }\n\n  static webSocketConnectionLost() {\n    UI.RemoteDebuggingTerminatedScreen.RemoteDebuggingTerminatedScreen.show(\n        i18nString(UIStrings.websocketDisconnected));\n  }\n\n  /**\n   * @override\n   */\n  targetCrashed() {\n    // In case of service workers targetCrashed usually signals that the worker is stopped\n    // and in any case it is restarted automatically (in which case front-end will receive\n    // targetReloadedAfterCrash event).\n    if (this.target().parentTarget()) {\n      return;\n    }\n    const dialog = new UI.Dialog.Dialog();\n    dialog.setSizeBehavior(UI.GlassPane.SizeBehavior.MeasureContent);\n    dialog.addCloseButton();\n    dialog.setDimmed(true);\n    this._hideCrashedDialog = dialog.hide.bind(dialog);\n    new UI.TargetCrashedScreen\n        .TargetCrashedScreen(() => {\n          this._hideCrashedDialog = null;\n        })\n        .show(dialog.contentElement);\n\n    // UI.Dialog extends GlassPane and overrides the `show` method with a wider\n    // accepted type. However, TypeScript uses the supertype declaration to\n    // determine the full type, which requires a `!Document`.\n    // @ts-ignore\n    dialog.show();\n  }\n\n  /**\n   * @override;\n   */\n  targetReloadedAfterCrash() {\n    this.target().runtimeAgent().invoke_runIfWaitingForDebugger();\n    if (this._hideCrashedDialog) {\n      this._hideCrashedDialog.call(null);\n      this._hideCrashedDialog = null;\n    }\n  }\n}\n\nSDK.SDKModel.SDKModel.register(TargetDetachedDialog, SDK.SDKModel.Capability.Inspector, true);\n"]}