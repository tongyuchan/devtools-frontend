{"version":3,"file":"ImagePreview.js","sourceRoot":"","sources":["../../../../../front_end/components/ImagePreview.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,qBAAqB,CAAC;AAC9C,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AACpD,OAAO,KAAK,GAAG,MAAM,eAAe,CAAC;AACrC,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAElC,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB;;;;;;MAME;IACF,iBAAiB,EAAE,gDAAgD;IACnE;;;;MAIE;IACF,IAAI,EAAE,kBAAkB;IACxB;;MAEE;IACF,aAAa,EAAE,gBAAgB;IAC/B;;;MAGE;IACF,UAAU,EAAE,kBAAkB;CAC/B,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,4BAA4B,EAAE,SAAS,CAAC,CAAC;AAClF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACtE;;;;;GAKG;AACH,qBAAqB;AACrB,MAAM,CAAC,IAAI,mBAAmB,CAAC;AAE/B,MAAM,OAAO,YAAY;IACvB;;;;;;OAMG;IACH,MAAM,CAAC,KAAK,CAAC,KAAK,CACd,MAAM,EAAE,gBAAgB,EAAE,cAAc,EAAE,OAAO,GAAG,EAAC,mBAAmB,EAAE,SAAS,EAAE,YAAY,EAAE,SAAS,EAAC;QAC/G,MAAM,EAAC,mBAAmB,EAAE,YAAY,EAAC,GAAG,OAAO,CAAC;QACpD,MAAM,iBAAiB,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QAChF,IAAI,CAAC,iBAAiB,EAAE;YACtB,OAAO,uBAAuB,CAAC,CAAC,IAAI,CAAC,CAAC;SACvC;QACD,IAAI,QAAQ,GAAG,iBAAiB,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QAClE,IAAI,QAAQ,GAAG,gBAAgB,CAAC;QAChC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,mBAAmB,IAAI,mBAAmB,CAAC,UAAU,EAAE;YACvF,QAAQ,GAAG,mBAAmB,CAAC,UAAU,CAAC;YAC1C,QAAQ,GAAG,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,QAAQ,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE;YAC3C,OAAO,uBAAuB,CAAC,CAAC,IAAI,CAAC,CAAC;SACvC;QAED,+BAA+B;QAC/B,IAAI,OAAO,CAAC;QACZ,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YAC9B,OAAO,GAAG,CAAC,CAAC;QACd,CAAC,CAAC,CAAC;QACH,MAAM,YAAY,GAAG,+BAA+B,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;QACrF,YAAY,CAAC,gBAAgB,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;QAC3D,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;QACnE,IAAI,YAAY,EAAE;YAChB,YAAY,CAAC,GAAG,GAAG,YAAY,CAAC;SACjC;QACD,QAAQ,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;QAC3C,OAAO,OAAO,CAAC;QAEf;;;WAGG;QACH,SAAS,eAAe,CAAC,QAAQ;YAC/B,OAAO,QAAQ,KAAK,IAAI,IAAI,QAAQ,CAAC,YAAY,EAAE,KAAK,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC;QAClG,CAAC;QAED,SAAS,YAAY;YACnB,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAClD,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,6BAA6B,EAAE,EAAC,oBAAoB,EAAE,KAAK,EAAC,CAAC,CAAC;YAC9F,SAAS,CAAC,SAAS,GAAG,yBAAyB,CAAC;YAChD,MAAM,cAAc,GAAG,YAAY,CAAC,YAAY,CAAC;YACjD,MAAM,eAAe,GAAG,YAAY,CAAC,aAAa,CAAC;YACnD,MAAM,aAAa,GAAG,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC,CAAC,cAAc,CAAC;YAC/F,MAAM,cAAc,GAAG,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC,CAAC,eAAe,CAAC;YAClG,IAAI,WAAW,CAAC;YAChB,IAAI,cAAc,EAAE;gBAClB,IAAI,cAAc,KAAK,eAAe,IAAI,aAAa,KAAK,cAAc,EAAE;oBAC1E,WAAW,GAAG,UAAU,CACpB,SAAS,CAAC,iBAAiB,EAC3B,EAAC,GAAG,EAAE,aAAa,EAAE,GAAG,EAAE,cAAc,EAAE,GAAG,EAAE,cAAc,EAAE,GAAG,EAAE,eAAe,EAAC,CAAC,CAAC;iBAC3F;qBAAM;oBACL,WAAW,GAAG,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,GAAG,EAAE,aAAa,EAAE,GAAG,EAAE,cAAc,EAAC,CAAC,CAAC;iBACrF;aACF;YAED,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YAC3F,IAAI,WAAW,EAAE;gBACf,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,WAAW,GAAG,WAAW,CAAC;aAC5G;YACD,IAAI,QAAQ,KAAK,gBAAgB,EAAE;gBACjC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,WAAW;oBACxF,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,gBAAgB,EAAE,QAAQ,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;aAC5G;YACD,OAAO,CAAC,SAAS,CAAC,CAAC;QACrB,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,KAAK,CAAC,qBAAqB,CAAC,IAAI;QACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,KAAK,KAAK,EAAE;YAC/D,OAAO;SACR;QAED,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;QAE9C,IAAI,CAAC,MAAM,EAAE;YACX,OAAO;SACR;QAED,MAAM,cAAc,GAAG,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QACpE,MAAM,CAAC,OAAO,EAAE,CAAC;QACjB,OAAO,cAAc,CAAC;QAEtB;;;WAGG;QACH,SAAS,QAAQ;YACf,OAAO,EAAC,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE,cAAc,EAAE,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAC,CAAC;QAC/F,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,yBAAyB,CAAC,GAAG;QAClC,MAAM,cAAc,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC3D,MAAM,eAAe,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAClH,OAAO,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,EAAC,GAAG,EAAE,eAAe,EAAC,CAAC,CAAC;IAClE,CAAC;CACF","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';\n\nexport const UIStrings = {\n  /**\n  *@description Description in Image Preview\n  *@example {500} PH1\n  *@example {300} PH2\n  *@example {200} PH3\n  *@example {100} PH4\n  */\n  sSPxIntrinsicSSPx: '{PH1} × {PH2} px (intrinsic: {PH3} × {PH4} px)',\n  /**\n  *@description Description in Image Preview\n  *@example {500} PH1\n  *@example {500} PH2\n  */\n  sSPx: '{PH1} × {PH2} px',\n  /**\n  *@description Alt text description of an image's source\n  */\n  unknownSource: 'unknown source',\n  /**\n  *@description Text to indicate the source of an image\n  *@example {example.com} PH1\n  */\n  imageFromS: 'Image from {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('components/ImagePreview.js', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/** @typedef {{\n * renderedWidth: number,\n * renderedHeight: number,\n * currentSrc: (string|undefined)\n * }}\n */\n// @ts-ignore typedef\nexport let PrecomputedFeatures;\n\nexport class ImagePreview {\n  /**\n   * @param {!SDK.SDKModel.Target} target\n   * @param {string} originalImageURL\n   * @param {boolean} showDimensions\n   * @param {!{precomputedFeatures: (!PrecomputedFeatures|undefined), imageAltText: (string|undefined)}=} options\n   * @return {!Promise<?Element>}\n   */\n  static async build(\n      target, originalImageURL, showDimensions, options = {precomputedFeatures: undefined, imageAltText: undefined}) {\n    const {precomputedFeatures, imageAltText} = options;\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!resourceTreeModel) {\n      return /** @type {?Element} */ (null);\n    }\n    let resource = resourceTreeModel.resourceForURL(originalImageURL);\n    let imageURL = originalImageURL;\n    if (!isImageResource(resource) && precomputedFeatures && precomputedFeatures.currentSrc) {\n      imageURL = precomputedFeatures.currentSrc;\n      resource = resourceTreeModel.resourceForURL(imageURL);\n    }\n    if (!resource || !isImageResource(resource)) {\n      return /** @type {?Element} */ (null);\n    }\n\n    /** @type {function(*):void} */\n    let fulfill;\n    const promise = new Promise(x => {\n      fulfill = x;\n    });\n    const imageElement = /** @type{!HTMLImageElement} */ (document.createElement('img'));\n    imageElement.addEventListener('load', buildContent, false);\n    imageElement.addEventListener('error', () => fulfill(null), false);\n    if (imageAltText) {\n      imageElement.alt = imageAltText;\n    }\n    resource.populateImageSource(imageElement);\n    return promise;\n\n    /**\n     * @param {?SDK.Resource.Resource} resource\n     * @return {boolean}\n     */\n    function isImageResource(resource) {\n      return resource !== null && resource.resourceType() === Common.ResourceType.resourceTypes.Image;\n    }\n\n    function buildContent() {\n      const container = document.createElement('table');\n      UI.Utils.appendStyle(container, 'components/imagePreview.css', {enableLegacyPatching: false});\n      container.className = 'image-preview-container';\n      const intrinsicWidth = imageElement.naturalWidth;\n      const intrinsicHeight = imageElement.naturalHeight;\n      const renderedWidth = precomputedFeatures ? precomputedFeatures.renderedWidth : intrinsicWidth;\n      const renderedHeight = precomputedFeatures ? precomputedFeatures.renderedHeight : intrinsicHeight;\n      let description;\n      if (showDimensions) {\n        if (renderedHeight !== intrinsicHeight || renderedWidth !== intrinsicWidth) {\n          description = i18nString(\n              UIStrings.sSPxIntrinsicSSPx,\n              {PH1: renderedWidth, PH2: renderedHeight, PH3: intrinsicWidth, PH4: intrinsicHeight});\n        } else {\n          description = i18nString(UIStrings.sSPx, {PH1: renderedWidth, PH2: renderedHeight});\n        }\n      }\n\n      container.createChild('tr').createChild('td', 'image-container').appendChild(imageElement);\n      if (description) {\n        container.createChild('tr').createChild('td').createChild('span', 'description').textContent = description;\n      }\n      if (imageURL !== originalImageURL) {\n        container.createChild('tr').createChild('td').createChild('span', 'description').textContent =\n            Platform.StringUtilities.sprintf('currentSrc: %s', Platform.StringUtilities.trimMiddle(imageURL, 100));\n      }\n      fulfill(container);\n    }\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   * @return {!Promise<!PrecomputedFeatures|undefined>}\n   */\n  static async loadDimensionsForNode(node) {\n    if (!node.nodeName() || node.nodeName().toLowerCase() !== 'img') {\n      return;\n    }\n\n    const object = await node.resolveToObject('');\n\n    if (!object) {\n      return;\n    }\n\n    const featuresObject = object.callFunctionJSON(features, undefined);\n    object.release();\n    return featuresObject;\n\n    /**\n     * @return {!PrecomputedFeatures}\n     * @this {!HTMLImageElement}\n     */\n    function features() {\n      return {renderedWidth: this.width, renderedHeight: this.height, currentSrc: this.currentSrc};\n    }\n  }\n\n  /**\n   * @param {string} url\n   * @return {string}\n   */\n  static defaultAltTextForImageURL(url) {\n    const parsedImageURL = new Common.ParsedURL.ParsedURL(url);\n    const imageSourceText = parsedImageURL.isValid ? parsedImageURL.displayName : i18nString(UIStrings.unknownSource);\n    return i18nString(UIStrings.imageFromS, {PH1: imageSourceText});\n  }\n}\n"]}