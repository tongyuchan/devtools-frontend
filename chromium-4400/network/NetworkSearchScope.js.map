{"version":3,"file":"NetworkSearchScope.js","sourceRoot":"","sources":["../../../../../front_end/network/NetworkSearchScope.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as SDK from '../sdk/sdk.js';           // eslint-disable-line no-unused-vars\nimport * as Search from '../search/search.js';  // eslint-disable-line no-unused-vars\nimport * as TextUtils from '../text_utils/text_utils.js';  // eslint-disable-line no-unused-vars\n\n/**\n * @implements {Search.SearchConfig.SearchScope}\n */\nexport class NetworkSearchScope {\n  /**\n   * @override\n   * @param {!Common.Progress.Progress} progress\n   */\n  performIndexing(progress) {\n    queueMicrotask(() => {\n      progress.done();\n    });\n  }\n\n  /**\n   * @override\n   * @param {!Search.SearchConfig.SearchConfig} searchConfig\n   * @param {!Common.Progress.Progress} progress\n   * @param {function(!Search.SearchConfig.SearchResult):void} searchResultCallback\n   * @param {function(boolean):void} searchFinishedCallback\n   * @return {!Promise<void>}\n   */\n  async performSearch(searchConfig, progress, searchResultCallback, searchFinishedCallback) {\n    const promises = [];\n    const requests = SDK.NetworkLog.NetworkLog.instance().requests().filter(\n        request => searchConfig.filePathMatchesFileQuery(request.url()));\n    progress.setTotalWork(requests.length);\n    for (const request of requests) {\n      const promise = this._searchRequest(searchConfig, request, progress);\n      promises.push(promise);\n    }\n    const resultsWithNull = await Promise.all(promises);\n    const results = /** @type {!Array<!NetworkSearchResult>} */ (resultsWithNull.filter(result => result !== null));\n    if (progress.isCanceled()) {\n      searchFinishedCallback(false);\n      return;\n    }\n    for (const result of results.sort((r1, r2) => r1.label().localeCompare(r2.label()))) {\n      if (result.matchesCount() > 0) {\n        searchResultCallback(result);\n      }\n    }\n    progress.done();\n    searchFinishedCallback(true);\n  }\n\n  /**\n   * @param {!Search.SearchConfig.SearchConfig} searchConfig\n   * @param {!SDK.NetworkRequest.NetworkRequest} request\n   * @param {!Common.Progress.Progress} progress\n   * @return {!Promise<?NetworkSearchResult>}\n   */\n  async _searchRequest(searchConfig, request, progress) {\n    /** @type {!Array<!TextUtils.ContentProvider.SearchMatch>} */\n    let bodyMatches = [];\n    if (request.contentType().isTextType()) {\n      bodyMatches =\n          await request.searchInContent(searchConfig.query(), !searchConfig.ignoreCase(), searchConfig.isRegex());\n    }\n    if (progress.isCanceled()) {\n      return null;\n    }\n    const locations = [];\n    if (stringMatchesQuery(request.url())) {\n      locations.push(UIRequestLocation.urlMatch(request));\n    }\n    for (const header of request.requestHeaders()) {\n      if (headerMatchesQuery(header)) {\n        locations.push(UIRequestLocation.requestHeaderMatch(request, header));\n      }\n    }\n    for (const header of request.responseHeaders) {\n      if (headerMatchesQuery(header)) {\n        locations.push(UIRequestLocation.responseHeaderMatch(request, header));\n      }\n    }\n    for (const match of bodyMatches) {\n      locations.push(UIRequestLocation.bodyMatch(request, match));\n    }\n    progress.worked();\n    return new NetworkSearchResult(request, locations);\n\n    /**\n     * @param {!SDK.NetworkRequest.NameValue} header\n     * @return {boolean}\n     */\n    function headerMatchesQuery(header) {\n      return stringMatchesQuery(`${header.name}: ${header.value}`);\n    }\n\n    /**\n     * @param {string} string\n     * @return {boolean}\n     */\n    function stringMatchesQuery(string) {\n      const flags = searchConfig.ignoreCase() ? 'i' : '';\n      const regExps = searchConfig.queries().map(query => new RegExp(query, flags));\n      let pos = 0;\n      for (const regExp of regExps) {\n        const match = string.substr(pos).match(regExp);\n        if (!match || !match.index) {\n          return false;\n        }\n        pos += match.index + match[0].length;\n      }\n      return true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  stopSearch() {\n  }\n}\n\nexport class UIRequestLocation {\n  /**\n   * @param {!SDK.NetworkRequest.NetworkRequest} request\n   * @param {?SDK.NetworkRequest.NameValue} requestHeader\n   * @param {?SDK.NetworkRequest.NameValue} responseHeader\n   * @param {?TextUtils.ContentProvider.SearchMatch} searchMatch\n   * @param {boolean} urlMatch\n   */\n  constructor(request, requestHeader, responseHeader, searchMatch, urlMatch) {\n    this.request = request;\n    this.requestHeader = requestHeader;\n    this.responseHeader = responseHeader;\n    this.searchMatch = searchMatch;\n    this.isUrlMatch = urlMatch;\n  }\n\n  /**\n   * @param {!SDK.NetworkRequest.NetworkRequest} request\n   * @param {?SDK.NetworkRequest.NameValue} header\n   */\n  static requestHeaderMatch(request, header) {\n    return new UIRequestLocation(request, header, null, null, false);\n  }\n\n  /**\n   * @param {!SDK.NetworkRequest.NetworkRequest} request\n   * @param {?SDK.NetworkRequest.NameValue} header\n   */\n  static responseHeaderMatch(request, header) {\n    return new UIRequestLocation(request, null, header, null, false);\n  }\n\n  /**\n   * @param {!SDK.NetworkRequest.NetworkRequest} request\n   * @param {?TextUtils.ContentProvider.SearchMatch} searchMatch\n   */\n  static bodyMatch(request, searchMatch) {\n    return new UIRequestLocation(request, null, null, searchMatch, false);\n  }\n\n  /**\n   * @param {!SDK.NetworkRequest.NetworkRequest} request\n   */\n  static urlMatch(request) {\n    return new UIRequestLocation(request, null, null, null, true);\n  }\n}\n\n/**\n * @implements Search.SearchConfig.SearchResult\n */\nexport class NetworkSearchResult {\n  /**\n   * @param {!SDK.NetworkRequest.NetworkRequest} request\n   * @param {!Array<!UIRequestLocation>} locations\n   */\n  constructor(request, locations) {\n    this._request = request;\n    this._locations = locations;\n  }\n\n  /**\n   * @override\n   * @return {number}\n   */\n  matchesCount() {\n    return this._locations.length;\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  label() {\n    return this._request.displayName;\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  description() {\n    const parsedUrl = this._request.parsedURL;\n    if (!parsedUrl) {\n      return this._request.url();\n    }\n    return parsedUrl.urlWithoutScheme();\n  }\n\n  /**\n   * @override\n   * @param {number} index\n   * @return {string}\n   */\n  matchLineContent(index) {\n    const location = this._locations[index];\n    if (location.isUrlMatch) {\n      return this._request.url();\n    }\n    const header = location.requestHeader || location.responseHeader;\n    if (header) {\n      return header.value;\n    }\n    return /** @type {!TextUtils.ContentProvider.SearchMatch} */ (location.searchMatch).lineContent;\n  }\n\n  /**\n   * @override\n   * @param {number} index\n   * @return {!Object}\n   */\n  matchRevealable(index) {\n    return this._locations[index];\n  }\n\n  /**\n   * @override\n   * @param {number} index\n   * @return {?}\n   */\n  matchLabel(index) {\n    const location = this._locations[index];\n    if (location.isUrlMatch) {\n      return Common.UIString.UIString('URL');\n    }\n    const header = location.requestHeader || location.responseHeader;\n    if (header) {\n      return `${header.name}:`;\n    }\n    return /** @type {!TextUtils.ContentProvider.SearchMatch} */ (location.searchMatch).lineNumber + 1;\n  }\n}\n"]}