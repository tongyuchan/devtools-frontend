{"version":3,"file":"BlockedURLsPane.js","sourceRoot":"","sources":["../../../../../front_end/network/BlockedURLsPane.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport {ls} from '../platform/platform.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';\n\n/** @type {?BlockedURLsPane} */\nexport let blockedURLsPaneInstance = null;\n\n/**\n * @implements {UI.ListWidget.Delegate<SDK.NetworkManager.BlockedPattern>}\n */\nexport class BlockedURLsPane extends UI.Widget.VBox {\n  constructor() {\n    super(true);\n    this.registerRequiredCSS('network/blockedURLsPane.css', {enableLegacyPatching: false});\n\n    this._manager = SDK.NetworkManager.MultitargetNetworkManager.instance();\n    this._manager.addEventListener(SDK.NetworkManager.MultitargetNetworkManager.Events.BlockedPatternsChanged, () => {\n      this._update();\n    }, this);\n\n    this._toolbar = new UI.Toolbar.Toolbar('', this.contentElement);\n    this._enabledCheckbox = new UI.Toolbar.ToolbarCheckbox(\n        Common.UIString.UIString('Enable network request blocking'), undefined, this._toggleEnabled.bind(this));\n    this._toolbar.appendToolbarItem(this._enabledCheckbox);\n    this._toolbar.appendSeparator();\n    const addButton = new UI.Toolbar.ToolbarButton(Common.UIString.UIString('Add pattern'), 'largeicon-add');\n    addButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this._addButtonClicked, this);\n    this._toolbar.appendToolbarItem(addButton);\n    const clearButton =\n        new UI.Toolbar.ToolbarButton(Common.UIString.UIString('Remove all patterns'), 'largeicon-clear');\n    clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this._removeAll, this);\n    this._toolbar.appendToolbarItem(clearButton);\n\n    /** @type {!UI.ListWidget.ListWidget<!SDK.NetworkManager.BlockedPattern>} */\n    this._list = new UI.ListWidget.ListWidget(this);\n    this._list.element.classList.add('blocked-urls');\n    this._list.registerRequiredCSS('network/blockedURLsPane.css', {enableLegacyPatching: false});\n    this._list.setEmptyPlaceholder(this._createEmptyPlaceholder());\n    this._list.show(this.contentElement);\n\n    /** @type {?UI.ListWidget.Editor<!SDK.NetworkManager.BlockedPattern>} */\n    this._editor = null;\n\n    /** @type {!Map<string, number>} */\n    this._blockedCountForUrl = new Map();\n    SDK.SDKModel.TargetManager.instance().addModelListener(\n        SDK.NetworkManager.NetworkManager, SDK.NetworkManager.Events.RequestFinished, this._onRequestFinished, this);\n\n    this._updateThrottler = new Common.Throttler.Throttler(200);\n\n    this._update();\n  }\n\n  /**\n   * @param {{forceNew: ?boolean}} opts\n   */\n  static instance(opts = {forceNew: null}) {\n    const {forceNew} = opts;\n    if (!blockedURLsPaneInstance || forceNew) {\n      blockedURLsPaneInstance = new BlockedURLsPane();\n    }\n    return blockedURLsPaneInstance;\n  }\n\n  /**\n   * @return {!Element}\n   */\n  _createEmptyPlaceholder() {\n    const element = this.contentElement.createChild('div', 'no-blocked-urls');\n    const addButton = UI.UIUtils.createTextButton(ls`Add pattern`, this._addButtonClicked.bind(this), 'add-button');\n    UI.ARIAUtils.setAccessibleName(addButton, ls`Add network request blocking pattern`);\n    element.appendChild(UI.UIUtils.formatLocalized('Network requests are not blocked. %s', [addButton]));\n    return element;\n  }\n\n  static reset() {\n    if (blockedURLsPaneInstance) {\n      blockedURLsPaneInstance.reset();\n    }\n  }\n\n  _addButtonClicked() {\n    this._manager.setBlockingEnabled(true);\n    this._list.addNewItem(0, {url: '', enabled: true});\n  }\n\n  /**\n   * @override\n   * @param {!SDK.NetworkManager.BlockedPattern} pattern\n   * @param {boolean} editable\n   * @return {!Element}\n   */\n  renderItem(pattern, editable) {\n    const count = this._blockedRequestsCount(pattern.url);\n    const element = document.createElement('div');\n    element.classList.add('blocked-url');\n    const checkbox = /** @type {!HTMLInputElement} */ (element.createChild('input', 'blocked-url-checkbox'));\n    checkbox.type = 'checkbox';\n    checkbox.checked = pattern.enabled;\n    checkbox.disabled = !this._manager.blockingEnabled();\n    element.createChild('div', 'blocked-url-label').textContent = pattern.url;\n    element.createChild('div', 'blocked-url-count').textContent = Common.UIString.UIString('%d blocked', count);\n    element.addEventListener('click', event => this._togglePattern(pattern, event));\n    checkbox.addEventListener('click', event => this._togglePattern(pattern, event));\n    return element;\n  }\n\n  /**\n   * @param {!SDK.NetworkManager.BlockedPattern} pattern\n   * @param {!Event} event\n   */\n  _togglePattern(pattern, event) {\n    event.consume(true);\n    const patterns = this._manager.blockedPatterns();\n    patterns.splice(patterns.indexOf(pattern), 1, {enabled: !pattern.enabled, url: pattern.url});\n    this._manager.setBlockedPatterns(patterns);\n  }\n\n  _toggleEnabled() {\n    this._manager.setBlockingEnabled(!this._manager.blockingEnabled());\n    this._update();\n  }\n\n  /**\n   * @override\n   * @param {!SDK.NetworkManager.BlockedPattern} pattern\n   * @param {number} index\n   */\n  removeItemRequested(pattern, index) {\n    const patterns = this._manager.blockedPatterns();\n    patterns.splice(index, 1);\n    this._manager.setBlockedPatterns(patterns);\n  }\n\n  /**\n   * @override\n   * @param {!SDK.NetworkManager.BlockedPattern} pattern\n   * @return {!UI.ListWidget.Editor<!SDK.NetworkManager.BlockedPattern>}\n   */\n  beginEdit(pattern) {\n    this._editor = this._createEditor();\n    this._editor.control('url').value = pattern.url;\n    return this._editor;\n  }\n\n  /**\n   * @override\n   * @param {!SDK.NetworkManager.BlockedPattern} item\n   * @param {!UI.ListWidget.Editor<!SDK.NetworkManager.BlockedPattern>} editor\n   * @param {boolean} isNew\n   */\n  commitEdit(item, editor, isNew) {\n    const url = editor.control('url').value;\n    const patterns = this._manager.blockedPatterns();\n    if (isNew) {\n      patterns.push({enabled: true, url: url});\n    } else {\n      patterns.splice(patterns.indexOf(item), 1, {enabled: true, url: url});\n    }\n\n    this._manager.setBlockedPatterns(patterns);\n  }\n\n  /**\n   * @return {!UI.ListWidget.Editor<!SDK.NetworkManager.BlockedPattern>}\n   */\n  _createEditor() {\n    if (this._editor) {\n      return this._editor;\n    }\n\n    const editor = new UI.ListWidget.Editor();\n    const content = editor.contentElement();\n    const titles = content.createChild('div', 'blocked-url-edit-row');\n    titles.createChild('div').textContent =\n        Common.UIString.UIString('Text pattern to block matching requests; use * for wildcard');\n    const fields = content.createChild('div', 'blocked-url-edit-row');\n    /**\n     * @param {!SDK.NetworkManager.BlockedPattern} item\n     * @param {number} index\n     * @param {(!HTMLInputElement|!HTMLSelectElement)} input\n     */\n    const validator = (item, index, input) => {\n      let valid = true;\n      let errorMessage;\n      if (!input.value) {\n        errorMessage = ls`Pattern input cannot be empty.`;\n        valid = false;\n      } else if (this._manager.blockedPatterns().find(pattern => pattern.url === input.value)) {\n        errorMessage = ls`Pattern already exists.`;\n        valid = false;\n      }\n      return {valid, errorMessage};\n    };\n    const urlInput = editor.createInput('url', 'text', '', validator);\n    fields.createChild('div', 'blocked-url-edit-value').appendChild(urlInput);\n    return editor;\n  }\n\n  _removeAll() {\n    this._manager.setBlockedPatterns([]);\n  }\n\n  /**\n   * @return {!Promise<void>}\n   */\n  _update() {\n    const enabled = this._manager.blockingEnabled();\n    this._list.element.classList.toggle(\n        'blocking-disabled', !enabled && Boolean(this._manager.blockedPatterns().length));\n    this._enabledCheckbox.setChecked(enabled);\n    this._list.clear();\n    for (const pattern of this._manager.blockedPatterns()) {\n      this._list.appendItem(pattern, true);\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * @param {string} url\n   * @return {number}\n   */\n  _blockedRequestsCount(url) {\n    if (!url) {\n      return 0;\n    }\n\n    let result = 0;\n    for (const blockedUrl of this._blockedCountForUrl.keys()) {\n      if (this._matches(url, blockedUrl)) {\n        result += /** @type {number} */ (this._blockedCountForUrl.get(blockedUrl));\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @param {string} pattern\n   * @param {string} url\n   * @return {boolean}\n   */\n  _matches(pattern, url) {\n    let pos = 0;\n    const parts = pattern.split('*');\n    for (let index = 0; index < parts.length; index++) {\n      const part = parts[index];\n      if (!part.length) {\n        continue;\n      }\n      pos = url.indexOf(part, pos);\n      if (pos === -1) {\n        return false;\n      }\n      pos += part.length;\n    }\n    return true;\n  }\n\n  reset() {\n    this._blockedCountForUrl.clear();\n    this._updateThrottler.schedule(this._update.bind(this));\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onRequestFinished(event) {\n    const request = /** @type {!SDK.NetworkRequest.NetworkRequest} */ (event.data);\n    if (request.wasBlocked()) {\n      const count = this._blockedCountForUrl.get(request.url()) || 0;\n      this._blockedCountForUrl.set(request.url(), count + 1);\n      this._updateThrottler.schedule(this._update.bind(this));\n    }\n  }\n}\n"]}