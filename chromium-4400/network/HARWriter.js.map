{"version":3,"file":"HARWriter.js","sourceRoot":"","sources":["../../../../../front_end/network/HARWriter.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008, 2009 Anthony Ricaud <rik@webkit.org>\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport * as Platform from '../platform/platform.js';\nimport * as SDK from '../sdk/sdk.js';\n\nexport class HARWriter {\n  /**\n   * @param {!Common.StringOutputStream.OutputStream} stream\n   * @param {!Array.<!SDK.NetworkRequest.NetworkRequest>} requests\n   * @param {!Common.Progress.Progress} progress\n   * @return {!Promise<void>}\n   */\n  static async write(stream, requests, progress) {\n    const compositeProgress = new Common.Progress.CompositeProgress(progress);\n\n    const content = await HARWriter._harStringForRequests(requests, compositeProgress);\n    if (progress.isCanceled()) {\n      return;\n    }\n    await HARWriter._writeToStream(stream, compositeProgress, content);\n  }\n\n  /**\n   * @param {!Array<!SDK.NetworkRequest.NetworkRequest>} requests\n   * @param {!Common.Progress.CompositeProgress} compositeProgress\n   * @return {!Promise<string>}\n   */\n  static async _harStringForRequests(requests, compositeProgress) {\n    const progress = compositeProgress.createSubProgress();\n    progress.setTitle(Common.UIString.UIString('Collecting content…'));\n    progress.setTotalWork(requests.length);\n\n    // Sort by issueTime because this is recorded as startedDateTime in HAR logs.\n    requests.sort((reqA, reqB) => reqA.issueTime() - reqB.issueTime());\n    const harLog = await SDK.HARLog.HARLog.build(requests);\n    const promises = [];\n    for (let i = 0; i < requests.length; i++) {\n      const promise = requests[i].contentData();\n      promises.push(promise.then(contentLoaded.bind(null, harLog.entries[i])));\n    }\n\n    await Promise.all(promises);\n    progress.done();\n\n    if (progress.isCanceled()) {\n      return '';\n    }\n    return JSON.stringify({log: harLog}, null, _jsonIndent);\n\n    /** @param {number} codePoint */\n    function isValidCharacter(codePoint) {\n      // Excludes non-characters (U+FDD0..U+FDEF, and all codepoints ending in\n      // 0xFFFE or 0xFFFF) from the set of valid code points.\n      return codePoint < 0xD800 || (codePoint >= 0xE000 && codePoint < 0xFDD0) ||\n          (codePoint > 0xFDEF && codePoint <= 0x10FFFF && (codePoint & 0xFFFE) !== 0xFFFE);\n    }\n\n    /** @param {string} content */\n    function needsEncoding(content) {\n      for (let i = 0; i < content.length; i++) {\n        if (!isValidCharacter(content.charCodeAt(i))) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * @param {!SDK.HARLog.EntryDTO} entry\n     * @param {!SDK.NetworkRequest.ContentData} contentData\n     */\n    function contentLoaded(entry, contentData) {\n      progress.worked();\n      let encoded = contentData.encoded;\n      if (contentData.content !== null) {\n        let content = contentData.content;\n        if (content && !encoded && needsEncoding(content)) {\n          content = Platform.StringUtilities.toBase64(content);\n          encoded = true;\n        }\n        entry.response.content.text = content;\n      }\n      if (encoded) {\n        entry.response.content.encoding = 'base64';\n      }\n    }\n  }\n\n  /**\n   * @param {!Common.StringOutputStream.OutputStream} stream\n   * @param {!Common.Progress.CompositeProgress} compositeProgress\n   * @param {string} fileContent\n   * @return {!Promise<void>}\n   */\n  static async _writeToStream(stream, compositeProgress, fileContent) {\n    const progress = compositeProgress.createSubProgress();\n    progress.setTitle(Common.UIString.UIString('Writing file…'));\n    progress.setTotalWork(fileContent.length);\n    for (let i = 0; i < fileContent.length && !progress.isCanceled(); i += _chunkSize) {\n      const chunk = fileContent.substr(i, _chunkSize);\n      await stream.write(chunk);\n      progress.worked(chunk.length);\n    }\n    progress.done();\n  }\n}\n\n/** @const */\nexport const _jsonIndent = 2;\n\n/** @const */\nexport const _chunkSize = 100000;\n"]}