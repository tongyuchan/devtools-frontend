{"version":3,"file":"RequestPreviewView.js","sourceRoot":"","sources":["../../../../../front_end/network/RequestPreviewView.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport * as SDK from '../sdk/sdk.js';  // eslint-disable-line no-unused-vars\nimport * as SourceFrame from '../source_frame/source_frame.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as UI from '../ui/ui.js';\n\nimport {RequestHTMLView} from './RequestHTMLView.js';\nimport {RequestResponseView} from './RequestResponseView.js';\nimport {SignedExchangeInfoView} from './SignedExchangeInfoView.js';\n\nexport class RequestPreviewView extends RequestResponseView {\n  /**\n   * @param {!SDK.NetworkRequest.NetworkRequest} request\n   */\n  constructor(request) {\n    super(request);\n  }\n\n  /**\n   * @override\n   * @protected\n   * @return {!Promise<!UI.Widget.Widget>}\n   */\n  async showPreview() {\n    const view = await super.showPreview();\n    if (!(view instanceof UI.View.SimpleView)) {\n      return view;\n    }\n    const toolbar = new UI.Toolbar.Toolbar('network-item-preview-toolbar', this.element);\n    view.toolbarItems().then(items => {\n      items.map(item => toolbar.appendToolbarItem(item));\n    });\n    return view;\n  }\n\n  /**\n   * @return {!Promise<?UI.Widget.Widget>}\n   */\n  async _htmlPreview() {\n    const contentData = await this.request.contentData();\n    if (contentData.error) {\n      return new UI.EmptyWidget.EmptyWidget(Common.UIString.UIString('Failed to load response data'));\n    }\n\n    const allowlist = new Set(['text/html', 'text/plain', 'application/xhtml+xml']);\n    if (!allowlist.has(this.request.mimeType)) {\n      return null;\n    }\n\n    const content = contentData.encoded ? window.atob(/** @type {string} */ (contentData.content)) :\n                                          /** @type {string} */ (contentData.content);\n\n    // http://crbug.com/767393 - DevTools should recognize JSON regardless of the content type\n    const jsonView = await SourceFrame.JSONView.JSONView.createView(content);\n    if (jsonView) {\n      return jsonView;\n    }\n\n    const dataURL = TextUtils.ContentProvider.contentAsDataURL(\n        contentData.content, this.request.mimeType, contentData.encoded, this.request.charset());\n    return dataURL ? new RequestHTMLView(dataURL) : null;\n  }\n\n  /**\n   * @override\n   * @protected\n   * @return {!Promise<!UI.Widget.Widget>}\n   */\n  async createPreview() {\n    if (this.request.signedExchangeInfo()) {\n      return new SignedExchangeInfoView(this.request);\n    }\n\n    const htmlErrorPreview = await this._htmlPreview();\n    if (htmlErrorPreview) {\n      return htmlErrorPreview;\n    }\n\n    const provided = await SourceFrame.PreviewFactory.PreviewFactory.createPreview(this.request, this.request.mimeType);\n    if (provided) {\n      return provided;\n    }\n\n    return new UI.EmptyWidget.EmptyWidget(Common.UIString.UIString('Preview not available'));\n  }\n}\n"]}