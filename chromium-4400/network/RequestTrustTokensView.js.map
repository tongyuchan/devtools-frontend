{"version":3,"file":"RequestTrustTokensView.js","sourceRoot":"","sources":["../../../../../front_end/network/RequestTrustTokensView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,gCAAgC,CAAC;AAIxC,OAAO,KAAK,OAAO,MAAM,qCAAqC,CAAC;AAC/D,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AACpD,OAAO,KAAK,GAAG,MAAM,eAAe,CAAC;AACrC,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAElC,MAAM,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;AAEhC,MAAM,OAAO,sBAAuB,SAAQ,EAAE,CAAC,MAAM,CAAC,IAAI;IAIxD,YAAY,OAA0C;QACpD,KAAK,EAAE,CAAC;QAJO,eAAU,GAAG,IAAI,wBAAwB,EAAE,CAAC;QAK3D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,CAAC,cAAc,CAAC,MAAM,CAAC,qBAAqB,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QAE7G,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,GAAG,CAAC,cAAc,CAAC,MAAM,CAAC,qBAAqB,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAClH,CAAC;IAEO,iBAAiB;QACvB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG;YACrB,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;YACvC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,4BAA4B,EAAE;SACpD,CAAC;IACJ,CAAC;CACF;AAOD,MAAM,OAAO,wBAAyB,SAAQ,WAAW;IAAzD;;QACmB,WAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAmI9D,CAAC;IAhIC,IAAI,IAAI,CAAC,IAAkC;QACzC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,MAAM;QACZ,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;SACjF;QAED,qDAAqD;QACrD,mBAAmB;QACnB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA8BrB,IAAI,CAAC,sBAAsB,EAAE;UAC7B,IAAI,CAAC,mBAAmB,EAAE;;KAE/B,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAChB,kBAAkB;IACpB,CAAC;IAEO,sBAAsB;QAC5B,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;YACvD,OAAO,OAAO,CAAC,OAAO,CAAC;SACxB;QAED,OAAO,OAAO,CAAC,IAAI,CAAA;wCACiB,EAAE,CAAA,YAAY;QAC9C,sBAAsB,CAAC,EAAE,CAAA,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC5E,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;QACpD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;QAC9C,IAAI,CAAC,uCAAuC,EAAE;;KAEjD,CAAC;IACJ,CAAC;IAEO,mBAAmB,CAAC,MAAyC;QACnE,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC,OAAO,CAAC,uBAAuB,CAAC,UAAU,EAAE;YACvE,OAAO,OAAO,CAAC,OAAO,CAAC;SACxB;QACD,OAAO,sBAAsB,CAAC,EAAE,CAAA,gBAAgB,EAAE,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;IACrF,CAAC;IAEO,aAAa,CAAC,MAAyC;QAC7D,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YAClD,OAAO,OAAO,CAAC,OAAO,CAAC;SACxB;QAED,OAAO,OAAO,CAAC,IAAI,CAAA;6BACM,EAAE,CAAA,SAAS;;;YAG5B,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAA,OAAO,MAAM,OAAO,CAAC;;;KAGrE,CAAC;IACJ,CAAC;IAED,iFAAiF;IACjF,8EAA8E;IAC9E,8DAA8D;IACtD,uCAAuC;QAC7C,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;YACvD,OAAO,OAAO,CAAC,OAAO,CAAC;SACxB;QAED,OAAO,OAAO,CAAC,IAAI,CAAA;QACf,6BAA6B,CAAC,EAAE,CAAA,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,cAAc,CAAC;QAC9F,6BAA6B,CAAC,EAAE,CAAA,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC;IAC3F,CAAC;IAEO,mBAAmB;QACzB,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;YACvD,OAAO,OAAO,CAAC,OAAO,CAAC;SACxB;QACD,OAAO,OAAO,CAAC,IAAI,CAAA;wCACiB,EAAE,CAAA,QAAQ;6BACrB,EAAE,CAAA,QAAQ;;;;oBAInB,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAA6B;;;4BAG3E,oCAAoC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC;oBAC/E,4BAA4B,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC;;;;QAI3E,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;;OAExD,CAAC;IACN,CAAC;IAEO,sBAAsB,CAAC,MAAqD;QAClF,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC,OAAO,CAAC,uBAAuB,CAAC,QAAQ,EAAE;YACrE,OAAO,OAAO,CAAC,OAAO,CAAC;SACxB;QACD,OAAO,6BAA6B,CAAC,EAAE,CAAA,yBAAyB,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC;IAC7F,CAAC;CACF;AAED,MAAM,iBAAiB,GAAiC;IACtD,KAAK,EAAE,kBAAkB;IACzB,QAAQ,EAAE,oBAAoB;IAC9B,KAAK,EAAE,MAAM;CACd,CAAC;AAEF,MAAM,iBAAiB,GAAiC;IACtD,KAAK,EAAE,EAAE;IACT,QAAQ,EAAE,YAAY;IACtB,KAAK,EAAE,MAAM;CACd,CAAC;AAEF,MAAM,UAAU,uBAAuB,CAAC,MAA2D;IACjG,OAAO,MAAM,KAAK,QAAQ,CAAC,OAAO,CAAC,kCAAkC,CAAC,EAAE;QACpE,MAAM,KAAK,QAAQ,CAAC,OAAO,CAAC,kCAAkC,CAAC,aAAa;QAC5E,MAAM,KAAK,QAAQ,CAAC,OAAO,CAAC,kCAAkC,CAAC,gBAAgB,CAAC;AACtF,CAAC;AAED,SAAS,oBAAoB,CAAC,MAA2D;IAEvF,OAAO,uBAAuB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,CAAC;AACjF,CAAC;AAED,SAAS,oCAAoC,CAAC,MAA2D;IACvG,OAAO,uBAAuB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA,SAAS,CAAC,CAAC,CAAC,EAAE,CAAA,SAAS,CAAC;AACrE,CAAC;AAED,SAAS,4BAA4B,CAAC,MAA2D;IAC/F,QAAQ,MAAM,EAAE;QACd,KAAK,QAAQ,CAAC,OAAO,CAAC,kCAAkC,CAAC,EAAE;YACzD,OAAO,IAAI,CAAC;QACd,KAAK,QAAQ,CAAC,OAAO,CAAC,kCAAkC,CAAC,aAAa;YACpE,OAAO,EAAE,CAAA,8CAA8C,CAAC;QAC1D,KAAK,QAAQ,CAAC,OAAO,CAAC,kCAAkC,CAAC,gBAAgB;YACvE,OAAO,EAAE,CAAA,2DAA2D,CAAC;QACvE,KAAK,QAAQ,CAAC,OAAO,CAAC,kCAAkC,CAAC,eAAe;YACtE,OAAO,EAAE,CAAA,gEAAgE,CAAC;QAC5E,KAAK,QAAQ,CAAC,OAAO,CAAC,kCAAkC,CAAC,iBAAiB;YACxE,OAAO,EAAE,CAAA,+FAA+F,CAAC;QAC3G,KAAK,QAAQ,CAAC,OAAO,CAAC,kCAAkC,CAAC,WAAW;YAClE,OAAO,EAAE,CAAA,0DAA0D,CAAC;QACtE,KAAK,QAAQ,CAAC,OAAO,CAAC,kCAAkC,CAAC,kBAAkB,CAAC;QAC5E,KAAK,QAAQ,CAAC,OAAO,CAAC,kCAAkC,CAAC,WAAW,CAAC;QACrE,KAAK,QAAQ,CAAC,OAAO,CAAC,kCAAkC,CAAC,aAAa,CAAC;QACvE,KAAK,QAAQ,CAAC,OAAO,CAAC,kCAAkC,CAAC,YAAY;YACnE,OAAO,EAAE,CAAA,6CAA6C,CAAC;KAC1D;AACH,CAAC;AAED,SAAS,6BAA6B,CAAI,GAAW,EAAE,KAAkB;IACvE,IAAI,KAAK,KAAK,SAAS,EAAE;QACvB,OAAO,OAAO,CAAC,OAAO,CAAC;KACxB;IAED,OAAO,OAAO,CAAC,IAAI,CAAA;2BACM,GAAG;6BACD,KAAK;GAC/B,CAAC;AACJ,CAAC;AAED,SAAS,sBAAsB,CAAC,GAAW,EAAE,KAAa;IACxD,OAAO,OAAO,CAAC,IAAI,CAAA;2BACM,GAAG;0CACY,KAAK;GAC5C,CAAC;AACJ,CAAC;AAED,cAAc,CAAC,MAAM,CAAC,6BAA6B,EAAE,wBAAwB,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../ui/components/components.js';\n\nimport type * as Components from '../ui/components/components.js';\n\nimport * as LitHtml from '../third_party/lit-html/lit-html.js';\nimport * as Platform from '../platform/platform.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';\n\nconst ls = Platform.UIString.ls;\n\nexport class RequestTrustTokensView extends UI.Widget.VBox {\n  private readonly reportView = new RequestTrustTokensReport();\n  private readonly request: SDK.NetworkRequest.NetworkRequest;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n    this.request = request;\n\n    this.contentElement.appendChild(this.reportView);\n  }\n\n  wasShown(): void {\n    this.request.addEventListener(SDK.NetworkRequest.Events.TrustTokenResultAdded, this.refreshReportView, this);\n\n    this.refreshReportView();\n  }\n\n  willHide(): void {\n    this.request.removeEventListener(SDK.NetworkRequest.Events.TrustTokenResultAdded, this.refreshReportView, this);\n  }\n\n  private refreshReportView(): void {\n    this.reportView.data = {\n      params: this.request.trustTokenParams(),\n      result: this.request.trustTokenOperationDoneEvent(),\n    };\n  }\n}\n\nexport interface RequestTrustTokensReportData {\n  params?: Readonly<Protocol.Network.TrustTokenParams>;\n  result?: Readonly<Protocol.Network.TrustTokenOperationDoneEvent>;\n}\n\nexport class RequestTrustTokensReport extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private trustTokenData?: Readonly<RequestTrustTokensReportData>;\n\n  set data(data: RequestTrustTokensReportData) {\n    this.trustTokenData = data;\n    this.render();\n  }\n\n  private render(): void {\n    if (!this.trustTokenData) {\n      throw new Error('Trying to render a Trust Token report without providing data');\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    LitHtml.render(LitHtml.html`\n      <style>\n        .code {\n          font-family: var(--monospace-font-family);\n          font-size: var(--monospace-font-size);\n        }\n\n        .issuers-list {\n          display: flex;\n          flex-direction: column;\n          list-style-type: none;\n          padding: 0;\n          margin: 0;\n        }\n\n        .status-row {\n          display: flex;\n          align-items: center;\n        }\n\n        .status-icon {\n          margin-right: 6px;\n        }\n\n        .status-text {\n          display: flex;\n          flex-direction: column;\n        }\n      </style>\n      <devtools-report>\n        ${this.renderParameterSection()}\n        ${this.renderResultSection()}\n      </devtools-report>\n    `, this.shadow);\n    // clang-format on\n  }\n\n  private renderParameterSection(): LitHtml.TemplateResult|{} {\n    if (!this.trustTokenData || !this.trustTokenData.params) {\n      return LitHtml.nothing;\n    }\n\n    return LitHtml.html`\n      <devtools-report-section-header>${ls`Parameters`}</devtools-report-section-header>\n      ${renderRowWithCodeValue(ls`Type`, this.trustTokenData.params.type.toString())}\n      ${this.renderRefreshPolicy(this.trustTokenData.params)}\n      ${this.renderIssuers(this.trustTokenData.params)}\n      ${this.renderIssuerAndTopLevelOriginFromResult()}\n      <devtools-report-divider></devtools-report-divider>\n    `;\n  }\n\n  private renderRefreshPolicy(params: Protocol.Network.TrustTokenParams): LitHtml.TemplateResult|{} {\n    if (params.type !== Protocol.Network.TrustTokenOperationType.Redemption) {\n      return LitHtml.nothing;\n    }\n    return renderRowWithCodeValue(ls`Refresh policy`, params.refreshPolicy.toString());\n  }\n\n  private renderIssuers(params: Protocol.Network.TrustTokenParams): LitHtml.TemplateResult|{} {\n    if (!params.issuers || params.issuers.length === 0) {\n      return LitHtml.nothing;\n    }\n\n    return LitHtml.html`\n      <devtools-report-key>${ls`Issuers`}</devtools-report-key>\n      <devtools-report-value>\n        <ul class=\"issuers-list\">\n          ${params.issuers.map(issuer => LitHtml.html`<li>${issuer}</li>`)}\n        </ul>\n      </devtools-report-value>\n    `;\n  }\n\n  // The issuer and top level origin are technically parameters but reported in the\n  // result structure due to the timing when they are calculated in the backend.\n  // Nonetheless, we show them as part of the parameter section.\n  private renderIssuerAndTopLevelOriginFromResult(): LitHtml.TemplateResult|{} {\n    if (!this.trustTokenData || !this.trustTokenData.result) {\n      return LitHtml.nothing;\n    }\n\n    return LitHtml.html`\n      ${renderSimpleRowIfValuePresent(ls`Top level origin`, this.trustTokenData.result.topLevelOrigin)}\n      ${renderSimpleRowIfValuePresent(ls`Issuer`, this.trustTokenData.result.issuerOrigin)}`;\n  }\n\n  private renderResultSection(): LitHtml.TemplateResult|{} {\n    if (!this.trustTokenData || !this.trustTokenData.result) {\n      return LitHtml.nothing;\n    }\n    return LitHtml.html`\n      <devtools-report-section-header>${ls`Result`}</devtools-report-section-header>\n      <devtools-report-key>${ls`Status`}</devtools-report-key>\n      <devtools-report-value>\n        <div class=\"status-row\">\n          <devtools-icon class=\"status-icon\"\n            .data=${getIconForStatusCode(this.trustTokenData.result.status) as Components.Icon.IconData}>\n          </devtools-icon>\n          <div class=\"status-text\">\n            <span><strong>${getSimplifiedStatusTextForStatusCode(this.trustTokenData.result.status)}</strong></span>\n            <span>${getDetailedTextForStatusCode(this.trustTokenData.result.status)}</span>\n          </div>\n        </div>\n      </devtools-report-value>\n      ${this.renderIssuedTokenCount(this.trustTokenData.result)}\n      <devtools-report-divider></devtools-report-divider>\n      `;\n  }\n\n  private renderIssuedTokenCount(result: Protocol.Network.TrustTokenOperationDoneEvent): LitHtml.TemplateResult|{} {\n    if (result.type !== Protocol.Network.TrustTokenOperationType.Issuance) {\n      return LitHtml.nothing;\n    }\n    return renderSimpleRowIfValuePresent(ls`Number of issued tokens`, result.issuedTokenCount);\n  }\n}\n\nconst SUCCESS_ICON_DATA: Components.Icon.IconWithName = {\n  color: 'rgb(12, 164, 12)',\n  iconName: 'ic_checkmark_16x16',\n  width: '12px',\n};\n\nconst FAILURE_ICON_DATA: Components.Icon.IconWithName = {\n  color: '',\n  iconName: 'error_icon',\n  width: '12px',\n};\n\nexport function statusConsideredSuccess(status: Protocol.Network.TrustTokenOperationDoneEventStatus): boolean {\n  return status === Protocol.Network.TrustTokenOperationDoneEventStatus.Ok ||\n      status === Protocol.Network.TrustTokenOperationDoneEventStatus.AlreadyExists ||\n      status === Protocol.Network.TrustTokenOperationDoneEventStatus.FulfilledLocally;\n}\n\nfunction getIconForStatusCode(status: Protocol.Network.TrustTokenOperationDoneEventStatus):\n    Components.Icon.IconWithName {\n  return statusConsideredSuccess(status) ? SUCCESS_ICON_DATA : FAILURE_ICON_DATA;\n}\n\nfunction getSimplifiedStatusTextForStatusCode(status: Protocol.Network.TrustTokenOperationDoneEventStatus): string {\n  return statusConsideredSuccess(status) ? ls`Success` : ls`Failure`;\n}\n\nfunction getDetailedTextForStatusCode(status: Protocol.Network.TrustTokenOperationDoneEventStatus): string|null {\n  switch (status) {\n    case Protocol.Network.TrustTokenOperationDoneEventStatus.Ok:\n      return null;\n    case Protocol.Network.TrustTokenOperationDoneEventStatus.AlreadyExists:\n      return ls`The operations result was served from cache.`;\n    case Protocol.Network.TrustTokenOperationDoneEventStatus.FulfilledLocally:\n      return ls`The operation was fulfilled locally, no request was sent.`;\n    case Protocol.Network.TrustTokenOperationDoneEventStatus.InvalidArgument:\n      return ls`A client-provided argument was malformed or otherwise invalid.`;\n    case Protocol.Network.TrustTokenOperationDoneEventStatus.ResourceExhausted:\n      return ls`Either no inputs for this operation are available or the output exceeds the operations quota.`;\n    case Protocol.Network.TrustTokenOperationDoneEventStatus.BadResponse:\n      return ls`The servers response was malformed or otherwise invalid.`;\n    case Protocol.Network.TrustTokenOperationDoneEventStatus.FailedPrecondition:\n    case Protocol.Network.TrustTokenOperationDoneEventStatus.Unavailable:\n    case Protocol.Network.TrustTokenOperationDoneEventStatus.InternalError:\n    case Protocol.Network.TrustTokenOperationDoneEventStatus.UnknownError:\n      return ls`The operation failed for an unknown reason.`;\n  }\n}\n\nfunction renderSimpleRowIfValuePresent<T>(key: string, value: T|undefined): LitHtml.TemplateResult|{} {\n  if (value === undefined) {\n    return LitHtml.nothing;\n  }\n\n  return LitHtml.html`\n    <devtools-report-key>${key}</devtools-report-key>\n    <devtools-report-value>${value}</devtools-report-value>\n  `;\n}\n\nfunction renderRowWithCodeValue(key: string, value: string): LitHtml.TemplateResult {\n  return LitHtml.html`\n    <devtools-report-key>${key}</devtools-report-key>\n    <devtools-report-value class=\"code\">${value}</devtools-report-value>\n  `;\n}\n\ncustomElements.define('devtools-trust-token-report', RequestTrustTokensReport);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-trust-token-report': RequestTrustTokensReport;\n  }\n}\n"]}