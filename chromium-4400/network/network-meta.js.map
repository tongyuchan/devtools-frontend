{"version":3,"file":"network-meta.js","sourceRoot":"","sources":["../../../../../front_end/network/network-meta.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport type * as Platform from '../platform/platform.js';\nimport {ls} from '../platform/platform.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Network from './network.js';\n\nlet loadedNetworkModule: (typeof Network|undefined);\n\nasync function loadNetworkModule(): Promise<typeof Network> {\n  if (!loadedNetworkModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('network');\n    loadedNetworkModule = await import('./network.js');\n  }\n  return loadedNetworkModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (loadedNetworkModule: typeof Network) => T[]): T[] {\n  if (loadedNetworkModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedNetworkModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'network',\n  commandPrompt: 'Show Network',\n  title: (): Platform.UIString.LocalizedString => ls`Network`,\n  order: 40,\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.NetworkPanel.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'network.blocked-urls',\n  commandPrompt: 'Show Network request blocking',\n  title: (): Platform.UIString.LocalizedString => ls`Network request blocking`,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 60,\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.BlockedURLsPane.BlockedURLsPane.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'network.config',\n  commandPrompt: 'Show Network conditions',\n  title: (): Platform.UIString.LocalizedString => ls`Network conditions`,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 40,\n  tags: [\n    (): Platform.UIString.LocalizedString => ls`disk cache`,\n    (): Platform.UIString.LocalizedString => ls`network throttling`,\n    (): Platform.UIString.LocalizedString => ls`useragent`,\n    (): Platform.UIString.LocalizedString => ls`user agent`,\n    (): Platform.UIString.LocalizedString => ls`user-agent`,\n  ],\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkConfigView.NetworkConfigView.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.NETWORK_SIDEBAR,\n  id: 'network.search-network-tab',\n  commandPrompt: 'Show Search',\n  title: (): Platform.UIString.LocalizedString => ls`Search`,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.SearchNetworkView.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.LARGEICON_STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.ActionDelegate.instance();\n  },\n  options: [\n    {\n      value: true,\n      title: (): Platform.UIString.LocalizedString => ls`Record network log`,\n    },\n    {\n      value: false,\n      title: (): Platform.UIString.LocalizedString => ls`Stop recording network log`,\n    },\n  ],\n  bindings: [\n    {\n      shortcut: 'Ctrl+E',\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n    },\n    {\n      shortcut: 'Meta+E',\n      platform: UI.ActionRegistration.Platforms.Mac,\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.hide-request-details',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: (): Platform.UIString.LocalizedString => ls`Hide request details`,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.ActionDelegate.instance();\n  },\n  bindings: [\n    {\n      shortcut: 'Esc',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.search',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: (): Platform.UIString.LocalizedString => ls`Search`,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.ActionDelegate.instance();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+F',\n      keybindSets: [\n        UI.ActionRegistration.KeybindSet.DEVTOOLS_DEFAULT,\n        UI.ActionRegistration.KeybindSet.VS_CODE,\n      ],\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+F',\n      keybindSets: [\n        UI.ActionRegistration.KeybindSet.DEVTOOLS_DEFAULT,\n        UI.ActionRegistration.KeybindSet.VS_CODE,\n      ],\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategoryObject.NETWORK,\n  title: (): Platform.UIString.LocalizedString => ls`Color-code resource types`,\n  settingName: 'networkColorCodeResourceTypes',\n  settingType: Common.Settings.SettingTypeObject.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    (): Platform.UIString.LocalizedString => ls`color code`,\n    (): Platform.UIString.LocalizedString => ls`resource type`,\n  ],\n  options: [\n    {\n      value: true,\n      title: (): Platform.UIString.LocalizedString => ls`Color code by resource type`,\n    },\n    {\n      value: false,\n      title: (): Platform.UIString.LocalizedString => ls`Use default colors`,\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategoryObject.NETWORK,\n  title: (): Platform.UIString.LocalizedString => ls`Group network log by frame`,\n  settingName: 'network.group-by-frame',\n  settingType: Common.Settings.SettingTypeObject.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    (): Platform.UIString.LocalizedString => ls`network`,\n    (): Platform.UIString.LocalizedString => ls`frame`,\n    (): Platform.UIString.LocalizedString => ls`group`,\n  ],\n  options: [\n    {\n      value: true,\n      title: (): Platform.UIString.LocalizedString => ls`Group network log items by frame`,\n    },\n    {\n      value: false,\n      title: (): Platform.UIString.LocalizedString => ls`Don't group network log items by frame`,\n    },\n  ],\n});\n"]}