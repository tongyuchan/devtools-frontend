{"version":3,"file":"AccessibilityNode.js","sourceRoot":"","sources":["../../../../../front_end/elements/AccessibilityNode.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../platform/platform.js';\nimport {ls} from '../platform/platform.js';\nimport * as LitHtml from '../third_party/lit-html/lit-html.js';\nimport {AXNode} from './AccessibilityTreeUtils.js';\n\nexport interface AccessibilityNodeData {\n  axNode: AXNode,\n}\n\nexport class AccessibilityNode extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private axNode: AXNode|null = null;\n  private expanded: boolean = true;\n\n  constructor() {\n    super();\n    this.addEventListener('click', this.onClick.bind(this));\n  }\n\n  set data(data: AccessibilityNodeData) {\n    this.axNode = data.axNode;\n    this.shadow.host.setAttribute('role', 'treeitem');\n    this.render();\n  }\n\n  private onClick(e: MouseEvent): void {\n    e.stopPropagation();\n    this.toggleChildren();\n  }\n\n  private toggleChildren(): void {\n    if (!this.axNode) {\n      return;\n    }\n\n    const children = this.axNode.children;\n    if (!children) {\n      return;\n    }\n\n    this.expanded = !this.expanded;\n    this.classList.toggle('expanded', this.expanded);\n  }\n\n  // TODO(annabelzhou): Track whether the children should be expanded and change arrow accordingly\n  private renderChildren(node: AXNode): LitHtml.TemplateResult {\n    if (!node) {\n      return LitHtml.html``;\n    }\n\n    const children = [];\n    for (const child of node.children) {\n      const childTemplate = LitHtml.html`\n        <devtools-accessibility-node .data=${{\n        axNode: child,\n      } as AccessibilityNodeData}>\n        </devtools-accessibility-node>\n      `;\n      children.push(childTemplate);\n    }\n\n    return LitHtml.html`<div role='group' class='children'>${children}</div>`;\n  }\n\n  // This function is a variant of setTextContentTruncatedIfNeeded found in DOMExtension.\n  private truncateTextIfNeeded(text: string): string {\n    const maxTextContentLength = 10000;\n\n    if (text.length > maxTextContentLength) {\n      return Platform.StringUtilities.trimMiddle(text, maxTextContentLength);\n    }\n    return text;\n  }\n\n  private renderNodeContent(): LitHtml.TemplateResult[] {\n    const nodeContent: LitHtml.TemplateResult[] = [];\n    if (!this.axNode) {\n      return nodeContent;\n    }\n\n    const role = this.axNode.role;\n    if (!role) {\n      return nodeContent;\n    }\n\n    const roleElement = LitHtml.html`<span class='monospace'>${this.truncateTextIfNeeded(role || '')}</span>`;\n    nodeContent.push(LitHtml.html`${roleElement}`);\n\n    const name = this.axNode.name;\n    if (name) {\n      nodeContent.push(LitHtml.html`<span class='separator'>\\xA0</span>`);\n      nodeContent.push(LitHtml.html`<span class='ax-readable-string'>\"${name}\"</span>`);\n    }\n\n    return nodeContent;\n  }\n\n  private render(): void {\n    if (!this.axNode) {\n      return;\n    }\n\n    const parts: LitHtml.TemplateResult[] = [];\n    // TODO(annabelzhou): Ignored nodes (and their potential children) to be handled in the future.\n    if (this.axNode.ignored) {\n      parts.push(LitHtml.html`<span class='monospace ignored-node'>${ls`Ignored`}</span>`);\n    } else {\n      const nodeContent = this.renderNodeContent();\n\n      if (this.axNode.hasOnlyUnloadedChildren) {\n        this.shadow.host.classList.add('parent');\n        this.expanded = false;\n      } else if (this.axNode.numChildren) {\n        this.shadow.host.classList.add('parent', 'expanded');\n      } else {\n        this.shadow.host.classList.add('no-children');\n      }\n      parts.push(LitHtml.html`${nodeContent}`);\n    }\n\n    const children = this.renderChildren(this.axNode);\n    parts.push(children);\n\n    // clang-format off\n    const output = LitHtml.html`\n      <style>\n          .ax-readable-string {\n            font-style: italic;\n          }\n\n          .monospace {\n            font-family: var(--monospace-font-family);\n            font-size: var(--monospace-font-size);\n          }\n\n          .ignored-node {\n            font-style: italic;\n            opacity: 70%;\n          }\n\n          :host {\n            align-items: center;\n            display: block;\n            margin: 0;\n            min-height: 16px;\n            overflow-x: hidden;\n            padding-left: 4px;\n            padding-right: 4px;\n            position: relative;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n          }\n\n          span {\n            flex-shrink: 0;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n          }\n\n          .children {\n            padding-inline-start: 12px;\n          }\n\n          :host(:not(.expanded)) .children {\n            display: none;\n          }\n\n          :host(.no-children) {\n            margin-left: 16px;\n          }\n\n          :host(.parent)::before {\n            box-sizing: border-box;\n            user-select: none;\n            -webkit-mask-image: url(Images/treeoutlineTriangles.svg);\n            -webkit-mask-size: 32px 24px;\n            content: '\\A0';\n            color: transparent;\n            text-shadow: none;\n            margin-right: -3px;\n            -webkit-mask-position: 0 0;\n            background-color: var(--color-syntax-7);\n          }\n\n          :host(.parent.expanded)::before {\n            -webkit-mask-position: -16px 0;\n          }\n\n      </style>\n      ${parts}\n      `;\n    // clang-format on\n    LitHtml.render(output, this.shadow);\n  }\n}\n\nif (!customElements.get('devtools-accessibility-node')) {\n  customElements.define('devtools-accessibility-node', AccessibilityNode);\n}\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-accessibility-node': AccessibilityNode;\n  }\n}\n"]}