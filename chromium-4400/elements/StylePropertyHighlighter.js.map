{"version":3,"file":"StylePropertyHighlighter.js","sourceRoot":"","sources":["../../../../../front_end/elements/StylePropertyHighlighter.js"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAI7B,OAAO,EAAC,wBAAwB,EAAC,MAAM,+BAA+B,CAAC,CAAE,qCAAqC;AAG9G,MAAM,OAAO,wBAAwB;IACnC;;OAEG;IACH,YAAY,GAAG;QACb,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;IAC/B,CAAC;IAED;;;OAGG;IACH,iBAAiB,CAAC,WAAW;QAC3B,yBAAyB;QACzB,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,EAAE;YAC1D,KAAK,IAAI,WAAW,GAAG,OAAO,CAAC,qBAAqB,CAAC,UAAU,EAAE,EAAE,WAAW,EACzE,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE;gBAC1C,WAAW,CAAC,UAAU,EAAE,CAAC;aAC1B;SACF;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,QAAQ,KAAK,WAAW,CAAC,CAAC;QAC/F,IAAI,WAAW,EAAE;YACf,WAAW,CAAC,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;YAClD,IAAI,CAAC,8BAA8B,CAAC,WAAW,CAAC,CAAC;SAClD;IACH,CAAC;IAED;;;OAGG;IACH,4BAA4B,CAAC,YAAY;QACvC,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC;QACrG,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,8BAA8B,CAAC,WAAW,CAAC,CAAC;SAClD;IACH,CAAC;IAED;;;;;OAKG;IACH,gBAAgB,CAAC,SAAS;QACxB,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,EAAE;YAC1D,IAAI,WAAW,GAAG,OAAO,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC;YAC7D,OAAO,WAAW,IAAI,CAAC,MAAM,IAAI,CAAC,WAAW,YAAY,wBAAwB,CAAC,EAAE;gBAClF,IAAI,SAAS,CAAC,WAAW,CAAC,EAAE;oBAC1B,MAAM,GAAG,WAAW,CAAC;oBACrB,MAAM;iBACP;gBACD,WAAW,GAAG,WAAW,CAAC,uBAAuB,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;aACtE;YACD,IAAI,MAAM,EAAE;gBACV,MAAM;aACP;SACF;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,8BAA8B,CAAC,WAAW;QACxC,WAAW,CAAC,eAAe,CAAC,sBAAsB,EAAE,CAAC;QACrD,WAAW,CAAC,eAAe,CAAC,OAAO,CAC/B;YACE,EAAC,MAAM,EAAE,CAAC,EAAE,eAAe,EAAE,wBAAwB,EAAC;YACtD,EAAC,MAAM,EAAE,GAAG,EAAE,eAAe,EAAE,wBAAwB,EAAC,EAAE,EAAC,MAAM,EAAE,CAAC,EAAE,eAAe,EAAE,aAAa,EAAC;SACtG,EACD,EAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,4BAA4B,EAAC,CAAC,CAAC;IAC9D,CAAC;CACF","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../sdk/sdk.js';  // eslint-disable-line no-unused-vars\n\nimport {StylePropertyTreeElement} from './StylePropertyTreeElement.js';  // eslint-disable-line no-unused-vars\nimport {StylesSidebarPane} from './StylesSidebarPane.js';                // eslint-disable-line no-unused-vars\n\nexport class StylePropertyHighlighter {\n  /**\n   * @param {!StylesSidebarPane} ssp\n   */\n  constructor(ssp) {\n    this._styleSidebarPane = ssp;\n  }\n\n  /**\n   * Expand all shorthands, find the given property, scroll to it and highlight it.\n   * @param {!SDK.CSSProperty.CSSProperty} cssProperty\n   */\n  highlightProperty(cssProperty) {\n    // Expand all shorthands.\n    for (const section of this._styleSidebarPane.allSections()) {\n      for (let treeElement = section.propertiesTreeOutline.firstChild(); treeElement;\n           treeElement = treeElement.nextSibling) {\n        treeElement.onpopulate();\n      }\n    }\n\n    const treeElement = this._findTreeElement(treeElement => treeElement.property === cssProperty);\n    if (treeElement) {\n      treeElement.parent && treeElement.parent.expand();\n      this._scrollAndHighlightTreeElement(treeElement);\n    }\n  }\n\n  /**\n   * Find the first property that matches the provided name, scroll to it and highlight it.\n   * @param {string} propertyName\n   */\n  findAndHighlightPropertyName(propertyName) {\n    const treeElement = this._findTreeElement(treeElement => treeElement.property.name === propertyName);\n    if (treeElement) {\n      this._scrollAndHighlightTreeElement(treeElement);\n    }\n  }\n\n  /**\n   * Traverse the styles pane tree, execute the provided callback for every tree element found, and\n   * return the first tree element for which the callback returns a truthy value.\n   * @param {function(!StylePropertyTreeElement):boolean} compareCb\n   * @return {?StylePropertyTreeElement}\n   */\n  _findTreeElement(compareCb) {\n    let result = null;\n    for (const section of this._styleSidebarPane.allSections()) {\n      let treeElement = section.propertiesTreeOutline.firstChild();\n      while (treeElement && !result && (treeElement instanceof StylePropertyTreeElement)) {\n        if (compareCb(treeElement)) {\n          result = treeElement;\n          break;\n        }\n        treeElement = treeElement.traverseNextTreeElement(false, null, true);\n      }\n      if (result) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @param {!StylePropertyTreeElement} treeElement\n   */\n  _scrollAndHighlightTreeElement(treeElement) {\n    treeElement.listItemElement.scrollIntoViewIfNeeded();\n    treeElement.listItemElement.animate(\n        [\n          {offset: 0, backgroundColor: 'rgba(255, 255, 0, 0.2)'},\n          {offset: 0.1, backgroundColor: 'rgba(255, 255, 0, 0.7)'}, {offset: 1, backgroundColor: 'transparent'}\n        ],\n        {duration: 2000, easing: 'cubic-bezier(0, 0, 0.2, 1)'});\n  }\n}\n"]}