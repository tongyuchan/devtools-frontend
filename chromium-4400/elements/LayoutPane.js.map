{"version":3,"file":"LayoutPane.js","sourceRoot":"","sources":["../../../../../front_end/elements/LayoutPane.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport './NodeText.js';\n\nimport * as Common from '../common/common.js';\nimport * as ComponentHelpers from '../component_helpers/component_helpers.js';\nimport * as LitHtml from '../third_party/lit-html/lit-html.js';\n\nimport {BooleanSetting, EnumSetting, LayoutElement, Setting, SettingType} from './LayoutPaneUtils.js';\n\nimport type {NodeTextData} from './NodeText.js';\n\nexport {LayoutElement};\n\nconst {render, html} = LitHtml;\nconst ls = Common.ls;\nconst getStyleSheets = ComponentHelpers.GetStylesheet.getStyleSheets;\nconst showElementButtonTitle = ls`Show element in the Elements panel`;\n\nexport class SettingChangedEvent extends Event {\n  data: {setting: string, value: string|boolean};\n\n  constructor(setting: string, value: string|boolean) {\n    super('setting-changed', {});\n    this.data = {setting, value};\n  }\n}\n\ninterface HTMLInputElementEvent extends Event {\n  target: HTMLInputElement;\n}\n\nfunction isEnumSetting(setting: Setting): setting is EnumSetting {\n  return setting.type === SettingType.ENUM;\n}\n\nfunction isBooleanSetting(setting: Setting): setting is BooleanSetting {\n  return setting.type === SettingType.BOOLEAN;\n}\n\nexport interface LayoutPaneData {\n  settings: Setting[];\n  gridElements: LayoutElement[];\n  flexContainerElements?: LayoutElement[];\n}\n\nexport class LayoutPane extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private settings: Readonly<Setting[]> = [];\n  private gridElements: Readonly<LayoutElement[]> = [];\n  private flexContainerElements?: Readonly<LayoutElement[]> = [];\n\n  constructor() {\n    super();\n    this.shadow.adoptedStyleSheets = [\n      ...getStyleSheets('ui/inspectorCommon.css', {enableLegacyPatching: true}),\n      ...getStyleSheets('ui/inspectorSyntaxHighlight.css', {enableLegacyPatching: true}),\n      ...getStyleSheets('elements/layoutPane.css', {enableLegacyPatching: false}),\n    ];\n    this.onSummaryKeyDown = this.onSummaryKeyDown.bind(this);\n  }\n\n  set data(data: LayoutPaneData) {\n    this.settings = data.settings;\n    this.gridElements = data.gridElements;\n    this.flexContainerElements = data.flexContainerElements;\n    this.render();\n  }\n\n  private onSummaryKeyDown(event: KeyboardEvent): void {\n    if (!event.target) {\n      return;\n    }\n    const summaryElement = event.target as HTMLElement;\n    const detailsElement = summaryElement.parentElement as HTMLDetailsElement;\n    if (!detailsElement) {\n      throw new Error('<details> element is not found for a <summary> element');\n    }\n    switch (event.key) {\n      case 'ArrowLeft':\n        detailsElement.open = false;\n        break;\n      case 'ArrowRight':\n        detailsElement.open = true;\n        break;\n    }\n  }\n\n  private render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <details open>\n        <summary class=\"header\" @keydown=${this.onSummaryKeyDown}>\n          ${ls`Grid`}\n        </summary>\n        <div class=\"content-section\">\n          <h3 class=\"content-section-title\">${ls`Overlay display settings`}</h3>\n          <div class=\"select-settings\">\n            ${this.getEnumSettings().map(setting => this.renderEnumSetting(setting))}\n          </div>\n          <div class=\"checkbox-settings\">\n            ${this.getBooleanSettings().map(setting => this.renderBooleanSetting(setting))}\n          </div>\n        </div>\n        ${this.gridElements ?\n          html`<div class=\"content-section\">\n            <h3 class=\"content-section-title\">\n              ${this.gridElements.length ? ls`Grid overlays` : ls`No grid layouts found on this page`}\n            </h3>\n            ${this.gridElements.length ?\n              html`<div class=\"elements\">\n                ${this.gridElements.map(element => this.renderElement(element))}\n              </div>` : ''}\n          </div>` : ''}\n      </details>\n      ${this.flexContainerElements !== undefined ?\n        html`\n        <details open>\n          <summary class=\"header\" @keydown=${this.onSummaryKeyDown}>\n            ${ls`Flexbox`}\n          </summary>\n          ${this.flexContainerElements ?\n            html`<div class=\"content-section\">\n              <h3 class=\"content-section-title\">\n                ${this.flexContainerElements.length ? ls`Flexbox overlays` : ls`No flexbox layouts found on this page`}\n              </h3>\n              ${this.flexContainerElements.length ?\n                html`<div class=\"elements\">\n                  ${this.flexContainerElements.map(element => this.renderElement(element))}\n                </div>` : ''}\n            </div>` : ''}\n        </details>\n        `\n      : ''}\n    `, this.shadow, {\n      eventContext: this,\n    });\n    // clang-format on\n  }\n\n  private getEnumSettings(): EnumSetting[] {\n    return this.settings.filter(isEnumSetting);\n  }\n\n  private getBooleanSettings(): BooleanSetting[] {\n    return this.settings.filter(isBooleanSetting);\n  }\n\n  private onBooleanSettingChange(setting: BooleanSetting, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    this.dispatchEvent(new SettingChangedEvent(setting.name, event.target.checked));\n  }\n\n  private onEnumSettingChange(setting: EnumSetting, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    this.dispatchEvent(new SettingChangedEvent(setting.name, event.target.value));\n  }\n\n  private onElementToggle(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.toggle(event.target.checked);\n  }\n\n  private onElementClick(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.reveal();\n  }\n\n  private onColorChange(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.setColor(event.target.value);\n    this.render();\n  }\n\n  private onElementMouseEnter(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.highlight();\n  }\n\n  private onElementMouseLeave(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.hideHighlight();\n  }\n\n  private renderElement(element: LayoutElement): LitHtml.TemplateResult {\n    const onElementToggle = this.onElementToggle.bind(this, element);\n    const onElementClick = this.onElementClick.bind(this, element);\n    const onColorChange = this.onColorChange.bind(this, element);\n    const onMouseEnter = this.onElementMouseEnter.bind(this, element);\n    const onMouseLeave = this.onElementMouseLeave.bind(this, element);\n    const onColorLabelKeyUp = (event: KeyboardEvent): void => {\n      // Handle Enter and Space events to make the color picker accessible.\n      if (event.key !== 'Enter' && event.key !== ' ') {\n        return;\n      }\n      const target = event.target as HTMLLabelElement;\n      const input = target.querySelector('input') as HTMLInputElement;\n      input.click();\n      event.preventDefault();\n    };\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`<div class=\"element\">\n      <label data-element=\"true\" class=\"checkbox-label\" title=${element.name}>\n        <input data-input=\"true\" type=\"checkbox\" .checked=${element.enabled} @change=${onElementToggle} />\n        <span class=\"node-text-container\" data-label=\"true\" @mouseenter=${onMouseEnter} @mouseleave=${onMouseLeave}>\n          <devtools-node-text .data=${{\n            nodeId: element.domId,\n            nodeTitle: element.name,\n            nodeClasses: element.domClasses,\n          } as NodeTextData}></devtools-node-text>\n        </span>\n      </label>\n      <label @keyup=${onColorLabelKeyUp} tabindex=\"0\" class=\"color-picker-label\" style=\"background: ${element.color};\">\n        <input @change=${onColorChange} @input=${onColorChange} class=\"color-picker\" type=\"color\" value=${element.color} />\n      </label>\n      <button tabindex=\"0\" @click=${onElementClick} title=${showElementButtonTitle} class=\"show-element\"></button>\n    </div>`;\n    // clang-format on\n  }\n\n  private renderBooleanSetting(setting: BooleanSetting): LitHtml.TemplateResult {\n    const onBooleanSettingChange = this.onBooleanSettingChange.bind(this, setting);\n    return html`<label data-boolean-setting=\"true\" class=\"checkbox-label\" title=${setting.title}>\n      <input data-input=\"true\" type=\"checkbox\" .checked=${setting.value} @change=${onBooleanSettingChange} />\n      <span data-label=\"true\">${setting.title}</span>\n    </label>`;\n  }\n\n  private renderEnumSetting(setting: EnumSetting): LitHtml.TemplateResult {\n    const onEnumSettingChange = this.onEnumSettingChange.bind(this, setting);\n    return html`<label data-enum-setting=\"true\" class=\"select-label\" title=${setting.title}>\n      <select class=\"chrome-select\" data-input=\"true\" @change=${onEnumSettingChange}>\n        ${\n        setting.options.map(\n            opt => html`<option value=${opt.value} .selected=${setting.value === opt.value}>${opt.title}</option>`)}\n      </select>\n    </label>`;\n  }\n}\n\ncustomElements.define('devtools-layout-pane', LayoutPane);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-layout-pane': LayoutPane;\n  }\n}\n"]}