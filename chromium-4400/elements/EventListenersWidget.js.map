{"version":3,"file":"EventListenersWidget.js","sourceRoot":"","sources":["../../../../../front_end/elements/EventListenersWidget.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport * as EventListeners from '../event_listeners/event_listeners.js';\nimport {ls} from '../platform/platform.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';\n\n/** @type {!EventListenersWidget} */\nlet eventListenersWidgetInstance;\n\n/**\n * @implements {UI.Toolbar.ItemsProvider}\n */\nexport class EventListenersWidget extends UI.ThrottledWidget.ThrottledWidget {\n  constructor() {\n    super();\n    this._toolbarItems = [];\n\n    this._showForAncestorsSetting = Common.Settings.Settings.instance().moduleSetting('showEventListenersForAncestors');\n    this._showForAncestorsSetting.addChangeListener(this.update.bind(this));\n\n    this._dispatchFilterBySetting =\n        Common.Settings.Settings.instance().createSetting('eventListenerDispatchFilterType', DispatchFilterBy.All);\n    this._dispatchFilterBySetting.addChangeListener(this.update.bind(this));\n\n    this._showFrameworkListenersSetting =\n        Common.Settings.Settings.instance().createSetting('showFrameowkrListeners', true);\n    this._showFrameworkListenersSetting.setTitle(Common.UIString.UIString('Framework listeners'));\n    this._showFrameworkListenersSetting.addChangeListener(this._showFrameworkListenersChanged.bind(this));\n    this._eventListenersView = new EventListeners.EventListenersView.EventListenersView(this.update.bind(this));\n    this._eventListenersView.show(this.element);\n\n    const refreshButton = new UI.Toolbar.ToolbarButton(Common.UIString.UIString('Refresh'), 'largeicon-refresh');\n    refreshButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.update.bind(this));\n    this._toolbarItems.push(refreshButton);\n    this._toolbarItems.push(new UI.Toolbar.ToolbarSettingCheckbox(\n        this._showForAncestorsSetting, Common.UIString.UIString('Show listeners on the ancestors'),\n        Common.UIString.UIString('Ancestors')));\n    const dispatchFilter =\n        new UI.Toolbar.ToolbarComboBox(this._onDispatchFilterTypeChanged.bind(this), ls`Event listeners category`);\n\n    /**\n     * @param {string} name\n     * @param {string} value\n     * @this {EventListenersWidget}\n     */\n    function addDispatchFilterOption(name, value) {\n      const option = dispatchFilter.createOption(name, value);\n      if (value === this._dispatchFilterBySetting.get()) {\n        dispatchFilter.select(option);\n      }\n    }\n    addDispatchFilterOption.call(this, Common.UIString.UIString('All'), DispatchFilterBy.All);\n    addDispatchFilterOption.call(this, Common.UIString.UIString('Passive'), DispatchFilterBy.Passive);\n    addDispatchFilterOption.call(this, Common.UIString.UIString('Blocking'), DispatchFilterBy.Blocking);\n    dispatchFilter.setMaxWidth(200);\n    this._toolbarItems.push(dispatchFilter);\n    this._toolbarItems.push(new UI.Toolbar.ToolbarSettingCheckbox(\n        this._showFrameworkListenersSetting, Common.UIString.UIString('Resolve event listeners bound with framework')));\n\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n    this.update();\n  }\n\n  /**\n   * @param {{forceNew: ?boolean}=} opts\n   * @return {!EventListenersWidget}\n   */\n  static instance(opts = {forceNew: null}) {\n    const {forceNew} = opts;\n    if (!eventListenersWidgetInstance || forceNew) {\n      eventListenersWidgetInstance = new EventListenersWidget();\n    }\n\n    return eventListenersWidgetInstance;\n  }\n\n  /**\n   * @override\n   * @protected\n   * @return {!Promise.<?>}\n   */\n  doUpdate() {\n    if (this._lastRequestedNode) {\n      this._lastRequestedNode.domModel().runtimeModel().releaseObjectGroup(_objectGroupName);\n      delete this._lastRequestedNode;\n    }\n    const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (!node) {\n      this._eventListenersView.reset();\n      this._eventListenersView.addEmptyHolderIfNeeded();\n      return Promise.resolve();\n    }\n    this._lastRequestedNode = node;\n    const selectedNodeOnly = !this._showForAncestorsSetting.get();\n    const promises = [];\n    promises.push(node.resolveToObject(_objectGroupName));\n    if (!selectedNodeOnly) {\n      let currentNode = node.parentNode;\n      while (currentNode) {\n        promises.push(currentNode.resolveToObject(_objectGroupName));\n        currentNode = currentNode.parentNode;\n      }\n      promises.push(this._windowObjectInNodeContext(node));\n    }\n    return Promise.all(promises)\n        .then(this._eventListenersView.addObjects.bind(this._eventListenersView))\n        .then(this._showFrameworkListenersChanged.bind(this));\n  }\n\n  /**\n   * @override\n   * @return {!Array<!UI.Toolbar.ToolbarItem>}\n   */\n  toolbarItems() {\n    return this._toolbarItems;\n  }\n\n  /**\n   * @param {!Event} event\n   */\n  _onDispatchFilterTypeChanged(event) {\n    const filter = /** @type {!HTMLInputElement} */ (event.target);\n    this._dispatchFilterBySetting.set(filter.value);\n  }\n\n  _showFrameworkListenersChanged() {\n    const dispatchFilter = this._dispatchFilterBySetting.get();\n    const showPassive = dispatchFilter === DispatchFilterBy.All || dispatchFilter === DispatchFilterBy.Passive;\n    const showBlocking = dispatchFilter === DispatchFilterBy.All || dispatchFilter === DispatchFilterBy.Blocking;\n    this._eventListenersView.showFrameworkListeners(\n        this._showFrameworkListenersSetting.get(), showPassive, showBlocking);\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   * @return {!Promise<?SDK.RemoteObject.RemoteObject>}\n   */\n  _windowObjectInNodeContext(node) {\n    const executionContexts = node.domModel().runtimeModel().executionContexts();\n    let context = executionContexts[0];\n    if (node.frameId()) {\n      for (let i = 0; i < executionContexts.length; ++i) {\n        const executionContext = executionContexts[i];\n        if (executionContext.frameId === node.frameId() && executionContext.isDefault) {\n          context = executionContext;\n        }\n      }\n    }\n\n    return context\n        .evaluate(\n            {\n              expression: 'self',\n              objectGroup: _objectGroupName,\n              includeCommandLineAPI: false,\n              silent: true,\n              returnByValue: false,\n              generatePreview: false,\n              throwOnSideEffect: undefined,\n              timeout: undefined,\n              disableBreaks: undefined,\n              replMode: undefined,\n              allowUnsafeEvalBlockedByCSP: undefined,\n            },\n            /* userGesture */ false,\n            /* awaitPromise */ false)\n        .then(result => {\n          if ('object' in result) {\n            return result.object;\n          }\n          return null;\n        });\n  }\n\n  _eventListenersArrivedForTest() {\n  }\n}\n\nexport const DispatchFilterBy = {\n  All: 'All',\n  Blocking: 'Blocking',\n  Passive: 'Passive'\n};\n\nexport const _objectGroupName = 'event-listeners-panel';\n"]}