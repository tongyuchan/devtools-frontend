{"version":3,"file":"ImagePreviewPopover.js","sourceRoot":"","sources":["../../../../../front_end/elements/ImagePreviewPopover.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,UAAU,MAAM,6BAA6B,CAAC;AAE1D,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAElC;;;;;GAKG;AACH,MAAM,OAAO,mBAAmB;IAC9B;;;;QAII;IACJ,YAAY,SAAS,EAAE,cAAc,EAAE,UAAU;QAC/C,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9F,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACnC,CAAC;IAED;;;QAGI;IACJ,cAAc,CAAC,KAAK;QAClB,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,IAAI,CAAC;SACb;QACD,MAAM,IAAI,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,IAAI,CAAC;SACb;QACD,OAAO;YACL,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE;YACvB,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,KAAK,EAAC,OAAO,EAAC,EAAE;gBACpB,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC9D,IAAI,CAAC,IAAI,EAAE;oBACT,OAAO,KAAK,CAAC;iBACd;gBACD,MAAM,mBAAmB,GAAG,MAAM,UAAU,CAAC,YAAY,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;gBACnG,MAAM,OAAO,GAAG,MAAM,UAAU,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,CAC5D,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,SAAS,EAAE,mBAAmB,EAAC,CAAC,CAAC;gBAC1F,IAAI,OAAO,EAAE;oBACX,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;iBAC7C;gBACD,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC;YAC1B,CAAC;SACF,CAAC;IACJ,CAAC;IAED,IAAI;QACF,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IAED;;;SAGK;IACL,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG;QAC7B,eAAe,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAClC,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,WAAW,CAAC,OAAO;QACxB,OAAO,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;CACF;AAED,yCAAyC;AACzC,MAAM,eAAe,GAAG,IAAI,OAAO,EAAE,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Components from '../components/components.js';\nimport * as SDK from '../sdk/sdk.js';  // eslint-disable-line no-unused-vars\nimport * as UI from '../ui/ui.js';\n\n/**\n * ImagePreviewPopover sets listeners on the container element to display\n * an image preview if needed. The image URL comes from the event (mouseover) target\n * in a propery identified by HrefSymbol. To enable preview for any child element\n * set the property HrefSymbol.\n */\nexport class ImagePreviewPopover {\n  /**\n    * @param {!Element} container\n    * @param {function(!Event):?Element} getLinkElement\n    * @param {function(!Element):?SDK.DOMModel.DOMNode} getDOMNode\n    */\n  constructor(container, getLinkElement, getDOMNode) {\n    this._getLinkElement = getLinkElement;\n    this._getDOMNode = getDOMNode;\n    this._popover = new UI.PopoverHelper.PopoverHelper(container, this._handleRequest.bind(this));\n    this._popover.setHasPadding(true);\n    this._popover.setTimeout(0, 100);\n  }\n\n  /**\n    * @param {!Event} event\n    * @return {?UI.PopoverHelper.PopoverRequest}\n    */\n  _handleRequest(event) {\n    const link = this._getLinkElement(event);\n    if (!link) {\n      return null;\n    }\n    const href = elementToURLMap.get(link);\n    if (!href) {\n      return null;\n    }\n    return {\n      box: link.boxInWindow(),\n      hide: undefined,\n      show: async popover => {\n        const node = this._getDOMNode(/** @type {!Element} */ (link));\n        if (!node) {\n          return false;\n        }\n        const precomputedFeatures = await Components.ImagePreview.ImagePreview.loadDimensionsForNode(node);\n        const preview = await Components.ImagePreview.ImagePreview.build(\n            node.domModel().target(), href, true, {imageAltText: undefined, precomputedFeatures});\n        if (preview) {\n          popover.contentElement.appendChild(preview);\n        }\n        return Boolean(preview);\n      }\n    };\n  }\n\n  hide() {\n    this._popover.hidePopover();\n  }\n\n  /**\n     * @param {!Element} element\n     * @param {string} url\n     */\n  static setImageUrl(element, url) {\n    elementToURLMap.set(element, url);\n    return element;\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  static getImageURL(element) {\n    return elementToURLMap.get(element);\n  }\n}\n\n/** @type {!WeakMap<!Element, string>} */\nconst elementToURLMap = new WeakMap();\n"]}