{"version":3,"file":"ElementsTreeOutline.js","sourceRoot":"","sources":["../../../../../front_end/elements/ElementsTreeOutline.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport {ls} from '../platform/platform.js';\nimport * as ProtocolClient from '../protocol_client/protocol_client.js';  // eslint-disable-line no-unused-vars\nimport * as Root from '../root/root.js';                                  // eslint-disable-line no-unused-vars\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';\n\nimport {linkifyDeferredNodeReference} from './DOMLinkifier.js';\nimport {ElementsTreeElement, InitialChildrenLimit} from './ElementsTreeElement.js';\nimport {ImagePreviewPopover} from './ImagePreviewPopover.js';\n\n/** @type {!WeakMap<!SDK.DOMModel.DOMModel, !ElementsTreeOutline>} */\nconst elementsTreeOutlineByDOMModel = new WeakMap();\n\n/** @type {!Set<!ElementsTreeElement>} */\nconst populatedTreeElements = new Set();\n\nexport class ElementsTreeOutline extends UI.TreeOutline.TreeOutline {\n  /**\n   * @param {boolean=} omitRootDOMNode\n   * @param {boolean=} selectEnabled\n   * @param {boolean=} hideGutter\n   */\n  constructor(omitRootDOMNode, selectEnabled, hideGutter) {\n    super();\n    /** @type {!WeakMap<!SDK.DOMModel.DOMNode, !ElementsTreeElement>} */\n    this.treeElementByNode = new WeakMap();\n    const shadowContainer = document.createElement('div');\n    this._shadowRoot = UI.Utils.createShadowRootWithCoreStyles(\n        shadowContainer,\n        {cssFile: 'elements/elementsTreeOutline.css', enableLegacyPatching: true, delegatesFocus: undefined});\n    const outlineDisclosureElement = this._shadowRoot.createChild('div', 'elements-disclosure');\n\n    this._element = this.element;\n    this._element.classList.add('elements-tree-outline', 'source-code');\n    if (hideGutter) {\n      this._element.classList.add('elements-hide-gutter');\n    }\n    UI.ARIAUtils.setAccessibleName(this._element, Common.UIString.UIString('Page DOM'));\n    this._element.addEventListener('focusout', this._onfocusout.bind(this), false);\n    this._element.addEventListener('mousedown', this._onmousedown.bind(this), false);\n    this._element.addEventListener('mousemove', this._onmousemove.bind(this), false);\n    this._element.addEventListener('mouseleave', this._onmouseleave.bind(this), false);\n    this._element.addEventListener('dragstart', this._ondragstart.bind(this), false);\n    this._element.addEventListener('dragover', this._ondragover.bind(this), false);\n    this._element.addEventListener('dragleave', this._ondragleave.bind(this), false);\n    this._element.addEventListener('drop', this._ondrop.bind(this), false);\n    this._element.addEventListener('dragend', this._ondragend.bind(this), false);\n    this._element.addEventListener('contextmenu', this._contextMenuEventFired.bind(this), false);\n    this._element.addEventListener('clipboard-beforecopy', this._onBeforeCopy.bind(this), false);\n    this._element.addEventListener('clipboard-copy', this._onCopyOrCut.bind(this, false), false);\n    this._element.addEventListener('clipboard-cut', this._onCopyOrCut.bind(this, true), false);\n    this._element.addEventListener('clipboard-paste', this._onPaste.bind(this), false);\n    this._element.addEventListener('keydown', this._onKeyDown.bind(this), false);\n\n    outlineDisclosureElement.appendChild(this._element);\n    this.element = shadowContainer;\n\n    this._includeRootDOMNode = !omitRootDOMNode;\n    this._selectEnabled = selectEnabled;\n    /** @type {?SDK.DOMModel.DOMNode} */\n    this._rootDOMNode = null;\n    /** @type {?SDK.DOMModel.DOMNode} */\n    this._selectedDOMNode = null;\n\n    this._visible = false;\n\n    this._imagePreviewPopover = new ImagePreviewPopover(\n        this.contentElement,\n        event => {\n          let link = /** @type {?Element} */ (event.target);\n          while (link && !ImagePreviewPopover.getImageURL(link)) {\n            link = link.parentElementOrShadowHost();\n          }\n          return link;\n        },\n        link => {\n          const listItem = UI.UIUtils.enclosingNodeOrSelfWithNodeName(link, 'li');\n          if (!listItem) {\n            return null;\n          }\n\n          const treeElement =\n              /** @type {!ElementsTreeElement|undefined} */ (\n                  UI.TreeOutline.TreeElement.getTreeElementBylistItemNode(listItem));\n          if (!treeElement) {\n            return null;\n          }\n          return treeElement.node();\n        });\n\n    /** @type {!Map<!SDK.DOMModel.DOMNode, !UpdateRecord>} */\n    this._updateRecords = new Map();\n    /** @type {!Set<!ElementsTreeElement>} */\n    this._treeElementsBeingUpdated = new Set();\n\n    /** @type {?Array<!Root.Runtime.Extension>} */\n    this.decoratorExtensions = null;\n\n    this._showHTMLCommentsSetting = Common.Settings.Settings.instance().moduleSetting('showHTMLComments');\n    this._showHTMLCommentsSetting.addChangeListener(this._onShowHTMLCommentsChange.bind(this));\n    this.useLightSelectionColor();\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMModel} domModel\n   * @return {?ElementsTreeOutline}\n   */\n  static forDOMModel(domModel) {\n    return elementsTreeOutlineByDOMModel.get(domModel) || null;\n  }\n\n  _onShowHTMLCommentsChange() {\n    const selectedNode = this.selectedDOMNode();\n    if (selectedNode && selectedNode.nodeType() === Node.COMMENT_NODE && !this._showHTMLCommentsSetting.get()) {\n      this.selectDOMNode(selectedNode.parentNode);\n    }\n    this.update();\n  }\n\n  /**\n   * @param {boolean} wrap\n   */\n  setWordWrap(wrap) {\n    this._element.classList.toggle('elements-tree-nowrap', !wrap);\n  }\n\n  /**\n   * @param {?MultilineEditorController} multilineEditing\n   */\n  setMultilineEditing(multilineEditing) {\n    this._multilineEditing = multilineEditing;\n  }\n\n  /**\n   * @return {number}\n   */\n  visibleWidth() {\n    return this._visibleWidth || 0;\n  }\n\n  /**\n   * @param {number} width\n   */\n  setVisibleWidth(width) {\n    this._visibleWidth = width;\n    if (this._multilineEditing) {\n      this._multilineEditing.resize();\n    }\n  }\n\n  /**\n   * @param {?ClipboardData} data\n   */\n  _setClipboardData(data) {\n    if (this._clipboardNodeData) {\n      const treeElement = this.findTreeElement(this._clipboardNodeData.node);\n      if (treeElement) {\n        treeElement.setInClipboard(false);\n      }\n      delete this._clipboardNodeData;\n    }\n\n    if (data) {\n      const treeElement = this.findTreeElement(data.node);\n      if (treeElement) {\n        treeElement.setInClipboard(true);\n      }\n      this._clipboardNodeData = data;\n    }\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} removedNode\n   */\n  resetClipboardIfNeeded(removedNode) {\n    if (this._clipboardNodeData && this._clipboardNodeData.node === removedNode) {\n      this._setClipboardData(null);\n    }\n  }\n\n  /**\n   * @param {!Event} event\n   */\n  _onBeforeCopy(event) {\n    event.handled = true;\n  }\n\n  /**\n   * @param {boolean} isCut\n   * @param {!Event} event\n   */\n  _onCopyOrCut(isCut, event) {\n    this._setClipboardData(null);\n    // @ts-ignore this bound in the main entry point\n    const originalEvent = event['original'];\n\n    if (!originalEvent || !originalEvent.target) {\n      return;\n    }\n\n    // Don't prevent the normal copy if the user has a selection.\n    if (originalEvent.target instanceof Node && originalEvent.target.hasSelection()) {\n      return;\n    }\n\n    // Do not interfere with text editing.\n    if (UI.UIUtils.isEditing()) {\n      return;\n    }\n\n    const targetNode = this.selectedDOMNode();\n    if (!targetNode) {\n      return;\n    }\n\n    if (!originalEvent.clipboardData) {\n      return;\n    }\n    originalEvent.clipboardData.clearData();\n    event.handled = true;\n\n    this.performCopyOrCut(isCut, targetNode);\n  }\n\n  /**\n   * @param {boolean} isCut\n   * @param {?SDK.DOMModel.DOMNode} node\n   */\n  performCopyOrCut(isCut, node) {\n    if (!node) {\n      return;\n    }\n    if (isCut && (node.isShadowRoot() || node.ancestorUserAgentShadowRoot())) {\n      return;\n    }\n\n    node.copyNode();\n    this._setClipboardData({node: node, isCut: isCut});\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} targetNode\n   * @return {boolean}\n   */\n  canPaste(targetNode) {\n    if (targetNode.isShadowRoot() || targetNode.ancestorUserAgentShadowRoot()) {\n      return false;\n    }\n\n    if (!this._clipboardNodeData) {\n      return false;\n    }\n\n    const node = this._clipboardNodeData.node;\n    if (this._clipboardNodeData.isCut && (node === targetNode || node.isAncestor(targetNode))) {\n      return false;\n    }\n\n    if (targetNode.domModel() !== node.domModel()) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} targetNode\n   */\n  pasteNode(targetNode) {\n    if (this.canPaste(targetNode)) {\n      this._performPaste(targetNode);\n    }\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} targetNode\n   */\n  duplicateNode(targetNode) {\n    this._performDuplicate(targetNode);\n  }\n\n  /**\n   * @param {!Event} event\n   */\n  _onPaste(event) {\n    // Do not interfere with text editing.\n    if (UI.UIUtils.isEditing()) {\n      return;\n    }\n\n    const targetNode = this.selectedDOMNode();\n    if (!targetNode || !this.canPaste(targetNode)) {\n      return;\n    }\n\n    event.handled = true;\n    this._performPaste(targetNode);\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} targetNode\n   */\n  _performPaste(targetNode) {\n    if (!this._clipboardNodeData) {\n      return;\n    }\n    if (this._clipboardNodeData.isCut) {\n      this._clipboardNodeData.node.moveTo(targetNode, null, expandCallback.bind(this));\n      this._setClipboardData(null);\n    } else {\n      this._clipboardNodeData.node.copyTo(targetNode, null, expandCallback.bind(this));\n    }\n\n    /**\n     * @param {?ProtocolClient.InspectorBackend.ProtocolError} error\n     * @param {?SDK.DOMModel.DOMNode} pastedNode\n     * @this {ElementsTreeOutline}\n     */\n    function expandCallback(error, pastedNode) {\n      if (error || !pastedNode) {\n        return;\n      }\n      this.selectDOMNode(pastedNode);\n    }\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} targetNode\n   */\n  _performDuplicate(targetNode) {\n    if (targetNode.isInShadowTree()) {\n      return;\n    }\n\n    const parentNode = targetNode.parentNode ? targetNode.parentNode : targetNode;\n    if (parentNode.nodeName() === '#document') {\n      return;\n    }\n\n    targetNode.copyTo(parentNode, targetNode.nextSibling);\n  }\n\n  /**\n   * @param {boolean} visible\n   */\n  setVisible(visible) {\n    if (visible === this._visible) {\n      return;\n    }\n    this._visible = visible;\n    if (!this._visible) {\n      this._imagePreviewPopover.hide();\n      if (this._multilineEditing) {\n        this._multilineEditing.cancel();\n      }\n      return;\n    }\n\n    this.runPendingUpdates();\n    if (this._selectedDOMNode) {\n      this._revealAndSelectNode(this._selectedDOMNode, false);\n    }\n  }\n\n  get rootDOMNode() {\n    return this._rootDOMNode;\n  }\n\n  set rootDOMNode(x) {\n    if (this._rootDOMNode === x) {\n      return;\n    }\n\n    this._rootDOMNode = x;\n\n    this._isXMLMimeType = x && x.isXMLNode();\n\n    this.update();\n  }\n\n  get isXMLMimeType() {\n    return this._isXMLMimeType;\n  }\n\n  /**\n   * @return {?SDK.DOMModel.DOMNode}\n   */\n  selectedDOMNode() {\n    return this._selectedDOMNode;\n  }\n\n  /**\n   * @param {?SDK.DOMModel.DOMNode} node\n   * @param {boolean=} focus\n   */\n  selectDOMNode(node, focus) {\n    if (this._selectedDOMNode === node) {\n      this._revealAndSelectNode(node, !focus);\n      return;\n    }\n\n    this._selectedDOMNode = node;\n    this._revealAndSelectNode(node, !focus);\n\n    // The _revealAndSelectNode() method might find a different element if there is inlined text,\n    // and the select() call would change the selectedDOMNode and reenter this setter. So to\n    // avoid calling _selectedNodeChanged() twice, first check if _selectedDOMNode is the same\n    // node as the one passed in.\n    if (this._selectedDOMNode === node) {\n      this._selectedNodeChanged(Boolean(focus));\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  editing() {\n    const node = this.selectedDOMNode();\n    if (!node) {\n      return false;\n    }\n    const treeElement = this.findTreeElement(node);\n    if (!treeElement) {\n      return false;\n    }\n    return treeElement.isEditing() || false;\n  }\n\n  update() {\n    const selectedNode = this.selectedDOMNode();\n    this.removeChildren();\n    if (!this.rootDOMNode) {\n      return;\n    }\n\n    if (this._includeRootDOMNode) {\n      const treeElement = this._createElementTreeElement(this.rootDOMNode);\n      this.appendChild(treeElement);\n    } else {\n      // FIXME: this could use findTreeElement to reuse a tree element if it already exists\n      const children = this._visibleChildren(this.rootDOMNode);\n      for (const child of children) {\n        const treeElement = this._createElementTreeElement(child);\n        this.appendChild(treeElement);\n      }\n    }\n\n    if (selectedNode) {\n      this._revealAndSelectNode(selectedNode, true);\n    }\n  }\n\n  /**\n   * @param {boolean} focus\n   */\n  _selectedNodeChanged(focus) {\n    this.dispatchEventToListeners(\n        ElementsTreeOutline.Events.SelectedNodeChanged, {node: this._selectedDOMNode, focus: focus});\n  }\n\n  /**\n   * @param {!Array.<!SDK.DOMModel.DOMNode>} nodes\n   */\n  _fireElementsTreeUpdated(nodes) {\n    this.dispatchEventToListeners(ElementsTreeOutline.Events.ElementsTreeUpdated, nodes);\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   * @return {?ElementsTreeElement}\n   */\n  findTreeElement(node) {\n    let treeElement = this._lookUpTreeElement(node);\n    if (!treeElement && node.nodeType() === Node.TEXT_NODE) {\n      // The text node might have been inlined if it was short, so try to find the parent element.\n      treeElement = this._lookUpTreeElement(node.parentNode);\n    }\n\n    return /** @type {?ElementsTreeElement} */ (treeElement);\n  }\n\n  /**\n   * @param {?SDK.DOMModel.DOMNode} node\n   * @return {?UI.TreeOutline.TreeElement}\n   */\n  _lookUpTreeElement(node) {\n    if (!node) {\n      return null;\n    }\n\n    const cachedElement = this.treeElementByNode.get(node);\n    if (cachedElement) {\n      return cachedElement;\n    }\n\n    // Walk up the parent pointers from the desired node\n    const ancestors = [];\n    let currentNode;\n    for (currentNode = node.parentNode; currentNode; currentNode = currentNode.parentNode) {\n      ancestors.push(currentNode);\n      if (this.treeElementByNode.has(currentNode)) {  // stop climbing as soon as we hit\n        break;\n      }\n    }\n\n    if (!currentNode) {\n      return null;\n    }\n\n    // Walk down to populate each ancestor's children, to fill in the tree and the cache.\n    for (let i = ancestors.length - 1; i >= 0; --i) {\n      const child = ancestors[i - 1] || node;\n      const treeElement = this.treeElementByNode.get(ancestors[i]);\n      if (treeElement) {\n        treeElement.onpopulate();  // fill the cache with the children of treeElement\n        if (child.index && child.index >= treeElement.expandedChildrenLimit()) {\n          this.setExpandedChildrenLimit(treeElement, child.index + 1);\n        }\n      }\n    }\n\n    return this.treeElementByNode.get(node) || null;\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   * @return {?ElementsTreeElement}\n   */\n  createTreeElementFor(node) {\n    let treeElement = this.findTreeElement(node);\n    if (treeElement) {\n      return treeElement;\n    }\n    if (!node.parentNode) {\n      return null;\n    }\n\n    treeElement = this.createTreeElementFor(node.parentNode);\n    return treeElement ? this._showChild(treeElement, node) : null;\n  }\n\n  /**\n   * @param {boolean} x\n   */\n  set suppressRevealAndSelect(x) {\n    if (this._suppressRevealAndSelect === x) {\n      return;\n    }\n    /** @type {boolean} */\n    this._suppressRevealAndSelect = x;\n  }\n\n  /**\n   * @param {?SDK.DOMModel.DOMNode} node\n   * @param {boolean} omitFocus\n   */\n  _revealAndSelectNode(node, omitFocus) {\n    if (this._suppressRevealAndSelect) {\n      return;\n    }\n\n    if (!this._includeRootDOMNode && node === this.rootDOMNode && this.rootDOMNode) {\n      node = this.rootDOMNode.firstChild;\n    }\n    if (!node) {\n      return;\n    }\n    const treeElement = this.createTreeElementFor(node);\n    if (!treeElement) {\n      return;\n    }\n\n    treeElement.revealAndSelect(omitFocus);\n  }\n\n  /**\n   * @param {!MouseEvent} event\n   * @return {?UI.TreeOutline.TreeElement}\n   */\n  _treeElementFromEvent(event) {\n    const scrollContainer = this.element.parentElement;\n    if (!scrollContainer) {\n      return null;\n    }\n    // We choose this X coordinate based on the knowledge that our list\n    // items extend at least to the right edge of the outer <ol> container.\n    // In the no-word-wrap mode the outer <ol> may be wider than the tree container\n    // (and partially hidden), in which case we are left to use only its right boundary.\n    const x = scrollContainer.totalOffsetLeft() + scrollContainer.offsetWidth - 36;\n\n    const y = event.pageY;\n\n    // Our list items have 1-pixel cracks between them vertically. We avoid\n    // the cracks by checking slightly above and slightly below the mouse\n    // and seeing if we hit the same element each time.\n    const elementUnderMouse = this.treeElementFromPoint(x, y);\n    const elementAboveMouse = this.treeElementFromPoint(x, y - 2);\n    let element;\n    if (elementUnderMouse === elementAboveMouse) {\n      element = elementUnderMouse;\n    } else {\n      element = this.treeElementFromPoint(x, y + 2);\n    }\n\n    return element;\n  }\n\n  /**\n   * @param {!Event} event\n   */\n  _onfocusout(event) {\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n  }\n\n  /**\n   * @param {!MouseEvent} event\n   */\n  _onmousedown(event) {\n    const element = this._treeElementFromEvent(event);\n\n    if (!element || element.isEventWithinDisclosureTriangle(event)) {\n      return;\n    }\n\n    element.select();\n  }\n\n  /**\n   * @param {?UI.TreeOutline.TreeElement} treeElement\n   */\n  setHoverEffect(treeElement) {\n    if (this._previousHoveredElement === treeElement) {\n      return;\n    }\n\n    if (this._previousHoveredElement instanceof ElementsTreeElement) {\n      this._previousHoveredElement.hovered = false;\n      delete this._previousHoveredElement;\n    }\n\n    if (treeElement instanceof ElementsTreeElement) {\n      treeElement.hovered = true;\n      /** @type {!UI.TreeOutline.TreeElement} */\n      this._previousHoveredElement = treeElement;\n    }\n  }\n\n  /**\n   * @param {!MouseEvent} event\n   */\n  _onmousemove(event) {\n    const element = this._treeElementFromEvent(event);\n    if (element && this._previousHoveredElement === element) {\n      return;\n    }\n\n    this.setHoverEffect(element);\n    this._highlightTreeElement(\n        /** @type {!UI.TreeOutline.TreeElement} */ (element),\n        !UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlOrMeta(event));\n  }\n\n  /**\n   * @param {!UI.TreeOutline.TreeElement} element\n   * @param {boolean} showInfo\n   */\n  _highlightTreeElement(element, showInfo) {\n    if (element instanceof ElementsTreeElement) {\n      element.node().domModel().overlayModel().highlightInOverlay(\n          {node: element.node(), selectorList: undefined}, 'all', showInfo);\n      return;\n    }\n\n    if (element instanceof ShortcutTreeElement) {\n      element.domModel().overlayModel().highlightInOverlay(\n          {deferredNode: element.deferredNode(), selectorList: undefined}, 'all', showInfo);\n    }\n  }\n\n  /**\n   * @param {!MouseEvent} event\n   */\n  _onmouseleave(event) {\n    this.setHoverEffect(null);\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n  }\n\n  /**\n   * @param {!DragEvent} event\n   */\n  _ondragstart(event) {\n    const node = /** @type {?Node} */ (event.target);\n    if (!node || node.hasSelection()) {\n      return false;\n    }\n    if (node.nodeName === 'A') {\n      return false;\n    }\n\n    const treeElement = this._validDragSourceOrTarget(this._treeElementFromEvent(event));\n    if (!treeElement) {\n      return false;\n    }\n\n    if (treeElement.node().nodeName() === 'BODY' || treeElement.node().nodeName() === 'HEAD') {\n      return false;\n    }\n\n    if (!event.dataTransfer || !treeElement.listItemElement.textContent) {\n      return;\n    }\n    event.dataTransfer.setData('text/plain', treeElement.listItemElement.textContent.replace(/\\u200b/g, ''));\n    event.dataTransfer.effectAllowed = 'copyMove';\n    this._treeElementBeingDragged = treeElement;\n\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n\n    return true;\n  }\n\n  /**\n   * @param {!DragEvent} event\n   */\n  _ondragover(event) {\n    if (!this._treeElementBeingDragged) {\n      return false;\n    }\n\n    const treeElement = this._validDragSourceOrTarget(this._treeElementFromEvent(event));\n    if (!treeElement) {\n      return false;\n    }\n\n    let node = /** @type {?SDK.DOMModel.DOMNode} */ (treeElement.node());\n    while (node) {\n      if (node === this._treeElementBeingDragged._node) {\n        return false;\n      }\n      node = node.parentNode;\n    }\n\n    treeElement.listItemElement.classList.add('elements-drag-over');\n    this._dragOverTreeElement = treeElement;\n    event.preventDefault();\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = 'move';\n    }\n    return false;\n  }\n\n  /**\n   * @param {!DragEvent} event\n   */\n  _ondragleave(event) {\n    this._clearDragOverTreeElementMarker();\n    event.preventDefault();\n    return false;\n  }\n\n  /**\n   * @param {?UI.TreeOutline.TreeElement} treeElement\n   * @return {?ElementsTreeElement}\n   */\n  _validDragSourceOrTarget(treeElement) {\n    if (!treeElement) {\n      return null;\n    }\n\n    if (!(treeElement instanceof ElementsTreeElement)) {\n      return null;\n    }\n    const elementsTreeElement = /** @type {!ElementsTreeElement} */ (treeElement);\n\n    const node = elementsTreeElement.node();\n    if (!node.parentNode || node.parentNode.nodeType() !== Node.ELEMENT_NODE) {\n      return null;\n    }\n\n    return elementsTreeElement;\n  }\n\n  /**\n   * @param {!DragEvent} event\n   */\n  _ondrop(event) {\n    event.preventDefault();\n    const treeElement = this._treeElementFromEvent(event);\n    if (treeElement instanceof ElementsTreeElement) {\n      this._doMove(treeElement);\n    }\n  }\n\n  /**\n   * @param {!ElementsTreeElement} treeElement\n   */\n  _doMove(treeElement) {\n    if (!this._treeElementBeingDragged) {\n      return;\n    }\n\n    let parentNode;\n    let anchorNode;\n\n    if (treeElement.isClosingTag()) {\n      // Drop onto closing tag -> insert as last child.\n      parentNode = treeElement.node();\n    } else {\n      const dragTargetNode = treeElement.node();\n      parentNode = dragTargetNode.parentNode;\n      anchorNode = dragTargetNode;\n    }\n\n    if (!parentNode || !anchorNode) {\n      return;\n    }\n    const wasExpanded = this._treeElementBeingDragged.expanded;\n    this._treeElementBeingDragged._node.moveTo(\n        parentNode, anchorNode, this.selectNodeAfterEdit.bind(this, wasExpanded));\n\n    delete this._treeElementBeingDragged;\n  }\n\n  /**\n   * @param {!DragEvent} event\n   */\n  _ondragend(event) {\n    event.preventDefault();\n    this._clearDragOverTreeElementMarker();\n    delete this._treeElementBeingDragged;\n  }\n\n  _clearDragOverTreeElementMarker() {\n    if (this._dragOverTreeElement) {\n      this._dragOverTreeElement.listItemElement.classList.remove('elements-drag-over');\n      delete this._dragOverTreeElement;\n    }\n  }\n\n  /**\n   * @param {!MouseEvent} event\n   */\n  _contextMenuEventFired(event) {\n    const treeElement = this._treeElementFromEvent(event);\n    if (treeElement instanceof ElementsTreeElement) {\n      this.showContextMenu(treeElement, event);\n    }\n  }\n\n  /**\n   * @param {!ElementsTreeElement} treeElement\n   * @param {!Event} event\n   */\n  showContextMenu(treeElement, event) {\n    if (UI.UIUtils.isEditing()) {\n      return;\n    }\n\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const isPseudoElement = Boolean(treeElement.node().pseudoType());\n    const isTag = treeElement.node().nodeType() === Node.ELEMENT_NODE && !isPseudoElement;\n    const node = /** @type {?Node} */ (event.target);\n    if (!node) {\n      return;\n    }\n    /** @type {?Element} */\n    let textNode = node.enclosingNodeOrSelfWithClass('webkit-html-text-node');\n    if (textNode && textNode.classList.contains('bogus')) {\n      textNode = null;\n    }\n    const commentNode = node.enclosingNodeOrSelfWithClass('webkit-html-comment');\n    contextMenu.saveSection().appendItem(\n        ls`Store as global variable`, this._saveNodeToTempVariable.bind(this, treeElement.node()));\n    if (textNode) {\n      treeElement.populateTextContextMenu(contextMenu, textNode);\n    } else if (isTag) {\n      treeElement.populateTagContextMenu(contextMenu, event);\n    } else if (commentNode) {\n      treeElement.populateNodeContextMenu(contextMenu);\n    } else if (isPseudoElement) {\n      treeElement.populateScrollIntoView(contextMenu);\n    }\n\n    contextMenu.appendApplicableItems(treeElement.node());\n    contextMenu.show();\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   */\n  async _saveNodeToTempVariable(node) {\n    const remoteObjectForConsole = await node.resolveToObject();\n    await SDK.ConsoleModel.ConsoleModel.instance().saveToTempVariable(\n        UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext), remoteObjectForConsole);\n  }\n\n  runPendingUpdates() {\n    this._updateModifiedNodes();\n  }\n\n  /**\n   * @param {!Event} event\n   */\n  _onKeyDown(event) {\n    const keyboardEvent = /** @type {!KeyboardEvent} */ (event);\n    if (UI.UIUtils.isEditing()) {\n      return;\n    }\n    const node = this.selectedDOMNode();\n    if (!node) {\n      return;\n    }\n    const treeElement = this.treeElementByNode.get(node);\n    if (!treeElement) {\n      return;\n    }\n\n    if (UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlOrMeta(keyboardEvent) && node.parentNode) {\n      if (keyboardEvent.key === 'ArrowUp' && node.previousSibling) {\n        node.moveTo(node.parentNode, node.previousSibling, this.selectNodeAfterEdit.bind(this, treeElement.expanded));\n        keyboardEvent.consume(true);\n        return;\n      }\n      if (keyboardEvent.key === 'ArrowDown' && node.nextSibling) {\n        node.moveTo(\n            node.parentNode, node.nextSibling.nextSibling, this.selectNodeAfterEdit.bind(this, treeElement.expanded));\n        keyboardEvent.consume(true);\n        return;\n      }\n    }\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   * @param {boolean=} startEditing\n   * @param {function()=} callback\n   */\n  toggleEditAsHTML(node, startEditing, callback) {\n    const treeElement = this.treeElementByNode.get(node);\n    if (!treeElement || !treeElement.hasEditableNode()) {\n      return;\n    }\n\n    if (node.pseudoType()) {\n      return;\n    }\n\n    const parentNode = node.parentNode;\n    const index = node.index;\n    const wasExpanded = treeElement.expanded;\n\n    treeElement.toggleEditAsHTML(editingFinished.bind(this), startEditing);\n\n    /**\n     * @this {ElementsTreeOutline}\n     * @param {boolean} success\n     */\n    function editingFinished(success) {\n      if (callback) {\n        callback();\n      }\n      if (!success) {\n        return;\n      }\n\n      // Select it and expand if necessary. We force tree update so that it processes dom events and is up to date.\n      this.runPendingUpdates();\n\n      if (!index) {\n        return;\n      }\n\n      const children = parentNode && parentNode.children();\n      const newNode = children ? children[index] || parentNode : parentNode;\n      if (!newNode) {\n        return;\n      }\n\n      this.selectDOMNode(newNode, true);\n\n      if (wasExpanded) {\n        const newTreeItem = this.findTreeElement(newNode);\n        if (newTreeItem) {\n          newTreeItem.expand();\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {boolean} wasExpanded\n   * @param {?ProtocolClient.InspectorBackend.ProtocolError} error\n   * @param {?SDK.DOMModel.DOMNode} newNode\n   * @return {?ElementsTreeElement} nodeId\n   */\n  selectNodeAfterEdit(wasExpanded, error, newNode) {\n    if (error) {\n      return null;\n    }\n\n    // Select it and expand if necessary. We force tree update so that it processes dom events and is up to date.\n    this.runPendingUpdates();\n\n    if (!newNode) {\n      return null;\n    }\n\n    this.selectDOMNode(newNode, true);\n\n    const newTreeItem = this.findTreeElement(newNode);\n    if (wasExpanded) {\n      if (newTreeItem) {\n        newTreeItem.expand();\n      }\n    }\n    return newTreeItem;\n  }\n\n  /**\n   * Runs a script on the node's remote object that toggles a class name on\n   * the node and injects a stylesheet into the head of the node's document\n   * containing a rule to set \"visibility: hidden\" on the class and all it's\n   * ancestors.\n   *\n   * @param {!SDK.DOMModel.DOMNode} node\n   */\n  async toggleHideElement(node) {\n    const pseudoType = node.pseudoType();\n    const effectiveNode = pseudoType ? node.parentNode : node;\n    if (!effectiveNode) {\n      return;\n    }\n\n    const hidden = node.marker('hidden-marker');\n    const object = await effectiveNode.resolveToObject('');\n\n    if (!object) {\n      return;\n    }\n\n    await object.callFunction(\n        /** @type {function(this:Object, ...?):void} */ (toggleClassAndInjectStyleRule),\n        [{value: pseudoType}, {value: !hidden}]);\n    object.release();\n    node.setMarker('hidden-marker', hidden ? null : true);\n\n    /**\n     * @param {?string} pseudoType\n     * @param {boolean} hidden\n     * @this {!Element}\n     */\n    function toggleClassAndInjectStyleRule(pseudoType, hidden) {\n      const classNamePrefix = '__web-inspector-hide';\n      const classNameSuffix = '-shortcut__';\n      const styleTagId = '__web-inspector-hide-shortcut-style__';\n      const selectors = [];\n      selectors.push('.__web-inspector-hide-shortcut__');\n      selectors.push('.__web-inspector-hide-shortcut__ *');\n      selectors.push('.__web-inspector-hidebefore-shortcut__::before');\n      selectors.push('.__web-inspector-hideafter-shortcut__::after');\n      const selector = selectors.join(', ');\n      const ruleBody = '    visibility: hidden !important;';\n      const rule = '\\n' + selector + '\\n{\\n' + ruleBody + '\\n}\\n';\n      const className = classNamePrefix + (pseudoType || '') + classNameSuffix;\n      this.classList.toggle(className, hidden);\n\n      let localRoot = this;\n      while (localRoot.parentNode) {\n        localRoot = /** @type {!Element} */ (localRoot.parentNode);\n      }\n      if (localRoot.nodeType === Node.DOCUMENT_NODE) {\n        localRoot = document.head;\n      }\n\n      let style = localRoot.querySelector('style#' + styleTagId);\n      if (style) {\n        return;\n      }\n\n      style = document.createElement('style');\n      style.id = styleTagId;\n      style.textContent = rule;\n\n      localRoot.appendChild(style);\n    }\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   * @return {boolean}\n   */\n  isToggledToHidden(node) {\n    return Boolean(node.marker('hidden-marker'));\n  }\n\n  _reset() {\n    this.rootDOMNode = null;\n    this.selectDOMNode(null, false);\n    this._imagePreviewPopover.hide();\n    delete this._clipboardNodeData;\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    this._updateRecords.clear();\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMModel} domModel\n   */\n  wireToDOMModel(domModel) {\n    elementsTreeOutlineByDOMModel.set(domModel, this);\n    domModel.addEventListener(SDK.DOMModel.Events.MarkersChanged, this._markersChanged, this);\n    domModel.addEventListener(SDK.DOMModel.Events.NodeInserted, this._nodeInserted, this);\n    domModel.addEventListener(SDK.DOMModel.Events.NodeRemoved, this._nodeRemoved, this);\n    domModel.addEventListener(SDK.DOMModel.Events.AttrModified, this._attributeModified, this);\n    domModel.addEventListener(SDK.DOMModel.Events.AttrRemoved, this._attributeRemoved, this);\n    domModel.addEventListener(SDK.DOMModel.Events.CharacterDataModified, this._characterDataModified, this);\n    domModel.addEventListener(SDK.DOMModel.Events.DocumentUpdated, this._documentUpdated, this);\n    domModel.addEventListener(SDK.DOMModel.Events.ChildNodeCountUpdated, this._childNodeCountUpdated, this);\n    domModel.addEventListener(SDK.DOMModel.Events.DistributedNodesChanged, this._distributedNodesChanged, this);\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMModel} domModel\n   */\n  unwireFromDOMModel(domModel) {\n    domModel.removeEventListener(SDK.DOMModel.Events.MarkersChanged, this._markersChanged, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.NodeInserted, this._nodeInserted, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.NodeRemoved, this._nodeRemoved, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.AttrModified, this._attributeModified, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.AttrRemoved, this._attributeRemoved, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.CharacterDataModified, this._characterDataModified, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.DocumentUpdated, this._documentUpdated, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.ChildNodeCountUpdated, this._childNodeCountUpdated, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.DistributedNodesChanged, this._distributedNodesChanged, this);\n    elementsTreeOutlineByDOMModel.delete(domModel);\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   * @return {!UpdateRecord}\n   */\n  _addUpdateRecord(node) {\n    let record = this._updateRecords.get(node);\n    if (!record) {\n      record = new UpdateRecord();\n      this._updateRecords.set(node, record);\n    }\n    return record;\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   * @return {?UpdateRecord}\n   */\n  _updateRecordForHighlight(node) {\n    if (!this._visible) {\n      return null;\n    }\n    return this._updateRecords.get(node) || null;\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _documentUpdated(event) {\n    const domModel = /** @type {!SDK.DOMModel.DOMModel} */ (event.data);\n    this._reset();\n    if (domModel.existingDocument()) {\n      this.rootDOMNode = domModel.existingDocument();\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _attributeModified(event) {\n    const node = /** @type {!SDK.DOMModel.DOMNode} */ (event.data.node);\n    this._addUpdateRecord(node).attributeModified(event.data.name);\n    this._updateModifiedNodesSoon();\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _attributeRemoved(event) {\n    const node = /** @type {!SDK.DOMModel.DOMNode} */ (event.data.node);\n    this._addUpdateRecord(node).attributeRemoved(event.data.name);\n    this._updateModifiedNodesSoon();\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _characterDataModified(event) {\n    const node = /** @type {!SDK.DOMModel.DOMNode} */ (event.data);\n    this._addUpdateRecord(node).charDataModified();\n    // Text could be large and force us to render itself as the child in the tree outline.\n    if (node.parentNode && node.parentNode.firstChild === node.parentNode.lastChild) {\n      this._addUpdateRecord(node.parentNode).childrenModified();\n    }\n    this._updateModifiedNodesSoon();\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _nodeInserted(event) {\n    const node = /** @type {!SDK.DOMModel.DOMNode} */ (event.data);\n    this._addUpdateRecord(/** @type {!SDK.DOMModel.DOMNode} */ (node.parentNode)).nodeInserted(node);\n    this._updateModifiedNodesSoon();\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _nodeRemoved(event) {\n    const node = /** @type {!SDK.DOMModel.DOMNode} */ (event.data.node);\n    const parentNode = /** @type {!SDK.DOMModel.DOMNode} */ (event.data.parent);\n    this.resetClipboardIfNeeded(node);\n    this._addUpdateRecord(parentNode).nodeRemoved(node);\n    this._updateModifiedNodesSoon();\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _childNodeCountUpdated(event) {\n    const node = /** @type {!SDK.DOMModel.DOMNode} */ (event.data);\n    this._addUpdateRecord(node).childrenModified();\n    this._updateModifiedNodesSoon();\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _distributedNodesChanged(event) {\n    const node = /** @type {!SDK.DOMModel.DOMNode} */ (event.data);\n    this._addUpdateRecord(node).childrenModified();\n    this._updateModifiedNodesSoon();\n  }\n\n  _updateModifiedNodesSoon() {\n    if (!this._updateRecords.size) {\n      return;\n    }\n    if (this._updateModifiedNodesTimeout) {\n      return;\n    }\n    this._updateModifiedNodesTimeout = setTimeout(this._updateModifiedNodes.bind(this), 50);\n  }\n\n  _updateModifiedNodes() {\n    if (this._updateModifiedNodesTimeout) {\n      clearTimeout(this._updateModifiedNodesTimeout);\n      delete this._updateModifiedNodesTimeout;\n    }\n\n    const updatedNodes = [...this._updateRecords.keys()];\n    const hidePanelWhileUpdating = updatedNodes.length > 10;\n\n    let treeOutlineContainerElement;\n    let originalScrollTop;\n    if (hidePanelWhileUpdating) {\n      treeOutlineContainerElement = /** @type {?Element} */ (this.element.parentNode);\n      originalScrollTop = treeOutlineContainerElement ? treeOutlineContainerElement.scrollTop : 0;\n      this._element.classList.add('hidden');\n    }\n    const rootNodeUpdateRecords = this._rootDOMNode && this._updateRecords.get(this._rootDOMNode);\n    if (rootNodeUpdateRecords && rootNodeUpdateRecords.hasChangedChildren()) {\n      // Document's children have changed, perform total update.\n      this.update();\n    } else {\n      for (const [node, record] of this._updateRecords) {\n        if (record.hasChangedChildren()) {\n          this._updateModifiedParentNode(/** @type {!SDK.DOMModel.DOMNode} */ (node));\n        } else {\n          this._updateModifiedNode(/** @type {!SDK.DOMModel.DOMNode} */ (node));\n        }\n      }\n    }\n\n    if (hidePanelWhileUpdating) {\n      this._element.classList.remove('hidden');\n      if (treeOutlineContainerElement && originalScrollTop) {\n        treeOutlineContainerElement.scrollTop = originalScrollTop;\n      }\n    }\n\n    this._updateRecords.clear();\n    this._fireElementsTreeUpdated(updatedNodes);\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   */\n  _updateModifiedNode(node) {\n    const treeElement = this.findTreeElement(node);\n    if (treeElement) {\n      treeElement.updateTitle(this._updateRecordForHighlight(node));\n    }\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   */\n  _updateModifiedParentNode(node) {\n    const parentTreeElement = this.findTreeElement(node);\n    if (parentTreeElement) {\n      parentTreeElement.setExpandable(this._hasVisibleChildren(node));\n      parentTreeElement.updateTitle(this._updateRecordForHighlight(node));\n      if (populatedTreeElements.has(parentTreeElement)) {\n        this._updateChildren(parentTreeElement);\n      }\n    }\n  }\n\n  /**\n   * @param {!ElementsTreeElement} treeElement\n   * @returns {!Promise<void>}\n   */\n  populateTreeElement(treeElement) {\n    if (treeElement.childCount() || !treeElement.isExpandable()) {\n      return Promise.resolve();\n    }\n\n    return new Promise(resolve => {\n      treeElement.node().getChildNodes(() => {\n        populatedTreeElements.add(treeElement);\n        this._updateModifiedParentNode(treeElement.node());\n        resolve();\n      });\n    });\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   * @param {boolean=} isClosingTag\n   * @return {!ElementsTreeElement}\n   */\n  _createElementTreeElement(node, isClosingTag) {\n    const treeElement = new ElementsTreeElement(node, isClosingTag);\n    treeElement.setExpandable(!isClosingTag && this._hasVisibleChildren(node));\n    if (node.nodeType() === Node.ELEMENT_NODE && node.parentNode && node.parentNode.nodeType() === Node.DOCUMENT_NODE &&\n        !node.parentNode.parentNode) {\n      treeElement.setCollapsible(false);\n    }\n    treeElement.selectable = Boolean(this._selectEnabled);\n    return treeElement;\n  }\n\n  /**\n   * @param {!ElementsTreeElement} treeElement\n   * @param {!SDK.DOMModel.DOMNode} child\n   * @return {?ElementsTreeElement}\n   */\n  _showChild(treeElement, child) {\n    if (treeElement.isClosingTag()) {\n      return null;\n    }\n\n    const index = this._visibleChildren(treeElement.node()).indexOf(child);\n    if (index === -1) {\n      return null;\n    }\n\n    if (index >= treeElement.expandedChildrenLimit()) {\n      this.setExpandedChildrenLimit(treeElement, index + 1);\n    }\n    return /** @type {!ElementsTreeElement} */ (treeElement.childAt(index));\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   * @return {!Array.<!SDK.DOMModel.DOMNode>} visibleChildren\n   */\n  _visibleChildren(node) {\n    let visibleChildren = ElementsTreeElement.visibleShadowRoots(node);\n\n    const contentDocument = node.contentDocument();\n    if (contentDocument) {\n      visibleChildren.push(contentDocument);\n    }\n\n    const importedDocument = node.importedDocument();\n    if (importedDocument) {\n      visibleChildren.push(importedDocument);\n    }\n\n    const templateContent = node.templateContent();\n    if (templateContent) {\n      visibleChildren.push(templateContent);\n    }\n\n    const markerPseudoElement = node.markerPseudoElement();\n    if (markerPseudoElement) {\n      visibleChildren.push(markerPseudoElement);\n    }\n\n    const beforePseudoElement = node.beforePseudoElement();\n    if (beforePseudoElement) {\n      visibleChildren.push(beforePseudoElement);\n    }\n\n    if (node.childNodeCount()) {\n      // Children may be stale when the outline is not wired to receive DOMModel updates.\n      let children = node.children() || [];\n      if (!this._showHTMLCommentsSetting.get()) {\n        children = children.filter(n => n.nodeType() !== Node.COMMENT_NODE);\n      }\n      visibleChildren = visibleChildren.concat(children);\n    }\n\n    const afterPseudoElement = node.afterPseudoElement();\n    if (afterPseudoElement) {\n      visibleChildren.push(afterPseudoElement);\n    }\n\n    return visibleChildren;\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   * @return {boolean}\n   */\n  _hasVisibleChildren(node) {\n    if (node.isIframe()) {\n      return true;\n    }\n    if (node.isPortal()) {\n      return true;\n    }\n    if (node.contentDocument()) {\n      return true;\n    }\n    if (node.importedDocument()) {\n      return true;\n    }\n    if (node.templateContent()) {\n      return true;\n    }\n    if (ElementsTreeElement.visibleShadowRoots(node).length) {\n      return true;\n    }\n    if (node.hasPseudoElements()) {\n      return true;\n    }\n    if (node.isInsertionPoint()) {\n      return true;\n    }\n    return Boolean(node.childNodeCount()) && !ElementsTreeElement.canShowInlineText(node);\n  }\n\n  /**\n   * @param {!ElementsTreeElement} treeElement\n   */\n  _createExpandAllButtonTreeElement(treeElement) {\n    const button = UI.UIUtils.createTextButton('', handleLoadAllChildren.bind(this));\n    button.value = '';\n    const expandAllButtonElement = new UI.TreeOutline.TreeElement(button);\n    expandAllButtonElement.selectable = false;\n    expandAllButtonElement.button = button;\n    return expandAllButtonElement;\n\n    /**\n     * @this {ElementsTreeOutline}\n     * @param {!Event} event\n     */\n    function handleLoadAllChildren(event) {\n      const visibleChildCount = this._visibleChildren(treeElement.node()).length;\n      this.setExpandedChildrenLimit(\n          treeElement, Math.max(visibleChildCount, treeElement.expandedChildrenLimit() + InitialChildrenLimit));\n      event.consume();\n    }\n  }\n\n  /**\n   * @param {!ElementsTreeElement} treeElement\n   * @param {number} expandedChildrenLimit\n   */\n  setExpandedChildrenLimit(treeElement, expandedChildrenLimit) {\n    if (treeElement.expandedChildrenLimit() === expandedChildrenLimit) {\n      return;\n    }\n\n    treeElement.setExpandedChildrenLimit(expandedChildrenLimit);\n    if (treeElement.treeOutline && !this._treeElementsBeingUpdated.has(treeElement)) {\n      this._updateModifiedParentNode(treeElement.node());\n    }\n  }\n\n  /**\n   * @param {!ElementsTreeElement} treeElement\n   */\n  _updateChildren(treeElement) {\n    if (!treeElement.isExpandable()) {\n      if (!treeElement.treeOutline) {\n        return;\n      }\n      const selectedTreeElement = treeElement.treeOutline.selectedTreeElement;\n      if (selectedTreeElement && selectedTreeElement.hasAncestor(treeElement)) {\n        treeElement.select(true);\n      }\n      treeElement.removeChildren();\n      return;\n    }\n\n    console.assert(!treeElement.isClosingTag());\n\n    this._innerUpdateChildren(treeElement);\n  }\n\n  /**\n   * @param {!ElementsTreeElement} treeElement\n   * @param {!SDK.DOMModel.DOMNode} child\n   * @param {number} index\n   * @param {boolean=} isClosingTag\n   * @return {!ElementsTreeElement}\n   */\n  insertChildElement(treeElement, child, index, isClosingTag) {\n    const newElement = this._createElementTreeElement(child, isClosingTag);\n    treeElement.insertChild(newElement, index);\n    return newElement;\n  }\n\n  /**\n   * @param {!ElementsTreeElement} treeElement\n   * @param {!ElementsTreeElement} child\n   * @param {number} targetIndex\n   */\n  _moveChild(treeElement, child, targetIndex) {\n    if (treeElement.indexOfChild(child) === targetIndex) {\n      return;\n    }\n    const wasSelected = child.selected;\n    if (child.parent) {\n      child.parent.removeChild(child);\n    }\n    treeElement.insertChild(child, targetIndex);\n    if (wasSelected) {\n      child.select();\n    }\n  }\n\n  /**\n   * @param {!ElementsTreeElement} treeElement\n   */\n  _innerUpdateChildren(treeElement) {\n    if (this._treeElementsBeingUpdated.has(treeElement)) {\n      return;\n    }\n\n    this._treeElementsBeingUpdated.add(treeElement);\n\n    const node = treeElement.node();\n    const visibleChildren = this._visibleChildren(node);\n    const visibleChildrenSet = new Set(visibleChildren);\n\n    // Remove any tree elements that no longer have this node as their parent and save\n    // all existing elements that could be reused. This also removes closing tag element.\n    const existingTreeElements = new Map();\n    for (let i = treeElement.childCount() - 1; i >= 0; --i) {\n      const existingTreeElement = treeElement.childAt(i);\n      if (!(existingTreeElement instanceof ElementsTreeElement)) {\n        // Remove expand all button and shadow host toolbar.\n        treeElement.removeChildAtIndex(i);\n        continue;\n      }\n      const elementsTreeElement = /** @type {!ElementsTreeElement} */ (existingTreeElement);\n      const existingNode = elementsTreeElement.node();\n\n      if (visibleChildrenSet.has(existingNode)) {\n        existingTreeElements.set(existingNode, existingTreeElement);\n        continue;\n      }\n\n      treeElement.removeChildAtIndex(i);\n    }\n\n    for (let i = 0; i < visibleChildren.length && i < treeElement.expandedChildrenLimit(); ++i) {\n      const child = visibleChildren[i];\n      const existingTreeElement = existingTreeElements.get(child) || this.findTreeElement(child);\n      if (existingTreeElement && existingTreeElement !== treeElement) {\n        // If an existing element was found, just move it.\n        this._moveChild(treeElement, existingTreeElement, i);\n      } else {\n        // No existing element found, insert a new element.\n        const newElement = this.insertChildElement(treeElement, child, i);\n        if (this._updateRecordForHighlight(node) && treeElement.expanded) {\n          ElementsTreeElement.animateOnDOMUpdate(newElement);\n        }\n        // If a node was inserted in the middle of existing list dynamically we might need to increase the limit.\n        if (treeElement.childCount() > treeElement.expandedChildrenLimit()) {\n          this.setExpandedChildrenLimit(treeElement, treeElement.expandedChildrenLimit() + 1);\n        }\n      }\n    }\n\n    // Update expand all button.\n    const expandedChildCount = treeElement.childCount();\n    if (visibleChildren.length > expandedChildCount) {\n      const targetButtonIndex = expandedChildCount;\n      if (!treeElement.expandAllButtonElement) {\n        treeElement.expandAllButtonElement = this._createExpandAllButtonTreeElement(treeElement);\n      }\n      treeElement.insertChild(treeElement.expandAllButtonElement, targetButtonIndex);\n      treeElement.expandAllButtonElement.title =\n          Common.UIString.UIString('Show All Nodes (%d More)', visibleChildren.length - expandedChildCount);\n    } else if (treeElement.expandAllButtonElement) {\n      treeElement.expandAllButtonElement = null;\n    }\n\n    // Insert shortcuts to distributed children.\n    if (node.isInsertionPoint()) {\n      for (const distributedNode of node.distributedNodes()) {\n        treeElement.appendChild(new ShortcutTreeElement(distributedNode));\n      }\n    }\n\n    // Insert close tag.\n    if (node.nodeType() === Node.ELEMENT_NODE && !node.pseudoType() && treeElement.isExpandable()) {\n      this.insertChildElement(treeElement, node, treeElement.childCount(), true);\n    }\n\n    this._treeElementsBeingUpdated.delete(treeElement);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _markersChanged(event) {\n    const node = /** @type {!SDK.DOMModel.DOMNode} */ (event.data);\n    const treeElement = this.treeElementByNode.get(node);\n    if (treeElement) {\n      treeElement.updateDecorations();\n    }\n  }\n}\n\nElementsTreeOutline._treeOutlineSymbol = Symbol('treeOutline');\n\n/** @override @enum {symbol} */\nElementsTreeOutline.Events = {\n  SelectedNodeChanged: Symbol('SelectedNodeChanged'),\n  ElementsTreeUpdated: Symbol('ElementsTreeUpdated')\n};\n\n/**\n * @const\n * @type {!Object.<string, string>}\n */\nexport const MappedCharToEntity = {\n  '\\xA0': 'nbsp',\n  '\\x93': '#147',  // <control>\n  '\\xAD': 'shy',\n  '\\u2002': 'ensp',\n  '\\u2003': 'emsp',\n  '\\u2009': 'thinsp',\n  '\\u200a': '#8202',  // Hairspace\n  '\\u200b': '#8203',  // ZWSP\n  '\\u200c': 'zwnj',\n  '\\u200d': 'zwj',\n  '\\u200e': 'lrm',\n  '\\u200f': 'rlm',\n  '\\u202a': '#8234',  // LRE\n  '\\u202b': '#8235',  // RLE\n  '\\u202c': '#8236',  // PDF\n  '\\u202d': '#8237',  // LRO\n  '\\u202e': '#8238',  // RLO\n  '\\ufeff': '#65279'  // BOM\n};\n\nexport class UpdateRecord {\n  /**\n   * @param {string} attrName\n   */\n  attributeModified(attrName) {\n    if (this._removedAttributes && this._removedAttributes.has(attrName)) {\n      this._removedAttributes.delete(attrName);\n    }\n    if (!this._modifiedAttributes) {\n      this._modifiedAttributes = /** @type {!Set.<string>} */ (new Set());\n    }\n    this._modifiedAttributes.add(attrName);\n  }\n\n  /**\n   * @param {string} attrName\n   */\n  attributeRemoved(attrName) {\n    if (this._modifiedAttributes && this._modifiedAttributes.has(attrName)) {\n      this._modifiedAttributes.delete(attrName);\n    }\n    if (!this._removedAttributes) {\n      this._removedAttributes = /** @type {!Set.<string>} */ (new Set());\n    }\n    this._removedAttributes.add(attrName);\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   */\n  nodeInserted(node) {\n    this._hasChangedChildren = true;\n  }\n\n  /**\n   * @param {!SDK.DOMModel.DOMNode} node\n   */\n  nodeRemoved(node) {\n    this._hasChangedChildren = true;\n    this._hasRemovedChildren = true;\n  }\n\n  charDataModified() {\n    this._charDataModified = true;\n  }\n\n  childrenModified() {\n    this._hasChangedChildren = true;\n  }\n\n  /**\n   * @param {string} attributeName\n   * @return {boolean}\n   */\n  isAttributeModified(attributeName) {\n    return this._modifiedAttributes !== null && this._modifiedAttributes !== undefined &&\n        this._modifiedAttributes.has(attributeName);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasRemovedAttributes() {\n    return this._removedAttributes !== null && this._removedAttributes !== undefined &&\n        Boolean(this._removedAttributes.size);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCharDataModified() {\n    return Boolean(this._charDataModified);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasChangedChildren() {\n    return Boolean(this._hasChangedChildren);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasRemovedChildren() {\n    return Boolean(this._hasRemovedChildren);\n  }\n}\n\n/**\n * @implements {UI.UIUtils.Renderer}\n */\nexport class Renderer {\n  /**\n   * @override\n   * @param {!Object} object\n   * @return {!Promise<?{node: !Node, tree: ?UI.TreeOutline.TreeOutline}>}\n   */\n  async render(object) {\n    /** @type {?SDK.DOMModel.DOMNode} */\n    let node = null;\n\n    if (object instanceof SDK.DOMModel.DOMNode) {\n      node = /** @type {!SDK.DOMModel.DOMNode} */ (object);\n    } else if (object instanceof SDK.DOMModel.DeferredDOMNode) {\n      node = await (/** @type {!SDK.DOMModel.DeferredDOMNode} */ (object)).resolvePromise();\n    }\n\n    if (!node) {\n      // Can't render not-a-node, or couldn't resolve deferred node.\n      return null;\n    }\n\n    const treeOutline = new ElementsTreeOutline(\n        /* omitRootDOMNode: */ false, /* selectEnabled: */ true, /* hideGutter: */ true);\n    treeOutline.rootDOMNode = node;\n    const firstChild = treeOutline.firstChild();\n    if (firstChild && !firstChild.isExpandable()) {\n      treeOutline._element.classList.add('single-node');\n    }\n    treeOutline.setVisible(true);\n    // @ts-ignore used in console_test_runner\n    treeOutline.element.treeElementForTest = firstChild;\n    treeOutline.setShowSelectionOnKeyboardFocus(/* show: */ true, /* preventTabOrder: */ true);\n    return {node: treeOutline.element, tree: treeOutline};\n  }\n}\n\nexport class ShortcutTreeElement extends UI.TreeOutline.TreeElement {\n  /**\n   * @param {!SDK.DOMModel.DOMNodeShortcut} nodeShortcut\n   */\n  constructor(nodeShortcut) {\n    super('');\n    this.listItemElement.createChild('div', 'selection fill');\n    const title = this.listItemElement.createChild('span', 'elements-tree-shortcut-title');\n    let text = nodeShortcut.nodeName.toLowerCase();\n    if (nodeShortcut.nodeType === Node.ELEMENT_NODE) {\n      text = '<' + text + '>';\n    }\n    title.textContent = '\\u21AA ' + text;\n\n    const link = /** @type {!Element} */ (linkifyDeferredNodeReference(nodeShortcut.deferredNode));\n    UI.UIUtils.createTextChild(this.listItemElement, ' ');\n    link.classList.add('elements-tree-shortcut-link');\n    link.textContent = Common.UIString.UIString('reveal');\n    this.listItemElement.appendChild(link);\n    this._nodeShortcut = nodeShortcut;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get hovered() {\n    return Boolean(this._hovered);\n  }\n\n  /**\n   * @param {boolean} x\n   */\n  set hovered(x) {\n    if (this._hovered === x) {\n      return;\n    }\n    /** @type {boolean} */\n    this._hovered = x;\n    this.listItemElement.classList.toggle('hovered', x);\n  }\n\n  /**\n   * @return {!SDK.DOMModel.DeferredDOMNode}\n   */\n  deferredNode() {\n    return this._nodeShortcut.deferredNode;\n  }\n\n  /**\n   * @return {!SDK.DOMModel.DOMModel}\n   */\n  domModel() {\n    return this._nodeShortcut.deferredNode.domModel();\n  }\n\n  /**\n   * @override\n   * @param {boolean=} selectedByUser\n   * @return {boolean}\n   */\n  onselect(selectedByUser) {\n    if (!selectedByUser) {\n      return true;\n    }\n    this._nodeShortcut.deferredNode.highlight();\n    this._nodeShortcut.deferredNode.resolve(resolved.bind(this));\n    /**\n     * @param {?SDK.DOMModel.DOMNode} node\n     * @this {ShortcutTreeElement}\n     */\n    function resolved(node) {\n      if (node && this.treeOutline instanceof ElementsTreeOutline) {\n        this.treeOutline._selectedDOMNode = node;\n        this.treeOutline._selectedNodeChanged(false);\n      }\n    }\n    return true;\n  }\n}\n\n/** @typedef {{cancel: function():void, commit: function():void, resize: function():*, editor:!UI.TextEditor.TextEditor}} */\n// @ts-ignore typedef\nexport let MultilineEditorController;\n\n/** @typedef {{node: !SDK.DOMModel.DOMNode, isCut: boolean}} */\n// @ts-ignore typedef\nexport let ClipboardData;\n"]}