{"version":3,"file":"XHRBreakpointsSidebarPane.js","sourceRoot":"","sources":["../../../../../front_end/browser_debugger/XHRBreakpointsSidebarPane.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport {ls} from '../platform/platform.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';\n\n/**\n * @type {!WeakMap<!Element, !HTMLElement>}\n */\nconst containerToBreakpointEntry = new WeakMap();\n\n/**\n * @type {!WeakMap<!Element, !HTMLInputElement>}\n */\nconst breakpointEntryToCheckbox = new WeakMap();\n\n/** @type {!XHRBreakpointsSidebarPane} */\nlet xhrBreakpointsSidebarPaneInstance;\n\n/**\n * @implements {UI.ContextFlavorListener.ContextFlavorListener}\n * @implements {UI.Toolbar.ItemsProvider}\n * @implements {UI.ListControl.ListDelegate<string>}\n */\nexport class XHRBreakpointsSidebarPane extends UI.Widget.VBox {\n  /**\n   * @private\n   */\n  constructor() {\n    super(true);\n    this.registerRequiredCSS('browser_debugger/xhrBreakpointsSidebarPane.css', {enableLegacyPatching: true});\n\n    /** @type {!UI.ListModel.ListModel<string>} */\n    this._breakpoints = new UI.ListModel.ListModel();\n    this._list = new UI.ListControl.ListControl(this._breakpoints, this, UI.ListControl.ListMode.NonViewport);\n    this.contentElement.appendChild(this._list.element);\n    this._list.element.classList.add('breakpoint-list', 'hidden');\n    UI.ARIAUtils.markAsList(this._list.element);\n    UI.ARIAUtils.setAccessibleName(this._list.element, ls`XHR/fetch Breakpoints`);\n    this._emptyElement = this.contentElement.createChild('div', 'gray-info-message');\n    this._emptyElement.textContent = Common.UIString.UIString('No breakpoints');\n\n    /** @type {!Map.<string, !Element>} */\n    this._breakpointElements = new Map();\n\n    this._addButton = new UI.Toolbar.ToolbarButton(ls`Add XHR/fetch breakpoint`, 'largeicon-add');\n    this._addButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, event => {\n      this._addButtonClicked();\n    });\n\n    this._emptyElement.addEventListener('contextmenu', this._emptyElementContextMenu.bind(this), true);\n    this._emptyElement.tabIndex = -1;\n    this._restoreBreakpoints();\n    this._update();\n  }\n\n  static instance() {\n    if (!xhrBreakpointsSidebarPaneInstance) {\n      xhrBreakpointsSidebarPaneInstance = new XHRBreakpointsSidebarPane();\n    }\n    return xhrBreakpointsSidebarPaneInstance;\n  }\n\n  /**\n   * @override\n   * @return {!Array<!UI.Toolbar.ToolbarItem>}\n   */\n  toolbarItems() {\n    return [this._addButton];\n  }\n\n  /**\n   * @param {!Event} event\n   */\n  _emptyElementContextMenu(event) {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        Common.UIString.UIString('Add breakpoint'), this._addButtonClicked.bind(this));\n    contextMenu.show();\n  }\n\n  async _addButtonClicked() {\n    await UI.ViewManager.ViewManager.instance().showView('sources.xhrBreakpoints');\n\n    const inputElementContainer = document.createElement('p');\n    inputElementContainer.classList.add('breakpoint-condition');\n    inputElementContainer.textContent = Common.UIString.UIString('Break when URL contains:');\n\n    const inputElement = inputElementContainer.createChild('span', 'breakpoint-condition-input');\n    UI.ARIAUtils.setAccessibleName(inputElement, ls`URL Breakpoint`);\n    this._addListElement(inputElementContainer, /** @type {?Element} */ (this._list.element.firstChild));\n\n    /**\n     * @param {boolean} accept\n     * @param {!Element} e\n     * @param {string} text\n     * @this {XHRBreakpointsSidebarPane}\n     */\n    function finishEditing(accept, e, text) {\n      this._removeListElement(inputElementContainer);\n      if (accept) {\n        SDK.DOMDebuggerModel.DOMDebuggerManager.instance().addXHRBreakpoint(text, true);\n        this._setBreakpoint(text);\n      }\n      this._update();\n    }\n\n    const config = new UI.InplaceEditor.Config(finishEditing.bind(this, true), finishEditing.bind(this, false));\n    UI.InplaceEditor.InplaceEditor.startEditing(inputElement, /** @type {!UI.InplaceEditor.Config<?>} */ (config));\n  }\n\n  /**\n   * @override\n   * @param {string} item\n   * @return {number}\n   */\n  heightForItem(item) {\n    return 0;\n  }\n\n  /**\n   * @override\n   * @param {string} item\n   * @return {boolean}\n   */\n  isItemSelectable(item) {\n    return true;\n  }\n\n  /**\n   * @param {string} url\n   */\n  _setBreakpoint(url) {\n    if (this._breakpoints.indexOf(url) !== -1) {\n      this._list.refreshItem(url);\n    } else {\n      this._breakpoints.insertWithComparator(url, (a, b) => {\n        if (a > b) {\n          return 1;\n        }\n        if (a < b) {\n          return -1;\n        }\n        return 0;\n      });\n    }\n    if (!this._list.selectedItem() || !this.hasFocus()) {\n      this._list.selectItem(this._breakpoints.at(0));\n    }\n  }\n\n  /**\n   * @override\n   * @param {string} item\n   * @return {!Element}\n   */\n  createElementForItem(item) {\n    const listItemElement = document.createElement('div');\n    UI.ARIAUtils.markAsListitem(listItemElement);\n    const element = /** @type {!HTMLElement} */ (listItemElement.createChild('div', 'breakpoint-entry'));\n    containerToBreakpointEntry.set(listItemElement, element);\n    const enabled = SDK.DOMDebuggerModel.DOMDebuggerManager.instance().xhrBreakpoints().get(item) || false;\n    UI.ARIAUtils.markAsCheckbox(element);\n    UI.ARIAUtils.setChecked(element, enabled);\n    element.addEventListener('contextmenu', this._contextMenu.bind(this, item), true);\n\n    const title =\n        item ? Common.UIString.UIString('URL contains \"%s\"', item) : Common.UIString.UIString('Any XHR or fetch');\n    const label = UI.UIUtils.CheckboxLabel.create(title, enabled);\n    UI.ARIAUtils.markAsHidden(label);\n    UI.ARIAUtils.setAccessibleName(element, title);\n    element.appendChild(label);\n    label.checkboxElement.addEventListener('click', this._checkboxClicked.bind(this, item, enabled), false);\n    element.addEventListener('click', event => {\n      if (event.target === element) {\n        this._checkboxClicked(item, enabled);\n      }\n    }, false);\n    breakpointEntryToCheckbox.set(element, label.checkboxElement);\n    label.checkboxElement.tabIndex = -1;\n    element.tabIndex = -1;\n    if (item === this._list.selectedItem()) {\n      element.tabIndex = 0;\n      this.setDefaultFocusedElement(element);\n    }\n    element.addEventListener('keydown', event => {\n      let handled = false;\n      if (event.key === ' ') {\n        this._checkboxClicked(item, enabled);\n        handled = true;\n      } else if (event.key === 'Enter') {\n        this._labelClicked(item);\n        handled = true;\n      }\n\n      if (handled) {\n        event.consume(true);\n      }\n    });\n\n    if (item === this._hitBreakpoint) {\n      element.classList.add('breakpoint-hit');\n      UI.ARIAUtils.setDescription(element, ls`breakpoint hit`);\n    }\n\n    label.classList.add('cursor-auto');\n    label.textElement.addEventListener('dblclick', this._labelClicked.bind(this, item), false);\n    this._breakpointElements.set(item, listItemElement);\n    return listItemElement;\n  }\n\n  /**\n   * @override\n   * @param {?string} from\n   * @param {?string} to\n   * @param {?HTMLElement} fromElement\n   * @param {?HTMLElement} toElement\n   */\n  selectedItemChanged(from, to, fromElement, toElement) {\n    if (fromElement) {\n      const breakpointEntryElement = containerToBreakpointEntry.get(fromElement);\n      if (!breakpointEntryElement) {\n        throw new Error('Expected breakpoint entry to be found for an element');\n      }\n      breakpointEntryElement.tabIndex = -1;\n    }\n    if (toElement) {\n      const breakpointEntryElement = containerToBreakpointEntry.get(toElement);\n      if (!breakpointEntryElement) {\n        throw new Error('Expected breakpoint entry to be found for an element');\n      }\n      this.setDefaultFocusedElement(breakpointEntryElement);\n      breakpointEntryElement.tabIndex = 0;\n      if (this.hasFocus()) {\n        breakpointEntryElement.focus();\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {?Element} fromElement\n   * @param {?Element} toElement\n   */\n  updateSelectedItemARIA(fromElement, toElement) {\n    return true;\n  }\n\n  /**\n   * @param {string} url\n   */\n  _removeBreakpoint(url) {\n    const index = this._breakpoints.indexOf(url);\n    if (index >= 0) {\n      this._breakpoints.remove(index);\n    }\n    this._breakpointElements.delete(url);\n    this._update();\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {?Node} beforeNode\n   */\n  _addListElement(element, beforeNode) {\n    this._list.element.insertBefore(element, beforeNode);\n    this._emptyElement.classList.add('hidden');\n    this._list.element.classList.remove('hidden');\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  _removeListElement(element) {\n    this._list.element.removeChild(element);\n    if (!this._list.element.firstElementChild) {\n      this._emptyElement.classList.remove('hidden');\n      this._list.element.classList.add('hidden');\n    }\n  }\n\n  /**\n   * @param {string} url\n   * @param {!Event} event\n   */\n  _contextMenu(url, event) {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n\n    /**\n     * @this {XHRBreakpointsSidebarPane}\n     */\n    function removeBreakpoint() {\n      SDK.DOMDebuggerModel.DOMDebuggerManager.instance().removeXHRBreakpoint(url);\n      this._removeBreakpoint(url);\n    }\n\n    /**\n     * @this {XHRBreakpointsSidebarPane}\n     */\n    function removeAllBreakpoints() {\n      for (const url of this._breakpointElements.keys()) {\n        SDK.DOMDebuggerModel.DOMDebuggerManager.instance().removeXHRBreakpoint(url);\n        this._removeBreakpoint(url);\n      }\n      this._update();\n    }\n    const removeAllTitle = Common.UIString.UIString('Remove all breakpoints');\n\n    contextMenu.defaultSection().appendItem(\n        Common.UIString.UIString('Add breakpoint'), this._addButtonClicked.bind(this));\n    contextMenu.defaultSection().appendItem(Common.UIString.UIString('Remove breakpoint'), removeBreakpoint.bind(this));\n    contextMenu.defaultSection().appendItem(removeAllTitle, removeAllBreakpoints.bind(this));\n    contextMenu.show();\n  }\n\n  /**\n   * @param {string} url\n   * @param {boolean} checked\n   */\n  _checkboxClicked(url, checked) {\n    const hadFocus = this.hasFocus();\n    SDK.DOMDebuggerModel.DOMDebuggerManager.instance().toggleXHRBreakpoint(url, !checked);\n    this._list.refreshItem(url);\n    this._list.selectItem(url);\n    if (hadFocus) {\n      this.focus();\n    }\n  }\n\n  /**\n   * @param {string} url\n   */\n  _labelClicked(url) {\n    const element = this._breakpointElements.get(url);\n    const inputElement = document.createElement('span');\n    inputElement.classList.add('breakpoint-condition');\n    inputElement.textContent = url;\n    if (element) {\n      this._list.element.insertBefore(inputElement, element);\n      element.classList.add('hidden');\n    }\n\n    /**\n     * @param {boolean} accept\n     * @param {!Element} e\n     * @param {string} text\n     * @this {XHRBreakpointsSidebarPane}\n     */\n    function finishEditing(accept, e, text) {\n      this._removeListElement(inputElement);\n      if (accept) {\n        SDK.DOMDebuggerModel.DOMDebuggerManager.instance().removeXHRBreakpoint(url);\n        this._removeBreakpoint(url);\n        let enabled = true;\n        if (element) {\n          const breakpointEntryElement = containerToBreakpointEntry.get(element);\n          const checkboxElement =\n              breakpointEntryElement ? breakpointEntryToCheckbox.get(breakpointEntryElement) : undefined;\n          if (checkboxElement) {\n            enabled = checkboxElement.checked;\n          }\n        }\n        SDK.DOMDebuggerModel.DOMDebuggerManager.instance().addXHRBreakpoint(text, enabled);\n        this._setBreakpoint(text);\n        this._list.selectItem(text);\n      } else if (element) {\n        element.classList.remove('hidden');\n      }\n      this.focus();\n    }\n\n    const config = new UI.InplaceEditor.Config(finishEditing.bind(this, true), finishEditing.bind(this, false));\n    UI.InplaceEditor.InplaceEditor.startEditing(inputElement, /** @type {!UI.InplaceEditor.Config<?>} */ (config));\n  }\n\n  /**\n   * @override\n   * @param {?Object} object\n   */\n  flavorChanged(object) {\n    this._update();\n  }\n\n  _update() {\n    const isEmpty = this._breakpoints.length === 0;\n    this._list.element.classList.toggle('hidden', isEmpty);\n    this._emptyElement.classList.toggle('hidden', !isEmpty);\n\n    const details = UI.Context.Context.instance().flavor(SDK.DebuggerModel.DebuggerPausedDetails);\n    if (!details || details.reason !== Protocol.Debugger.PausedEventReason.XHR) {\n      if (this._hitBreakpoint) {\n        const oldHitBreakpoint = this._hitBreakpoint;\n        delete this._hitBreakpoint;\n        if (this._breakpoints.indexOf(oldHitBreakpoint) >= 0) {\n          this._list.refreshItem(oldHitBreakpoint);\n        }\n      }\n      return;\n    }\n    const url = details.auxData && details.auxData['breakpointURL'];\n    this._hitBreakpoint = url;\n    if (this._breakpoints.indexOf(url) < 0) {\n      return;\n    }\n    this._list.refreshItem(url);\n    UI.ViewManager.ViewManager.instance().showView('sources.xhrBreakpoints');\n  }\n\n  _restoreBreakpoints() {\n    const breakpoints = SDK.DOMDebuggerModel.DOMDebuggerManager.instance().xhrBreakpoints();\n    for (const url of breakpoints.keys()) {\n      this._setBreakpoint(url);\n    }\n  }\n}\n"]}