{"version":3,"file":"EventListenerBreakpointsSidebarPane.js","sourceRoot":"","sources":["../../../../../front_end/browser_debugger/EventListenerBreakpointsSidebarPane.js"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,eAAe,CAAC;AACrC,OAAO,EAAC,iCAAiC,EAAC,MAAM,wCAAwC,CAAC;AAEzF,mDAAmD;AACnD,IAAI,2CAA2C,CAAC;AAEhD,MAAM,OAAO,mCAAoC,SAAQ,iCAAiC;IACxF;;OAEG;IACH;QACE,MAAM,UAAU,GAAG,GAAG,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,wBAAwB,EAAE,CAAC,GAAG,CAChG,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;QACzC,UAAU,CAAC,IAAI,EAAE,CAAC;QAClB,MAAM,WAAW,GAAG,GAAG,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,wBAAwB,EAAE,CAAC;QAClG,KAAK,CACD,UAAU,EAAE,WAAW,EAAE,kCAAkC,EAAE,QAAQ,CAAC,QAAQ,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;IACtH,CAAC;IAED,MAAM,CAAC,QAAQ;QACb,IAAI,CAAC,2CAA2C,EAAE;YAChD,2CAA2C,GAAG,IAAI,mCAAmC,EAAE,CAAC;SACzF;QACD,OAAO,2CAA2C,CAAC;IACrD,CAAC;IAED;;;;OAIG;IACH,+BAA+B,CAAC,OAAO;QACrC,OAAO,GAAG,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,8BAA8B;QACpF,uDAAuD,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IACjF,CAAC;CACF","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../sdk/sdk.js';\nimport {CategorizedBreakpointsSidebarPane} from './CategorizedBreakpointsSidebarPane.js';\n\n/** @type {!EventListenerBreakpointsSidebarPane} */\nlet eventListenerBreakpointsSidebarPaneInstance;\n\nexport class EventListenerBreakpointsSidebarPane extends CategorizedBreakpointsSidebarPane {\n  /**\n   * @private\n   */\n  constructor() {\n    const categories = SDK.DOMDebuggerModel.DOMDebuggerManager.instance().eventListenerBreakpoints().map(\n        breakpoint => breakpoint.category());\n    categories.sort();\n    const breakpoints = SDK.DOMDebuggerModel.DOMDebuggerManager.instance().eventListenerBreakpoints();\n    super(\n        categories, breakpoints, 'sources.eventListenerBreakpoints', Protocol.Debugger.PausedEventReason.EventListener);\n  }\n\n  static instance() {\n    if (!eventListenerBreakpointsSidebarPaneInstance) {\n      eventListenerBreakpointsSidebarPaneInstance = new EventListenerBreakpointsSidebarPane();\n    }\n    return eventListenerBreakpointsSidebarPaneInstance;\n  }\n\n  /**\n   * @override\n   * @param {!SDK.DebuggerModel.DebuggerPausedDetails} details\n   * @returns {?SDK.DOMDebuggerModel.CategorizedBreakpoint}\n   */\n  _getBreakpointFromPausedDetails(details) {\n    return SDK.DOMDebuggerModel.DOMDebuggerManager.instance().resolveEventListenerBreakpoint(\n        /** @type {!{eventName: string, targetName: string}} */ (details.auxData));\n  }\n}\n"]}