{"version":3,"file":"DOMBreakpointsSidebarPane.js","sourceRoot":"","sources":["../../../../../front_end/browser_debugger/DOMBreakpointsSidebarPane.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport {ls} from '../platform/platform.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as Sources from '../sources/sources.js';\nimport * as UI from '../ui/ui.js';\n\n/** @type {!DOMBreakpointsSidebarPane} */\nlet domBreakpointsSidebarPaneInstance;\n\n/**\n * @implements {UI.ContextFlavorListener.ContextFlavorListener}\n * @implements {UI.ListControl.ListDelegate<!SDK.DOMDebuggerModel.DOMBreakpoint>}\n */\nexport class DOMBreakpointsSidebarPane extends UI.Widget.VBox {\n  /**\n   * @private\n   */\n  constructor() {\n    super(true);\n    this.registerRequiredCSS('browser_debugger/domBreakpointsSidebarPane.css', {enableLegacyPatching: false});\n\n    /** @type {!WeakMap<!Element, !HTMLInputElement>} */\n    this.elementToCheckboxes = new WeakMap();\n\n    this._emptyElement = this.contentElement.createChild('div', 'gray-info-message');\n    this._emptyElement.textContent = Common.UIString.UIString('No breakpoints');\n    /** @type {!UI.ListModel.ListModel.<!SDK.DOMDebuggerModel.DOMBreakpoint>} */\n    this._breakpoints = new UI.ListModel.ListModel();\n    /** @type {!UI.ListControl.ListControl.<!SDK.DOMDebuggerModel.DOMBreakpoint>} */\n    this._list = new UI.ListControl.ListControl(this._breakpoints, this, UI.ListControl.ListMode.NonViewport);\n    this.contentElement.appendChild(this._list.element);\n    this._list.element.classList.add('breakpoint-list', 'hidden');\n    UI.ARIAUtils.markAsList(this._list.element);\n    UI.ARIAUtils.setAccessibleName(this._list.element, ls`DOM Breakpoints list`);\n    this._emptyElement.tabIndex = -1;\n\n    SDK.SDKModel.TargetManager.instance().addModelListener(\n        SDK.DOMDebuggerModel.DOMDebuggerModel, SDK.DOMDebuggerModel.Events.DOMBreakpointAdded, this._breakpointAdded,\n        this);\n    SDK.SDKModel.TargetManager.instance().addModelListener(\n        SDK.DOMDebuggerModel.DOMDebuggerModel, SDK.DOMDebuggerModel.Events.DOMBreakpointToggled,\n        this._breakpointToggled, this);\n    SDK.SDKModel.TargetManager.instance().addModelListener(\n        SDK.DOMDebuggerModel.DOMDebuggerModel, SDK.DOMDebuggerModel.Events.DOMBreakpointsRemoved,\n        this._breakpointsRemoved, this);\n\n    for (const domDebuggerModel of SDK.SDKModel.TargetManager.instance().models(\n             SDK.DOMDebuggerModel.DOMDebuggerModel)) {\n      domDebuggerModel.retrieveDOMBreakpoints();\n      for (const breakpoint of domDebuggerModel.domBreakpoints()) {\n        this._addBreakpoint(breakpoint);\n      }\n    }\n\n    this._highlightedBreakpoint = null;\n    this._update();\n  }\n\n  static instance() {\n    if (!domBreakpointsSidebarPaneInstance) {\n      domBreakpointsSidebarPaneInstance = new DOMBreakpointsSidebarPane();\n    }\n    return domBreakpointsSidebarPaneInstance;\n  }\n\n  /**\n   * @override\n   * @param {!SDK.DOMDebuggerModel.DOMBreakpoint} item\n   * @return {!Element}\n   */\n  createElementForItem(item) {\n    const element = document.createElement('div');\n    element.classList.add('breakpoint-entry');\n    element.addEventListener('contextmenu', this._contextMenu.bind(this, item), true);\n    UI.ARIAUtils.markAsListitem(element);\n    element.tabIndex = -1;\n\n    const checkboxLabel = UI.UIUtils.CheckboxLabel.create(/* title */ undefined, item.enabled);\n    const checkboxElement = checkboxLabel.checkboxElement;\n    checkboxElement.addEventListener('click', this._checkboxClicked.bind(this, item), false);\n    checkboxElement.tabIndex = -1;\n    this.elementToCheckboxes.set(element, checkboxElement);\n    element.appendChild(checkboxLabel);\n    element.addEventListener('keydown', event => {\n      if (event.key === ' ') {\n        checkboxLabel.checkboxElement.click();\n        event.consume(true);\n      }\n    });\n\n    const labelElement = document.createElement('div');\n    labelElement.classList.add('dom-breakpoint');\n    element.appendChild(labelElement);\n    const description = document.createElement('div');\n    const breakpointTypeLabel = BreakpointTypeLabels.get(item.type);\n    description.textContent = breakpointTypeLabel || null;\n    UI.ARIAUtils.setAccessibleName(checkboxElement, ls`${breakpointTypeLabel}`);\n    const linkifiedNode = document.createElement('monospace');\n    linkifiedNode.style.display = 'block';\n    labelElement.appendChild(linkifiedNode);\n    Common.Linkifier.Linkifier.linkify(item.node, {preventKeyboardFocus: true, tooltip: undefined}).then(linkified => {\n      linkifiedNode.appendChild(linkified);\n      UI.ARIAUtils.setAccessibleName(checkboxElement, ls`${breakpointTypeLabel}: ${linkified.deepTextContent()}`);\n    });\n\n    labelElement.appendChild(description);\n\n    const checkedStateText = item.enabled ? ls`checked` : ls`unchecked`;\n    if (item === this._highlightedBreakpoint) {\n      element.classList.add('breakpoint-hit');\n      UI.ARIAUtils.setDescription(element, ls`${checkedStateText} breakpoint hit`);\n      UI.ARIAUtils.setDescription(checkboxElement, ls`breakpoint hit`);\n    } else {\n      UI.ARIAUtils.setDescription(element, checkedStateText);\n    }\n\n\n    this._emptyElement.classList.add('hidden');\n    this._list.element.classList.remove('hidden');\n\n    return element;\n  }\n\n  /**\n   * @override\n   * @param {!SDK.DOMDebuggerModel.DOMBreakpoint} item\n   * @return {number}\n   */\n  heightForItem(item) {\n    return 0;\n  }\n\n  /**\n   * @override\n   * @param {!SDK.DOMDebuggerModel.DOMBreakpoint} item\n   * @return {boolean}\n   */\n  isItemSelectable(item) {\n    return true;\n  }\n\n  /**\n   * @override\n   * @param {?Element} fromElement\n   * @param {?Element} toElement\n   * @return {boolean}\n   */\n  updateSelectedItemARIA(fromElement, toElement) {\n    return true;\n  }\n\n  /**\n   * @override\n   * @param {?SDK.DOMDebuggerModel.DOMBreakpoint} from\n   * @param {?SDK.DOMDebuggerModel.DOMBreakpoint} to\n   * @param {?HTMLElement} fromElement\n   * @param {?HTMLElement} toElement\n   */\n  selectedItemChanged(from, to, fromElement, toElement) {\n    if (fromElement) {\n      fromElement.tabIndex = -1;\n    }\n\n    if (toElement) {\n      this.setDefaultFocusedElement(toElement);\n      toElement.tabIndex = 0;\n      if (this.hasFocus()) {\n        toElement.focus();\n      }\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _breakpointAdded(event) {\n    this._addBreakpoint(/** @type {!SDK.DOMDebuggerModel.DOMBreakpoint} */ (event.data));\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _breakpointToggled(event) {\n    const hadFocus = this.hasFocus();\n    const breakpoint = /** @type {!SDK.DOMDebuggerModel.DOMBreakpoint} */ (event.data);\n    this._list.refreshItem(breakpoint);\n    if (hadFocus) {\n      this.focus();\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _breakpointsRemoved(event) {\n    const hadFocus = this.hasFocus();\n    const breakpoints = /** @type {!Array<!SDK.DOMDebuggerModel.DOMBreakpoint>} */ (event.data);\n    let lastIndex = -1;\n    for (const breakpoint of breakpoints) {\n      const index = this._breakpoints.indexOf(breakpoint);\n      if (index >= 0) {\n        this._breakpoints.remove(index);\n        lastIndex = index;\n      }\n    }\n    if (this._breakpoints.length === 0) {\n      this._emptyElement.classList.remove('hidden');\n      this.setDefaultFocusedElement(this._emptyElement);\n      this._list.element.classList.add('hidden');\n    } else if (lastIndex >= 0) {\n      const breakpointToSelect = this._breakpoints.at(lastIndex);\n      if (breakpointToSelect) {\n        this._list.selectItem(breakpointToSelect);\n      }\n    }\n    if (hadFocus) {\n      this.focus();\n    }\n  }\n\n  /**\n   * @param {!SDK.DOMDebuggerModel.DOMBreakpoint} breakpoint\n   */\n  _addBreakpoint(breakpoint) {\n    this._breakpoints.insertWithComparator(breakpoint, (breakpointA, breakpointB) => {\n      if (breakpointA.type > breakpointB.type) {\n        return -1;\n      }\n      if (breakpointA.type < breakpointB.type) {\n        return 1;\n      }\n      return 0;\n    });\n    if (!this._list.selectedItem() || !this.hasFocus()) {\n      this._list.selectItem(this._breakpoints.at(0));\n    }\n  }\n\n  /**\n   * @param {!SDK.DOMDebuggerModel.DOMBreakpoint} breakpoint\n   * @param {!Event} event\n   */\n  _contextMenu(breakpoint, event) {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        ls`Reveal DOM node in Elements panel`, () => Common.Revealer.reveal(breakpoint.node));\n    contextMenu.defaultSection().appendItem(Common.UIString.UIString('Remove breakpoint'), () => {\n      breakpoint.domDebuggerModel.removeDOMBreakpoint(breakpoint.node, breakpoint.type);\n    });\n    contextMenu.defaultSection().appendItem(Common.UIString.UIString('Remove all DOM breakpoints'), () => {\n      breakpoint.domDebuggerModel.removeAllDOMBreakpoints();\n    });\n    contextMenu.show();\n  }\n\n  /**\n   * @param {!SDK.DOMDebuggerModel.DOMBreakpoint} breakpoint\n   * @param {!Event} event\n   */\n  _checkboxClicked(breakpoint, event) {\n    breakpoint.domDebuggerModel.toggleDOMBreakpoint(\n        breakpoint, event.target ? /** @type {!HTMLInputElement} */ (event.target).checked : false);\n  }\n\n  /**\n   * @override\n   * @param {?Object} object\n   */\n  flavorChanged(object) {\n    this._update();\n  }\n\n  _update() {\n    const details = UI.Context.Context.instance().flavor(SDK.DebuggerModel.DebuggerPausedDetails);\n    if (this._highlightedBreakpoint) {\n      const oldHighlightedBreakpoint = this._highlightedBreakpoint;\n      this._highlightedBreakpoint = null;\n      this._list.refreshItem(oldHighlightedBreakpoint);\n    }\n    if (!details || !details.auxData || details.reason !== Protocol.Debugger.PausedEventReason.DOM) {\n      return;\n    }\n\n    const domDebuggerModel = details.debuggerModel.target().model(SDK.DOMDebuggerModel.DOMDebuggerModel);\n    if (!domDebuggerModel) {\n      return;\n    }\n    const data = domDebuggerModel.resolveDOMBreakpointData(/** @type {*} */ (details.auxData));\n    if (!data) {\n      return;\n    }\n\n    for (const breakpoint of this._breakpoints) {\n      if (breakpoint.node === data.node && breakpoint.type === data.type) {\n        this._highlightedBreakpoint = breakpoint;\n      }\n    }\n    if (this._highlightedBreakpoint) {\n      this._list.refreshItem(this._highlightedBreakpoint);\n    }\n    UI.ViewManager.ViewManager.instance().showView('sources.domBreakpoints');\n  }\n}\n\nexport const BreakpointTypeLabels = new Map([\n  [Protocol.DOMDebugger.DOMBreakpointType.SubtreeModified, Common.UIString.UIString('Subtree modified')],\n  [Protocol.DOMDebugger.DOMBreakpointType.AttributeModified, Common.UIString.UIString('Attribute modified')],\n  [Protocol.DOMDebugger.DOMBreakpointType.NodeRemoved, Common.UIString.UIString('Node removed')],\n]);\n\n/**\n * @implements {UI.ContextMenu.Provider}\n */\nexport class ContextMenuProvider {\n  /**\n   * @override\n   * @param {!Event} event\n   * @param {!UI.ContextMenu.ContextMenu} contextMenu\n   * @param {!Object} object\n   */\n  appendApplicableItems(event, contextMenu, object) {\n    const node = /** @type {!SDK.DOMModel.DOMNode} */ (object);\n    if (node.pseudoType()) {\n      return;\n    }\n    const domDebuggerModel = node.domModel().target().model(SDK.DOMDebuggerModel.DOMDebuggerModel);\n    if (!domDebuggerModel) {\n      return;\n    }\n\n    /**\n     * @param {!Protocol.DOMDebugger.DOMBreakpointType} type\n     */\n    function toggleBreakpoint(type) {\n      if (!domDebuggerModel) {\n        return;\n      }\n      if (domDebuggerModel.hasDOMBreakpoint(node, type)) {\n        domDebuggerModel.removeDOMBreakpoint(node, type);\n      } else {\n        domDebuggerModel.setDOMBreakpoint(node, type);\n      }\n    }\n\n    const breakpointsMenu = contextMenu.debugSection().appendSubMenuItem(Common.UIString.UIString('Break on'));\n    for (const type of Object.values(Protocol.DOMDebugger.DOMBreakpointType)) {\n      const label = Sources.DebuggerPausedMessage.BreakpointTypeNouns.get(type);\n      if (label) {\n        breakpointsMenu.defaultSection().appendCheckboxItem(\n            label, toggleBreakpoint.bind(null, type), domDebuggerModel.hasDOMBreakpoint(node, type));\n      }\n    }\n  }\n}\n"]}