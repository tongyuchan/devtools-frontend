{"version":3,"file":"EmulatedDevices.js","sourceRoot":"","sources":["../../../../../front_end/emulation/EmulatedDevices.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Root from '../root/root.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';\n\nimport {MaxDeviceSize, MinDeviceSize} from './DeviceModeModel.js';\n\nexport class EmulatedDevice {\n  constructor() {\n    /** @type {string} */\n    this.title = '';\n    /** @type {string} */\n    this.type = Type.Unknown;\n    /** @type {!Orientation} */\n    this.vertical = {width: 0, height: 0, outlineInsets: null, outlineImage: null, hinge: null};\n    /** @type {!Orientation} */\n    this.horizontal = {width: 0, height: 0, outlineInsets: null, outlineImage: null, hinge: null};\n    /** @type {number} */\n    this.deviceScaleFactor = 1;\n    /** @type {!Array.<string>} */\n    this.capabilities = [Capability.Touch, Capability.Mobile];\n    /** @type {string} */\n    this.userAgent = '';\n    /** @type {?Protocol.Emulation.UserAgentMetadata} */\n    this.userAgentMetadata = null;\n    /** @type {!Array.<!Mode>} */\n    this.modes = [];\n\n    /** @type {boolean} */\n    this.isDualScreen = false;\n    /** @type {!Orientation} */\n    this.verticalSpanned = {width: 0, height: 0, outlineInsets: null, outlineImage: null, hinge: null};\n    /** @type {!Orientation} */\n    this.horizontalSpanned = {width: 0, height: 0, outlineInsets: null, outlineImage: null, hinge: null};\n\n    /** @type {string} */\n    this._show = _Show.Default;\n    /** @type {boolean} */\n    this._showByDefault = true;\n\n    /** @type {?Root.Runtime.Extension} */\n    this._extension = null;\n  }\n\n  /**\n   * @param {*} json\n   * @return {?EmulatedDevice}\n   */\n  static fromJSONV1(json) {\n    try {\n      /**\n       * @param {*} object\n       * @param {string} key\n       * @param {string} type\n       * @param {*=} defaultValue\n       * @return {*}\n       */\n      function parseValue(object, key, type, defaultValue) {\n        if (typeof object !== 'object' || object === null || !object.hasOwnProperty(key)) {\n          if (typeof defaultValue !== 'undefined') {\n            return defaultValue;\n          }\n          throw new Error('Emulated device is missing required property \\'' + key + '\\'');\n        }\n        const value = object[key];\n        if (typeof value !== type || value === null) {\n          throw new Error('Emulated device property \\'' + key + '\\' has wrong type \\'' + typeof value + '\\'');\n        }\n        return value;\n      }\n\n      /**\n       * @param {*} object\n       * @param {string} key\n       * @return {number}\n       */\n      function parseIntValue(object, key) {\n        const value = /** @type {number} */ (parseValue(object, key, 'number'));\n        if (value !== Math.abs(value)) {\n          throw new Error('Emulated device value \\'' + key + '\\' must be integer');\n        }\n        return value;\n      }\n\n      /**\n       * @param {*} json\n       * @return {!UI.Geometry.Insets}\n       */\n      function parseInsets(json) {\n        return new UI.Geometry.Insets(\n            parseIntValue(json, 'left'), parseIntValue(json, 'top'), parseIntValue(json, 'right'),\n            parseIntValue(json, 'bottom'));\n      }\n\n      /**\n       * @param {*} json\n       * @return {!SDK.OverlayModel.HighlightColor}\n       */\n      function parseRGBA(json) {\n        const result = {};\n        result.r = parseIntValue(json, 'r');\n        if (result.r < 0 || result.r > 255) {\n          throw new Error('color has wrong r value: ' + result.r);\n        }\n\n        result.g = parseIntValue(json, 'g');\n        if (result.g < 0 || result.g > 255) {\n          throw new Error('color has wrong g value: ' + result.g);\n        }\n\n        result.b = parseIntValue(json, 'b');\n        if (result.b < 0 || result.b > 255) {\n          throw new Error('color has wrong b value: ' + result.b);\n        }\n\n        result.a = /** @type {number} */ (parseValue(json, 'a', 'number'));\n        if (result.a < 0 || result.a > 1) {\n          throw new Error('color has wrong a value: ' + result.a);\n        }\n\n        return /** @type {!SDK.OverlayModel.HighlightColor} */ (result);\n      }\n\n      /**\n       * @param {*} json\n       * @return {!SDK.OverlayModel.Hinge}\n       */\n      function parseHinge(json) {\n        const result = {};\n\n        result.width = parseIntValue(json, 'width');\n        if (result.width < 0 || result.width > MaxDeviceSize) {\n          throw new Error('Emulated device has wrong hinge width: ' + result.width);\n        }\n\n        result.height = parseIntValue(json, 'height');\n        if (result.height < 0 || result.height > MaxDeviceSize) {\n          throw new Error('Emulated device has wrong hinge height: ' + result.height);\n        }\n\n        result.x = parseIntValue(json, 'x');\n        if (result.x < 0 || result.x > MaxDeviceSize) {\n          throw new Error('Emulated device has wrong x offset: ' + result.height);\n        }\n\n        result.y = parseIntValue(json, 'y');\n        if (result.x < 0 || result.x > MaxDeviceSize) {\n          throw new Error('Emulated device has wrong y offset: ' + result.height);\n        }\n\n        if (json['contentColor']) {\n          result.contentColor = parseRGBA(json['contentColor']);\n        }\n\n        if (json['outlineColor']) {\n          result.outlineColor = parseRGBA(json['outlineColor']);\n        }\n\n        return /** @type {!SDK.OverlayModel.Hinge} */ (result);\n      }\n\n      /**\n       * @param {*} json\n       * @return {!Orientation}\n       */\n      function parseOrientation(json) {\n        const result = {};\n\n        result.width = parseIntValue(json, 'width');\n        if (result.width < 0 || result.width > MaxDeviceSize || result.width < MinDeviceSize) {\n          throw new Error('Emulated device has wrong width: ' + result.width);\n        }\n\n        result.height = parseIntValue(json, 'height');\n        if (result.height < 0 || result.height > MaxDeviceSize || result.height < MinDeviceSize) {\n          throw new Error('Emulated device has wrong height: ' + result.height);\n        }\n\n        const outlineInsets = parseValue(json['outline'], 'insets', 'object', null);\n        if (outlineInsets) {\n          result.outlineInsets = parseInsets(outlineInsets);\n          if (result.outlineInsets.left < 0 || result.outlineInsets.top < 0) {\n            throw new Error('Emulated device has wrong outline insets');\n          }\n          result.outlineImage = /** @type {string} */ (parseValue(json['outline'], 'image', 'string'));\n        }\n\n        if (json['hinge']) {\n          result.hinge = parseHinge(parseValue(json, 'hinge', 'object', undefined));\n        }\n\n        return /** @type {!Orientation} */ (result);\n      }\n\n      const result = new EmulatedDevice();\n      result.title = /** @type {string} */ (parseValue(json, 'title', 'string'));\n      result.type = /** @type {string} */ (parseValue(json, 'type', 'string'));\n      const rawUserAgent = /** @type {string} */ (parseValue(json, 'user-agent', 'string'));\n      result.userAgent = SDK.NetworkManager.MultitargetNetworkManager.patchUserAgentWithChromeVersion(rawUserAgent);\n\n      const templateUserAgentMetadata = parseValue(json, 'user-agent-metadata', 'object', null);\n      if (templateUserAgentMetadata) {\n        if (templateUserAgentMetadata.brands === undefined) {\n          templateUserAgentMetadata.brands = SDK.NetworkManager.MultitargetNetworkManager.getChromeBrands();\n        }\n        if (templateUserAgentMetadata.fullVersion === undefined) {\n          templateUserAgentMetadata.fullVersion = SDK.NetworkManager.MultitargetNetworkManager.getChromeVersion();\n        }\n      }\n      result.userAgentMetadata = /** @type {?Protocol.Emulation.UserAgentMetadata} */ (templateUserAgentMetadata);\n\n      const capabilities = parseValue(json, 'capabilities', 'object', []);\n      if (!Array.isArray(capabilities)) {\n        throw new Error('Emulated device capabilities must be an array');\n      }\n      result.capabilities = [];\n      for (let i = 0; i < capabilities.length; ++i) {\n        if (typeof capabilities[i] !== 'string') {\n          throw new Error('Emulated device capability must be a string');\n        }\n        result.capabilities.push(capabilities[i]);\n      }\n\n      result.deviceScaleFactor = /** @type {number} */ (parseValue(json['screen'], 'device-pixel-ratio', 'number'));\n      if (result.deviceScaleFactor < 0 || result.deviceScaleFactor > 100) {\n        throw new Error('Emulated device has wrong deviceScaleFactor: ' + result.deviceScaleFactor);\n      }\n\n      result.vertical = parseOrientation(parseValue(json['screen'], 'vertical', 'object'));\n      result.horizontal = parseOrientation(parseValue(json['screen'], 'horizontal', 'object'));\n      result.isDualScreen = /** @type {boolean} */ (parseValue(json, 'dual-screen', 'boolean', false));\n\n      if (result.isDualScreen) {\n        result.verticalSpanned = parseOrientation(parseValue(json['screen'], 'vertical-spanned', 'object', null));\n        result.horizontalSpanned = parseOrientation(parseValue(json['screen'], 'horizontal-spanned', 'object', null));\n      }\n      if (result.isDualScreen && (!result.verticalSpanned || !result.horizontalSpanned)) {\n        throw new Error('Emulated device \\'' + result.title + '\\'has dual screen without spanned orientations');\n      }\n\n      const modes = parseValue(json, 'modes', 'object', [\n        {'title': 'default', 'orientation': 'vertical'},\n        {'title': 'default', 'orientation': 'horizontal'},\n      ]);\n      if (!Array.isArray(modes)) {\n        throw new Error('Emulated device modes must be an array');\n      }\n      result.modes = [];\n      for (let i = 0; i < modes.length; ++i) {\n        const mode = {};\n        mode.title = /** @type {string} */ (parseValue(modes[i], 'title', 'string'));\n        mode.orientation = /** @type {string} */ (parseValue(modes[i], 'orientation', 'string'));\n        if (mode.orientation !== Vertical && mode.orientation !== Horizontal && mode.orientation !== VerticalSpanned &&\n            mode.orientation !== HorizontalSpanned) {\n          throw new Error('Emulated device mode has wrong orientation \\'' + mode.orientation + '\\'');\n        }\n        const orientation = result.orientationByName(mode.orientation);\n        mode.insets = parseInsets(parseValue(modes[i], 'insets', 'object', {left: 0, top: 0, right: 0, bottom: 0}));\n        if (mode.insets.top < 0 || mode.insets.left < 0 || mode.insets.right < 0 || mode.insets.bottom < 0 ||\n            mode.insets.top + mode.insets.bottom > orientation.height ||\n            mode.insets.left + mode.insets.right > orientation.width) {\n          throw new Error('Emulated device mode \\'' + mode.title + '\\'has wrong mode insets');\n        }\n\n        mode.image = /** @type {string} */ (parseValue(modes[i], 'image', 'string', null));\n        result.modes.push(mode);\n      }\n\n      result._showByDefault = /** @type {boolean} */ (parseValue(json, 'show-by-default', 'boolean', undefined));\n      result._show =\n          /** @type {string} */ (parseValue(json, 'show', 'string', _Show.Default));\n\n      return result;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @param {!EmulatedDevice} device1\n   * @param {!EmulatedDevice} device2\n   * @return {number}\n   */\n  static deviceComparator(device1, device2) {\n    const order1 = (device1._extension && device1._extension.descriptor()['order']) || -1;\n    const order2 = (device2._extension && device2._extension.descriptor()['order']) || -1;\n    if (order1 > order2) {\n      return 1;\n    }\n    if (order2 > order1) {\n      return -1;\n    }\n    return device1.title < device2.title ? -1 : (device1.title > device2.title ? 1 : 0);\n  }\n\n  /**\n   * @return {?Root.Runtime.Extension}\n   */\n  extension() {\n    return this._extension;\n  }\n\n  /**\n   * @param {?Root.Runtime.Extension} extension\n   */\n  setExtension(extension) {\n    this._extension = extension;\n  }\n\n  /**\n   * @param {string} orientation\n   * @return {!Array.<!Mode>}\n   */\n  modesForOrientation(orientation) {\n    const result = [];\n    for (let index = 0; index < this.modes.length; index++) {\n      if (this.modes[index].orientation === orientation) {\n        result.push(this.modes[index]);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @param {!Mode} mode\n   * @return {(!Mode|undefined)}\n   */\n  getSpanPartner(mode) {\n    switch (mode.orientation) {\n      case Vertical:\n        return this.modesForOrientation(VerticalSpanned)[0];\n      case Horizontal:\n        return this.modesForOrientation(HorizontalSpanned)[0];\n      case VerticalSpanned:\n        return this.modesForOrientation(Vertical)[0];\n      default:\n        return this.modesForOrientation(Horizontal)[0];\n    }\n  }\n\n  /**\n   * @param {!Mode} mode\n   * @return {?Mode}\n   */\n  getRotationPartner(mode) {\n    switch (mode.orientation) {\n      case HorizontalSpanned:\n        return this.modesForOrientation(VerticalSpanned)[0];\n      case VerticalSpanned:\n        return this.modesForOrientation(HorizontalSpanned)[0];\n      case Horizontal:\n        return this.modesForOrientation(Vertical)[0];\n      default:\n        return this.modesForOrientation(Horizontal)[0];\n    }\n  }\n\n  /**\n   * @return {*}\n   */\n  _toJSON() {\n    const json = {};\n    json['title'] = this.title;\n    json['type'] = this.type;\n    json['user-agent'] = this.userAgent;\n    json['capabilities'] = this.capabilities;\n\n    /** @type {{'device-pixel-ratio': number, vertical: object, horizontal: object, 'vertical-spanned': (object|undefined), 'horizontal-spanned': (object|undefined)}} */\n    json['screen'] = {\n      'device-pixel-ratio': this.deviceScaleFactor,\n      vertical: this._orientationToJSON(this.vertical),\n      horizontal: this._orientationToJSON(this.horizontal),\n      'vertical-spanned': undefined,\n      'horizontal-spanned': undefined,\n    };\n\n    if (this.isDualScreen) {\n      json['screen']['vertical-spanned'] = this._orientationToJSON(this.verticalSpanned);\n      json['screen']['horizontal-spanned'] = this._orientationToJSON(this.horizontalSpanned);\n    }\n\n\n    /** @type {!Array.<!JSONMode>} */\n    json['modes'] = [];\n    for (let i = 0; i < this.modes.length; ++i) {\n      /** @type {!JSONMode} */\n      const mode = {\n        'title': this.modes[i].title,\n        'orientation': this.modes[i].orientation,\n        'insets': {\n          'left': this.modes[i].insets.left,\n          'top': this.modes[i].insets.top,\n          'right': this.modes[i].insets.right,\n          'bottom': this.modes[i].insets.bottom,\n        },\n        image: this.modes[i].image || undefined,\n      };\n      json['modes'].push(mode);\n    }\n\n    json['show-by-default'] = this._showByDefault;\n    json['dual-screen'] = this.isDualScreen;\n    json['show'] = this._show;\n\n    if (this.userAgentMetadata) {\n      json['user-agent-metadata'] = this.userAgentMetadata;\n    }\n\n    return json;\n  }\n\n  /**\n   * @param {!Orientation} orientation\n   * @return {*}\n   */\n  _orientationToJSON(orientation) {\n    const json = {};\n    json['width'] = orientation.width;\n    json['height'] = orientation.height;\n    if (orientation.outlineInsets) {\n      /** @type {!{image: ?string, insets: {left: number, right: number, top: number, bottom: number}}} */\n      json.outline = {\n        insets: {\n          'left': orientation.outlineInsets.left,\n          'top': orientation.outlineInsets.top,\n          'right': orientation.outlineInsets.right,\n          'bottom': orientation.outlineInsets.bottom,\n        },\n        image: orientation.outlineImage\n      };\n    }\n    if (orientation.hinge) {\n      /** @type {!{width: number, height: number, x: number, y: number,   contentColor: (!{r:number,g:number,b:number,a:number}|undefined),  outlineColor: (!{r:number,g:number,b:number,a:number}|undefined)\n       * }} */\n      json.hinge = {\n        'width': orientation.hinge.width,\n        'height': orientation.hinge.height,\n        'x': orientation.hinge.x,\n        'y': orientation.hinge.y,\n        contentColor: undefined,\n        outlineColor: undefined,\n      };\n\n      if (orientation.hinge.contentColor) {\n        json.hinge.contentColor = {\n          'r': orientation.hinge.contentColor.r,\n          'g': orientation.hinge.contentColor.g,\n          'b': orientation.hinge.contentColor.b,\n          'a': orientation.hinge.contentColor.a,\n        };\n      }\n      if (orientation.hinge.outlineColor) {\n        json.hinge.outlineColor = {\n          'r': orientation.hinge.outlineColor.r,\n          'g': orientation.hinge.outlineColor.g,\n          'b': orientation.hinge.outlineColor.b,\n          'a': orientation.hinge.outlineColor.a,\n        };\n      }\n    }\n    return json;\n  }\n\n  /**\n   * @param {!Mode} mode\n   * @return {string}\n   */\n  modeImage(mode) {\n    if (!mode.image) {\n      return '';\n    }\n    if (!this._extension) {\n      return mode.image;\n    }\n    return this._extension.module().substituteURL(mode.image);\n  }\n\n  /**\n   * @param {!Mode} mode\n   * @return {string}\n   */\n  outlineImage(mode) {\n    const orientation = this.orientationByName(mode.orientation);\n    if (!orientation.outlineImage) {\n      return '';\n    }\n    if (!this._extension) {\n      return orientation.outlineImage;\n    }\n    return this._extension.module().substituteURL(orientation.outlineImage);\n  }\n\n  /**\n   * @param {string} name\n   * @return {!Orientation}\n   */\n  orientationByName(name) {\n    switch (name) {\n      case VerticalSpanned:\n        return this.verticalSpanned;\n      case HorizontalSpanned:\n        return this.horizontalSpanned;\n      case Vertical:\n        return this.vertical;\n      default:\n        return this.horizontal;\n    }\n  }\n  /**\n   * @return {boolean}\n   */\n  show() {\n    if (this._show === _Show.Default) {\n      return this._showByDefault;\n    }\n    return this._show === _Show.Always;\n  }\n\n  /**\n   * @param {boolean} show\n   */\n  setShow(show) {\n    this._show = show ? _Show.Always : _Show.Never;\n  }\n\n  /**\n   * @param {!EmulatedDevice} other\n   */\n  copyShowFrom(other) {\n    this._show = other._show;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  touch() {\n    return this.capabilities.indexOf(Capability.Touch) !== -1;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  mobile() {\n    return this.capabilities.indexOf(Capability.Mobile) !== -1;\n  }\n}\n\nexport const Horizontal = 'horizontal';\nexport const Vertical = 'vertical';\nexport const HorizontalSpanned = 'horizontal-spanned';\nexport const VerticalSpanned = 'vertical-spanned';\n\nexport const Type = {\n  Phone: 'phone',\n  Tablet: 'tablet',\n  Notebook: 'notebook',\n  Desktop: 'desktop',\n  Unknown: 'unknown'\n};\n\nexport const Capability = {\n  Touch: 'touch',\n  Mobile: 'mobile'\n};\n\nexport const _Show = {\n  Always: 'Always',\n  Default: 'Default',\n  Never: 'Never'\n};\n\n/** @type {!EmulatedDevicesList} */\nlet _instance;\n\nexport class EmulatedDevicesList extends Common.ObjectWrapper.ObjectWrapper {\n  constructor() {\n    super();\n\n    /** @type {!Common.Settings.Setting<!Array<?>>} */\n    this._standardSetting = Common.Settings.Settings.instance().createSetting('standardEmulatedDeviceList', []);\n    /** @type {!Set.<!EmulatedDevice>} */\n    this._standard = new Set();\n    this._listFromJSONV1(this._standardSetting.get(), this._standard);\n    this._updateStandardDevices();\n\n    /** @type {!Common.Settings.Setting<!Array<?>>} */\n    this._customSetting = Common.Settings.Settings.instance().createSetting('customEmulatedDeviceList', []);\n    /** @type {!Set.<!EmulatedDevice>} */\n    this._custom = new Set();\n    if (!this._listFromJSONV1(this._customSetting.get(), this._custom)) {\n      this.saveCustomDevices();\n    }\n  }\n\n  /**\n   * @return {!EmulatedDevicesList}\n   */\n  static instance() {\n    if (!_instance) {\n      _instance = new EmulatedDevicesList();\n    }\n    return _instance;\n  }\n\n  _updateStandardDevices() {\n    /** @type {!Set<!EmulatedDevice>} */\n    const devices = new Set();\n    const extensions = Root.Runtime.Runtime.instance().extensions('emulated-device');\n    for (const extension of extensions) {\n      const device = EmulatedDevice.fromJSONV1(extension.descriptor().device);\n      if (device) {\n        device.setExtension(extension);\n        devices.add(device);\n      }\n    }\n    this._copyShowValues(this._standard, devices);\n    this._standard = devices;\n    this.saveStandardDevices();\n  }\n\n  /**\n   * @param {!Array.<*>} jsonArray\n   * @param {!Set.<!EmulatedDevice>} result\n   * @return {boolean}\n   */\n  _listFromJSONV1(jsonArray, result) {\n    if (!Array.isArray(jsonArray)) {\n      return false;\n    }\n    let success = true;\n    for (let i = 0; i < jsonArray.length; ++i) {\n      const device = EmulatedDevice.fromJSONV1(jsonArray[i]);\n      if (device) {\n        result.add(device);\n        if (!device.modes.length) {\n          device.modes.push(\n              {title: '', orientation: Horizontal, insets: new UI.Geometry.Insets(0, 0, 0, 0), image: null});\n          device.modes.push(\n              {title: '', orientation: Vertical, insets: new UI.Geometry.Insets(0, 0, 0, 0), image: null});\n        }\n      } else {\n        success = false;\n      }\n    }\n    return success;\n  }\n\n  /**\n   * @return {!Array.<!EmulatedDevice>}\n   */\n  standard() {\n    return [...this._standard];\n  }\n\n  /**\n   * @return {!Array.<!EmulatedDevice>}\n   */\n  custom() {\n    return [...this._custom];\n  }\n\n  revealCustomSetting() {\n    Common.Revealer.reveal(this._customSetting);\n  }\n\n  /**\n   * @param {!EmulatedDevice} device\n   */\n  addCustomDevice(device) {\n    this._custom.add(device);\n    this.saveCustomDevices();\n  }\n\n  /**\n   * @param {!EmulatedDevice} device\n   */\n  removeCustomDevice(device) {\n    this._custom.delete(device);\n    this.saveCustomDevices();\n  }\n\n  saveCustomDevices() {\n    /** @type {!Array<?>} */\n    const json = [];\n    this._custom.forEach(device => json.push(device._toJSON()));\n\n    this._customSetting.set(json);\n    this.dispatchEventToListeners(Events.CustomDevicesUpdated);\n  }\n\n  saveStandardDevices() {\n    /** @type {!Array<?>} */\n    const json = [];\n    this._standard.forEach(device => json.push(device._toJSON()));\n\n    this._standardSetting.set(json);\n    this.dispatchEventToListeners(Events.StandardDevicesUpdated);\n  }\n\n  /**\n   * @param {!Set.<!EmulatedDevice>} from\n   * @param {!Set.<!EmulatedDevice>} to\n   */\n  _copyShowValues(from, to) {\n    const fromDeviceById = new Map();\n    for (const device of from) {\n      fromDeviceById.set(device.title, device);\n    }\n\n    for (const toDevice of to) {\n      const fromDevice = fromDeviceById.get(toDevice.title);\n      if (fromDevice) {\n        toDevice.copyShowFrom(fromDevice);\n      }\n    }\n  }\n}\n\n/** @enum {symbol} */\nexport const Events = {\n  CustomDevicesUpdated: Symbol('CustomDevicesUpdated'),\n  StandardDevicesUpdated: Symbol('StandardDevicesUpdated')\n};\n\n/** @typedef {!{title: string, orientation: string, insets: !UI.Geometry.Insets, image: ?string}} */\n// @ts-ignore typedef\nexport let Mode;\n\n/** @typedef {!{width: number, height: number, outlineInsets: ?UI.Geometry.Insets, outlineImage: ?string, hinge: ?SDK.OverlayModel.Hinge}} */\n// @ts-ignore typedef\nexport let Orientation;\n\n/** @typedef {!{title: string, orientation: string, image: (string|undefined), insets: {left: number, right: number, top: number, bottom: number}}} */\n// @ts-ignore typedef\nexport let JSONMode;  // eslint-disable-line no-unused-vars\n"]}