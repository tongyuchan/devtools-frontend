{"version":3,"file":"DeviceModeModel.js","sourceRoot":"","sources":["../../../../../front_end/emulation/DeviceModeModel.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';  // eslint-disable-line no-unused-vars\nimport * as Host from '../host/host.js';\nimport {ls} from '../platform/platform.js';\nimport * as Root from '../root/root.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';\n\nimport {EmulatedDevice, Horizontal, HorizontalSpanned, Mode, Vertical, VerticalSpanned} from './EmulatedDevices.js';  // eslint-disable-line no-unused-vars\n\n/** @type {!DeviceModeModel} */\nlet deviceModeModelInstance;\n\n/**\n * @implements {SDK.SDKModel.SDKModelObserver<!SDK.EmulationModel.EmulationModel>}\n * @extends {Common.ObjectWrapper.ObjectWrapper}\n */\nexport class DeviceModeModel extends Common.ObjectWrapper.ObjectWrapper {\n  /**\n   * @private\n   */\n  constructor() {\n    super();\n    this._screenRect = new UI.Geometry.Rect(0, 0, 1, 1);\n    this._visiblePageRect = new UI.Geometry.Rect(0, 0, 1, 1);\n    this._availableSize = new UI.Geometry.Size(1, 1);\n    this._preferredSize = new UI.Geometry.Size(1, 1);\n    this._initialized = false;\n    this._appliedDeviceSize = new UI.Geometry.Size(1, 1);\n    this._appliedDeviceScaleFactor = window.devicePixelRatio;\n    this._appliedUserAgentType = UA.Desktop;\n    this._experimentDualScreenSupport = Root.Runtime.experiments.isEnabled('dualScreenSupport');\n    this._webPlatformExperimentalFeaturesEnabled = Boolean(eval('window.getWindowSegments'));\n\n    this._scaleSetting = Common.Settings.Settings.instance().createSetting('emulation.deviceScale', 1);\n    // We've used to allow zero before.\n    if (!this._scaleSetting.get()) {\n      this._scaleSetting.set(1);\n    }\n    this._scaleSetting.addChangeListener(this._scaleSettingChanged, this);\n    this._scale = 1;\n\n    this._widthSetting = Common.Settings.Settings.instance().createSetting('emulation.deviceWidth', 400);\n    if (this._widthSetting.get() < MinDeviceSize) {\n      this._widthSetting.set(MinDeviceSize);\n    }\n    if (this._widthSetting.get() > MaxDeviceSize) {\n      this._widthSetting.set(MaxDeviceSize);\n    }\n    this._widthSetting.addChangeListener(this._widthSettingChanged, this);\n\n    this._heightSetting = Common.Settings.Settings.instance().createSetting('emulation.deviceHeight', 0);\n    if (this._heightSetting.get() && this._heightSetting.get() < MinDeviceSize) {\n      this._heightSetting.set(MinDeviceSize);\n    }\n    if (this._heightSetting.get() > MaxDeviceSize) {\n      this._heightSetting.set(MaxDeviceSize);\n    }\n    this._heightSetting.addChangeListener(this._heightSettingChanged, this);\n\n    this._uaSetting = Common.Settings.Settings.instance().createSetting('emulation.deviceUA', UA.Mobile);\n    this._uaSetting.addChangeListener(this._uaSettingChanged, this);\n    this._deviceScaleFactorSetting =\n        Common.Settings.Settings.instance().createSetting('emulation.deviceScaleFactor', 0);\n    this._deviceScaleFactorSetting.addChangeListener(this._deviceScaleFactorSettingChanged, this);\n\n    this._deviceOutlineSetting = Common.Settings.Settings.instance().moduleSetting('emulation.showDeviceOutline');\n    this._deviceOutlineSetting.addChangeListener(this._deviceOutlineSettingChanged, this);\n\n    this._toolbarControlsEnabledSetting = Common.Settings.Settings.instance().createSetting(\n        'emulation.toolbarControlsEnabled', true, Common.Settings.SettingStorageType.Session);\n\n    /** @type {!Type} */\n    this._type = Type.None;\n    /** @type {?EmulatedDevice} */\n    this._device = null;\n    /** @type {?Mode} */\n    this._mode = null;\n    /** @type {number} */\n    this._fitScale = 1;\n    this._touchEnabled = false;\n    this._touchMobile = false;\n\n    /** @type {?SDK.EmulationModel.EmulationModel} */\n    this._emulationModel = null;\n    /** @type {?function():void} */\n    this._onModelAvailable = null;\n    SDK.SDKModel.TargetManager.instance().observeModels(SDK.EmulationModel.EmulationModel, this);\n  }\n\n  static instance(opts = {forceNew: null}) {\n    if (!deviceModeModelInstance || opts.forceNew) {\n      deviceModeModelInstance = new DeviceModeModel();\n    }\n\n    return deviceModeModelInstance;\n  }\n\n  /**\n   * @param {string} value\n   * @return {{valid: boolean, errorMessage: (string|undefined)}}\n   */\n  static widthValidator(value) {\n    let valid = false;\n    let errorMessage;\n\n    if (!/^[\\d]+$/.test(value)) {\n      errorMessage = ls`Width must be a number.`;\n    } else if (Number(value) > MaxDeviceSize) {\n      errorMessage = ls`Width must be less than or equal to ${MaxDeviceSize}.`;\n    } else if (Number(value) < MinDeviceSize) {\n      errorMessage = ls`Width must be greater than or equal to ${MinDeviceSize}.`;\n    } else {\n      valid = true;\n    }\n\n    return {valid, errorMessage};\n  }\n\n  /**\n   * @param {string} value\n   * @return {{valid: boolean, errorMessage: (string|undefined)}}\n   */\n  static heightValidator(value) {\n    let valid = false;\n    let errorMessage;\n\n    if (!/^[\\d]+$/.test(value)) {\n      errorMessage = ls`Height must be a number.`;\n    } else if (Number(value) > MaxDeviceSize) {\n      errorMessage = ls`Height must be less than or equal to ${MaxDeviceSize}.`;\n    } else if (Number(value) < MinDeviceSize) {\n      errorMessage = ls`Height must be greater than or equal to ${MinDeviceSize}.`;\n    } else {\n      valid = true;\n    }\n\n    return {valid, errorMessage};\n  }\n\n  /**\n   * @param {string} value\n   * @return {{valid: boolean, errorMessage: (string|undefined)}}\n   */\n  static scaleValidator(value) {\n    let valid = false;\n    let errorMessage;\n    const parsedValue = Number(value.trim());\n\n    if (!value) {\n      valid = true;\n    } else if (Number.isNaN(parsedValue)) {\n      errorMessage = ls`Device pixel ratio must be a number or blank.`;\n    } else if (Number(value) > MaxDeviceScaleFactor) {\n      errorMessage = ls`Device pixel ratio must be less than or equal to ${MaxDeviceScaleFactor}.`;\n    } else if (Number(value) < MinDeviceScaleFactor) {\n      errorMessage = ls`Device pixel ratio must be greater than or equal to ${MinDeviceScaleFactor}.`;\n    } else {\n      valid = true;\n    }\n\n    return {valid, errorMessage};\n  }\n\n  /**\n   * @param {!UI.Geometry.Size} availableSize\n   * @param {!UI.Geometry.Size} preferredSize\n   */\n  setAvailableSize(availableSize, preferredSize) {\n    this._availableSize = availableSize;\n    this._preferredSize = preferredSize;\n    this._initialized = true;\n    this._calculateAndEmulate(false);\n  }\n\n  /**\n   * @param {!Type} type\n   * @param {?EmulatedDevice} device\n   * @param {?Mode} mode\n   * @param {number=} scale\n   */\n  emulate(type, device, mode, scale) {\n    const resetPageScaleFactor = this._type !== type || this._device !== device || this._mode !== mode;\n    this._type = type;\n\n    if (type === Type.Device && device && mode) {\n      console.assert(Boolean(device) && Boolean(mode), 'Must pass device and mode for device emulation');\n      this._mode = mode;\n      this._device = device;\n      if (this._initialized) {\n        const orientation = device.orientationByName(mode.orientation);\n        this._scaleSetting.set(\n            scale ||\n            this._calculateFitScale(\n                orientation.width, orientation.height, this._currentOutline(), this._currentInsets()));\n      }\n    } else {\n      this._device = null;\n      this._mode = null;\n    }\n\n    if (type !== Type.None) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.DeviceModeEnabled);\n    }\n    this._calculateAndEmulate(resetPageScaleFactor);\n  }\n\n  /**\n   * @param {number} width\n   */\n  setWidth(width) {\n    const max = Math.min(MaxDeviceSize, this._preferredScaledWidth());\n    width = Math.max(Math.min(width, max), 1);\n    this._widthSetting.set(width);\n  }\n\n  /**\n   * @param {number} width\n   */\n  setWidthAndScaleToFit(width) {\n    width = Math.max(Math.min(width, MaxDeviceSize), 1);\n    this._scaleSetting.set(this._calculateFitScale(width, this._heightSetting.get()));\n    this._widthSetting.set(width);\n  }\n\n  /**\n   * @param {number} height\n   */\n  setHeight(height) {\n    const max = Math.min(MaxDeviceSize, this._preferredScaledHeight());\n    height = Math.max(Math.min(height, max), 0);\n    if (height === this._preferredScaledHeight()) {\n      height = 0;\n    }\n    this._heightSetting.set(height);\n  }\n\n  /**\n   * @param {number} height\n   */\n  setHeightAndScaleToFit(height) {\n    height = Math.max(Math.min(height, MaxDeviceSize), 0);\n    this._scaleSetting.set(this._calculateFitScale(this._widthSetting.get(), height));\n    this._heightSetting.set(height);\n  }\n\n  /**\n   * @param {number} scale\n   */\n  setScale(scale) {\n    this._scaleSetting.set(scale);\n  }\n\n  /**\n   * @return {?EmulatedDevice}\n   */\n  device() {\n    return this._device;\n  }\n\n  /**\n   * @return {?Mode}\n   */\n  mode() {\n    return this._mode;\n  }\n\n  /**\n   * @return {!Type}\n   */\n  type() {\n    return this._type;\n  }\n\n  /**\n   * @return {string}\n   */\n  screenImage() {\n    return (this._device && this._mode) ? this._device.modeImage(this._mode) : '';\n  }\n\n  /**\n   * @return {string}\n   */\n  outlineImage() {\n    return (this._device && this._mode && this._deviceOutlineSetting.get()) ? this._device.outlineImage(this._mode) :\n                                                                              '';\n  }\n\n  /**\n   * @return {?UI.Geometry.Rect}\n   */\n  outlineRect() {\n    return this._outlineRect || null;\n  }\n\n  /**\n   * @return {!UI.Geometry.Rect}\n   */\n  screenRect() {\n    return this._screenRect;\n  }\n\n  /**\n   * @return {!UI.Geometry.Rect}\n   */\n  visiblePageRect() {\n    return this._visiblePageRect;\n  }\n\n  /**\n   * @return {number}\n   */\n  scale() {\n    return this._scale;\n  }\n\n  /**\n   * @return {number}\n   */\n  fitScale() {\n    return this._fitScale;\n  }\n\n  /**\n   * @return {!UI.Geometry.Size}\n   */\n  appliedDeviceSize() {\n    return this._appliedDeviceSize;\n  }\n\n  /**\n   * @return {number}\n   */\n  appliedDeviceScaleFactor() {\n    return this._appliedDeviceScaleFactor;\n  }\n\n  /**\n   * @return {!UA}\n   */\n  appliedUserAgentType() {\n    return this._appliedUserAgentType;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isFullHeight() {\n    return !this._heightSetting.get();\n  }\n\n  /**\n   * @return {boolean}\n   */\n  _isMobile() {\n    switch (this._type) {\n      case Type.Device:\n        return this._device ? this._device.mobile() : false;\n      case Type.None:\n        return false;\n      case Type.Responsive:\n        return this._uaSetting.get() === UA.Mobile || this._uaSetting.get() === UA.MobileNoTouch;\n    }\n    return false;\n  }\n\n  /**\n   * @return {!Common.Settings.Setting<boolean>}\n   */\n  enabledSetting() {\n    return Common.Settings.Settings.instance().createSetting('emulation.showDeviceMode', false);\n  }\n\n  /**\n   * @return {!Common.Settings.Setting<number>}\n   */\n  scaleSetting() {\n    return this._scaleSetting;\n  }\n\n  /**\n   * @return {!Common.Settings.Setting<UA>}\n   */\n  uaSetting() {\n    return this._uaSetting;\n  }\n\n  /**\n   * @return {!Common.Settings.Setting<number>}\n   */\n  deviceScaleFactorSetting() {\n    return this._deviceScaleFactorSetting;\n  }\n\n  /**\n   * @return {!Common.Settings.Setting<boolean>}\n   */\n  deviceOutlineSetting() {\n    return this._deviceOutlineSetting;\n  }\n\n  /**\n   * @return {!Common.Settings.Setting<boolean>}\n   */\n  toolbarControlsEnabledSetting() {\n    return this._toolbarControlsEnabledSetting;\n  }\n\n  reset() {\n    this._deviceScaleFactorSetting.set(0);\n    this._scaleSetting.set(1);\n    this.setWidth(400);\n    this.setHeight(0);\n    this._uaSetting.set(UA.Mobile);\n  }\n\n  /**\n   * @override\n   * @param {!SDK.EmulationModel.EmulationModel} emulationModel\n   */\n  modelAdded(emulationModel) {\n    if (!this._emulationModel && emulationModel.supportsDeviceEmulation()) {\n      this._emulationModel = emulationModel;\n      if (this._onModelAvailable) {\n        const callback = this._onModelAvailable;\n        this._onModelAvailable = null;\n        callback();\n      }\n      const resourceTreeModel = emulationModel.target().model(SDK.ResourceTreeModel.ResourceTreeModel);\n      if (resourceTreeModel) {\n        resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameResized, this._onFrameChange, this);\n        resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameNavigated, this._onFrameChange, this);\n      }\n    } else {\n      emulationModel.emulateTouch(this._touchEnabled, this._touchMobile);\n    }\n  }\n\n  /**\n   * @override\n   * @param {!SDK.EmulationModel.EmulationModel} emulationModel\n   */\n  modelRemoved(emulationModel) {\n    if (this._emulationModel === emulationModel) {\n      this._emulationModel = null;\n    }\n  }\n\n  /**\n   * @return {?string}\n   */\n  inspectedURL() {\n    return this._emulationModel ? this._emulationModel.target().inspectedURL() : null;\n  }\n\n  _onFrameChange() {\n    const overlayModel = this._emulationModel ? this._emulationModel.overlayModel() : null;\n    if (!overlayModel) {\n      return;\n    }\n\n    this._showHingeIfApplicable(overlayModel);\n  }\n\n  _scaleSettingChanged() {\n    this._calculateAndEmulate(false);\n  }\n\n  _widthSettingChanged() {\n    this._calculateAndEmulate(false);\n  }\n\n  _heightSettingChanged() {\n    this._calculateAndEmulate(false);\n  }\n\n  _uaSettingChanged() {\n    this._calculateAndEmulate(true);\n  }\n\n  _deviceScaleFactorSettingChanged() {\n    this._calculateAndEmulate(false);\n  }\n\n  _deviceOutlineSettingChanged() {\n    this._calculateAndEmulate(false);\n  }\n\n  /**\n   * @return {number}\n   */\n  _preferredScaledWidth() {\n    return Math.floor(this._preferredSize.width / (this._scaleSetting.get() || 1));\n  }\n\n  /**\n   * @return {number}\n   */\n  _preferredScaledHeight() {\n    return Math.floor(this._preferredSize.height / (this._scaleSetting.get() || 1));\n  }\n\n  /**\n   * @return {!UI.Geometry.Insets}\n   */\n  _currentOutline() {\n    let outline = new UI.Geometry.Insets(0, 0, 0, 0);\n    if (this._type !== Type.Device || !this._device || !this._mode) {\n      return outline;\n    }\n    const orientation = this._device.orientationByName(this._mode.orientation);\n    if (this._deviceOutlineSetting.get()) {\n      outline = orientation.outlineInsets || outline;\n    }\n    return outline;\n  }\n\n  /**\n   * @return {!UI.Geometry.Insets}\n   */\n  _currentInsets() {\n    if (this._type !== Type.Device || !this._mode) {\n      return new UI.Geometry.Insets(0, 0, 0, 0);\n    }\n    return this._mode.insets;\n  }\n\n  /**\n   * @return {!Protocol.Emulation.ScreenOrientationType}\n   */\n  _getScreenOrientationType() {\n    if (!this._mode) {\n      throw new Error('Mode required to get orientation type.');\n    }\n    switch (this._mode.orientation) {\n      case VerticalSpanned:\n      case Vertical:\n        return Protocol.Emulation.ScreenOrientationType.PortraitPrimary;\n      case HorizontalSpanned:\n      case Horizontal:\n      default:\n        return Protocol.Emulation.ScreenOrientationType.LandscapePrimary;\n    }\n  }\n\n  /**\n   * @param {boolean} resetPageScaleFactor\n   */\n  _calculateAndEmulate(resetPageScaleFactor) {\n    if (!this._emulationModel) {\n      this._onModelAvailable = this._calculateAndEmulate.bind(this, resetPageScaleFactor);\n    }\n    const mobile = this._isMobile();\n    const overlayModel = this._emulationModel ? this._emulationModel.overlayModel() : null;\n    if (overlayModel) {\n      this._showHingeIfApplicable(overlayModel);\n    }\n    if (this._type === Type.Device && this._device && this._mode) {\n      const orientation = this._device.orientationByName(this._mode.orientation);\n      const outline = this._currentOutline();\n      const insets = this._currentInsets();\n      this._fitScale = this._calculateFitScale(orientation.width, orientation.height, outline, insets);\n      if (mobile) {\n        this._appliedUserAgentType = this._device.touch() ? UA.Mobile : UA.MobileNoTouch;\n      } else {\n        this._appliedUserAgentType = this._device.touch() ? UA.DesktopTouch : UA.Desktop;\n      }\n      this._applyDeviceMetrics(\n          new UI.Geometry.Size(orientation.width, orientation.height), insets, outline, this._scaleSetting.get(),\n          this._device.deviceScaleFactor, mobile, this._getScreenOrientationType(), resetPageScaleFactor,\n          this._webPlatformExperimentalFeaturesEnabled);\n      this._applyUserAgent(this._device.userAgent, this._device.userAgentMetadata);\n      this._applyTouch(this._device.touch(), mobile);\n    } else if (this._type === Type.None) {\n      this._fitScale = this._calculateFitScale(this._availableSize.width, this._availableSize.height);\n      this._appliedUserAgentType = UA.Desktop;\n      this._applyDeviceMetrics(\n          this._availableSize, new UI.Geometry.Insets(0, 0, 0, 0), new UI.Geometry.Insets(0, 0, 0, 0), 1, 0, mobile,\n          null, resetPageScaleFactor);\n      this._applyUserAgent('', null);\n      this._applyTouch(false, false);\n    } else if (this._type === Type.Responsive) {\n      let screenWidth = this._widthSetting.get();\n      if (!screenWidth || screenWidth > this._preferredScaledWidth()) {\n        screenWidth = this._preferredScaledWidth();\n      }\n      let screenHeight = this._heightSetting.get();\n      if (!screenHeight || screenHeight > this._preferredScaledHeight()) {\n        screenHeight = this._preferredScaledHeight();\n      }\n      const defaultDeviceScaleFactor = mobile ? defaultMobileScaleFactor : 0;\n      this._fitScale = this._calculateFitScale(this._widthSetting.get(), this._heightSetting.get());\n      this._appliedUserAgentType = this._uaSetting.get();\n      this._applyDeviceMetrics(\n          new UI.Geometry.Size(screenWidth, screenHeight), new UI.Geometry.Insets(0, 0, 0, 0),\n          new UI.Geometry.Insets(0, 0, 0, 0), this._scaleSetting.get(),\n          this._deviceScaleFactorSetting.get() || defaultDeviceScaleFactor, mobile,\n          screenHeight >= screenWidth ? Protocol.Emulation.ScreenOrientationType.PortraitPrimary :\n                                        Protocol.Emulation.ScreenOrientationType.LandscapePrimary,\n          resetPageScaleFactor);\n      this._applyUserAgent(mobile ? _defaultMobileUserAgent : '', mobile ? _defaultMobileUserAgentMetadata : null);\n      this._applyTouch(\n          this._uaSetting.get() === UA.DesktopTouch || this._uaSetting.get() === UA.Mobile,\n          this._uaSetting.get() === UA.Mobile);\n    }\n\n    if (overlayModel) {\n      overlayModel.setShowViewportSizeOnResize(this._type === Type.None);\n    }\n    this.dispatchEventToListeners(Events.Updated);\n  }\n\n  /**\n   * @param {number} screenWidth\n   * @param {number} screenHeight\n   * @param {!UI.Geometry.Insets=} outline\n   * @param {!UI.Geometry.Insets=} insets\n   * @return {number}\n   */\n  _calculateFitScale(screenWidth, screenHeight, outline, insets) {\n    const outlineWidth = outline ? outline.left + outline.right : 0;\n    const outlineHeight = outline ? outline.top + outline.bottom : 0;\n    const insetsWidth = insets ? insets.left + insets.right : 0;\n    const insetsHeight = insets ? insets.top + insets.bottom : 0;\n    let scale = Math.min(\n        screenWidth ? this._preferredSize.width / (screenWidth + outlineWidth) : 1,\n        screenHeight ? this._preferredSize.height / (screenHeight + outlineHeight) : 1);\n    scale = Math.min(Math.floor(scale * 100), 100);\n\n    let sharpScale = scale;\n    while (sharpScale > scale * 0.7) {\n      let sharp = true;\n      if (screenWidth) {\n        sharp = sharp && Number.isInteger((screenWidth - insetsWidth) * sharpScale / 100);\n      }\n      if (screenHeight) {\n        sharp = sharp && Number.isInteger((screenHeight - insetsHeight) * sharpScale / 100);\n      }\n      if (sharp) {\n        return sharpScale / 100;\n      }\n      sharpScale -= 1;\n    }\n    return scale / 100;\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   */\n  setSizeAndScaleToFit(width, height) {\n    this._scaleSetting.set(this._calculateFitScale(width, height));\n    this.setWidth(width);\n    this.setHeight(height);\n  }\n\n  /**\n   * @param {string} userAgent\n   * @param {?Protocol.Emulation.UserAgentMetadata} userAgentMetadata\n   */\n  _applyUserAgent(userAgent, userAgentMetadata) {\n    SDK.NetworkManager.MultitargetNetworkManager.instance().setUserAgentOverride(userAgent, userAgentMetadata);\n  }\n\n  /**\n   * @param {!UI.Geometry.Size} screenSize\n   * @param {!UI.Geometry.Insets} insets\n   * @param {!UI.Geometry.Insets} outline\n   * @param {number} scale\n   * @param {number} deviceScaleFactor\n   * @param {boolean} mobile\n   * @param {?Protocol.Emulation.ScreenOrientationType} screenOrientation\n   * @param {boolean} resetPageScaleFactor\n   * @param {boolean=} forceMetricsOverride\n   */\n  _applyDeviceMetrics(\n      screenSize, insets, outline, scale, deviceScaleFactor, mobile, screenOrientation, resetPageScaleFactor,\n      forceMetricsOverride = false) {\n    screenSize.width = Math.max(1, Math.floor(screenSize.width));\n    screenSize.height = Math.max(1, Math.floor(screenSize.height));\n\n    let pageWidth = screenSize.width - insets.left - insets.right;\n    let pageHeight = screenSize.height - insets.top - insets.bottom;\n    this._emulatedPageSize = new UI.Geometry.Size(pageWidth, pageHeight);\n\n    const positionX = insets.left;\n    const positionY = insets.top;\n    const screenOrientationAngle =\n        screenOrientation === Protocol.Emulation.ScreenOrientationType.LandscapePrimary ? 90 : 0;\n\n    this._appliedDeviceSize = screenSize;\n    this._appliedDeviceScaleFactor = deviceScaleFactor || window.devicePixelRatio;\n    this._screenRect = new UI.Geometry.Rect(\n        Math.max(0, (this._availableSize.width - screenSize.width * scale) / 2), outline.top * scale,\n        screenSize.width * scale, screenSize.height * scale);\n    this._outlineRect = new UI.Geometry.Rect(\n        this._screenRect.left - outline.left * scale, 0, (outline.left + screenSize.width + outline.right) * scale,\n        (outline.top + screenSize.height + outline.bottom) * scale);\n    this._visiblePageRect = new UI.Geometry.Rect(\n        positionX * scale, positionY * scale,\n        Math.min(pageWidth * scale, this._availableSize.width - this._screenRect.left - positionX * scale),\n        Math.min(pageHeight * scale, this._availableSize.height - this._screenRect.top - positionY * scale));\n    this._scale = scale;\n    if (!forceMetricsOverride) {\n      // When sending displayFeature, we cannot use the optimization below due to backend restrictions.\n      if (scale === 1 && this._availableSize.width >= screenSize.width &&\n          this._availableSize.height >= screenSize.height) {\n        // When we have enough space, no page size override is required. This will speed things up and remove lag.\n        pageWidth = 0;\n        pageHeight = 0;\n      }\n      if (this._visiblePageRect.width === pageWidth * scale && this._visiblePageRect.height === pageHeight * scale &&\n          Number.isInteger(pageWidth * scale) && Number.isInteger(pageHeight * scale)) {\n        // When we only have to apply scale, do not resize the page. This will speed things up and remove lag.\n        pageWidth = 0;\n        pageHeight = 0;\n      }\n    }\n\n    if (!this._emulationModel) {\n      return;\n    }\n\n    if (resetPageScaleFactor) {\n      this._emulationModel.resetPageScaleFactor();\n    }\n    if (pageWidth || pageHeight || mobile || deviceScaleFactor || scale !== 1 || screenOrientation ||\n        forceMetricsOverride) {\n      /** @type {!Protocol.Emulation.SetDeviceMetricsOverrideRequest} */\n      const metrics = {\n        width: pageWidth,\n        height: pageHeight,\n        deviceScaleFactor: deviceScaleFactor,\n        mobile: mobile,\n        scale: scale,\n        screenWidth: screenSize.width,\n        screenHeight: screenSize.height,\n        positionX: positionX,\n        positionY: positionY,\n        dontSetVisibleSize: true,\n        displayFeature: undefined,\n        screenOrientation: undefined,\n      };\n      const displayFeature = this._getDisplayFeature();\n      if (displayFeature) {\n        metrics.displayFeature = displayFeature;\n      }\n      if (screenOrientation) {\n        metrics.screenOrientation = {type: screenOrientation, angle: screenOrientationAngle};\n      }\n      this._emulationModel.emulateDevice(metrics);\n    } else {\n      this._emulationModel.emulateDevice(null);\n    }\n  }\n\n  exitHingeMode() {\n    const overlayModel = this._emulationModel ? this._emulationModel.overlayModel() : null;\n    if (overlayModel) {\n      overlayModel.showHingeForDualScreen(null);\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  webPlatformExperimentalFeaturesEnabled() {\n    return this._webPlatformExperimentalFeaturesEnabled;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  shouldReportDisplayFeature() {\n    return this._webPlatformExperimentalFeaturesEnabled && this._experimentDualScreenSupport;\n  }\n\n  /**\n   * @param {boolean} fullSize\n   * @param {!Protocol.Page.Viewport=} clip\n   * @return {!Promise<?string>}\n   */\n  async captureScreenshot(fullSize, clip) {\n    const screenCaptureModel =\n        this._emulationModel ? this._emulationModel.target().model(SDK.ScreenCaptureModel.ScreenCaptureModel) : null;\n    if (!screenCaptureModel) {\n      return null;\n    }\n\n    const overlayModel = this._emulationModel ? this._emulationModel.overlayModel() : null;\n    if (overlayModel) {\n      overlayModel.setShowViewportSizeOnResize(false);\n    }\n\n    // Define the right clipping area for fullsize screenshots.\n    if (fullSize) {\n      const metrics = await screenCaptureModel.fetchLayoutMetrics();\n      if (!metrics) {\n        return null;\n      }\n\n      // Cap the height to not hit the GPU limit.\n      const contentHeight = Math.min((1 << 14) / this._appliedDeviceScaleFactor, metrics.contentHeight);\n      clip = {\n        x: 0,\n        y: 0,\n        width: Math.floor(metrics.contentWidth / this._appliedDeviceScaleFactor),\n        height: Math.floor(contentHeight / this._appliedDeviceScaleFactor),\n        // `scale` is ignored in case of having `captureBeyondViewport`.\n        scale: 1\n      };\n    }\n    const screenshot =\n        await screenCaptureModel.captureScreenshot(Protocol.Page.CaptureScreenshotRequestFormat.Png, 100, clip);\n\n    /** @type {!Protocol.Page.SetDeviceMetricsOverrideRequest} */\n    const deviceMetrics = {\n      width: 0,\n      height: 0,\n      deviceScaleFactor: 0,\n      mobile: false,\n    };\n    if (fullSize && this._emulationModel) {\n      if (this._device && this._mode) {\n        const orientation = this._device.orientationByName(this._mode.orientation);\n        deviceMetrics.width = orientation.width;\n        deviceMetrics.height = orientation.height;\n        const dispFeature = this._getDisplayFeature();\n        if (dispFeature) {\n          // @ts-ignore: displayFeature isn't in protocol.d.ts but is an\n          // experimental flag:\n          // https://chromedevtools.github.io/devtools-protocol/tot/Emulation/#method-setDeviceMetricsOverride\n          deviceMetrics.displayFeature = dispFeature;\n        }\n      } else {\n        deviceMetrics.width = 0;\n        deviceMetrics.height = 0;\n      }\n      await this._emulationModel.emulateDevice(deviceMetrics);\n    }\n    this._calculateAndEmulate(false);\n    return screenshot;\n  }\n\n  /**\n   * @param {boolean} touchEnabled\n   * @param {boolean} mobile\n   */\n  _applyTouch(touchEnabled, mobile) {\n    this._touchEnabled = touchEnabled;\n    this._touchMobile = mobile;\n    for (const emulationModel of SDK.SDKModel.TargetManager.instance().models(SDK.EmulationModel.EmulationModel)) {\n      emulationModel.emulateTouch(touchEnabled, mobile);\n    }\n  }\n\n  /**\n   * @param {!SDK.OverlayModel.OverlayModel} overlayModel\n   */\n  _showHingeIfApplicable(overlayModel) {\n    const orientation = (this._device && this._mode) ? this._device.orientationByName(this._mode.orientation) : null;\n    if (this._experimentDualScreenSupport && orientation && orientation.hinge) {\n      overlayModel.showHingeForDualScreen(orientation.hinge);\n      return;\n    }\n\n    overlayModel.showHingeForDualScreen(null);\n  }\n\n  /**\n   * @return {!Protocol.Emulation.DisplayFeatureOrientation}\n   */\n  _getDisplayFeatureOrientation() {\n    if (!this._mode) {\n      throw new Error('Mode required to get display feature orientation.');\n    }\n    switch (this._mode.orientation) {\n      case VerticalSpanned:\n      case Vertical:\n        return Protocol.Emulation.DisplayFeatureOrientation.Vertical;\n      case HorizontalSpanned:\n      case Horizontal:\n      default:\n        return Protocol.Emulation.DisplayFeatureOrientation.Horizontal;\n    }\n  }\n\n  /**\n   * @return {?Protocol.Emulation.DisplayFeature}\n   */\n  _getDisplayFeature() {\n    if (!this.shouldReportDisplayFeature()) {\n      return null;\n    }\n\n    if (!this._device || !this._mode ||\n        (this._mode.orientation !== VerticalSpanned && this._mode.orientation !== HorizontalSpanned)) {\n      return null;\n    }\n\n    const orientation = this._device.orientationByName(this._mode.orientation);\n    if (!orientation || !orientation.hinge) {\n      return null;\n    }\n\n    const hinge = orientation.hinge;\n    return {\n      orientation: this._getDisplayFeatureOrientation(),\n      offset: (this._mode.orientation === VerticalSpanned) ? hinge.x : hinge.y,\n      maskLength: (this._mode.orientation === VerticalSpanned) ? hinge.width : hinge.height\n    };\n  }\n}\n\n/** @enum {string} */\nexport const Events = {\n  Updated: 'Updated'\n};\n\n/** @enum {string} */\nexport const Type = {\n  None: 'None',\n  Responsive: 'Responsive',\n  Device: 'Device'\n};\n\n/** @enum {string} */\nexport const UA = {\n  Mobile: Common.UIString.UIString('Mobile'),\n  MobileNoTouch: Common.UIString.UIString('Mobile (no touch)'),\n  Desktop: Common.UIString.UIString('Desktop'),\n  DesktopTouch: Common.UIString.UIString('Desktop (touch)')\n};\n\nexport const MinDeviceSize = 50;\nexport const MaxDeviceSize = 9999;\nexport const MinDeviceScaleFactor = 0;\nexport const MaxDeviceScaleFactor = 10;\nexport const MaxDeviceNameLength = 50;\n\nconst _mobileUserAgent =\n    'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Mobile Safari/537.36';\nexport const _defaultMobileUserAgent =\n    SDK.NetworkManager.MultitargetNetworkManager.patchUserAgentWithChromeVersion(_mobileUserAgent);\n\nexport const _defaultMobileUserAgentMetadata = {\n  brands: SDK.NetworkManager.MultitargetNetworkManager.getChromeBrands(),\n  fullVersion: SDK.NetworkManager.MultitargetNetworkManager.getChromeVersion(),\n  platform: 'Android',\n  platformVersion: '6.0',\n  architecture: '',\n  model: 'Nexus 5',\n  mobile: true\n};\nexport const defaultMobileScaleFactor = 2;\n"]}