{"version":3,"file":"DOMStorageItemsView.js","sourceRoot":"","sources":["../../../../../front_end/resources/DOMStorageItemsView.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2008 Nokia Inc.  All rights reserved.\n * Copyright (C) 2013 Samsung Electronics. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport * as DataGrid from '../data_grid/data_grid.js';\nimport {ls} from '../platform/platform.js';\nimport * as SourceFrame from '../source_frame/source_frame.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as UI from '../ui/ui.js';\n\nimport {DOMStorage} from './DOMStorageModel.js';\nimport {StorageItemsView} from './StorageItemsView.js';\n\nexport class DOMStorageItemsView extends StorageItemsView {\n  /**\n   * @param {!DOMStorage} domStorage\n   */\n  constructor(domStorage) {\n    super(Common.UIString.UIString('DOM Storage'), 'domStoragePanel');\n\n    this._domStorage = domStorage;\n\n    this.element.classList.add('storage-view', 'table');\n\n    const columns = /** @type {!Array<!DataGrid.DataGrid.ColumnDescriptor>} */ ([\n      {id: 'key', title: Common.UIString.UIString('Key'), sortable: false, editable: true, longText: true, weight: 50},\n      {\n        id: 'value',\n        title: Common.UIString.UIString('Value'),\n        sortable: false,\n        editable: true,\n        longText: true,\n        weight: 50\n      }\n    ]);\n    this._dataGrid = new DataGrid.DataGrid.DataGridImpl({\n      displayName: ls`DOM Storage Items`,\n      columns,\n      editCallback: this._editingCallback.bind(this),\n      deleteCallback: this._deleteCallback.bind(this),\n      refreshCallback: this.refreshItems.bind(this)\n    });\n    this._dataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, event => {\n      this._previewEntry(/** @type {!DataGrid.DataGrid.DataGridNode<?>} */ (event.data));\n    });\n    this._dataGrid.addEventListener(DataGrid.DataGrid.Events.DeselectedNode, event => {\n      this._previewEntry(null);\n    });\n    this._dataGrid.setStriped(true);\n    this._dataGrid.setName('DOMStorageItemsView');\n\n    this._splitWidget = new UI.SplitWidget.SplitWidget(\n        /* isVertical: */ false, /* secondIsSidebar: */ true, 'domStorageSplitViewState');\n    this._splitWidget.show(this.element);\n\n    this._previewPanel = new UI.Widget.VBox();\n    this._previewPanel.setMinimumSize(0, 50);\n    const resizer = this._previewPanel.element.createChild('div', 'preview-panel-resizer');\n    const dataGridWidget = this._dataGrid.asWidget();\n    dataGridWidget.setMinimumSize(0, 50);\n    this._splitWidget.setMainWidget(dataGridWidget);\n    this._splitWidget.setSidebarWidget(this._previewPanel);\n    this._splitWidget.installResizer(resizer);\n\n    /** @type {?UI.Widget.Widget} */\n    this._preview = null;\n    /** @type {?string} */\n    this._previewValue = null;\n\n    this._showPreview(null, null);\n\n    /** @type {!Array<!Common.EventTarget.EventDescriptor>} */\n    this._eventListeners = [];\n    this.setStorage(domStorage);\n  }\n\n  /**\n   * @param {!DOMStorage} domStorage\n   */\n  setStorage(domStorage) {\n    Common.EventTarget.EventTarget.removeEventListeners(this._eventListeners);\n    this._domStorage = domStorage;\n    this._eventListeners = [\n      this._domStorage.addEventListener(DOMStorage.Events.DOMStorageItemsCleared, this._domStorageItemsCleared, this),\n      this._domStorage.addEventListener(DOMStorage.Events.DOMStorageItemRemoved, this._domStorageItemRemoved, this),\n      this._domStorage.addEventListener(DOMStorage.Events.DOMStorageItemAdded, this._domStorageItemAdded, this),\n      this._domStorage.addEventListener(DOMStorage.Events.DOMStorageItemUpdated, this._domStorageItemUpdated, this),\n    ];\n    this.refreshItems();\n  }\n\n  _domStorageItemsCleared() {\n    if (!this.isShowing() || !this._dataGrid) {\n      return;\n    }\n\n    this._dataGrid.rootNode().removeChildren();\n    this._dataGrid.addCreationNode(false);\n    this.setCanDeleteSelected(false);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _domStorageItemRemoved(event) {\n    if (!this.isShowing() || !this._dataGrid) {\n      return;\n    }\n\n    const storageData = event.data;\n    const rootNode = this._dataGrid.rootNode();\n    const children = rootNode.children;\n\n    for (let i = 0; i < children.length; ++i) {\n      const childNode = children[i];\n      if (childNode.data.key === storageData.key) {\n        rootNode.removeChild(childNode);\n        this.setCanDeleteSelected(children.length > 1);\n        return;\n      }\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _domStorageItemAdded(event) {\n    if (!this.isShowing() || !this._dataGrid) {\n      return;\n    }\n\n    const storageData = event.data;\n    const rootNode = this._dataGrid.rootNode();\n    const children = rootNode.children;\n\n    for (let i = 0; i < children.length; ++i) {\n      if (children[i].data.key === storageData.key) {\n        return;\n      }\n    }\n\n    const childNode = new DataGrid.DataGrid.DataGridNode({key: storageData.key, value: storageData.value}, false);\n    rootNode.insertChild(childNode, children.length - 1);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _domStorageItemUpdated(event) {\n    if (!this.isShowing() || !this._dataGrid) {\n      return;\n    }\n\n    const storageData = event.data;\n    const childNode = this._dataGrid.rootNode().children.find(\n        /** @param {!DataGrid.DataGrid.DataGridNode<?>} child */ child => child.data.key === storageData.key);\n    if (!childNode || childNode.data.value === storageData.value) {\n      return;\n    }\n\n    childNode.data.value = storageData.value;\n    childNode.refresh();\n    if (!childNode.selected) {\n      return;\n    }\n    this._previewEntry(childNode);\n    this.setCanDeleteSelected(true);\n  }\n\n  /**\n   * @param {!Array<!Array<string>>} items\n   */\n  _showDOMStorageItems(items) {\n    const rootNode = this._dataGrid.rootNode();\n    let selectedKey = null;\n    for (const node of rootNode.children) {\n      if (!node.selected) {\n        continue;\n      }\n      selectedKey = node.data.key;\n      break;\n    }\n    rootNode.removeChildren();\n    let selectedNode = null;\n    const filteredItems = /** @param {!Array<string>} item */ item => `${item[0]} ${item[1]}`;\n    for (const item of this.filter(items, filteredItems)) {\n      const key = item[0];\n      const value = item[1];\n      const node = new DataGrid.DataGrid.DataGridNode({key: key, value: value}, false);\n      node.selectable = true;\n      rootNode.appendChild(node);\n      if (!selectedNode || key === selectedKey) {\n        selectedNode = node;\n      }\n    }\n    if (selectedNode) {\n      selectedNode.selected = true;\n    }\n    this._dataGrid.addCreationNode(false);\n    this.setCanDeleteSelected(Boolean(selectedNode));\n  }\n\n  /**\n   * @override\n   */\n  deleteSelectedItem() {\n    if (!this._dataGrid || !this._dataGrid.selectedNode) {\n      return;\n    }\n\n    this._deleteCallback(this._dataGrid.selectedNode);\n  }\n\n  /**\n   * @override\n   */\n  refreshItems() {\n    this._domStorage.getItems().then(items => items && this._showDOMStorageItems(items));\n  }\n\n  /**\n   * @override\n   */\n  deleteAllItems() {\n    this._domStorage.clear();\n    // explicitly clear the view because the event won't be fired when it has no items\n    this._domStorageItemsCleared();\n  }\n\n  /**\n   * @param {!DataGrid.DataGrid.DataGridNode<?>} editingNode\n   * @param {string} columnIdentifier\n   * @param {string} oldText\n   * @param {string} newText\n   */\n  _editingCallback(editingNode, columnIdentifier, oldText, newText) {\n    const domStorage = this._domStorage;\n    if (columnIdentifier === 'key') {\n      if (typeof oldText === 'string') {\n        domStorage.removeItem(oldText);\n      }\n      domStorage.setItem(newText, editingNode.data.value || '');\n      this._removeDupes(editingNode);\n    } else {\n      domStorage.setItem(editingNode.data.key || '', newText);\n    }\n  }\n\n  /**\n   * @param {!DataGrid.DataGrid.DataGridNode<?>} masterNode\n   */\n  _removeDupes(masterNode) {\n    const rootNode = this._dataGrid.rootNode();\n    const children = rootNode.children;\n    for (let i = children.length - 1; i >= 0; --i) {\n      const childNode = children[i];\n      if ((childNode.data.key === masterNode.data.key) && (masterNode !== childNode)) {\n        rootNode.removeChild(childNode);\n      }\n    }\n  }\n\n  /**\n   * @param {!DataGrid.DataGrid.DataGridNode<?>} node\n   */\n  _deleteCallback(node) {\n    if (!node || node.isCreationNode) {\n      return;\n    }\n\n    if (this._domStorage) {\n      this._domStorage.removeItem(node.data.key);\n    }\n  }\n\n  /**\n   * @param {?UI.Widget.Widget} preview\n   * @param {?string} value\n   */\n  _showPreview(preview, value) {\n    if (this._preview && this._previewValue === value) {\n      return;\n    }\n    if (this._preview) {\n      this._preview.detach();\n    }\n    if (!preview) {\n      preview = new UI.EmptyWidget.EmptyWidget(Common.UIString.UIString('Select a value to preview'));\n    }\n    this._previewValue = value;\n    this._preview = preview;\n    preview.show(this._previewPanel.contentElement);\n  }\n\n  /**\n   * @param {?DataGrid.DataGrid.DataGridNode<?>} entry\n   */\n  async _previewEntry(entry) {\n    const value = entry && entry.data && entry.data.value;\n    if (entry && entry.data && entry.data.value) {\n      const protocol = this._domStorage.isLocalStorage ? 'localstorage' : 'sessionstorage';\n      const url = `${protocol}://${entry.key}`;\n      const provider = TextUtils.StaticContentProvider.StaticContentProvider.fromString(\n          url, Common.ResourceType.resourceTypes.XHR, /** @type {string} */ (value));\n      const preview = await SourceFrame.PreviewFactory.PreviewFactory.createPreview(provider, 'text/plain');\n      // Selection could've changed while the preview was loaded\n      if (entry.selected) {\n        this._showPreview(preview, value);\n      }\n    } else {\n      this._showPreview(null, value);\n    }\n  }\n}\n"]}