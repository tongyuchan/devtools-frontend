{"version":3,"file":"TrustTokensView.js","sourceRoot":"","sources":["../../../../../front_end/resources/TrustTokensView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport {ls} from '../platform/platform.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as LitHtml from '../third_party/lit-html/lit-html.js';\nimport * as Components from '../ui/components/components.js';\nimport * as UI from '../ui/ui.js';\n\nimport type {ResourcesPanel} from './ResourcesPanel.js';\n\nimport {ApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\n\nexport class TrustTokensTreeElement extends ApplicationPanelTreeElement {\n  private view?: TrustTokensViewWidgetWrapper;\n\n  constructor(storagePanel: ResourcesPanel) {\n    super(storagePanel, Common.UIString.UIString('Trust Tokens'), false);\n    const icon = UI.Icon.Icon.create('mediumicon-database', 'resource-tree-item');\n    this.setLeadingIcons([icon]);\n  }\n\n  get itemURL(): string {\n    return 'trustTokens://';\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new TrustTokensViewWidgetWrapper();\n    }\n    this.showView(this.view);\n    return false;\n  }\n}\n\nclass TrustTokensViewWidgetWrapper extends UI.Widget.VBox {\n  private readonly trustTokensView = new TrustTokensView();\n\n  constructor() {\n    super();\n    this.contentElement.appendChild(this.trustTokensView);\n  }\n\n  async wasShown(): Promise<void> {\n    const mainTarget = SDK.SDKModel.TargetManager.instance().mainTarget();\n    if (!mainTarget) {\n      return;\n    }\n\n    const {tokens} = await mainTarget.storageAgent().invoke_getTrustTokens();\n    this.trustTokensView.data = {tokens};\n  }\n}\n\nexport interface TrustTokensViewData {\n  tokens: Protocol.Storage.TrustTokens[];\n}\n\nexport class TrustTokensView extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private tokens: Protocol.Storage.TrustTokens[] = [];\n\n  connectedCallback(): void {\n    this.render();\n  }\n\n  set data(data: TrustTokensViewData) {\n    this.tokens = data.tokens;\n    this.render();\n  }\n\n  private render(): void {\n    const gridData: Components.DataGrid.DataGridData = {\n      columns: [\n        {id: 'issuer', title: ls`Issuer`, widthWeighting: 2, hideable: false, visible: true},\n        {id: 'count', title: ls`Stored token count`, widthWeighting: 1, hideable: false, visible: true},\n      ],\n      rows: this.buildRowsFromTokens(),\n      activeSort: null,\n    };\n\n    LitHtml.render(\n        LitHtml.html`\n      <style>\n        :host {\n          padding: 20px;\n        }\n\n        .heading {\n          font-size: 15px;\n        }\n\n        devtools-data-grid {\n          border: 1px solid var(--color-details-hairline);\n          margin-top: 20px;\n        }\n\n        .info-icon {\n          vertical-align: text-bottom;\n          height: 14px;\n        }\n      </style>\n      <div>\n        <span class=\"heading\">Trust Tokens</span>\n        <devtools-icon class=\"info-icon\" title=${ls`All stored Trust Tokens available in this browser instance.`}\n          .data=${\n            {iconName: 'ic_info_black_18dp', color: 'var(--color-link)', width: '14px'} as\n            Components.Icon.IconWithName}>\n        </devtools-icon>\n        <devtools-data-grid .data=${gridData as Components.DataGrid.DataGridData}></devtools-data-grid>\n      </div>\n    `,\n        this.shadow);\n  }\n\n  private buildRowsFromTokens(): Components.DataGridUtils.Row[] {\n    const tokens = this.tokens.filter(token => token.count > 0);\n    return tokens.map(token => ({\n                        cells: [\n                          {columnId: 'issuer', value: token.issuerOrigin},\n                          {columnId: 'count', value: token.count},\n                        ],\n                      }));\n  }\n}\n\ncustomElements.define('devtools-trust-tokens-storage-view', TrustTokensView);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-trust-tokens-storage-view': TrustTokensView;\n  }\n}\n"]}