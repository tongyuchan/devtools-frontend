{"version":3,"file":"DOMStorageModel.js","sourceRoot":"","sources":["../../../../../front_end/resources/DOMStorageModel.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2008 Nokia Inc.  All rights reserved.\n * Copyright (C) 2013 Samsung Electronics. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport * as SDK from '../sdk/sdk.js';\n\nexport class DOMStorage extends Common.ObjectWrapper.ObjectWrapper {\n  /**\n   * @param {!DOMStorageModel} model\n   * @param {string} securityOrigin\n   * @param {boolean} isLocalStorage\n   */\n  constructor(model, securityOrigin, isLocalStorage) {\n    super();\n    this._model = model;\n    this._securityOrigin = securityOrigin;\n    this._isLocalStorage = isLocalStorage;\n  }\n\n  /**\n   * @param {string} securityOrigin\n   * @param {boolean} isLocalStorage\n   * @return {!Protocol.DOMStorage.StorageId}\n   */\n  static storageId(securityOrigin, isLocalStorage) {\n    return {securityOrigin: securityOrigin, isLocalStorage: isLocalStorage};\n  }\n\n  /** @return {!Protocol.DOMStorage.StorageId} */\n  get id() {\n    return DOMStorage.storageId(this._securityOrigin, this._isLocalStorage);\n  }\n\n  /** @return {string} */\n  get securityOrigin() {\n    return this._securityOrigin;\n  }\n\n  /** @return {boolean} */\n  get isLocalStorage() {\n    return this._isLocalStorage;\n  }\n\n  /**\n   * @return {!Promise<?Array<!Protocol.DOMStorage.Item>>}\n   */\n  getItems() {\n    return this._model._agent.invoke_getDOMStorageItems({storageId: this.id}).then(({entries}) => entries);\n  }\n\n  /**\n   * @param {string} key\n   * @param {string} value\n   */\n  setItem(key, value) {\n    this._model._agent.invoke_setDOMStorageItem({storageId: this.id, key, value});\n  }\n\n  /**\n   * @param {string} key\n   */\n  removeItem(key) {\n    this._model._agent.invoke_removeDOMStorageItem({storageId: this.id, key});\n  }\n\n  clear() {\n    this._model._agent.invoke_clear({storageId: this.id});\n  }\n}\n\n\n/** @enum {symbol} */\nDOMStorage.Events = {\n  DOMStorageItemsCleared: Symbol('DOMStorageItemsCleared'),\n  DOMStorageItemRemoved: Symbol('DOMStorageItemRemoved'),\n  DOMStorageItemAdded: Symbol('DOMStorageItemAdded'),\n  DOMStorageItemUpdated: Symbol('DOMStorageItemUpdated')\n};\n\nexport class DOMStorageModel extends SDK.SDKModel.SDKModel {\n  /**\n   * @param {!SDK.SDKModel.Target} target\n   */\n  constructor(target) {\n    super(target);\n\n    this._securityOriginManager = target.model(SDK.SecurityOriginManager.SecurityOriginManager);\n    /** @type {!Object.<string, !DOMStorage>} */\n    this._storages = {};\n    this._agent = target.domstorageAgent();\n  }\n\n  enable() {\n    if (this._enabled) {\n      return;\n    }\n\n    this.target().registerDOMStorageDispatcher(new DOMStorageDispatcher(this));\n    if (this._securityOriginManager) {\n      this._securityOriginManager.addEventListener(\n          SDK.SecurityOriginManager.Events.SecurityOriginAdded, this._securityOriginAdded, this);\n      this._securityOriginManager.addEventListener(\n          SDK.SecurityOriginManager.Events.SecurityOriginRemoved, this._securityOriginRemoved, this);\n\n      for (const securityOrigin of this._securityOriginManager.securityOrigins()) {\n        this._addOrigin(securityOrigin);\n      }\n    }\n    this._agent.invoke_enable();\n\n    this._enabled = true;\n  }\n\n  /**\n   * @param {string} origin\n   */\n  clearForOrigin(origin) {\n    if (!this._enabled) {\n      return;\n    }\n    for (const isLocal of [true, false]) {\n      const key = this._storageKey(origin, isLocal);\n      const storage = this._storages[key];\n      if (!storage) {\n        return;\n      }\n      storage.clear();\n    }\n    this._removeOrigin(origin);\n    this._addOrigin(origin);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _securityOriginAdded(event) {\n    this._addOrigin(/** @type {string} */ (event.data));\n  }\n\n  /**\n   * @param {string} securityOrigin\n   */\n  _addOrigin(securityOrigin) {\n    const parsed = new Common.ParsedURL.ParsedURL(securityOrigin);\n    // These are \"opaque\" origins which are not supposed to support DOM storage.\n    if (!parsed.isValid || parsed.scheme === 'data' || parsed.scheme === 'about' || parsed.scheme === 'javascript') {\n      return;\n    }\n\n    for (const isLocal of [true, false]) {\n      const key = this._storageKey(securityOrigin, isLocal);\n      console.assert(!this._storages[key]);\n      const storage = new DOMStorage(this, securityOrigin, isLocal);\n      this._storages[key] = storage;\n      this.dispatchEventToListeners(Events.DOMStorageAdded, storage);\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _securityOriginRemoved(event) {\n    this._removeOrigin(/** @type {string} */ (event.data));\n  }\n\n  /**\n   * @param {string} securityOrigin\n   */\n  _removeOrigin(securityOrigin) {\n    for (const isLocal of [true, false]) {\n      const key = this._storageKey(securityOrigin, isLocal);\n      const storage = this._storages[key];\n      if (!storage) {\n        continue;\n      }\n      delete this._storages[key];\n      this.dispatchEventToListeners(Events.DOMStorageRemoved, storage);\n    }\n  }\n\n  /**\n   * @param {string} securityOrigin\n   * @param {boolean} isLocalStorage\n   * @return {string}\n   */\n  _storageKey(securityOrigin, isLocalStorage) {\n    return JSON.stringify(DOMStorage.storageId(securityOrigin, isLocalStorage));\n  }\n\n  /**\n   * @param {!Protocol.DOMStorage.StorageId} storageId\n   */\n  _domStorageItemsCleared(storageId) {\n    const domStorage = this.storageForId(storageId);\n    if (!domStorage) {\n      return;\n    }\n\n    const eventData = {};\n    domStorage.dispatchEventToListeners(DOMStorage.Events.DOMStorageItemsCleared, eventData);\n  }\n\n  /**\n   * @param {!Protocol.DOMStorage.StorageId} storageId\n   * @param {string} key\n   */\n  _domStorageItemRemoved(storageId, key) {\n    const domStorage = this.storageForId(storageId);\n    if (!domStorage) {\n      return;\n    }\n\n    const eventData = {key: key};\n    domStorage.dispatchEventToListeners(DOMStorage.Events.DOMStorageItemRemoved, eventData);\n  }\n\n  /**\n   * @param {!Protocol.DOMStorage.StorageId} storageId\n   * @param {string} key\n   * @param {string} value\n   */\n  _domStorageItemAdded(storageId, key, value) {\n    const domStorage = this.storageForId(storageId);\n    if (!domStorage) {\n      return;\n    }\n\n    const eventData = {key: key, value: value};\n    domStorage.dispatchEventToListeners(DOMStorage.Events.DOMStorageItemAdded, eventData);\n  }\n\n  /**\n   * @param {!Protocol.DOMStorage.StorageId} storageId\n   * @param {string} key\n   * @param {string} oldValue\n   * @param {string} value\n   */\n  _domStorageItemUpdated(storageId, key, oldValue, value) {\n    const domStorage = this.storageForId(storageId);\n    if (!domStorage) {\n      return;\n    }\n\n    const eventData = {key: key, oldValue: oldValue, value: value};\n    domStorage.dispatchEventToListeners(DOMStorage.Events.DOMStorageItemUpdated, eventData);\n  }\n\n  /**\n   * @param {!Protocol.DOMStorage.StorageId} storageId\n   * @return {!DOMStorage}\n   */\n  storageForId(storageId) {\n    return this._storages[JSON.stringify(storageId)];\n  }\n\n  /**\n   * @return {!Array.<!DOMStorage>}\n   */\n  storages() {\n    const result = [];\n    for (const id in this._storages) {\n      result.push(this._storages[id]);\n    }\n    return result;\n  }\n}\n\nSDK.SDKModel.SDKModel.register(DOMStorageModel, SDK.SDKModel.Capability.DOM, false);\n\n/** @enum {symbol} */\nexport const Events = {\n  DOMStorageAdded: Symbol('DOMStorageAdded'),\n  DOMStorageRemoved: Symbol('DOMStorageRemoved')\n};\n\n/**\n * @implements {ProtocolProxyApi.DOMStorageDispatcher}\n */\nexport class DOMStorageDispatcher {\n  /**\n   * @param {!DOMStorageModel} model\n   */\n  constructor(model) {\n    this._model = model;\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.DOMStorage.DomStorageItemsClearedEvent} event\n   */\n  domStorageItemsCleared({storageId}) {\n    this._model._domStorageItemsCleared(storageId);\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.DOMStorage.DomStorageItemRemovedEvent} event\n   */\n  domStorageItemRemoved({storageId, key}) {\n    this._model._domStorageItemRemoved(storageId, key);\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.DOMStorage.DomStorageItemAddedEvent} event\n   */\n  domStorageItemAdded({storageId, key, newValue}) {\n    this._model._domStorageItemAdded(storageId, key, newValue);\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.DOMStorage.DomStorageItemUpdatedEvent} storageId\n   */\n  domStorageItemUpdated({storageId, key, oldValue, newValue}) {\n    this._model._domStorageItemUpdated(storageId, key, oldValue, newValue);\n  }\n}\n"]}