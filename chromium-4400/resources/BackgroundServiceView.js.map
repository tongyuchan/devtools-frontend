{"version":3,"file":"BackgroundServiceView.js","sourceRoot":"","sources":["../../../../../front_end/resources/BackgroundServiceView.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Bindings from '../bindings/bindings.js';\nimport * as Common from '../common/common.js';  // eslint-disable-line no-unused-vars\nimport * as DataGrid from '../data_grid/data_grid.js';\nimport * as Platform from '../platform/platform.js';\nimport {ls} from '../platform/platform.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';\n\nimport {BackgroundServiceModel, Events} from './BackgroundServiceModel.js';  // eslint-disable-line no-unused-vars\n\nexport class BackgroundServiceView extends UI.Widget.VBox {\n  /**\n   * @param {string} serviceName The name of the background service.\n   * @return {string} The UI String to display.\n   */\n  static getUIString(serviceName) {\n    switch (serviceName) {\n      case Protocol.BackgroundService.ServiceName.BackgroundFetch:\n        return ls`Background Fetch`;\n      case Protocol.BackgroundService.ServiceName.BackgroundSync:\n        return ls`Background Sync`;\n      case Protocol.BackgroundService.ServiceName.PushMessaging:\n        return ls`Push Messaging`;\n      case Protocol.BackgroundService.ServiceName.Notifications:\n        return ls`Notifications`;\n      case Protocol.BackgroundService.ServiceName.PaymentHandler:\n        return ls`Payment Handler`;\n      case Protocol.BackgroundService.ServiceName.PeriodicBackgroundSync:\n        return ls`Periodic Background Sync`;\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * @param {!Protocol.BackgroundService.ServiceName} serviceName\n   * @param {!BackgroundServiceModel} model\n   */\n  constructor(serviceName, model) {\n    super(true);\n    this.registerRequiredCSS('resources/backgroundServiceView.css', {enableLegacyPatching: true});\n    this.registerRequiredCSS('ui/emptyWidget.css', {enableLegacyPatching: false});\n\n    /** @const {!Protocol.BackgroundService.ServiceName} */\n    this._serviceName = serviceName;\n\n    /** @const {!BackgroundServiceModel} */\n    this._model = model;\n    this._model.addEventListener(Events.RecordingStateChanged, this._onRecordingStateChanged, this);\n    this._model.addEventListener(Events.BackgroundServiceEventReceived, this._onEventReceived, this);\n    this._model.enable(this._serviceName);\n\n    /** @const {?SDK.ServiceWorkerManager.ServiceWorkerManager} */\n    this._serviceWorkerManager = this._model.target().model(SDK.ServiceWorkerManager.ServiceWorkerManager);\n\n    /** @const {?SDK.SecurityOriginManager.SecurityOriginManager} */\n    this._securityOriginManager = this._model.target().model(SDK.SecurityOriginManager.SecurityOriginManager);\n    if (!this._securityOriginManager) {\n      throw new Error('SecurityOriginManager instance is missing');\n    }\n    this._securityOriginManager.addEventListener(\n        SDK.SecurityOriginManager.Events.MainSecurityOriginChanged, () => this._onOriginChanged());\n\n\n    /** @type {!UI.ActionRegistration.Action} */\n    this._recordAction =\n        /** @type {!UI.ActionRegistration.Action} */ (\n            UI.ActionRegistry.ActionRegistry.instance().action('background-service.toggle-recording'));\n\n    /**\n     * Initialised in the _setupToolbar() call below.\n     * @type {!UI.Toolbar.ToolbarToggle}\n     */\n    this._recordButton;\n\n    /**\n     * Initialised in the _setupToolbar() call below.\n     * @type {!UI.Toolbar.ToolbarCheckbox}\n     */\n    this._originCheckbox;\n\n    /**\n     * Initialised in the _setupToolbar() call below.\n     * @type {!UI.Toolbar.ToolbarButton}\n     */\n    this._saveButton;\n\n    /** @const {!UI.Toolbar.Toolbar} */\n    this._toolbar = new UI.Toolbar.Toolbar('background-service-toolbar', this.contentElement);\n    this._setupToolbar();\n\n    /**\n     * This will contain the DataGrid for displaying events, and a panel at the bottom for showing\n     * extra metadata related to the selected event.\n     * @const {!UI.SplitWidget.SplitWidget}\n     */\n    this._splitWidget = new UI.SplitWidget.SplitWidget(/* isVertical= */ false, /* secondIsSidebar= */ true);\n    this._splitWidget.show(this.contentElement);\n\n    /** @const {!DataGrid.DataGrid.DataGridImpl} */\n    this._dataGrid = this._createDataGrid();\n\n    /** @const {!UI.Widget.VBox} */\n    this._previewPanel = new UI.Widget.VBox();\n\n    /** @type {?EventDataNode} */\n    this._selectedEventNode = null;\n\n    /** @type {?UI.Widget.Widget} */\n    this._preview = null;\n\n    this._splitWidget.setMainWidget(this._dataGrid.asWidget());\n    this._splitWidget.setSidebarWidget(this._previewPanel);\n\n    this._showPreview(null);\n  }\n\n  /**\n   * Creates the toolbar UI element.\n   */\n  async _setupToolbar() {\n    this._recordButton =\n        /** @type {!UI.Toolbar.ToolbarToggle} */ (UI.Toolbar.Toolbar.createActionButton(this._recordAction));\n    this._toolbar.appendToolbarItem(this._recordButton);\n\n    const clearButton = new UI.Toolbar.ToolbarButton(ls`Clear`, 'largeicon-clear');\n    clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => this._clearEvents());\n    this._toolbar.appendToolbarItem(clearButton);\n\n    this._toolbar.appendSeparator();\n\n    this._saveButton = new UI.Toolbar.ToolbarButton(ls`Save events`, 'largeicon-download');\n    this._saveButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, event => {\n      this._saveToFile();\n    });\n    this._saveButton.setEnabled(false);\n    this._toolbar.appendToolbarItem(this._saveButton);\n\n    this._toolbar.appendSeparator();\n\n    this._originCheckbox = new UI.Toolbar.ToolbarCheckbox(\n        ls`Show events from other domains`, ls`Show events from other domains`, () => this._refreshView());\n    this._toolbar.appendToolbarItem(this._originCheckbox);\n  }\n\n  /**\n   * Displays all available events in the grid.\n   */\n  _refreshView() {\n    this._clearView();\n    const events = this._model.getEvents(this._serviceName).filter(event => this._acceptEvent(event));\n    for (const event of events) {\n      this._addEvent(event);\n    }\n  }\n\n  /**\n   * Clears the grid and panel.\n   */\n  _clearView() {\n    this._selectedEventNode = null;\n    this._dataGrid.rootNode().removeChildren();\n    this._saveButton.setEnabled(false);\n    this._showPreview(null);\n  }\n\n  /**\n   * Called when the `Toggle Record` button is clicked.\n   */\n  _toggleRecording() {\n    this._model.setRecording(!this._recordButton.toggled(), this._serviceName);\n  }\n\n  /**\n   * Called when the `Clear` button is clicked.\n   */\n  _clearEvents() {\n    this._model.clearEvents(this._serviceName);\n    this._clearView();\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onRecordingStateChanged(event) {\n    const state = /** @type {!RecordingState} */ (event.data);\n    if (state.serviceName !== this._serviceName) {\n      return;\n    }\n\n    if (state.isRecording === this._recordButton.toggled()) {\n      return;\n    }\n\n    this._recordButton.setToggled(state.isRecording);\n    this._updateRecordButtonTooltip();\n    this._showPreview(this._selectedEventNode);\n  }\n\n  _updateRecordButtonTooltip() {\n    const buttonTooltip = this._recordButton.toggled() ? ls`Stop recording events` : ls`Start recording events`;\n    this._recordButton.setTitle(buttonTooltip, 'background-service.toggle-recording');\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onEventReceived(event) {\n    const serviceEvent = /** @type {!Protocol.BackgroundService.BackgroundServiceEvent} */ (event.data);\n    if (!this._acceptEvent(serviceEvent)) {\n      return;\n    }\n    this._addEvent(serviceEvent);\n  }\n\n  _onOriginChanged() {\n    // No need to refresh the view if we are already showing all events.\n    if (this._originCheckbox.checked()) {\n      return;\n    }\n    this._refreshView();\n  }\n\n  /**\n   * @param {!Protocol.BackgroundService.BackgroundServiceEvent} serviceEvent\n   */\n  _addEvent(serviceEvent) {\n    const data = this._createEventData(serviceEvent);\n    const dataNode = new EventDataNode(data, serviceEvent.eventMetadata);\n    this._dataGrid.rootNode().appendChild(dataNode);\n\n    if (this._dataGrid.rootNode().children.length === 1) {\n      this._saveButton.setEnabled(true);\n      this._showPreview(this._selectedEventNode);\n    }\n  }\n\n  /**\n   * @return {!DataGrid.DataGrid.DataGridImpl<!Object<string, string|number>>}\n   */\n  _createDataGrid() {\n    const columns = /** @type {!Array<!DataGrid.DataGrid.ColumnDescriptor>} */ ([\n      {id: 'id', title: ls`#`, weight: 1},\n      {id: 'timestamp', title: ls`Timestamp`, weight: 8},\n      {id: 'eventName', title: ls`Event`, weight: 10},\n      {id: 'origin', title: ls`Origin`, weight: 10},\n      {id: 'swScope', title: ls`SW Scope`, weight: 2},\n      {id: 'instanceId', title: ls`Instance ID`, weight: 10},\n    ]);\n    const dataGrid = new DataGrid.DataGrid.DataGridImpl({\n      displayName: ls`Background Services`,\n      columns,\n      editCallback: undefined,\n      refreshCallback: undefined,\n      deleteCallback: undefined\n    });\n    dataGrid.setStriped(true);\n\n    dataGrid.addEventListener(\n        DataGrid.DataGrid.Events.SelectedNode, event => this._showPreview(/** @type {!EventDataNode} */ (event.data)));\n\n    return dataGrid;\n  }\n\n  /**\n   * Creates the data object to pass to the DataGrid Node.\n   * @param {!Protocol.BackgroundService.BackgroundServiceEvent} serviceEvent\n   * @return {!EventData}\n   */\n  _createEventData(serviceEvent) {\n    let swScope = '';\n\n    // Try to get the scope of the Service Worker registration to be more user-friendly.\n    const registration = this._serviceWorkerManager ?\n        this._serviceWorkerManager.registrations().get(serviceEvent.serviceWorkerRegistrationId) :\n        undefined;\n    if (registration) {\n      swScope = registration.scopeURL.substr(registration.securityOrigin.length);\n    }\n\n    return {\n      id: this._dataGrid.rootNode().children.length + 1,\n      timestamp: UI.UIUtils.formatTimestamp(serviceEvent.timestamp * 1000, /* full= */ true),\n      origin: serviceEvent.origin,\n      swScope,\n      eventName: serviceEvent.eventName,\n      instanceId: serviceEvent.instanceId,\n    };\n  }\n\n  /**\n   * Filtration function to know whether event should be shown or not.\n   * @param {!Protocol.BackgroundService.BackgroundServiceEvent} event\n   * @return {boolean}\n   */\n  _acceptEvent(event) {\n    if (event.service !== this._serviceName) {\n      return false;\n    }\n\n    if (this._originCheckbox.checked()) {\n      return true;\n    }\n\n    // Trim the trailing '/'.\n    const origin = event.origin.substr(0, event.origin.length - 1);\n\n    return this._securityOriginManager.securityOrigins().includes(origin);\n  }\n\n  /**\n   * @return {!Element}\n   */\n  _createLearnMoreLink() {\n    let url =\n        'https://developers.google.com/web/tools/chrome-devtools/javascript/background-services?utm_source=devtools';\n\n    switch (this._serviceName) {\n      case Protocol.BackgroundService.ServiceName.BackgroundFetch:\n        url += '#fetch';\n        break;\n      case Protocol.BackgroundService.ServiceName.BackgroundSync:\n        url += '#sync';\n        break;\n      case Protocol.BackgroundService.ServiceName.PushMessaging:\n        url += '#push';\n        break;\n      case Protocol.BackgroundService.ServiceName.Notifications:\n        url += '#notifications';\n        break;\n      default:\n        break;\n    }\n\n    return UI.XLink.XLink.create(url, ls`Learn more`);\n  }\n\n  /**\n   * @param {?EventDataNode} dataNode\n   */\n  _showPreview(dataNode) {\n    if (this._selectedEventNode && this._selectedEventNode === dataNode) {\n      return;\n    }\n\n    this._selectedEventNode = dataNode;\n\n    if (this._preview) {\n      this._preview.detach();\n    }\n\n    if (this._selectedEventNode) {\n      this._preview = this._selectedEventNode.createPreview();\n      this._preview.show(this._previewPanel.contentElement);\n      return;\n    }\n\n    this._preview = new UI.Widget.VBox();\n    this._preview.contentElement.classList.add('background-service-preview', 'fill');\n    const centered = this._preview.contentElement.createChild('div');\n\n    if (this._dataGrid.rootNode().children.length) {\n      // Inform users that grid entries are clickable.\n      centered.createChild('p').textContent = ls`Select an entry to view metadata`;\n    } else if (this._recordButton.toggled()) {\n      // Inform users that we are recording/waiting for events.\n      const featureName = BackgroundServiceView.getUIString(this._serviceName);\n      centered.createChild('p').textContent = ls`Recording ${featureName} activity...`;\n      centered.createChild('p').textContent =\n          ls`DevTools will record all ${featureName} activity for up to 3 days, even when closed.`;\n    } else {\n      const landingRecordButton = UI.Toolbar.Toolbar.createActionButton(this._recordAction);\n\n      const recordKey = document.createElement('b');\n      recordKey.classList.add('background-service-shortcut');\n      recordKey.textContent = UI.ShortcutRegistry.ShortcutRegistry.instance()\n                                  .shortcutsForAction('background-service.toggle-recording')[0]\n                                  .title();\n\n      const inlineButton = UI.UIUtils.createInlineButton(landingRecordButton);\n      inlineButton.classList.add('background-service-record-inline-button');\n      centered.createChild('p').appendChild(UI.UIUtils.formatLocalized(\n          'Click the record button %s or hit %s to start recording.', [inlineButton, recordKey]));\n\n      centered.appendChild(this._createLearnMoreLink());\n    }\n\n    this._preview.show(this._previewPanel.contentElement);\n  }\n\n  /**\n   * Saves all currently displayed events in a file (JSON format).\n   */\n  async _saveToFile() {\n    const fileName = `${this._serviceName}-${Platform.DateUtilities.toISO8601Compact(new Date())}.json`;\n    const stream = new Bindings.FileUtils.FileOutputStream();\n\n    const accepted = await stream.open(fileName);\n    if (!accepted) {\n      return;\n    }\n\n    const events = this._model.getEvents(this._serviceName).filter(event => this._acceptEvent(event));\n    await stream.write(JSON.stringify(events, undefined, 2));\n    stream.close();\n  }\n}\n\n/**\n * @extends {DataGrid.DataGrid.DataGridNode<!Object<string, string|number>>}\n */\nexport class EventDataNode extends DataGrid.DataGrid.DataGridNode {\n  /**\n   * @param {!Object<string, string|number>} data\n   * @param {!Array<!Protocol.BackgroundService.EventMetadata>} eventMetadata\n   */\n  constructor(data, eventMetadata) {\n    super(data);\n\n    /** @const {!Array<!Protocol.BackgroundService.EventMetadata>} */\n    this._eventMetadata = eventMetadata.sort((m1, m2) => Platform.StringUtilities.compare(m1.key, m2.key));\n  }\n\n  /**\n   * @return {!UI.Widget.VBox}\n   */\n  createPreview() {\n    const preview = new UI.Widget.VBox();\n    preview.element.classList.add('background-service-metadata');\n\n    for (const entry of this._eventMetadata) {\n      const div = document.createElement('div');\n      div.classList.add('background-service-metadata-entry');\n      div.createChild('div', 'background-service-metadata-name').textContent = entry.key + ': ';\n      if (entry.value) {\n        div.createChild('div', 'background-service-metadata-value source-code').textContent = entry.value;\n      } else {\n        div.createChild('div', 'background-service-metadata-value background-service-empty-value').textContent =\n            ls`empty`;\n      }\n      preview.element.appendChild(div);\n    }\n\n    if (!preview.element.children.length) {\n      const div = document.createElement('div');\n      div.classList.add('background-service-metadata-entry');\n      div.createChild('div', 'background-service-metadata-name').textContent = ls`No metadata for this event`;\n      preview.element.appendChild(div);\n    }\n\n    return preview;\n  }\n}\n\n/**\n * @implements {UI.ActionRegistration.ActionDelegate}\n */\nexport class ActionDelegate {\n  /**\n   * @override\n   * @param {!UI.Context.Context} context\n   * @param {string} actionId\n   * @return {boolean}\n   */\n  handleAction(context, actionId) {\n    const view = context.flavor(BackgroundServiceView);\n    switch (actionId) {\n      case 'background-service.toggle-recording': {\n        if (!view) {\n          throw new Error('BackgroundServiceView instance is missing');\n        }\n        view._toggleRecording();\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * @typedef {!{isRecording: boolean, serviceName: !Protocol.BackgroundService.ServiceName}}\n */\n// @ts-ignore typedef\nexport let RecordingState;\n\n/**\n * @typedef {{\n *    id: number,\n *    timestamp: string,\n *    origin: string,\n *    swScope: string,\n *    eventName: string,\n *    instanceId: string,\n * }}\n */\n// @ts-ignore typedef\nexport let EventData;\n"]}