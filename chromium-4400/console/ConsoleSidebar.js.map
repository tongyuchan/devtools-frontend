{"version":3,"file":"ConsoleSidebar.js","sourceRoot":"","sources":["../../../../../front_end/console/ConsoleSidebar.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Platform from '../platform/platform.js';\nimport {ls} from '../platform/platform.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as TextUtils from '../text_utils/text_utils.js';  // eslint-disable-line no-unused-vars\nimport * as UI from '../ui/ui.js';\n\nimport {ConsoleFilter, FilterType} from './ConsoleFilter.js';\nimport {ConsoleViewMessage} from './ConsoleViewMessage.js';  // eslint-disable-line no-unused-vars\n\nexport class ConsoleSidebar extends UI.Widget.VBox {\n  constructor() {\n    super(true);\n    this.setMinimumSize(125, 0);\n\n    this._tree = new UI.TreeOutline.TreeOutlineInShadow();\n    this._tree.registerRequiredCSS('console/consoleSidebar.css', {enableLegacyPatching: true});\n    this._tree.addEventListener(UI.TreeOutline.Events.ElementSelected, this._selectionChanged.bind(this));\n    this.contentElement.appendChild(this._tree.element);\n    /** @type {?UI.TreeOutline.TreeElement} */\n    this._selectedTreeElement = null;\n    /** @type {!Array<!FilterTreeElement>} */\n    this._treeElements = [];\n    /** @type {!Common.Settings.Setting<string>} */\n    const selectedFilterSetting =\n        Common.Settings.Settings.instance().createSetting('console.sidebarSelectedFilter', null);\n\n    const Levels = SDK.ConsoleModel.MessageLevel;\n    const consoleAPIParsedFilters =\n        [{key: FilterType.Source, text: SDK.ConsoleModel.MessageSource.ConsoleAPI, negative: false, regex: undefined}];\n    this._appendGroup(\n        _groupName.All, [], ConsoleFilter.allLevelsFilterValue(), UI.Icon.Icon.create('mediumicon-list'),\n        selectedFilterSetting);\n    this._appendGroup(\n        _groupName.ConsoleAPI, consoleAPIParsedFilters, ConsoleFilter.allLevelsFilterValue(),\n        UI.Icon.Icon.create('mediumicon-account-circle'), selectedFilterSetting);\n    this._appendGroup(\n        _groupName.Error, [], ConsoleFilter.singleLevelMask(Levels.Error),\n        UI.Icon.Icon.create('mediumicon-error-circle'), selectedFilterSetting);\n    this._appendGroup(\n        _groupName.Warning, [], ConsoleFilter.singleLevelMask(Levels.Warning),\n        UI.Icon.Icon.create('mediumicon-warning-triangle'), selectedFilterSetting);\n    this._appendGroup(\n        _groupName.Info, [], ConsoleFilter.singleLevelMask(Levels.Info), UI.Icon.Icon.create('mediumicon-info-circle'),\n        selectedFilterSetting);\n    this._appendGroup(\n        _groupName.Verbose, [], ConsoleFilter.singleLevelMask(Levels.Verbose), UI.Icon.Icon.create('mediumicon-bug'),\n        selectedFilterSetting);\n    const selectedTreeElementName = selectedFilterSetting.get();\n    const defaultTreeElement =\n        this._treeElements.find(x => x.name() === selectedTreeElementName) || this._treeElements[0];\n    defaultTreeElement.select();\n  }\n\n  /**\n   * @param {string} name\n   * @param {!Array<!TextUtils.TextUtils.ParsedFilter>} parsedFilters\n   * @param {!Object<string, boolean>} levelsMask\n   * @param {!UI.Icon.Icon} icon\n   * @param {!Common.Settings.Setting<string>} selectedFilterSetting\n   */\n  _appendGroup(name, parsedFilters, levelsMask, icon, selectedFilterSetting) {\n    const filter = new ConsoleFilter(name, parsedFilters, null, levelsMask);\n    const treeElement = new FilterTreeElement(filter, icon, selectedFilterSetting);\n    this._tree.appendChild(treeElement);\n    this._treeElements.push(treeElement);\n  }\n\n  clear() {\n    for (const treeElement of this._treeElements) {\n      treeElement.clear();\n    }\n  }\n\n  /**\n   * @param {!ConsoleViewMessage} viewMessage\n   */\n  onMessageAdded(viewMessage) {\n    for (const treeElement of this._treeElements) {\n      treeElement.onMessageAdded(viewMessage);\n    }\n  }\n\n  /**\n   * @param {!ConsoleViewMessage} viewMessage\n   * @return {boolean}\n   */\n  shouldBeVisible(viewMessage) {\n    if (this._selectedTreeElement instanceof ConsoleSidebarTreeElement) {\n      return this._selectedTreeElement.filter().shouldBeVisible(viewMessage);\n    }\n    return true;\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _selectionChanged(event) {\n    this._selectedTreeElement = /** @type {!UI.TreeOutline.TreeElement} */ (event.data);\n    this.dispatchEventToListeners(Events.FilterSelected);\n  }\n}\n\n/** @enum {symbol} */\nexport const Events = {\n  FilterSelected: Symbol('FilterSelected')\n};\n\nclass ConsoleSidebarTreeElement extends UI.TreeOutline.TreeElement {\n  /**\n   * @param {string|!Node} title\n   * @param {!ConsoleFilter} filter\n   */\n  constructor(title, filter) {\n    super(title);\n    this._filter = filter;\n  }\n\n  filter() {\n    return this._filter;\n  }\n}\n\nexport class URLGroupTreeElement extends ConsoleSidebarTreeElement {\n  /**\n   * @param {!ConsoleFilter} filter\n   */\n  constructor(filter) {\n    super(filter.name, filter);\n    this._countElement = this.listItemElement.createChild('span', 'count');\n    const leadingIcons = [UI.Icon.Icon.create('largeicon-navigator-file')];\n    this.setLeadingIcons(leadingIcons);\n    this._messageCount = 0;\n  }\n\n  incrementAndUpdateCounter() {\n    this._messageCount++;\n    this._countElement.textContent = `${this._messageCount}`;\n  }\n}\n\nexport class FilterTreeElement extends ConsoleSidebarTreeElement {\n  /**\n   * @param {!ConsoleFilter} filter\n   * @param {!UI.Icon.Icon} icon\n   * @param {!Common.Settings.Setting<string>} selectedFilterSetting\n   */\n  constructor(filter, icon, selectedFilterSetting) {\n    super(filter.name, filter);\n    this._selectedFilterSetting = selectedFilterSetting;\n    /** @type {!Map<?string, !URLGroupTreeElement>} */\n    this._urlTreeElements = new Map();\n    this.setLeadingIcons([icon]);\n    this._messageCount = 0;\n    this._updateCounter();\n  }\n\n  clear() {\n    this._urlTreeElements.clear();\n    this.removeChildren();\n    this._messageCount = 0;\n    this._updateCounter();\n  }\n\n  /**\n   * @return {string}\n   */\n  name() {\n    return this._filter.name;\n  }\n\n  /**\n   * @param {boolean=} selectedByUser\n   * @return {boolean}\n   * @override\n   */\n  onselect(selectedByUser) {\n    this._selectedFilterSetting.set(this._filter.name);\n    return super.onselect(selectedByUser);\n  }\n\n  _updateCounter() {\n    if (!this._messageCount) {\n      this.title = _groupNoMessageTitleMap.get(this._filter.name) || '';\n    } else if (this._messageCount === 1) {\n      this.title = _groupSingularTitleMap.get(this._filter.name) || '';\n    } else {\n      this.title =\n          Platform.StringUtilities.sprintf(_groupPluralTitleMap.get(this._filter.name) || '', this._messageCount);\n    }\n\n    this.setExpandable(Boolean(this.childCount()));\n  }\n\n  /**\n   * @param {!ConsoleViewMessage} viewMessage\n   */\n  onMessageAdded(viewMessage) {\n    const message = viewMessage.consoleMessage();\n    const shouldIncrementCounter = message.type !== SDK.ConsoleModel.MessageType.Command &&\n        message.type !== SDK.ConsoleModel.MessageType.Result && !message.isGroupMessage();\n    if (!this._filter.shouldBeVisible(viewMessage) || !shouldIncrementCounter) {\n      return;\n    }\n    const child = this._childElement(message.url);\n    child.incrementAndUpdateCounter();\n    this._messageCount++;\n    this._updateCounter();\n  }\n\n  /**\n   * @param {string=} url\n   * @return {!URLGroupTreeElement}\n   */\n  _childElement(url) {\n    const urlValue = url || null;\n    let child = this._urlTreeElements.get(urlValue);\n    if (child) {\n      return child;\n    }\n\n    const filter = this._filter.clone();\n    const parsedURL = urlValue ? Common.ParsedURL.ParsedURL.fromString(urlValue) : null;\n    if (urlValue) {\n      filter.name = parsedURL ? parsedURL.displayName : urlValue;\n    } else {\n      filter.name = Common.UIString.UIString('<other>');\n    }\n    filter.parsedFilters.push({key: FilterType.Url, text: urlValue, negative: false, regex: undefined});\n    child = new URLGroupTreeElement(filter);\n    if (urlValue) {\n      child.tooltip = urlValue;\n    }\n    this._urlTreeElements.set(urlValue, child);\n    this.appendChild(child);\n    return child;\n  }\n}\n\n/** @enum {string} */\nconst _groupName = {\n  ConsoleAPI: 'user message',\n  All: 'message',\n  Error: 'error',\n  Warning: 'warning',\n  Info: 'info',\n  Verbose: 'verbose'\n};\n\n/** @const {!Map<string, string>} */\nconst _groupSingularTitleMap = new Map([\n  [_groupName.ConsoleAPI, ls`1 user message`], [_groupName.All, ls`1 message`], [_groupName.Error, ls`1 error`],\n  [_groupName.Warning, ls`1 warning`], [_groupName.Info, ls`1 info`], [_groupName.Verbose, ls`1 verbose`]\n]);\n\n/** @const {!Map<string, string>} */\nconst _groupPluralTitleMap = new Map([\n  [_groupName.ConsoleAPI, ls`%d user messages`], [_groupName.All, ls`%d messages`], [_groupName.Error, ls`%d errors`],\n  [_groupName.Warning, ls`%d warnings`], [_groupName.Info, ls`%d info`], [_groupName.Verbose, ls`%d verbose`]\n]);\n\n/** @const {!Map<string, string>} */\nconst _groupNoMessageTitleMap = new Map([\n  [_groupName.ConsoleAPI, ls`No user messages`], [_groupName.All, ls`No messages`], [_groupName.Error, ls`No errors`],\n  [_groupName.Warning, ls`No warnings`], [_groupName.Info, ls`No info`], [_groupName.Verbose, ls`No verbose`]\n]);\n"]}