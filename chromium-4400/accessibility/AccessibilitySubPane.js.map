{"version":3,"file":"AccessibilitySubPane.js","sourceRoot":"","sources":["../../../../../front_end/accessibility/AccessibilitySubPane.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAElC,MAAM,OAAO,oBAAqB,SAAQ,EAAE,CAAC,IAAI,CAAC,UAAU;IAC1D;;OAEG;IACH,YAAY,IAAI;QACd,KAAK,CAAC,IAAI,CAAC,CAAC;QAEZ;;;WAGG;QACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,mBAAmB,CAAC,2CAA2C,EAAE,EAAC,oBAAoB,EAAE,KAAK,EAAC,CAAC,CAAC;IACvG,CAAC;IAED;;OAEG;IACH,SAAS,CAAC,MAAM;IAChB,CAAC;IAED;;OAEG;IACH,IAAI;QACF,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;IAC5B,CAAC;IAED;;OAEG;IACH,OAAO,CAAC,IAAI;QACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACH,UAAU,CAAC,WAAW,EAAE,SAAS;QAC/B,MAAM,kBAAkB,GAAG,SAAS,IAAI,mBAAmB,CAAC;QAC5D,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC;QACjE,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,iBAAiB;QACf,MAAM,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;QAC7D,WAAW,CAAC,mBAAmB,CAAC,qCAAqC,EAAE,EAAC,oBAAoB,EAAE,KAAK,EAAC,CAAC,CAAC;QACtG,WAAW,CAAC,mBAAmB,CAAC,2CAA2C,EAAE,EAAC,oBAAoB,EAAE,KAAK,EAAC,CAAC,CAAC;QAC5G,WAAW,CAAC,mBAAmB,CAAC,2BAA2B,EAAE,EAAC,oBAAoB,EAAE,IAAI,EAAC,CAAC,CAAC;QAE3F,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC5C,WAAW,CAAC,YAAY,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC9C,OAAO,WAAW,CAAC;IACrB,CAAC;CACF","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../sdk/sdk.js';  // eslint-disable-line no-unused-vars\nimport * as UI from '../ui/ui.js';\n\nexport class AccessibilitySubPane extends UI.View.SimpleView {\n  /**\n   * @param {string} name\n   */\n  constructor(name) {\n    super(name);\n\n    /**\n     * @protected\n     * @type {?SDK.AccessibilityModel.AccessibilityNode}\n     */\n    this._axNode = null;\n    this.registerRequiredCSS('accessibility/accessibilityProperties.css', {enableLegacyPatching: false});\n  }\n\n  /**\n   * @param {?SDK.AccessibilityModel.AccessibilityNode} axNode\n   */\n  setAXNode(axNode) {\n  }\n\n  /**\n   * @return {?SDK.DOMModel.DOMNode}\n   */\n  node() {\n    return this._node || null;\n  }\n\n  /**\n   * @param {?SDK.DOMModel.DOMNode} node\n   */\n  setNode(node) {\n    this._node = node;\n  }\n\n  /**\n   * @param {string} textContent\n   * @param {string=} className\n   * @return {!Element}\n   */\n  createInfo(textContent, className) {\n    const classNameOrDefault = className || 'gray-info-message';\n    const info = this.element.createChild('div', classNameOrDefault);\n    info.textContent = textContent;\n    return info;\n  }\n\n  /**\n   * @return {!UI.TreeOutline.TreeOutline}\n   */\n  createTreeOutline() {\n    const treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    treeOutline.registerRequiredCSS('accessibility/accessibilityNode.css', {enableLegacyPatching: false});\n    treeOutline.registerRequiredCSS('accessibility/accessibilityProperties.css', {enableLegacyPatching: false});\n    treeOutline.registerRequiredCSS('object_ui/objectValue.css', {enableLegacyPatching: true});\n\n    treeOutline.element.classList.add('hidden');\n    treeOutline.hideOverflow();\n    this.element.appendChild(treeOutline.element);\n    return treeOutline;\n  }\n}\n"]}