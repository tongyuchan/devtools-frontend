{"version":3,"file":"AccessibilityNodeView.js","sourceRoot":"","sources":["../../../../../front_end/accessibility/AccessibilityNodeView.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport {ls} from '../platform/platform.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';\n\nimport {AXAttributes, AXNativeSourceTypes, AXSourceTypes} from './AccessibilityStrings.js';\nimport {AccessibilitySubPane} from './AccessibilitySubPane.js';\n\nexport class AXNodeSubPane extends AccessibilitySubPane {\n  constructor() {\n    super(ls`Computed Properties`);\n\n    /**\n     * @protected\n     * @type {?SDK.AccessibilityModel.AccessibilityNode}\n     */\n    this._axNode = null;\n\n    this.contentElement.classList.add('ax-subpane');\n\n    this._noNodeInfo = this.createInfo(ls`No accessibility node`);\n    this._ignoredInfo = this.createInfo(ls`Accessibility node not exposed`, 'ax-ignored-info hidden');\n\n    this._treeOutline = this.createTreeOutline();\n    this._ignoredReasonsTree = this.createTreeOutline();\n\n    this.element.classList.add('accessibility-computed');\n    this.registerRequiredCSS('accessibility/accessibilityNode.css', {enableLegacyPatching: false});\n    this._treeOutline.setFocusable(true);\n  }\n\n  /**\n   * @param {?SDK.AccessibilityModel.AccessibilityNode} axNode\n   * @override\n   */\n  setAXNode(axNode) {\n    if (this._axNode === axNode) {\n      return;\n    }\n    this._axNode = axNode;\n\n    const treeOutline = this._treeOutline;\n    treeOutline.removeChildren();\n    const ignoredReasons = this._ignoredReasonsTree;\n    ignoredReasons.removeChildren();\n\n    if (!axNode) {\n      treeOutline.element.classList.add('hidden');\n      this._ignoredInfo.classList.add('hidden');\n      ignoredReasons.element.classList.add('hidden');\n\n      this._noNodeInfo.classList.remove('hidden');\n      this.element.classList.add('ax-ignored-node-pane');\n\n      return;\n    }\n\n    if (axNode.ignored()) {\n      this._noNodeInfo.classList.add('hidden');\n      treeOutline.element.classList.add('hidden');\n      this.element.classList.add('ax-ignored-node-pane');\n\n      this._ignoredInfo.classList.remove('hidden');\n      ignoredReasons.element.classList.remove('hidden');\n      /**\n       * @param {!Protocol.Accessibility.AXProperty} property\n       */\n      function addIgnoredReason(property) {\n        ignoredReasons.appendChild(new AXNodeIgnoredReasonTreeElement(\n            property, /** @type {!SDK.AccessibilityModel.AccessibilityNode} */ (axNode)));\n      }\n      const ignoredReasonsArray = /** @type {!Array<!Protocol.Accessibility.AXProperty>} */ (axNode.ignoredReasons());\n      for (const reason of ignoredReasonsArray) {\n        addIgnoredReason(reason);\n      }\n      if (!ignoredReasons.firstChild()) {\n        ignoredReasons.element.classList.add('hidden');\n      }\n      return;\n    }\n    this.element.classList.remove('ax-ignored-node-pane');\n\n    this._ignoredInfo.classList.add('hidden');\n    ignoredReasons.element.classList.add('hidden');\n    this._noNodeInfo.classList.add('hidden');\n\n    treeOutline.element.classList.remove('hidden');\n\n    /**\n     * @param {!SDK.AccessibilityModel.CoreOrProtocolAxProperty} property\n     */\n    function addProperty(property) {\n      treeOutline.appendChild(new AXNodePropertyTreePropertyElement(\n          property, /** @type {!SDK.AccessibilityModel.AccessibilityNode} */ (axNode)));\n    }\n\n    for (const property of axNode.coreProperties()) {\n      addProperty(property);\n    }\n\n    const role = axNode.role();\n    if (role) {\n      /** @type {!SDK.AccessibilityModel.CoreOrProtocolAxProperty} */\n      const roleProperty = {name: SDK.AccessibilityModel.CoreAxPropertyName.Role, value: role};\n      addProperty(roleProperty);\n    }\n    for (const property of /** @type {!Array.<!Protocol.Accessibility.AXProperty>} */ (axNode.properties())) {\n      addProperty(property);\n    }\n\n    const firstNode = treeOutline.firstChild();\n    if (firstNode) {\n      firstNode.select(/* omitFocus= */ true, /* selectedByUser= */ false);\n    }\n  }\n\n  /**\n   * @override\n   * @param {?SDK.DOMModel.DOMNode} node\n   */\n  setNode(node) {\n    super.setNode(node);\n    this._axNode = null;\n  }\n}\n\nexport class AXNodePropertyTreeElement extends UI.TreeOutline.TreeElement {\n  /**\n   * @param {!SDK.AccessibilityModel.AccessibilityNode} axNode\n   */\n  constructor(axNode) {\n    // Pass an empty title, the title gets made later in onattach.\n    super('');\n    this._axNode = axNode;\n  }\n\n  /**\n   * @param {?Protocol.Accessibility.AXValueType} type\n   * @param {string} value\n   * @return {!Element}\n   */\n  static createSimpleValueElement(type, value) {\n    let valueElement;\n    const AXValueType = Protocol.Accessibility.AXValueType;\n    if (!type || type === AXValueType.ValueUndefined || type === AXValueType.ComputedString) {\n      valueElement = document.createElement('span');\n    } else {\n      valueElement = document.createElement('span');\n      valueElement.classList.add('monospace');\n    }\n    let valueText;\n    const isStringProperty = type && StringProperties.has(type);\n    if (isStringProperty) {\n      // Render \\n as a nice unicode cr symbol.\n      valueText = '\"' + value.replace(/\\n/g, '\\u21B5') + '\"';\n    } else {\n      valueText = String(value);\n    }\n\n    if (type && type in TypeStyles) {\n      valueElement.classList.add(TypeStyles[type]);\n    }\n\n    valueElement.setTextContentTruncatedIfNeeded(valueText || '');\n\n    UI.Tooltip.Tooltip.install(valueElement, String(value) || '');\n\n    return valueElement;\n  }\n\n  /**\n   * @param {string} tooltip\n   * @return {!Element}\n   */\n  static createExclamationMark(tooltip) {\n    const exclamationElement =\n        /** @type {!UI.UIUtils.DevToolsIconLabel} */ (document.createElement('span', {is: 'dt-icon-label'}));\n    exclamationElement.type = 'smallicon-warning';\n    UI.Tooltip.Tooltip.install(exclamationElement, tooltip);\n    return exclamationElement;\n  }\n\n  /**\n   * @param {string} name\n   */\n  appendNameElement(name) {\n    const nameElement = document.createElement('span');\n    if (name in AXAttributes) {\n      // @ts-ignore TS can't cast name here but we checked it's valid.\n      const attribute = AXAttributes[name];\n      nameElement.textContent = attribute.name;\n      UI.Tooltip.Tooltip.install(nameElement, attribute.description);\n      nameElement.classList.add('ax-readable-name');\n    } else {\n      nameElement.textContent = name;\n      nameElement.classList.add('ax-name');\n      nameElement.classList.add('monospace');\n    }\n    this.listItemElement.appendChild(nameElement);\n  }\n\n  /**\n   * @param {!Protocol.Accessibility.AXValue} value\n   */\n  appendValueElement(value) {\n    const AXValueType = Protocol.Accessibility.AXValueType;\n    if (value.type === AXValueType.Idref || value.type === AXValueType.Node || value.type === AXValueType.IdrefList ||\n        value.type === AXValueType.NodeList) {\n      this.appendRelatedNodeListValueElement(value);\n      return;\n    }\n    if (value.sources) {\n      const sources = value.sources;\n      for (let i = 0; i < sources.length; i++) {\n        const source = sources[i];\n        const child = new AXValueSourceTreeElement(source, this._axNode);\n        this.appendChild(child);\n      }\n      this.expand();\n    }\n    const element = AXNodePropertyTreeElement.createSimpleValueElement(value.type, String(value.value));\n    this.listItemElement.appendChild(element);\n  }\n\n  /**\n   * @param {!Protocol.Accessibility.AXRelatedNode} relatedNode\n   * @param {number} index\n   */\n  appendRelatedNode(relatedNode, index) {\n    const deferredNode =\n        new SDK.DOMModel.DeferredDOMNode(this._axNode.accessibilityModel().target(), relatedNode.backendDOMNodeId);\n    const nodeTreeElement =\n        new AXRelatedNodeSourceTreeElement({deferredNode: deferredNode, idref: undefined}, relatedNode);\n    this.appendChild(nodeTreeElement);\n  }\n\n  /**\n   * @param {!Protocol.Accessibility.AXRelatedNode} relatedNode\n   */\n  appendRelatedNodeInline(relatedNode) {\n    const deferredNode =\n        new SDK.DOMModel.DeferredDOMNode(this._axNode.accessibilityModel().target(), relatedNode.backendDOMNodeId);\n    const linkedNode = new AXRelatedNodeElement({deferredNode: deferredNode, idref: undefined}, relatedNode);\n    this.listItemElement.appendChild(linkedNode.render());\n  }\n\n  /**\n   * @param {!Protocol.Accessibility.AXValue} value\n   */\n  appendRelatedNodeListValueElement(value) {\n    if (value.relatedNodes && value.relatedNodes.length === 1 && !value.value) {\n      this.appendRelatedNodeInline(value.relatedNodes[0]);\n      return;\n    }\n\n    if (value.relatedNodes) {\n      value.relatedNodes.forEach(this.appendRelatedNode, this);\n    }\n    if (value.relatedNodes && value.relatedNodes.length <= 3) {\n      this.expand();\n    } else {\n      this.collapse();\n    }\n  }\n}\n\n/** @type {!Object<string, string>} */\nexport const TypeStyles = {\n  attribute: 'ax-value-string',\n  boolean: 'object-value-boolean',\n  booleanOrUndefined: 'object-value-boolean',\n  computedString: 'ax-readable-string',\n  idref: 'ax-value-string',\n  idrefList: 'ax-value-string',\n  integer: 'object-value-number',\n  internalRole: 'ax-internal-role',\n  number: 'ax-value-number',\n  role: 'ax-role',\n  string: 'ax-value-string',\n  tristate: 'object-value-boolean',\n  valueUndefined: 'ax-value-undefined'\n};\n\n/** @type {!Set.<!Protocol.Accessibility.AXValueType>} */\nexport const StringProperties = new Set([\n  Protocol.Accessibility.AXValueType.String, Protocol.Accessibility.AXValueType.ComputedString,\n  Protocol.Accessibility.AXValueType.IdrefList, Protocol.Accessibility.AXValueType.Idref\n]);\n\nexport class AXNodePropertyTreePropertyElement extends AXNodePropertyTreeElement {\n  /**\n   * @param {!SDK.AccessibilityModel.CoreOrProtocolAxProperty} property\n   * @param {!SDK.AccessibilityModel.AccessibilityNode} axNode\n   */\n  constructor(property, axNode) {\n    super(axNode);\n\n    this._property = property;\n    this.toggleOnClick = true;\n\n    this.listItemElement.classList.add('property');\n  }\n\n  /**\n   * @override\n   */\n  onattach() {\n    this._update();\n  }\n\n  _update() {\n    this.listItemElement.removeChildren();\n\n    this.appendNameElement(this._property.name);\n\n    this.listItemElement.createChild('span', 'separator').textContent = ':\\xA0';\n\n    this.appendValueElement(this._property.value);\n  }\n}\n\nexport class AXValueSourceTreeElement extends AXNodePropertyTreeElement {\n  /**\n   * @param {!Protocol.Accessibility.AXValueSource} source\n   * @param {!SDK.AccessibilityModel.AccessibilityNode} axNode\n   */\n  constructor(source, axNode) {\n    super(axNode);\n    this._source = source;\n  }\n\n  /**\n   * @override\n   */\n  onattach() {\n    this._update();\n  }\n\n  /**\n   * @param {!Protocol.Accessibility.AXRelatedNode} relatedNode\n   * @param {string} idref\n   */\n  appendRelatedNodeWithIdref(relatedNode, idref) {\n    const deferredNode =\n        new SDK.DOMModel.DeferredDOMNode(this._axNode.accessibilityModel().target(), relatedNode.backendDOMNodeId);\n    const nodeTreeElement = new AXRelatedNodeSourceTreeElement({deferredNode: deferredNode, idref: idref}, relatedNode);\n    this.appendChild(nodeTreeElement);\n  }\n\n  /**\n   * @param {!Protocol.Accessibility.AXValue} value\n   */\n  appendIDRefValueElement(value) {\n    if (value.value === null) {\n      return;\n    }\n\n    const relatedNodes = value.relatedNodes || [];\n\n    // Content attribute is empty, but if the relationship was set via the IDL\n    // then there may be related nodes.\n    if (value.value === '') {\n      for (const node of relatedNodes) {\n        const idref = node.idref || '';\n        this.appendRelatedNodeWithIdref(node, idref);\n      }\n      return;\n    }\n\n    const idrefs = value.value.trim().split(/\\s+/);\n    for (const idref of idrefs) {\n      const matchingNode = relatedNodes.find(node => node.idref === idref);\n\n      // If there is exactly one related node, it is rendered on the same line\n      // of the label. If there are more, they are each rendered on their own\n      // line below the label.\n      // TODO(aboxhall): exclamation mark if not idreflist type\n      if (matchingNode) {\n        this.appendRelatedNodeWithIdref(matchingNode, idref);\n      } else if (idrefs.length === 1) {\n        this.listItemElement.appendChild(new AXRelatedNodeElement({deferredNode: undefined, idref: idref}).render());\n      } else {\n        this.appendChild(new AXRelatedNodeSourceTreeElement({deferredNode: undefined, idref: idref}));\n      }\n    }\n  }\n\n  /**\n   * @param {!Protocol.Accessibility.AXValue} value\n   * @override\n   */\n  appendRelatedNodeListValueElement(value) {\n    const relatedNodes = value.relatedNodes;\n    const numNodes = relatedNodes ? relatedNodes.length : 0;\n\n    if (value.type === Protocol.Accessibility.AXValueType.IdrefList ||\n        value.type === Protocol.Accessibility.AXValueType.Idref) {\n      this.appendIDRefValueElement(value);\n    } else {\n      super.appendRelatedNodeListValueElement(value);\n    }\n\n\n    if (numNodes <= 3) {\n      this.expand();\n    } else {\n      this.collapse();\n    }\n  }\n\n  /**\n   * @param {!Protocol.Accessibility.AXValueSource} source\n   */\n  appendSourceNameElement(source) {\n    const nameElement = document.createElement('span');\n    const AXValueSourceType = Protocol.Accessibility.AXValueSourceType;\n    const type = source.type;\n    switch (type) {\n      case AXValueSourceType.Attribute:\n      case AXValueSourceType.Placeholder:\n      case AXValueSourceType.RelatedElement:\n        if (source.nativeSource) {\n          const nativeSource = source.nativeSource;\n          nameElement.textContent = AXNativeSourceTypes[nativeSource].name;\n          UI.Tooltip.Tooltip.install(nameElement, AXNativeSourceTypes[nativeSource].description);\n          nameElement.classList.add('ax-readable-name');\n          break;\n        }\n        nameElement.textContent = source.attribute || null;\n        nameElement.classList.add('ax-name');\n        nameElement.classList.add('monospace');\n        break;\n      default:\n        if (type in AXSourceTypes) {\n          nameElement.textContent = AXSourceTypes[type].name;\n          UI.Tooltip.Tooltip.install(nameElement, AXSourceTypes[type].description);\n          nameElement.classList.add('ax-readable-name');\n        } else {\n          console.warn(type, 'not in AXSourceTypes');\n          nameElement.textContent = type;\n        }\n    }\n    this.listItemElement.appendChild(nameElement);\n  }\n\n  _update() {\n    this.listItemElement.removeChildren();\n\n    if (this._source.invalid) {\n      const exclamationMark = AXNodePropertyTreeElement.createExclamationMark(ls`Invalid source.`);\n      this.listItemElement.appendChild(exclamationMark);\n      this.listItemElement.classList.add('ax-value-source-invalid');\n    } else if (this._source.superseded) {\n      this.listItemElement.classList.add('ax-value-source-unused');\n    }\n\n    this.appendSourceNameElement(this._source);\n\n    this.listItemElement.createChild('span', 'separator').textContent = ':\\xA0';\n\n    if (this._source.attributeValue) {\n      this.appendValueElement(this._source.attributeValue);\n      UI.UIUtils.createTextChild(this.listItemElement, '\\xA0');\n    } else if (this._source.nativeSourceValue) {\n      this.appendValueElement(this._source.nativeSourceValue);\n      UI.UIUtils.createTextChild(this.listItemElement, '\\xA0');\n      if (this._source.value) {\n        this.appendValueElement(this._source.value);\n      }\n    } else if (this._source.value) {\n      this.appendValueElement(this._source.value);\n    } else {\n      const valueElement = AXNodePropertyTreeElement.createSimpleValueElement(\n          Protocol.Accessibility.AXValueType.ValueUndefined, ls`Not specified`);\n      this.listItemElement.appendChild(valueElement);\n      this.listItemElement.classList.add('ax-value-source-unused');\n    }\n\n    if (this._source.value && this._source.superseded) {\n      this.listItemElement.classList.add('ax-value-source-superseded');\n    }\n  }\n}\n\nexport class AXRelatedNodeSourceTreeElement extends UI.TreeOutline.TreeElement {\n  /**\n   * @param {{deferredNode: (!SDK.DOMModel.DeferredDOMNode|undefined), idref: (string|undefined)}} node\n   * @param {!Protocol.Accessibility.AXRelatedNode=} value\n   */\n  constructor(node, value) {\n    super('');\n\n    this._value = value;\n    this._axRelatedNodeElement = new AXRelatedNodeElement(node, value);\n    this.selectable = true;\n  }\n\n  /**\n   * @override\n   */\n  onattach() {\n    this.listItemElement.appendChild(this._axRelatedNodeElement.render());\n    if (!this._value) {\n      return;\n    }\n\n    if (this._value.text) {\n      this.listItemElement.appendChild(AXNodePropertyTreeElement.createSimpleValueElement(\n          Protocol.Accessibility.AXValueType.ComputedString, this._value.text));\n    }\n  }\n\n  /**\n   * @override\n   */\n  onenter() {\n    this._axRelatedNodeElement.revealNode();\n    return true;\n  }\n}\n\nexport class AXRelatedNodeElement {\n  /**\n   * @param {{deferredNode: (!SDK.DOMModel.DeferredDOMNode|undefined), idref: (string|undefined)}} node\n   * @param {!Protocol.Accessibility.AXRelatedNode=} value\n   */\n  constructor(node, value) {\n    this._deferredNode = node.deferredNode;\n    this._idref = node.idref;\n    this._value = value;\n  }\n\n  /**\n   * @return {!Element}\n   */\n  render() {\n    const element = document.createElement('span');\n\n    if (this._deferredNode) {\n      const valueElement = document.createElement('span');\n      element.appendChild(valueElement);\n      this._deferredNode.resolvePromise().then(node => {\n        Common.Linkifier.Linkifier.linkify(node, {tooltip: undefined, preventKeyboardFocus: true})\n            .then(linkfied => valueElement.appendChild(linkfied));\n      });\n    } else if (this._idref) {\n      element.classList.add('invalid');\n      const valueElement = AXNodePropertyTreeElement.createExclamationMark(ls`No node with this ID.`);\n      UI.UIUtils.createTextChild(valueElement, this._idref);\n      element.appendChild(valueElement);\n    }\n\n    return element;\n  }\n\n  /**\n   * Attempts to cause the node referred to by the related node to be selected in the tree.\n   */\n  revealNode() {\n    if (this._deferredNode) {\n      this._deferredNode.resolvePromise().then(node => Common.Revealer.reveal(node));\n    }\n  }\n}\n\nexport class AXNodeIgnoredReasonTreeElement extends AXNodePropertyTreeElement {\n  /**\n   * @param {!Protocol.Accessibility.AXProperty} property\n   * @param {!SDK.AccessibilityModel.AccessibilityNode} axNode\n   */\n  constructor(property, axNode) {\n    super(axNode);\n    this._property = property;\n    this._axNode = axNode;\n    this.toggleOnClick = true;\n    this.selectable = false;\n  }\n\n  /**\n   * @param {?string} reason\n   * @param {?SDK.AccessibilityModel.AccessibilityNode} axNode\n   * @return {?Element}\n   */\n  static createReasonElement(reason, axNode) {\n    let reasonElement = null;\n    switch (reason) {\n      case 'activeModalDialog':\n        reasonElement = UI.UIUtils.formatLocalized('Element is hidden by active modal dialog:\\xA0', []);\n        break;\n      case 'ancestorIsLeafNode':\n        reasonElement = UI.UIUtils.formatLocalized('Ancestor\\'s children are all presentational:\\xA0', []);\n        break;\n      case 'ariaHiddenElement': {\n        const ariaHiddenSpan = document.createElement('span', {is: 'source-code'}).textContent = 'aria-hidden';\n        reasonElement = UI.UIUtils.formatLocalized('Element is %s.', [ariaHiddenSpan]);\n        break;\n      }\n      case 'ariaHiddenSubtree': {\n        const ariaHiddenSpan = document.createElement('span', {is: 'source-code'}).textContent = 'aria-hidden';\n        const trueSpan = document.createElement('span', {is: 'source-code'}).textContent = 'true';\n        reasonElement = UI.UIUtils.formatLocalized('%s is %s on ancestor:\\xA0', [ariaHiddenSpan, trueSpan]);\n        break;\n      }\n      case 'emptyAlt':\n        reasonElement = UI.UIUtils.formatLocalized('Element has empty alt text.', []);\n        break;\n      case 'emptyText':\n        reasonElement = UI.UIUtils.formatLocalized('No text content.', []);\n        break;\n      case 'inertElement':\n        reasonElement = UI.UIUtils.formatLocalized('Element is inert.', []);\n        break;\n      case 'inertSubtree':\n        reasonElement = UI.UIUtils.formatLocalized('Element is in an inert subtree from\\xA0', []);\n        break;\n      case 'inheritsPresentation':\n        reasonElement = UI.UIUtils.formatLocalized('Element inherits presentational role from\\xA0', []);\n        break;\n      case 'labelContainer':\n        reasonElement = UI.UIUtils.formatLocalized('Part of label element:\\xA0', []);\n        break;\n      case 'labelFor':\n        reasonElement = UI.UIUtils.formatLocalized('Label for\\xA0', []);\n        break;\n      case 'notRendered':\n        reasonElement = UI.UIUtils.formatLocalized('Element is not rendered.', []);\n        break;\n      case 'notVisible':\n        reasonElement = UI.UIUtils.formatLocalized('Element is not visible.', []);\n        break;\n      case 'presentationalRole': {\n        const role = axNode && axNode.role() || '';\n        const rolePresentationSpan = document.createElement('span', {is: 'source-code'}).textContent = 'role=' + role;\n        reasonElement = UI.UIUtils.formatLocalized('Element has %s.', [rolePresentationSpan]);\n        break;\n      }\n      case 'probablyPresentational':\n        reasonElement = UI.UIUtils.formatLocalized('Element is presentational.', []);\n        break;\n      case 'staticTextUsedAsNameFor':\n        reasonElement = UI.UIUtils.formatLocalized('Static text node is used as name for\\xA0', []);\n        break;\n      case 'uninteresting':\n        reasonElement = UI.UIUtils.formatLocalized('Element not interesting for accessibility.', []);\n        break;\n    }\n    if (reasonElement) {\n      reasonElement.classList.add('ax-reason');\n    }\n    return reasonElement;\n  }\n\n  /**\n   * @override\n   */\n  onattach() {\n    this.listItemElement.removeChildren();\n\n    this._reasonElement = AXNodeIgnoredReasonTreeElement.createReasonElement(this._property.name, this._axNode);\n    if (this._reasonElement) {\n      this.listItemElement.appendChild(this._reasonElement);\n    }\n\n    const value = this._property.value;\n    if (value.type === Protocol.Accessibility.AXValueType.Idref) {\n      this.appendRelatedNodeListValueElement(value);\n    }\n  }\n}\n"]}