{"version":3,"file":"LinearMemoryInspectorPane.js","sourceRoot":"","sources":["../../../../../front_end/linear_memory_inspector/LinearMemoryInspectorPane.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';  // eslint-disable-line no-unused-vars\nimport * as UI from '../ui/ui.js';\n\nconst {ls} = Common;\n\nimport {LinearMemoryInspector} from './LinearMemoryInspector.js';\nimport {LazyUint8Array, LinearMemoryInspectorController} from './LinearMemoryInspectorController.js';  // eslint-disable-line no-unused-vars\n\n/** @type {!LinearMemoryInspectorPaneImpl} */\nlet inspectorInstance;\n\n/** @type {!Wrapper} */\nlet wrapperInstance;\n\nexport class Wrapper extends UI.Widget.VBox {\n  /** @private */\n  constructor() {\n    super();\n    this.view = LinearMemoryInspectorPaneImpl.instance();\n  }\n\n  /**\n   * @param {{forceNew: ?boolean}} opts\n   */\n  static instance(opts = {forceNew: null}) {\n    const {forceNew} = opts;\n    if (!wrapperInstance || forceNew) {\n      wrapperInstance = new Wrapper();\n    }\n\n    return wrapperInstance;\n  }\n\n  /**\n   * @override\n   */\n  wasShown() {\n    this.view.show(this.contentElement);\n  }\n}\n\nexport class LinearMemoryInspectorPaneImpl extends UI.Widget.VBox {\n  constructor() {\n    super(false);\n    const placeholder = document.createElement('div');\n    placeholder.textContent = ls`No open inspections`;\n    placeholder.style.display = 'flex';\n    this._tabbedPane = new UI.TabbedPane.TabbedPane();\n    this._tabbedPane.setPlaceholderElement(placeholder);\n    this._tabbedPane.setCloseableTabs(true);\n    this._tabbedPane.setAllowTabReorder(true, true);\n    this._tabbedPane.addEventListener(UI.TabbedPane.Events.TabClosed, this._tabClosed, this);\n    this._tabbedPane.show(this.contentElement);\n\n    /** @type {!Map<string, LinearMemoryInspectorView>} */\n    this._tabIdToInspectorView = new Map();\n  }\n\n  static instance() {\n    if (!inspectorInstance) {\n      inspectorInstance = new LinearMemoryInspectorPaneImpl();\n    }\n    return inspectorInstance;\n  }\n\n\n  /**\n   * @param {string} tabId\n   * @param {string} title\n   * @param {!LazyUint8Array} arrayWrapper\n   * @param {number} address\n   */\n  create(tabId, title, arrayWrapper, address) {\n    const inspectorView = new LinearMemoryInspectorView(arrayWrapper, address);\n    this._tabIdToInspectorView.set(tabId, inspectorView);\n    this._tabbedPane.appendTab(tabId, title, inspectorView, undefined, false, true);\n    this._tabbedPane.selectTab(tabId);\n  }\n\n  /**\n   * @param {string} tabId\n   */\n  close(tabId) {\n    this._tabbedPane.closeTab(tabId, false);\n  }\n\n  /**\n   * @param {string} tabId\n   */\n  reveal(tabId) {\n    this.refreshView(tabId);\n    this._tabbedPane.selectTab(tabId);\n  }\n\n  /**\n   * @param {string} tabId\n   */\n  refreshView(tabId) {\n    const view = this._tabIdToInspectorView.get(tabId);\n    if (!view) {\n      throw new Error(`View for specified tab id does not exist: ${tabId}`);\n    }\n    view.refreshData();\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _tabClosed(event) {\n    const tabId = event.data.tabId;\n    this._tabIdToInspectorView.delete(tabId);\n    this.dispatchEventToListeners('view-closed', tabId);\n  }\n}\n\nclass LinearMemoryInspectorView extends UI.Widget.VBox {\n  /**\n   *\n   * @param {!LazyUint8Array} memoryWrapper\n   * @param {number} address\n   */\n  constructor(memoryWrapper, address) {\n    super(false);\n\n    if (address < 0 || address > memoryWrapper.length()) {\n      throw new Error('Invalid address to show');\n    }\n\n    this._memoryWrapper = memoryWrapper;\n    this._address = address;\n    this._inspector = new LinearMemoryInspector();\n    this._inspector.addEventListener('memory-request', /** @param {!Event} event */ event => {\n      this._memoryRequested(/** @type {?} */ (event));\n    });\n    this._inspector.addEventListener('address-changed', /** @param {?} event */ event => {\n      this._address = event.data;\n    });\n    this.contentElement.appendChild(this._inspector);\n  }\n\n  /**\n   * @override\n   */\n  wasShown() {\n    this.refreshData();\n  }\n\n  refreshData() {\n    LinearMemoryInspectorController.getMemoryForAddress(this._memoryWrapper, this._address).then(({memory, offset}) => {\n      this._inspector.data = {\n        memory: memory,\n        address: this._address,\n        memoryOffset: offset,\n        outerMemoryLength: this._memoryWrapper.length(),\n      };\n    });\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _memoryRequested(event) {\n    const {start, end, address} = /** @type {!{start: number, end: number, address: number}} */ (event.data);\n    if (address < start || address >= end) {\n      throw new Error('Requested address is out of bounds.');\n    }\n\n    LinearMemoryInspectorController.getMemoryRange(this._memoryWrapper, start, end).then(memory => {\n      this._inspector.data = {\n        memory: memory,\n        address: address,\n        memoryOffset: start,\n        outerMemoryLength: this._memoryWrapper.length(),\n      };\n    });\n  }\n}\n"]}