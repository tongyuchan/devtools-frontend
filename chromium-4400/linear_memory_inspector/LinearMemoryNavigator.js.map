{"version":3,"file":"LinearMemoryNavigator.js","sourceRoot":"","sources":["../../../../../front_end/linear_memory_inspector/LinearMemoryNavigator.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as LitHtml from '../third_party/lit-html/lit-html.js';\nimport * as Components from '../ui/components/components.js';\n\nconst {render, html} = LitHtml;\nconst ls = Common.ls;\n\nconst ENTER_ADDRESS_TITLE = ls`Enter address`;\n\nexport const enum Navigation {\n  Backward = 'Backward',\n  Forward = 'Forward'\n}\n\nexport class AddressInputChangedEvent extends Event {\n  data: {address: string, mode: Mode};\n\n  constructor(address: string, mode: Mode) {\n    super('address-input-changed');\n    this.data = {address, mode};\n  }\n}\n\nexport class PageNavigationEvent extends Event {\n  data: Navigation;\n\n  constructor(navigation: Navigation) {\n    super('page-navigation', {});\n    this.data = navigation;\n  }\n}\n\nexport class HistoryNavigationEvent extends Event {\n  data: Navigation;\n\n  constructor(navigation: Navigation) {\n    super('history-navigation', {});\n    this.data = navigation;\n  }\n}\n\nexport class RefreshRequestedEvent extends Event {\n  constructor() {\n    super('refresh-requested', {});\n  }\n}\n\nexport interface LinearMemoryNavigatorData {\n  address: string;\n  mode: Mode;\n  valid: boolean;\n  error: string|undefined;\n}\n\nexport const enum Mode {\n  Edit = 'Edit',\n  Submitted = 'Submitted',\n  InvalidSubmit = 'InvalidSubmit'\n}\n\nexport class LinearMemoryNavigator extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private address = '0';\n  private error: string|undefined = undefined;\n  private valid = true;\n\n  set data(data: LinearMemoryNavigatorData) {\n    this.address = data.address;\n    this.error = data.error;\n    this.valid = data.valid;\n    this.render();\n\n    const addressInput = this.shadow.querySelector<HTMLInputElement>('.address-input');\n    if (addressInput) {\n      if (data.mode === Mode.Submitted) {\n        addressInput.blur();\n      } else if (data.mode === Mode.InvalidSubmit) {\n        addressInput.select();\n      }\n    }\n  }\n\n  private render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    const result = html`\n      <style>\n        .navigator {\n          min-height: 24px;\n          display: flex;\n          flex-wrap: nowrap;\n          justify-content: space-between;\n          overflow: hidden;\n          align-items: center;\n          background-color: var(--color-background);\n          color: var(--color-text-primary);\n        }\n\n        .navigator-item {\n          display: flex;\n          white-space: nowrap;\n          overflow: hidden;\n        }\n\n        .address-input {\n          text-align: center;\n          outline: none;\n          color: var(--color-text-primary);\n          border: 1px solid var(--color-background-elevation-2);\n          background: transparent;\n        }\n\n        .address-input.invalid {\n          color: var(--color-accent-red);\n        }\n\n        .navigator-button {\n          display: flex;\n          width: 20px;\n          height: 20px;\n          background: transparent;\n          overflow: hidden;\n          border: none;\n          padding: 0;\n          outline: none;\n          justify-content: center;\n          align-items: center;\n        }\n\n        .navigator-button devtools-icon {\n          height: 14px;\n          width: 14px;\n          min-height: 14px;\n          min-width: 14px;\n        }\n\n        .navigator-button:hover devtools-icon {\n          --icon-color: var(--color-text-primary);\n        }\n\n        .navigator-button:focus devtools-icon {\n          --icon-color: var(--color-text-secondary);\n        }\n        </style>\n      <div class=\"navigator\">\n        <div class=\"navigator-item\">\n          ${this.createButton('ic_undo_16x16_icon', ls`Go back in address history`, new HistoryNavigationEvent(Navigation.Backward))}\n          ${this.createButton('ic_redo_16x16_icon', ls`Go forward in address history`, new HistoryNavigationEvent(Navigation.Forward))}\n        </div>\n        <div class=\"navigator-item\">\n          ${this.createButton('ic_page_prev_16x16_icon', ls`Previous page`, new PageNavigationEvent(Navigation.Backward))}\n          ${this.createAddressInput()}\n          ${this.createButton('ic_page_next_16x16_icon', ls`Next page`, new PageNavigationEvent(Navigation.Forward))}\n        </div>\n        ${this.createButton('refresh_12x12_icon', ls`Refresh`, new RefreshRequestedEvent())}\n      </div>\n      `;\n      render(result, this.shadow, {eventContext: this});\n    // clang-format on\n  }\n\n  private createAddressInput(): LitHtml.TemplateResult {\n    const classMap = {\n      'address-input': true,\n      invalid: !this.valid,\n    };\n    return html`\n      <input class=${LitHtml.Directives.classMap(classMap)} data-input=\"true\" .value=${this.address}\n        title=${this.valid ? ENTER_ADDRESS_TITLE : this.error} @change=${\n        this.onAddressChange.bind(this, Mode.Submitted)} @input=${this.onAddressChange.bind(this, Mode.Edit)}/>`;\n  }\n\n  private onAddressChange(mode: Mode, event: Event): void {\n    const addressInput = event.target as HTMLInputElement;\n    this.dispatchEvent(new AddressInputChangedEvent(addressInput.value, mode));\n  }\n\n  private createButton(name: string, title: string, event: Event): LitHtml.TemplateResult {\n    return html`\n      <button class=\"navigator-button\"\n        data-button=${event.type} title=${title}\n        @click=${this.dispatchEvent.bind(this, event)}>\n        <devtools-icon .data=${\n        {iconName: name, color: 'var(--color-text-secondary)', width: '14px'} as Components.Icon.IconWithName}>\n        </devtools-icon>\n      </button>`;\n  }\n}\n\ncustomElements.define('devtools-linear-memory-inspector-navigator', LinearMemoryNavigator);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-linear-memory-inspector-navigator': LinearMemoryNavigator;\n  }\n}\n"]}