{"version":3,"file":"LinearMemoryValueInterpreter.js","sourceRoot":"","sources":["../../../../../front_end/linear_memory_inspector/LinearMemoryValueInterpreter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport './ValueInterpreterDisplay.js';\nimport './ValueInterpreterSettings.js';\n\nimport * as Common from '../common/common.js';\nimport * as ComponentHelpers from '../component_helpers/component_helpers.js';\nimport * as LitHtml from '../third_party/lit-html/lit-html.js';\nimport * as Components from '../ui/components/components.js';\n\nimport type {ValueDisplayData} from './ValueInterpreterDisplay.js';\nimport {Endianness, endiannessToLocalizedString, ValueType, ValueTypeMode} from './ValueInterpreterDisplayUtils.js';\nimport type {TypeToggleEvent, ValueInterpreterSettingsData} from './ValueInterpreterSettings.js';\n\nconst ls = Common.ls;\nconst {render, html} = LitHtml;\nconst getStyleSheets = ComponentHelpers.GetStylesheet.getStyleSheets;\n\nexport class EndiannessChangedEvent extends Event {\n  data: Endianness;\n\n  constructor(endianness: Endianness) {\n    super('endianness-changed');\n    this.data = endianness;\n  }\n}\n\nexport class ValueTypeToggledEvent extends Event {\n  data: {type: ValueType, checked: boolean};\n\n  constructor(type: ValueType, checked: boolean) {\n    super('value-type-toggled');\n    this.data = {type, checked};\n  }\n}\n\nexport interface LinearMemoryValueInterpreterData {\n  value: ArrayBuffer;\n  valueTypes: Set<ValueType>;\n  endianness: Endianness;\n  valueTypeModes?: Map<ValueType, ValueTypeMode>;\n}\n\nexport class LinearMemoryValueInterpreter extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private endianness = Endianness.Little;\n  private buffer = new ArrayBuffer(0);\n  private valueTypes: Set<ValueType> = new Set();\n  private valueTypeModeConfig: Map<ValueType, ValueTypeMode> = new Map();\n  private showSettings = false;\n\n  constructor() {\n    super();\n    this.shadow.adoptedStyleSheets = [\n      ...getStyleSheets('ui/inspectorCommon.css', {enableLegacyPatching: true}),\n    ];\n  }\n\n\n  set data(data: LinearMemoryValueInterpreterData) {\n    this.endianness = data.endianness;\n    this.buffer = data.value;\n    this.valueTypes = data.valueTypes;\n    this.valueTypeModeConfig = data.valueTypeModes || new Map();\n    this.render();\n  }\n\n  private render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <style>\n        :host {\n          flex: auto;\n          display: flex;\n        }\n\n        .value-interpreter {\n          --text-highlight-color: #80868b;\n\n          border: var(--divider-border, 1px solid #d0d0d0);\n          background-color: var(--toolbar-bg-color, #f3f3f3);\n          overflow: hidden;\n          width: 400px;\n        }\n\n        .settings-toolbar {\n          min-height: 26px;\n          display: flex;\n          flex-wrap: nowrap;\n          justify-content: space-between;\n          padding-left: 12px;\n          padding-right: 12px;\n          align-items: center;\n        }\n\n        .settings-toolbar-button {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          width: 20px;\n          height: 20px;\n          border: none;\n          background-color: transparent;\n        }\n\n        .settings-toolbar-button devtools-icon {\n          height: 14px;\n          width: 14px;\n          min-height: 14px;\n          min-width: 14px;\n        }\n\n        .settings-toolbar-button.active devtools-icon {\n          --icon-color: var(--color-primary);\n        }\n\n        .divider {\n          display: block;\n          height: 1px;\n          margin-bottom: 12px;\n          background-color: var(--divider-color, #d0d0d0);\n        }\n      </style>\n      <div class=\"value-interpreter\">\n        <div class=\"settings-toolbar\">\n          ${this.renderSetting()}\n          <button data-settings=\"true\" class=\"settings-toolbar-button ${this.showSettings ? 'active' : ''}\" title=${ls`Toggle value type settings`} @click=${this.onSettingsToggle}>\n            <devtools-icon\n              .data=${{ iconName: 'settings_14x14_icon', color: 'var(--color-text-secondary)', width: '14px' } as Components.Icon.IconWithName}>\n            </devtools-icon>\n          </button>\n        </div>\n        <span class=\"divider\"></span>\n        <div>\n          ${this.showSettings ?\n            html`\n              <devtools-linear-memory-inspector-interpreter-settings\n                .data=${{ valueTypes: this.valueTypes } as ValueInterpreterSettingsData}\n                @type-toggle=${this.onTypeToggle}>\n              </devtools-linear-memory-inspector-interpreter-settings>` :\n            html`\n              <devtools-linear-memory-inspector-interpreter-display\n                .data=${{\n            buffer: this.buffer,\n            valueTypes: this.valueTypes,\n            endianness: this.endianness,\n            valueTypeModes: this.valueTypeModeConfig,\n          } as ValueDisplayData}>\n              </devtools-linear-memory-inspector-interpreter-display>`}\n        </div>\n      </div>\n    `,\n      this.shadow, { eventContext: this },\n    );\n    // clang-format on\n  }\n\n  private onEndiannessChange(event: Event): void {\n    event.preventDefault();\n    const select = event.target as HTMLInputElement;\n    const endianness = select.value as Endianness;\n    this.dispatchEvent(new EndiannessChangedEvent(endianness));\n  }\n\n  private renderSetting(): LitHtml.TemplateResult {\n    const onEnumSettingChange = this.onEndiannessChange.bind(this);\n    return html`\n    <label data-endianness-setting=\"true\" title=${ls`Change Endianness`}>\n      <select class=\"chrome-select\" data-endianness=\"true\" @change=${onEnumSettingChange}>\n        ${[Endianness.Little, Endianness.Big].map(endianness => {\n      return html`<option value=${endianness} .selected=${this.endianness === endianness}>${\n          endiannessToLocalizedString(endianness)}</option>`;\n    })}\n      </select>\n    </label>\n    `;\n  }\n\n  private onSettingsToggle(): void {\n    this.showSettings = !this.showSettings;\n    this.render();\n  }\n\n  private onTypeToggle(e: TypeToggleEvent): void {\n    this.dispatchEvent(new ValueTypeToggledEvent(e.data.type, e.data.checked));\n  }\n}\n\ncustomElements.define('devtools-linear-memory-inspector-interpreter', LinearMemoryValueInterpreter);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-linear-memory-inspector-interpreter': LinearMemoryValueInterpreter;\n  }\n}\n"]}