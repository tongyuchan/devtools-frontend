{"version":3,"file":"linear_memory_inspector-meta.js","sourceRoot":"","sources":["../../../../../front_end/linear_memory_inspector/linear_memory_inspector-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,EAAC,EAAE,EAAC,MAAM,yBAAyB,CAAC;AAC3C,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAKlC,IAAI,iCAA2E,CAAC;AAEhF,KAAK,UAAU,+BAA+B;IAC5C,IAAI,CAAC,iCAAiC,EAAE;QACtC,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,yBAAyB,CAAC,CAAC;QACnF,iCAAiC,GAAG,MAAM,MAAM,CAAC,8BAA8B,CAAC,CAAC;KAClF;IACD,OAAO,iCAAiC,CAAC;AAC3C,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,iCAA+C;IACvD,EAAE,EAAE,yBAAyB;IAC7B,KAAK,EAAE,GAAsC,EAAE,CAAC,EAAE,CAAA,kBAAkB;IACpE,aAAa,EAAE,uBAAuB;IACtC,KAAK,EAAE,GAAG;IACV,WAAW,6BAA0C;IACrD,KAAK,CAAC,QAAQ;QACZ,MAAM,qBAAqB,GAAG,MAAM,+BAA+B,EAAE,CAAC;QACtE,OAAO,qBAAqB,CAAC,yBAAyB,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC5E,CAAC;IACD,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,oBAAoB;CAC7D,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../platform/platform.js';\nimport {ls} from '../platform/platform.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as LinearMemoryInspector from './linear_memory_inspector.js';\n\nlet loadedLinearMemoryInspectorModule: (typeof LinearMemoryInspector|undefined);\n\nasync function loadLinearMemoryInspectorModule(): Promise<typeof LinearMemoryInspector> {\n  if (!loadedLinearMemoryInspectorModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('linear_memory_inspector');\n    loadedLinearMemoryInspectorModule = await import('./linear_memory_inspector.js');\n  }\n  return loadedLinearMemoryInspectorModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'linear-memory-inspector',\n  title: (): Platform.UIString.LocalizedString => ls`Memory Inspector`,\n  commandPrompt: 'Show Memory Inspector',\n  order: 100,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const LinearMemoryInspector = await loadLinearMemoryInspectorModule();\n    return LinearMemoryInspector.LinearMemoryInspectorPane.Wrapper.instance();\n  },\n  experiment: Root.Runtime.ExperimentName.WASM_DWARF_DEBUGGING,\n});\n"]}