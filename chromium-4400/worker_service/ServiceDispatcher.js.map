{"version":3,"file":"ServiceDispatcher.js","sourceRoot":"","sources":["../../../../../front_end/worker_service/ServiceDispatcher.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Root from '../root/root.js';\n\n/**\n * @interface\n */\nclass Service {\n  /**\n   * @return {!Promise<void>}\n   */\n  dispose() {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @param {function(string, {id: string}):void} notify\n   */\n  setNotify(notify) {\n    throw new Error('Not implemented');\n  }\n}\n\nclass ServiceDispatcher {\n  /**\n   * @param {!ServicePort} port\n   */\n  constructor(port) {\n    /** @type {!Map<string, !Service>} */\n    this._objects = new Map();\n    this._lastObjectId = 1;\n    this._port = port;\n    this._port.setHandlers(this._dispatchMessageWrapped.bind(this), this._connectionClosed.bind(this));\n  }\n\n  /**\n   * @param {string} data\n   */\n  _dispatchMessageWrapped(data) {\n    let message;\n    try {\n      message = JSON.parse(data);\n      if (!(message instanceof Object)) {\n        this._sendErrorResponse(message['id'], 'Malformed message');\n        return;\n      }\n      this._dispatchMessage(message);\n    } catch (e) {\n      this._sendErrorResponse(message ? message['id'] : '', e.toString() + ' ' + e.stack);\n    }\n  }\n\n  /**\n   * @param {{method: string, id: string, params: {id: string}}} message\n   */\n  _dispatchMessage(message) {\n    const domainAndMethod = message['method'].split('.');\n    const serviceName = domainAndMethod[0];\n    const method = domainAndMethod[1];\n\n    if (method === 'create') {\n      const extensions = Root.Runtime.Runtime.instance().extensions(Service).filter(\n          extension => extension.descriptor()['name'] === serviceName);\n      if (!extensions.length) {\n        this._sendErrorResponse(message['id'], 'Could not resolve service \\'' + serviceName + '\\'');\n        return;\n      }\n      extensions[0].instance().then(object => {\n        const service = /** @type {!Service} */ (object);\n        const id = String(this._lastObjectId++);\n        service.setNotify(this._notify.bind(this, id, serviceName));\n        this._objects.set(id, service);\n        this._sendResponse(message['id'], {id: id});\n      });\n    } else if (method === 'dispose') {\n      const object = this._objects.get(message['params']['id']);\n      if (!object) {\n        console.error('Could not look up object with id for ' + JSON.stringify(message));\n        return;\n      }\n      this._objects.delete(message['params']['id']);\n      object.dispose().then(() => this._sendResponse(message['id'], {}));\n    } else {\n      if (!message['params']) {\n        console.error('No params in the message: ' + JSON.stringify(message));\n        return;\n      }\n      const object = this._objects.get(message['params']['id']);\n      if (!object) {\n        console.error('Could not look up object with id for ' + JSON.stringify(message));\n        return;\n      }\n\n      // @ts-ignore Dynamic lookup on implementer of Service.\n      const handler = object[method];\n      if (!(handler instanceof Function)) {\n        console.error('Handler for \\'' + method + '\\' is missing.');\n        return;\n      }\n\n      // @ts-ignore Dynamic lookup on implementer of Service.\n      object[method](message['params']).then(result => this._sendResponse(message['id'], result));\n    }\n  }\n\n  _connectionClosed() {\n    for (const object of this._objects.values()) {\n      object.dispose();\n    }\n    this._objects.clear();\n  }\n\n  /**\n   * @param {string} objectId\n   * @param {string} serviceName\n   * @param {string} method\n   * @param {{id: string}} params\n   */\n  _notify(objectId, serviceName, method, params) {\n    params['id'] = objectId;\n    const message = {method: serviceName + '.' + method, params: params};\n    this._port.send(JSON.stringify(message));\n  }\n\n  /**\n   * @param {string} messageId\n   * @param {!Object} result\n   */\n  _sendResponse(messageId, result) {\n    const message = {id: messageId, result: result};\n    this._port.send(JSON.stringify(message));\n  }\n\n  /**\n   * @param {string} messageId\n   * @param {string} error\n   */\n  _sendErrorResponse(messageId, error) {\n    const message = {id: messageId, error: error};\n    this._port.send(JSON.stringify(message));\n  }\n}\n\n/**\n * @implements {ServicePort}\n */\nclass WorkerServicePort {\n  /**\n   * @param {!Worker} port\n   */\n  constructor(port) {\n    this._port = port;\n    this._port.onmessage = this._onMessage.bind(this);\n    this._port.onerror = console.error;\n  }\n\n  /**\n   * @override\n   * @param {function(string):void} messageHandler\n   * @param {function(string):void} closeHandler\n   */\n  setHandlers(messageHandler, closeHandler) {\n    this._messageHandler = messageHandler;\n    this._closeHandler = closeHandler;\n  }\n\n  /**\n   * @override\n   * @param {string} data\n   * @return {!Promise<boolean>}\n   */\n  send(data) {\n    this._port.postMessage(data);\n    return Promise.resolve(true);\n  }\n\n  /**\n   * @override\n   * @return {!Promise<boolean>}\n   */\n  close() {\n    return Promise.resolve(true);\n  }\n\n  /**\n   * @param {!MessageEvent} event\n   */\n  _onMessage(event) {\n    if (this._messageHandler) {\n      this._messageHandler(event.data);\n    } else {\n      console.warn('No message handler');\n    }\n  }\n}\n\nconst dispatchers = [];\n\nconst worker = /** @type {!Object} */ (self);\nconst servicePort = new WorkerServicePort(/** @type {!Worker} */ (worker));\ndispatchers.push(new ServiceDispatcher(servicePort));\n\n// @ts-ignore Side-effect.\nself.Service = Service;\n"]}