{"version":3,"file":"settings-meta.js","sourceRoot":"","sources":["../../../../../front_end/settings/settings-meta.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../i18n/i18n.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Settings from './settings.js';\n\nexport const UIStrings = {\n  /**\n  *@description Text for keyboard shortcuts\n  */\n  shortcuts: 'Shortcuts',\n  /**\n *@description Text in Settings Screen of the Settings\n */\n  preferences: 'Preferences',\n  /**\n *@description Text in Settings Screen of the Settings\n */\n  experiments: 'Experiments',\n  /**\n *@description Title of Ignore List settings\n */\n  ignoreList: 'Ignore List',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('settings/settings-meta.ts', UIStrings);\nconst i18nString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedSettingsModule: (typeof Settings|undefined);\n\nasync function loadSettingsModule(): Promise<typeof Settings> {\n  if (!loadedSettingsModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('settings');\n    loadedSettingsModule = await import('./settings.js');\n  }\n  return loadedSettingsModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'preferences',\n  title: i18nString(UIStrings.preferences),\n  commandPrompt: 'Show Preferences',\n  order: 0,\n  async loadView() {\n    const Settings = await loadSettingsModule();\n    return Settings.SettingsScreen.GenericSettingsTab.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'experiments',\n  title: i18nString(UIStrings.experiments),\n  commandPrompt: 'Show Experiments',\n  order: 3,\n  experiment: Root.Runtime.ExperimentName.ALL,\n  async loadView() {\n    const Settings = await loadSettingsModule();\n    return Settings.SettingsScreen.ExperimentsSettingsTab.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'blackbox',\n  title: i18nString(UIStrings.ignoreList),\n  commandPrompt: 'Show Ignore List',\n  order: 4,\n  async loadView() {\n    const Settings = await loadSettingsModule();\n    return Settings.FrameworkIgnoreListSettingsTab.FrameworkIgnoreListSettingsTab.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'keybinds',\n  title: i18nString(UIStrings.shortcuts),\n  commandPrompt: 'Show Shortcuts',\n  order: 100,\n  async loadView() {\n    const Settings = await loadSettingsModule();\n    return Settings.KeybindsSettingsTab.KeybindsSettingsTab.instance();\n  },\n});\n"]}