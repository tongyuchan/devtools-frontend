{"version":3,"file":"inspector_main-meta.js","sourceRoot":"","sources":["../../../../../front_end/inspector_main/inspector_main-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,EAAC,EAAE,EAAC,MAAM,yBAAyB,CAAC;AAC3C,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAKlC,IAAI,yBAA2D,CAAC;AAEhE,KAAK,UAAU,uBAAuB;IACpC,IAAI,CAAC,yBAAyB,EAAE;QAC9B,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;QAC1E,yBAAyB,GAAG,MAAM,MAAM,CAAC,qBAAqB,CAAC,CAAC;KACjE;IACD,OAAO,yBAAyB,CAAC;AACnC,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,iCAA+C;IACvD,EAAE,EAAE,WAAW;IACf,KAAK,EAAE,GAAsC,EAAE,CAAC,EAAE,CAAA,WAAW;IAC7D,aAAa,EAAE,gBAAgB;IAC/B,WAAW,6BAA0C;IACrD,KAAK,EAAE,EAAE;IACT,KAAK,CAAC,QAAQ;QACZ,MAAM,aAAa,GAAG,MAAM,uBAAuB,EAAE,CAAC;QACtD,OAAO,aAAa,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;IACxE,CAAC;IACD,IAAI,EAAE;QACJ,GAAsC,EAAE,CAAC,EAAE,CAAA,OAAO;QAClD,GAAsC,EAAE,CAAC,EAAE,CAAA,QAAQ;QACnD,GAAsC,EAAE,CAAC,EAAE,CAAA,KAAK;QAChD,GAAsC,EAAE,CAAC,EAAE,CAAA,gBAAgB;QAC3D,GAAsC,EAAE,CAAC,EAAE,CAAA,mBAAmB;QAC9D,GAAsC,EAAE,CAAC,EAAE,CAAA,mBAAmB;QAC9D,GAAsC,EAAE,CAAC,EAAE,CAAA,yBAAyB;KACrE;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../platform/platform.js';\nimport {ls} from '../platform/platform.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as InspectorMain from './inspector_main.js';\n\nlet loadedInspectorMainModule: (typeof InspectorMain|undefined);\n\nasync function loadInspectorMainModule(): Promise<typeof InspectorMain> {\n  if (!loadedInspectorMainModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('inspector_main');\n    loadedInspectorMainModule = await import('./inspector_main.js');\n  }\n  return loadedInspectorMainModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'rendering',\n  title: (): Platform.UIString.LocalizedString => ls`Rendering`,\n  commandPrompt: 'Show Rendering',\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 50,\n  async loadView() {\n    const InspectorMain = await loadInspectorMainModule();\n    return InspectorMain.RenderingOptions.RenderingOptionsView.instance();\n  },\n  tags: [\n    (): Platform.UIString.LocalizedString => ls`paint`,\n    (): Platform.UIString.LocalizedString => ls`layout`,\n    (): Platform.UIString.LocalizedString => ls`fps`,\n    (): Platform.UIString.LocalizedString => ls`CSS media type`,\n    (): Platform.UIString.LocalizedString => ls`CSS media feature`,\n    (): Platform.UIString.LocalizedString => ls`vision deficiency`,\n    (): Platform.UIString.LocalizedString => ls`color vision deficiency`,\n  ],\n});\n"]}