{"version":3,"file":"CSSOverviewCompletedView.js","sourceRoot":"","sources":["../../../../../front_end/css_overview/CSSOverviewCompletedView.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Components from '../components/components.js';\nimport * as DataGrid from '../data_grid/data_grid.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';\nimport * as Root from '../root/root.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as UI from '../ui/ui.js';\n\nimport {Events, OverviewController} from './CSSOverviewController.js';  // eslint-disable-line no-unused-vars\nimport {CSSOverviewSidebarPanel, SidebarEvents} from './CSSOverviewSidebarPanel.js';\nimport {UnusedDeclaration} from './CSSOverviewUnusedDeclarations.js';  // eslint-disable-line no-unused-vars\n\nexport const UIStrings = {\n  /**\n  *@description Label for the summary in the CSS Overview report\n  */\n  overviewSummary: 'Overview summary',\n  /**\n  *@description Title of colors subsection in the CSS Overview Panel\n  */\n  colors: 'Colors',\n  /**\n  *@description Title of font info subsection in the CSS Overview Panel\n  */\n  fontInfo: 'Font info',\n  /**\n  *@description Label to denote unused declarations in the target page\n  */\n  unusedDeclarations: 'Unused declarations',\n  /**\n  *@description Label for the number of media queries in the CSS Overview report\n  */\n  mediaQueries: 'Media queries',\n  /**\n  *@description Title of the Elements Panel\n  */\n  elements: 'Elements',\n  /**\n  *@description Label for the number of External stylesheets in the CSS Overview report\n  */\n  externalStylesheets: 'External stylesheets',\n  /**\n  *@description Label for the number of inline style elements in the CSS Overview report\n  */\n  inlineStyleElements: 'Inline style elements',\n  /**\n  *@description Label for the number of style rules in CSS Overview report\n  */\n  styleRules: 'Style rules',\n  /**\n  *@description Label for the number of type selectors in the CSS Overview report\n  */\n  typeSelectors: 'Type selectors',\n  /**\n  *@description Label for the number of ID selectors in the CSS Overview report\n  */\n  idSelectors: 'ID selectors',\n  /**\n  *@description Label for the number of class selectors in the CSS Overview report\n  */\n  classSelectors: 'Class selectors',\n  /**\n  *@description Label for the number of universal selectors in the CSS Overview report\n  */\n  universalSelectors: 'Universal selectors',\n  /**\n  *@description Label for the number of Attribute selectors in the CSS Overview report\n  */\n  attributeSelectors: 'Attribute selectors',\n  /**\n  *@description Label for the number of non-simple selectors in the CSS Overview report\n  */\n  nonsimpleSelectors: 'Non-simple selectors',\n  /**\n  *@description Label for unique background colors in the CSS Overview Panel\n  *@example {32} PH1\n  */\n  backgroundColorsS: 'Background colors: {PH1}',\n  /**\n  *@description Label for unique text colors in the CSS Overview Panel\n  *@example {32} PH1\n  */\n  textColorsS: 'Text colors: {PH1}',\n  /**\n  *@description Label for unique fill colors in the CSS Overview Panel\n  *@example {32} PH1\n  */\n  fillColorsS: 'Fill colors: {PH1}',\n  /**\n  *@description Label for unique border colors in the CSS Overview Panel\n  *@example {32} PH1\n  */\n  borderColorsS: 'Border colors: {PH1}',\n  /**\n  *@description Label to indicate that there are no fonts in use\n  */\n  thereAreNoFonts: 'There are no fonts.',\n  /**\n  *@description Message to show when no unused declarations in the target page\n  */\n  thereAreNoUnusedDeclarations: 'There are no unused declarations.',\n  /**\n  *@description Message to show when no media queries are found in the target page\n  */\n  thereAreNoMediaQueries: 'There are no media queries.',\n  /**\n  *@description Title of the Drawer for contrast issues in the CSS Overview Panel\n  */\n  contrastIssues: 'Contrast issues',\n  /**\n  *@description Singular of the term 'occurrence'\n  */\n  occurrence: 'occurrence',\n  /**\n  *@description Plural of the term 'occurrence'\n  */\n  occurrences: 'occurrences',\n  /**\n  *@description Button title denoting the number of items found\n  *@example {12} PH1\n  *@example {items} PH2\n  */\n  sS: '{PH1} {PH2}',\n  /**\n  *@description Section header for contrast issues in the CSS Overview Panel\n  *@example {1} PH1\n  */\n  contrastIssuesS: 'Contrast issues: {PH1}',\n  /**\n  *@description Title of the button for a contrast issue in the CSS Overview Panel\n  *@example {#333333} PH1\n  *@example {#333333} PH2\n  *@example {2} PH3\n  */\n  textColorSOverSBackgroundResults: 'Text color {PH1} over {PH2} background results in low contrast for {PH3} elements',\n  /**\n  *@description Label aa text content in Contrast Details of the Color Picker\n  */\n  aa: 'AA',\n  /**\n  *@description Label aaa text content in Contrast Details of the Color Picker\n  */\n  aaa: 'AAA',\n  /**\n  *@description Label for the APCA contrast in Color Picker\n  */\n  apca: 'APCA',\n  /**\n  *@description Label for the column in the element list in the CSS Overview report\n  */\n  element: 'Element',\n  /**\n  *@description Column header title denoting which declaration is unused\n  */\n  declaration: 'Declaration',\n  /**\n  *@description Text for the source of something\n  */\n  source: 'Source',\n  /**\n  *@description Text of a DOM element in Contrast Details of the Color Picker\n  */\n  contrastRatio: 'Contrast ratio',\n  /**\n  *@description Data grid name for CSS Overview Elements Data Grids\n  */\n  cssOverviewElements: 'CSS Overview Elements',\n  /**\n  *@description Title of the button to show the element in the CSS Overview panel\n  */\n  showElement: 'Show element',\n};\nconst str_ = i18n.i18n.registerUIStrings('css_overview/CSSOverviewCompletedView.js', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/**\n * @typedef {!Map<string,!Set<number>>}\n */\n// @ts-ignore typedef\nexport let NodeStyleStats;\n\n/**\n * @typedef {{\n *  nodeId: number,\n *  contrastRatio: number,\n *  textColor: Common.Color.Color,\n *  backgroundColor: Common.Color.Color,\n *  thresholdsViolated: !{aa: boolean, aaa:boolean, apca: boolean},\n * }}\n */\n// @ts-ignore typedef\nexport let ContrastIssue;\n\n/**\n * @typedef {{\n * backgroundColors: NodeStyleStats,\n * textColors: NodeStyleStats,\n * textColorContrastIssues: !Map<string, !Array<!ContrastIssue>>,\n * fillColors: NodeStyleStats,\n * borderColors: NodeStyleStats,\n * globalStyleStats: !{\n *  styleRules: number,\n *  inlineStyles: number,\n *  externalSheets: number,\n *  stats: !{\n *    type: number,\n *    class: number,\n *    id: number,\n *    universal: number,\n *    attribute: number,\n *    nonSimple: number\n *  }\n * },\n * fontInfo:  FontInfo,\n * elementCount: number,\n * mediaQueries: !Map<string, !Array<!Protocol.CSS.CSSMedia>>,\n * unusedDeclarations: !Map<string, !Array<!UnusedDeclaration>>,\n * }}\n */\n// @ts-ignore typedef\nexport let OverviewData;\n\n/**\n * @typedef {!Map<string, !Map<string, !Map<string, !Array<number>>>>}\n */\n// @ts-ignore typedef\nexport let FontInfo;\n\n/**\n * @param {!Common.Color.Color} color\n */\nfunction getBorderString(color) {\n  let [h, s, l] = color.hsla();\n  h = Math.round(h * 360);\n  s = Math.round(s * 100);\n  l = Math.round(l * 100);\n\n  // Reduce the lightness of the border to make sure that there's always a visible outline.\n  l = Math.max(0, l - 15);\n\n  return `1px solid hsl(${h}deg ${s}% ${l}%)`;\n}\n\nexport class CSSOverviewCompletedView extends UI.Panel.PanelWithSidebar {\n  /**\n   * @param {!OverviewController} controller\n   * @param {!SDK.SDKModel.Target} target\n   */\n  constructor(controller, target) {\n    super('css_overview_completed_view');\n    this.registerRequiredCSS('css_overview/cssOverviewCompletedView.css', {enableLegacyPatching: false});\n\n    this._controller = controller;\n    this._formatter = new Intl.NumberFormat('en-US');\n\n    this._mainContainer = new UI.SplitWidget.SplitWidget(true, true);\n    this._resultsContainer = new UI.Widget.VBox();\n    this._elementContainer = new DetailsView();\n\n    // If closing the last tab, collapse the sidebar.\n    this._elementContainer.addEventListener(UI.TabbedPane.Events.TabClosed, evt => {\n      if (evt.data === 0) {\n        this._mainContainer.setSidebarMinimized(true);\n      }\n    });\n\n    // Dupe the styles into the main container because of the shadow root will prevent outer styles.\n    this._mainContainer.registerRequiredCSS('css_overview/cssOverviewCompletedView.css', {enableLegacyPatching: true});\n\n    this._mainContainer.setMainWidget(this._resultsContainer);\n    this._mainContainer.setSidebarWidget(this._elementContainer);\n    this._mainContainer.setVertical(false);\n    this._mainContainer.setSecondIsSidebar(true);\n    this._mainContainer.setSidebarMinimized(true);\n\n    this._sideBar = new CSSOverviewSidebarPanel();\n    this.splitWidget().setSidebarWidget(this._sideBar);\n    this.splitWidget().setMainWidget(this._mainContainer);\n\n    const cssModel = target.model(SDK.CSSModel.CSSModel);\n    const domModel = target.model(SDK.DOMModel.DOMModel);\n    if (!cssModel || !domModel) {\n      throw new Error('Target must provide CSS and DOM models');\n    }\n    this._cssModel = cssModel;\n    this._domModel = domModel;\n    this._domAgent = target.domAgent();\n    this._linkifier = new Components.Linkifier.Linkifier(/* maxLinkLength */ 20, /* useLinkDecorator */ true);\n\n    this._viewMap = new Map();\n\n    this._sideBar.addItem(i18nString(UIStrings.overviewSummary), 'summary');\n    this._sideBar.addItem(i18nString(UIStrings.colors), 'colors');\n    this._sideBar.addItem(i18nString(UIStrings.fontInfo), 'font-info');\n    this._sideBar.addItem(i18nString(UIStrings.unusedDeclarations), 'unused-declarations');\n    this._sideBar.addItem(i18nString(UIStrings.mediaQueries), 'media-queries');\n    this._sideBar.select('summary');\n\n    this._sideBar.addEventListener(SidebarEvents.ItemSelected, this._sideBarItemSelected, this);\n    this._sideBar.addEventListener(SidebarEvents.Reset, this._sideBarReset, this);\n    this._controller.addEventListener(Events.Reset, this._reset, this);\n    this._controller.addEventListener(Events.PopulateNodes, this._createElementsView, this);\n    this._resultsContainer.element.addEventListener('click', this._onClick.bind(this));\n\n    this._data = null;\n  }\n\n\n  /**\n   * @override\n   */\n  wasShown() {\n    super.wasShown();\n\n    // TODO(paullewis): update the links in the panels in case source has been .\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _sideBarItemSelected(event) {\n    const data = /** @type {string} */ (event.data);\n    const section = /** @type {!UI.Fragment.Fragment}*/ (this._fragment).$(data);\n    if (!section) {\n      return;\n    }\n\n    section.scrollIntoView();\n  }\n\n  _sideBarReset() {\n    this._controller.dispatchEventToListeners(Events.Reset);\n  }\n\n  _reset() {\n    this._resultsContainer.element.removeChildren();\n    this._mainContainer.setSidebarMinimized(true);\n    this._elementContainer.closeTabs();\n    this._viewMap = new Map();\n    CSSOverviewCompletedView.pushedNodes.clear();\n    this._sideBar.select('summary');\n  }\n\n  /**\n   * @param {!Event} evt\n   */\n  _onClick(evt) {\n    if (!evt.target) {\n      return;\n    }\n    const target = /** @type {!HTMLElement} */ (evt.target);\n    const dataset = target.dataset;\n\n    const type = dataset.type;\n    if (!type || !this._data) {\n      return;\n    }\n\n    let payload;\n    switch (type) {\n      case 'contrast': {\n        const section = dataset.section;\n        const key = dataset.key;\n\n        if (!key) {\n          return;\n        }\n\n        // Remap the Set to an object that is the same shape as the unused declarations.\n        const nodes = this._data.textColorContrastIssues.get(key) || [];\n        payload = {type, key, nodes, section};\n        break;\n      }\n      case 'color': {\n        const color = dataset.color;\n        const section = dataset.section;\n        if (!color) {\n          return;\n        }\n\n        let nodes;\n        switch (section) {\n          case 'text':\n            nodes = this._data.textColors.get(color);\n            break;\n\n          case 'background':\n            nodes = this._data.backgroundColors.get(color);\n            break;\n\n          case 'fill':\n            nodes = this._data.fillColors.get(color);\n            break;\n\n          case 'border':\n            nodes = this._data.borderColors.get(color);\n            break;\n        }\n\n        if (!nodes) {\n          return;\n        }\n\n        // Remap the Set to an object that is the same shape as the unused declarations.\n        nodes = Array.from(nodes).map(nodeId => ({nodeId}));\n        payload = {type, color, nodes, section};\n        break;\n      }\n\n      case 'unused-declarations': {\n        const declaration = dataset.declaration;\n        if (!declaration) {\n          return;\n        }\n        const nodes = this._data.unusedDeclarations.get(declaration);\n        if (!nodes) {\n          return;\n        }\n\n        payload = {type, declaration, nodes};\n        break;\n      }\n\n      case 'media-queries': {\n        const text = dataset.text;\n        if (!text) {\n          return;\n        }\n        const nodes = this._data.mediaQueries.get(text);\n        if (!nodes) {\n          return;\n        }\n\n        payload = {type, text, nodes};\n        break;\n      }\n\n      case 'font-info': {\n        const value = dataset.value;\n        if (!dataset.path) {\n          return;\n        }\n\n        const [fontFamily, fontMetric] = dataset.path.split('/');\n        if (!value) {\n          return;\n        }\n\n        const fontFamilyInfo = this._data.fontInfo.get(fontFamily);\n        if (!fontFamilyInfo) {\n          return;\n        }\n\n        const fontMetricInfo = fontFamilyInfo.get(fontMetric);\n        if (!fontMetricInfo) {\n          return;\n        }\n\n        const nodesIds = /** @type {!Array<number>} */ (fontMetricInfo.get(value));\n        if (!nodesIds) {\n          return;\n        }\n\n        const nodes = nodesIds.map(nodeId => ({nodeId}));\n        const name = `${value} (${fontFamily}, ${fontMetric})`;\n        payload = {type, name, nodes};\n        break;\n      }\n\n      default:\n        return;\n    }\n\n    evt.consume();\n    this._controller.dispatchEventToListeners(Events.PopulateNodes, payload);\n    this._mainContainer.setSidebarMinimized(false);\n  }\n\n  /**\n   * @param {!Event} evt\n   */\n  _onMouseOver(evt) {\n    // Traverse the event path on the grid to find the nearest element with a backend node ID attached. Use\n    // that for the highlighting.\n    const node =\n        (/** @type {!Array<!HTMLElement>} */ (evt.composedPath())).find(el => el.dataset && el.dataset.backendNodeId);\n    if (!node) {\n      return;\n    }\n\n    const backendNodeId = Number(node.dataset.backendNodeId);\n    this._controller.dispatchEventToListeners(Events.RequestNodeHighlight, backendNodeId);\n  }\n\n  /**\n   * @param {!OverviewData} data\n   */\n  async _render(data) {\n    if (!data || !('backgroundColors' in data) || !('textColors' in data)) {\n      return;\n    }\n\n    this._data = data;\n    const {\n      elementCount,\n      backgroundColors,\n      textColors,\n      textColorContrastIssues,\n      fillColors,\n      borderColors,\n      globalStyleStats,\n      mediaQueries,\n      unusedDeclarations,\n      fontInfo\n    } = this._data;\n\n    // Convert rgb values from the computed styles to either undefined or HEX(A) strings.\n    const sortedBackgroundColors = this._sortColorsByLuminance(backgroundColors);\n    const sortedTextColors = this._sortColorsByLuminance(textColors);\n    const sortedFillColors = this._sortColorsByLuminance(fillColors);\n    const sortedBorderColors = this._sortColorsByLuminance(borderColors);\n\n    this._fragment = UI.Fragment.Fragment.build`\n    <div class=\"vbox overview-completed-view\">\n      <div $=\"summary\" class=\"results-section horizontally-padded summary\">\n        <h1>${i18nString(UIStrings.overviewSummary)}</h1>\n\n        <ul>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.elements)}</div>\n            <div class=\"value\">${this._formatter.format(elementCount)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.externalStylesheets)}</div>\n            <div class=\"value\">${this._formatter.format(globalStyleStats.externalSheets)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.inlineStyleElements)}</div>\n            <div class=\"value\">${this._formatter.format(globalStyleStats.inlineStyles)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.styleRules)}</div>\n            <div class=\"value\">${this._formatter.format(globalStyleStats.styleRules)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.mediaQueries)}</div>\n            <div class=\"value\">${this._formatter.format(mediaQueries.size)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.typeSelectors)}</div>\n            <div class=\"value\">${this._formatter.format(globalStyleStats.stats.type)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.idSelectors)}</div>\n            <div class=\"value\">${this._formatter.format(globalStyleStats.stats.id)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.classSelectors)}</div>\n            <div class=\"value\">${this._formatter.format(globalStyleStats.stats.class)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.universalSelectors)}</div>\n            <div class=\"value\">${this._formatter.format(globalStyleStats.stats.universal)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.attributeSelectors)}</div>\n            <div class=\"value\">${this._formatter.format(globalStyleStats.stats.attribute)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.nonsimpleSelectors)}</div>\n            <div class=\"value\">${this._formatter.format(globalStyleStats.stats.nonSimple)}</div>\n          </li>\n        </ul>\n      </div>\n\n      <div $=\"colors\" class=\"results-section horizontally-padded colors\">\n        <h1>${i18nString(UIStrings.colors)}</h1>\n        <h2>${i18nString(UIStrings.backgroundColorsS, {\n      PH1: sortedBackgroundColors.length\n    })}</h2>\n        <ul>\n          ${sortedBackgroundColors.map(this._colorsToFragment.bind(this, 'background'))}\n        </ul>\n\n        <h2>${i18nString(UIStrings.textColorsS, {\n      PH1: sortedTextColors.length\n    })}</h2>\n        <ul>\n          ${sortedTextColors.map(this._colorsToFragment.bind(this, 'text'))}\n        </ul>\n\n        ${textColorContrastIssues.size > 0 ? this._contrastIssuesToFragment(textColorContrastIssues) : ''}\n\n        <h2>${i18nString(UIStrings.fillColorsS, {\n      PH1: sortedFillColors.length\n    })}</h2>\n        <ul>\n          ${sortedFillColors.map(this._colorsToFragment.bind(this, 'fill'))}\n        </ul>\n\n        <h2>${i18nString(UIStrings.borderColorsS, {\n      PH1: sortedBorderColors.length\n    })}</h2>\n        <ul>\n          ${sortedBorderColors.map(this._colorsToFragment.bind(this, 'border'))}\n        </ul>\n      </div>\n\n      <div $=\"font-info\" class=\"results-section font-info\">\n        <h1>${i18nString(UIStrings.fontInfo)}</h1>\n        ${\n        fontInfo.size > 0 ? this._fontInfoToFragment(fontInfo) :\n                            UI.Fragment.Fragment.build`<div>${i18nString(UIStrings.thereAreNoFonts)}</div>`}\n      </div>\n\n      <div $=\"unused-declarations\" class=\"results-section unused-declarations\">\n        <h1>${i18nString(UIStrings.unusedDeclarations)}</h1>\n        ${\n        unusedDeclarations.size > 0 ? this._groupToFragment(unusedDeclarations, 'unused-declarations', 'declaration') :\n                                      UI.Fragment.Fragment.build`<div class=\"horizontally-padded\">${\n                                          i18nString(UIStrings.thereAreNoUnusedDeclarations)}</div>`}\n      </div>\n\n      <div $=\"media-queries\" class=\"results-section media-queries\">\n        <h1>${i18nString(UIStrings.mediaQueries)}</h1>\n        ${\n        mediaQueries.size > 0 ? this._groupToFragment(mediaQueries, 'media-queries', 'text') :\n                                UI.Fragment.Fragment.build`<div class=\"horizontally-padded\">${\n                                    i18nString(UIStrings.thereAreNoMediaQueries)}</div>`}\n      </div>\n    </div>`;\n\n    this._resultsContainer.element.appendChild(this._fragment.element());\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} evt\n   */\n  _createElementsView(evt) {\n    const {type, nodes} = evt.data;\n\n    let id = '';\n    let tabTitle = '';\n\n    switch (type) {\n      case 'contrast': {\n        const {section, key} = evt.data;\n        id = `${section}-${key}`;\n        tabTitle = i18nString(UIStrings.contrastIssues);\n        break;\n      }\n\n      case 'color': {\n        const {section, color} = evt.data;\n        id = `${section}-${color}`;\n        tabTitle = `${color.toUpperCase()} (${section})`;\n        break;\n      }\n\n      case 'unused-declarations': {\n        const {declaration} = evt.data;\n        id = `${declaration}`;\n        tabTitle = `${declaration}`;\n        break;\n      }\n\n      case 'media-queries': {\n        const {text} = evt.data;\n        id = `${text}`;\n        tabTitle = `${text}`;\n        break;\n      }\n\n      case 'font-info': {\n        const {name} = evt.data;\n        id = `${name}`;\n        tabTitle = `${name}`;\n        break;\n      }\n    }\n\n    let view = this._viewMap.get(id);\n    if (!view) {\n      view = new ElementDetailsView(this._controller, this._domModel, this._cssModel, this._linkifier);\n      view.populateNodes(nodes);\n      this._viewMap.set(id, view);\n    }\n\n    this._elementContainer.appendTab(id, tabTitle, view, true);\n  }\n\n  /**\n   * @param {!FontInfo} fontInfo\n   */\n  _fontInfoToFragment(fontInfo) {\n    const fonts = Array.from(fontInfo.entries());\n    return UI.Fragment.Fragment.build`\n      ${fonts.map(([font, fontMetrics]) => {\n      return UI.Fragment.Fragment.build\n      `<section class=\"font-family\"><h2>${font}</h2> ${this._fontMetricsToFragment(font, fontMetrics)}</section>`;\n    })}\n    `;\n  }\n\n  /**\n   * @param {string} font\n   * @param {!Map<string, !Map<string, !Array<number>>>} fontMetrics\n   */\n  _fontMetricsToFragment(font, fontMetrics) {\n    const fontMetricInfo = Array.from(fontMetrics.entries());\n\n    return UI.Fragment.Fragment.build`\n      <div class=\"font-metric\">\n      ${fontMetricInfo.map(([label, values]) => {\n      const sanitizedPath = `${font}/${label}`;\n      return UI.Fragment.Fragment.build`\n          <div>\n            <h3>${label}</h3>\n            ${this._groupToFragment(values, 'font-info', 'value', sanitizedPath)}\n          </div>`;\n    })}\n      </div>`;\n  }\n\n  /**\n   * @param {!Map<string, !Array<number|!UnusedDeclaration|!Protocol.CSS.CSSMedia>>} items\n   * @param {string} type\n   * @param {string} dataLabel\n   * @param {string} path\n   */\n  _groupToFragment(items, type, dataLabel, path = '') {\n    // Sort by number of items descending.\n    const values = Array.from(items.entries()).sort((d1, d2) => {\n      const v1Nodes = d1[1];\n      const v2Nodes = d2[1];\n      return v2Nodes.length - v1Nodes.length;\n    });\n\n    const total = values.reduce((prev, curr) => prev + curr[1].length, 0);\n\n    return UI.Fragment.Fragment.build`<ul>\n    ${values.map(([title, nodes]) => {\n      const width = 100 * nodes.length / total;\n      const itemLabel = nodes.length === 1 ? i18nString(UIStrings.occurrence) : i18nString(UIStrings.occurrences);\n\n      return UI.Fragment.Fragment.build`<li>\n        <div class=\"title\">${title}</div>\n        <button data-type=\"${type}\" data-path=\"${path}\" data-${dataLabel}=\"${title}\">\n          <div class=\"details\">${i18nString(UIStrings.sS, {\n        PH1: nodes.length,\n        PH2: itemLabel\n      })}</div>\n          <div class=\"bar-container\">\n            <div class=\"bar\" style=\"width: ${width}%\"></div>\n          </div>\n        </button>\n      </li>`;\n    })}\n    </ul>`;\n  }\n\n  /**\n   * @param {!Map<string, !Array<!ContrastIssue>>} issues\n   */\n  _contrastIssuesToFragment(issues) {\n    return UI.Fragment.Fragment.build`\n      <h2>${i18nString(UIStrings.contrastIssuesS, {\n      PH1: issues.size\n    })}</h2>\n      <ul>\n        ${[...issues.entries()].map(([key, value]) => this._contrastIssueToFragment(key, value))}\n      </ul>\n    `;\n  }\n\n  /**\n   * @param {string} key\n   * @param {!Array<!ContrastIssue>} issues\n   */\n  _contrastIssueToFragment(key, issues) {\n    console.assert(issues.length > 0);\n\n    let minContrastIssue = issues[0];\n    for (const issue of issues) {\n      // APCA contrast can be a negative value that is to be displayed. But the\n      // absolute value is used to compare against the threshold. Therefore, the min\n      // absolute value is the worst contrast.\n      if (Math.abs(issue.contrastRatio) < Math.abs(minContrastIssue.contrastRatio)) {\n        minContrastIssue = issue;\n      }\n    }\n\n    const color = /** @type { string }*/ (minContrastIssue.textColor.asString(Common.Color.Format.HEXA));\n    const backgroundColor =\n        /** @type { string }*/ (minContrastIssue.backgroundColor.asString(Common.Color.Format.HEXA));\n\n    const showAPCA = Root.Runtime.experiments.isEnabled('APCA');\n\n    const blockFragment = UI.Fragment.Fragment.build`<li>\n      <button\n        title=\"${i18nString(UIStrings.textColorSOverSBackgroundResults, {\n      PH1: color,\n      PH2: backgroundColor,\n      PH3: issues.length\n    })}\"\n        data-type=\"contrast\" data-key=\"${key}\" data-section=\"contrast\" class=\"block\" $=\"color\">\n        Text\n      </button>\n      <div class=\"block-title\">\n        <div class=\"contrast-warning hidden\" $=\"aa\"><span class=\"threshold-label\">${\n        i18nString(UIStrings.aa)}</span></div>\n        <div class=\"contrast-warning hidden\" $=\"aaa\"><span class=\"threshold-label\">${\n        i18nString(UIStrings.aaa)}</span></div>\n        <div class=\"contrast-warning hidden\" $=\"apca\"><span class=\"threshold-label\">${\n        i18nString(UIStrings.apca)}</span></div>\n      </div>\n    </li>`;\n\n    if (showAPCA) {\n      const apca = /** @type {!HTMLElement} */ (blockFragment.$('apca'));\n      if (minContrastIssue.thresholdsViolated.apca) {\n        apca.appendChild(UI.Icon.Icon.create('smallicon-no'));\n      } else {\n        apca.appendChild(UI.Icon.Icon.create('smallicon-checkmark-square'));\n      }\n      apca.classList.remove('hidden');\n    } else {\n      const aa = /** @type {!HTMLElement} */ (blockFragment.$('aa'));\n      if (minContrastIssue.thresholdsViolated.aa) {\n        aa.appendChild(UI.Icon.Icon.create('smallicon-no'));\n      } else {\n        aa.appendChild(UI.Icon.Icon.create('smallicon-checkmark-square'));\n      }\n      const aaa = /** @type {!HTMLElement} */ (blockFragment.$('aaa'));\n      if (minContrastIssue.thresholdsViolated.aaa) {\n        aaa.appendChild(UI.Icon.Icon.create('smallicon-no'));\n      } else {\n        aaa.appendChild(UI.Icon.Icon.create('smallicon-checkmark-square'));\n      }\n      aa.classList.remove('hidden');\n      aaa.classList.remove('hidden');\n    }\n\n    const block = /** @type {!HTMLElement} */ (blockFragment.$('color'));\n    block.style.backgroundColor = backgroundColor;\n    block.style.color = color;\n    block.style.border = getBorderString(minContrastIssue.backgroundColor);\n\n    return blockFragment;\n  }\n\n  /**\n   * @param {string} section\n   * @param {string} color\n   */\n  _colorsToFragment(section, color) {\n    const blockFragment = UI.Fragment.Fragment.build`<li>\n      <button data-type=\"color\" data-color=\"${color}\" data-section=\"${section}\" class=\"block\" $=\"color\"></button>\n      <div class=\"block-title\">${color}</div>\n    </li>`;\n\n    const block = /** @type {!HTMLElement} */ (blockFragment.$('color'));\n    block.style.backgroundColor = color;\n\n    const borderColor = Common.Color.Color.parse(color);\n    if (!borderColor) {\n      return;\n    }\n    block.style.border = getBorderString(borderColor);\n\n    return blockFragment;\n  }\n\n  /**\n   * @param {!NodeStyleStats} srcColors\n   */\n  _sortColorsByLuminance(srcColors) {\n    return Array.from(srcColors.keys()).sort((colA, colB) => {\n      const colorA = Common.Color.Color.parse(colA);\n      const colorB = Common.Color.Color.parse(colB);\n      if (!colorA || !colorB) {\n        return 0;\n      }\n      return Common.ColorUtils.luminance(colorB.rgba()) - Common.ColorUtils.luminance(colorA.rgba());\n    });\n  }\n\n  /**\n   * @param {!OverviewData} data\n   */\n  setOverviewData(data) {\n    this._render(data);\n  }\n}\n\nCSSOverviewCompletedView.pushedNodes = new Set();\n\nexport class DetailsView extends UI.Widget.VBox {\n  constructor() {\n    super();\n\n    this._tabbedPane = new UI.TabbedPane.TabbedPane();\n    this._tabbedPane.show(this.element);\n    this._tabbedPane.addEventListener(UI.TabbedPane.Events.TabClosed, () => {\n      this.dispatchEventToListeners(UI.TabbedPane.Events.TabClosed, this._tabbedPane.tabIds().length);\n    });\n  }\n\n  /**\n   * @param {string} id\n   * @param {string} tabTitle\n   * @param {!UI.Widget.Widget} view\n   * @param {boolean=} isCloseable\n   */\n  appendTab(id, tabTitle, view, isCloseable) {\n    if (!this._tabbedPane.hasTab(id)) {\n      this._tabbedPane.appendTab(id, tabTitle, view, undefined, undefined, isCloseable);\n    }\n\n    this._tabbedPane.selectTab(id);\n  }\n\n  closeTabs() {\n    this._tabbedPane.closeTabs(this._tabbedPane.tabIds());\n  }\n}\n\nexport class ElementDetailsView extends UI.Widget.Widget {\n  /**\n   * @param {!OverviewController} controller\n   * @param {!SDK.DOMModel.DOMModel} domModel\n   * @param {!SDK.CSSModel.CSSModel} cssModel\n   * @param {!Components.Linkifier.Linkifier} linkifier\n   */\n  constructor(controller, domModel, cssModel, linkifier) {\n    super();\n\n    this._controller = controller;\n    this._domModel = domModel;\n    this._cssModel = cssModel;\n    this._linkifier = linkifier;\n\n    this._elementGridColumns = [\n      {\n        id: 'nodeId',\n        title: i18nString(UIStrings.element),\n        sortable: true,\n        weight: 50,\n        titleDOMFragment: undefined,\n        sort: undefined,\n        align: undefined,\n        width: undefined,\n        fixedWidth: undefined,\n        editable: undefined,\n        nonSelectable: undefined,\n        longText: undefined,\n        disclosure: undefined,\n        allowInSortByEvenWhenHidden: undefined,\n        dataType: undefined,\n        defaultWeight: undefined,\n      },\n      {\n        id: 'declaration',\n        title: i18nString(UIStrings.declaration),\n        sortable: true,\n        weight: 50,\n        titleDOMFragment: undefined,\n        sort: undefined,\n        align: undefined,\n        width: undefined,\n        fixedWidth: undefined,\n        editable: undefined,\n        nonSelectable: undefined,\n        longText: undefined,\n        disclosure: undefined,\n        allowInSortByEvenWhenHidden: undefined,\n        dataType: undefined,\n        defaultWeight: undefined,\n      },\n      {\n        id: 'sourceURL',\n        title: i18nString(UIStrings.source),\n        sortable: false,\n        weight: 100,\n        titleDOMFragment: undefined,\n        sort: undefined,\n        align: undefined,\n        width: undefined,\n        fixedWidth: undefined,\n        editable: undefined,\n        nonSelectable: undefined,\n        longText: undefined,\n        disclosure: undefined,\n        allowInSortByEvenWhenHidden: undefined,\n        dataType: undefined,\n        defaultWeight: undefined,\n      },\n      {\n        id: 'contrastRatio',\n        title: i18nString(UIStrings.contrastRatio),\n        sortable: true,\n        weight: 25,\n        titleDOMFragment: undefined,\n        sort: undefined,\n        align: undefined,\n        width: '150px',\n        fixedWidth: true,\n        editable: undefined,\n        nonSelectable: undefined,\n        longText: undefined,\n        disclosure: undefined,\n        allowInSortByEvenWhenHidden: undefined,\n        dataType: undefined,\n        defaultWeight: undefined,\n      },\n    ];\n\n    this._elementGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n      displayName: i18nString(UIStrings.cssOverviewElements),\n      columns: this._elementGridColumns,\n      editCallback: undefined,\n      deleteCallback: undefined,\n      refreshCallback: undefined\n    });\n    this._elementGrid.element.classList.add('element-grid');\n    this._elementGrid.element.addEventListener('mouseover', this._onMouseOver.bind(this));\n    this._elementGrid.setStriped(true);\n    this._elementGrid.addEventListener(\n        DataGrid.DataGrid.Events.SortingChanged, this._sortMediaQueryDataGrid.bind(this));\n\n    this.element.appendChild(this._elementGrid.element);\n  }\n\n  _sortMediaQueryDataGrid() {\n    const sortColumnId = this._elementGrid.sortColumnId();\n    if (!sortColumnId) {\n      return;\n    }\n\n    const comparator = DataGrid.SortableDataGrid.SortableDataGrid.StringComparator.bind(null, sortColumnId);\n    this._elementGrid.sortNodes(comparator, !this._elementGrid.isSortOrderAscending());\n  }\n\n  /**\n   * @param {!Event} evt\n   */\n  _onMouseOver(evt) {\n    // Traverse the event path on the grid to find the nearest element with a backend node ID attached. Use\n    // that for the highlighting.\n    const node =\n        (/** @type {!Array<!HTMLElement>} */ (evt.composedPath())).find(el => el.dataset && el.dataset.backendNodeId);\n    if (!node) {\n      return;\n    }\n\n    const backendNodeId = Number(node.dataset.backendNodeId);\n    this._controller.dispatchEventToListeners(Events.RequestNodeHighlight, backendNodeId);\n  }\n\n  /**\n   * @param {!Array<!Object<string, *>>} data\n   */\n  async populateNodes(data) {\n    this._elementGrid.rootNode().removeChildren();\n\n    if (!data.length) {\n      return;\n    }\n\n    const [firstItem] = data;\n    const visibility = new Set();\n    firstItem.nodeId && visibility.add('nodeId');\n    firstItem.declaration && visibility.add('declaration');\n    firstItem.sourceURL && visibility.add('sourceURL');\n    firstItem.contrastRatio && visibility.add('contrastRatio');\n\n    let relatedNodesMap;\n    if (visibility.has('nodeId')) {\n      // Grab the nodes from the frontend, but only those that have not been\n      // retrieved already.\n      const nodeIds = /** @type {!Set<number>} */ (data.reduce((prev, curr) => {\n        if (CSSOverviewCompletedView.pushedNodes.has(curr.nodeId)) {\n          return prev;\n        }\n\n        CSSOverviewCompletedView.pushedNodes.add(curr.nodeId);\n        return prev.add(curr.nodeId);\n      }, new Set()));\n      relatedNodesMap = await this._domModel.pushNodesByBackendIdsToFrontend(nodeIds);\n    }\n\n    for (const item of data) {\n      if (visibility.has('nodeId')) {\n        if (!relatedNodesMap) {\n          continue;\n        }\n        const frontendNode = relatedNodesMap.get(item.nodeId);\n        if (!frontendNode) {\n          continue;\n        }\n\n        item.node = frontendNode;\n      }\n\n      const node = new ElementNode(this._elementGrid, item, this._linkifier, this._cssModel);\n      node.selectable = false;\n      this._elementGrid.insertChild(node);\n    }\n\n    this._elementGrid.setColumnsVisiblity(visibility);\n    this._elementGrid.renderInline();\n    this._elementGrid.wasShown();\n  }\n}\n\n/**\n * @extends {DataGrid.SortableDataGrid.SortableDataGridNode<!ElementNode>}\n */\nexport class ElementNode extends DataGrid.SortableDataGrid.SortableDataGridNode {\n  /**\n   * @param {!DataGrid.SortableDataGrid.SortableDataGrid<!ElementNode>} dataGrid\n   * @param {!Object<string,*>} data\n   * @param {!Components.Linkifier.Linkifier} linkifier\n   * @param {!SDK.CSSModel.CSSModel} cssModel\n   */\n  constructor(dataGrid, data, linkifier, cssModel) {\n    super(dataGrid, data.hasChildren);\n\n    this.data = data;\n    this._linkifier = linkifier;\n    this._cssModel = cssModel;\n  }\n\n  /**\n   * @override\n   * @param {string} columnId\n   * @return {!HTMLElement}\n   */\n  createCell(columnId) {\n    // Nodes.\n    if (columnId === 'nodeId') {\n      const cell = this.createTD(columnId);\n      cell.textContent = '...';\n\n      Common.Linkifier.Linkifier.linkify(this.data.node).then(link => {\n        cell.textContent = '';\n        /** @type {!HTMLElement} */ (link).dataset.backendNodeId = this.data.node.backendNodeId();\n        cell.appendChild(link);\n        const button = document.createElement('button');\n        button.classList.add('show-element');\n        UI.Tooltip.Tooltip.install(button, i18nString(UIStrings.showElement));\n        button.tabIndex = 0;\n        button.onclick = () => this.data.node.scrollIntoView();\n        cell.appendChild(button);\n      });\n      return cell;\n    }\n\n    // Links to CSS.\n    if (columnId === 'sourceURL') {\n      const cell = this.createTD(columnId);\n\n      if (this.data.range) {\n        const link = this._linkifyRuleLocation(\n            this._cssModel, this._linkifier, this.data.styleSheetId,\n            TextUtils.TextRange.TextRange.fromObject(this.data.range));\n\n        if (!link || link.textContent === '') {\n          cell.textContent = '(unable to link)';\n        } else {\n          cell.appendChild(link);\n        }\n      } else {\n        cell.textContent = '(unable to link to inlined styles)';\n      }\n      return cell;\n    }\n\n    if (columnId === 'contrastRatio') {\n      const cell = this.createTD(columnId);\n      const showAPCA = Root.Runtime.experiments.isEnabled('APCA');\n      const contrastRatio = Platform.NumberUtilities.floor(this.data.contrastRatio, 2);\n      const contrastRatioString = showAPCA ? contrastRatio + '%' : contrastRatio;\n      const contrastFragment = UI.Fragment.Fragment.build`\n        <div class=\"contrast-container-in-grid\" $=\"container\">\n          <span class=\"contrast-preview\" style=\"border: ${getBorderString(this.data.backgroundColor)}; color: ${\n          this.data.textColor.asString()}; background-color: ${this.data.backgroundColor.asString()};\">Aa</span>\n          <span>${contrastRatioString}</span>\n        </div>\n      `;\n      const container = contrastFragment.$('container');\n      if (showAPCA) {\n        container.append(UI.Fragment.Fragment.build`<span>${i18nString(UIStrings.apca)}</span>`.element());\n        if (this.data.thresholdsViolated.apca) {\n          container.appendChild(UI.Icon.Icon.create('smallicon-no'));\n        } else {\n          container.appendChild(UI.Icon.Icon.create('smallicon-checkmark-square'));\n        }\n      } else {\n        container.append(UI.Fragment.Fragment.build`<span>${i18nString(UIStrings.aa)}</span>`.element());\n        if (this.data.thresholdsViolated.aa) {\n          container.appendChild(UI.Icon.Icon.create('smallicon-no'));\n        } else {\n          container.appendChild(UI.Icon.Icon.create('smallicon-checkmark-square'));\n        }\n        container.append(UI.Fragment.Fragment.build`<span>${i18nString(UIStrings.aaa)}</span>`.element());\n        if (this.data.thresholdsViolated.aaa) {\n          container.appendChild(UI.Icon.Icon.create('smallicon-no'));\n        } else {\n          container.appendChild(UI.Icon.Icon.create('smallicon-checkmark-square'));\n        }\n      }\n      cell.appendChild(contrastFragment.element());\n      return cell;\n    }\n\n    return super.createCell(columnId);\n  }\n\n  /**\n   * @param {!SDK.CSSModel.CSSModel} cssModel\n   * @param {!Components.Linkifier.Linkifier} linkifier\n   * @param {!Protocol.CSS.StyleSheetId} styleSheetId\n   * @param {!TextUtils.TextRange.TextRange} ruleLocation\n   */\n  _linkifyRuleLocation(cssModel, linkifier, styleSheetId, ruleLocation) {\n    const styleSheetHeader = cssModel.styleSheetHeaderForId(styleSheetId);\n    if (!styleSheetHeader) {\n      return;\n    }\n    const lineNumber = styleSheetHeader.lineNumberInSource(ruleLocation.startLine);\n    const columnNumber = styleSheetHeader.columnNumberInSource(ruleLocation.startLine, ruleLocation.startColumn);\n    const matchingSelectorLocation = new SDK.CSSModel.CSSLocation(styleSheetHeader, lineNumber, columnNumber);\n    return linkifier.linkifyCSSLocation(matchingSelectorLocation);\n  }\n}\n"]}