{"version":3,"file":"IssueAggregator.js","sourceRoot":"","sources":["../../../../../front_end/issues/IssueAggregator.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as BrowserSDK from '../browser_sdk/browser_sdk.js';\nimport * as Common from '../common/common.js';\nimport * as SDK from '../sdk/sdk.js';\n\n/**\n * An `AggregatedIssue` representes a number of `SDK.Issue.Issue` objects that are displayed together.\n * Currently only grouping by issue code, is supported. The class provides helpers to support displaying\n * of all resources that are affected by the aggregated issues.\n */\nexport class AggregatedIssue extends SDK.Issue.Issue {\n  /**\n   * @param {string} code\n   */\n  constructor(code) {\n    super(code);\n    /** @type {!Map<string, !{cookie: !Protocol.Audits.AffectedCookie, hasRequest: boolean}>} */\n    this._cookies = new Map();\n    /** @type {!Map<string, !Protocol.Audits.AffectedRequest>} */\n    this._requests = new Map();\n    /** @type {?SDK.Issue.Issue} */\n    this._representative = null;\n    /** @type {!Map<string, !Protocol.Audits.MixedContentIssueDetails>} */\n    this._mixedContents = new Map();\n    /** @type {!Map<string, !Protocol.Audits.HeavyAdIssueDetails>} */\n    this._heavyAdIssueDetails = new Map();\n    /** @type {!Set<!SDK.ContentSecurityPolicyIssue.ContentSecurityPolicyIssue>} */\n    this._cspIssues = new Set();\n    /** @type {!Map<string, !Protocol.Audits.BlockedByResponseIssueDetails>} */\n    this._blockedByResponseDetails = new Map();\n    this._aggregatedIssuesCount = 0;\n    /** @type {Set<SDK.SharedArrayBufferTransferIssue.SharedArrayBufferTransferIssue>} */\n    this._sharedArrayBufferTransferIssues = new Set();\n  }\n\n  /**\n   * @override\n   * @returns {string}\n   */\n  primaryKey() {\n    throw new Error('This should never be called');\n  }\n\n  /**\n   * @override\n   * @returns {!Iterable<Protocol.Audits.BlockedByResponseIssueDetails>}\n   */\n  blockedByResponseDetails() {\n    return this._blockedByResponseDetails.values();\n  }\n\n  /**\n   * @override\n   * @returns {!Iterable<!Protocol.Audits.AffectedCookie>}\n   */\n  cookies() {\n    return Array.from(this._cookies.values()).map(x => x.cookie);\n  }\n\n  /**\n   * @returns {!Iterable<!{cookie: !Protocol.Audits.AffectedCookie, hasRequest: boolean}>}\n   */\n  cookiesWithRequestIndicator() {\n    return this._cookies.values();\n  }\n\n  /**\n   * @override\n   * @returns {!Iterable<!Protocol.Audits.HeavyAdIssueDetails>}\n   */\n  heavyAds() {\n    return this._heavyAdIssueDetails.values();\n  }\n\n  /**\n   * @override\n   * @returns {!Iterable<!Protocol.Audits.MixedContentIssueDetails>}\n   */\n  mixedContents() {\n    return this._mixedContents.values();\n  }\n\n  /**\n   * @returns {!Iterable<!SDK.ContentSecurityPolicyIssue.ContentSecurityPolicyIssue>}\n   */\n  cspIssues() {\n    return this._cspIssues;\n  }\n\n  /**\n   * @override\n   * @returns {!Iterable<!Protocol.Audits.AffectedRequest>}\n   */\n  requests() {\n    return this._requests.values();\n  }\n\n  /**\n   * @return {Iterable<SDK.SharedArrayBufferTransferIssue.SharedArrayBufferTransferIssue>}\n   */\n  sharedArrayBufferTransfersIssues() {\n    return this._sharedArrayBufferTransferIssues;\n  }\n\n  /**\n   * @override\n   */\n  getDescription() {\n    if (this._representative) {\n      return this._representative.getDescription();\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   * @return {!SDK.Issue.IssueCategory}\n   */\n  getCategory() {\n    if (this._representative) {\n      return this._representative.getCategory();\n    }\n    return SDK.Issue.IssueCategory.Other;\n  }\n\n  /**\n   * @return {number}\n  */\n  getAggregatedIssuesCount() {\n    return this._aggregatedIssuesCount;\n  }\n\n  /**\n   * Produces a primary key for a cookie. Use this instead of `JSON.stringify` in\n   * case new fields are added to `AffectedCookie`.\n   * @param {!Protocol.Audits.AffectedCookie} cookie\n   */\n  _keyForCookie(cookie) {\n    const {domain, path, name} = cookie;\n    return `${domain};${path};${name}`;\n  }\n\n  /**\n   * @param {!SDK.Issue.Issue} issue\n   */\n  addInstance(issue) {\n    this._aggregatedIssuesCount++;\n    if (!this._representative) {\n      this._representative = issue;\n    }\n    let hasRequest = false;\n    for (const request of issue.requests()) {\n      hasRequest = true;\n      if (!this._requests.has(request.requestId)) {\n        this._requests.set(request.requestId, request);\n      }\n    }\n    for (const cookie of issue.cookies()) {\n      const key = this._keyForCookie(cookie);\n      if (!this._cookies.has(key)) {\n        this._cookies.set(key, {cookie, hasRequest});\n      }\n    }\n    for (const mixedContent of issue.mixedContents()) {\n      const key = JSON.stringify(mixedContent);\n      this._mixedContents.set(key, mixedContent);\n    }\n    for (const heavyAds of issue.heavyAds()) {\n      const key = JSON.stringify(heavyAds);\n      this._heavyAdIssueDetails.set(key, heavyAds);\n    }\n    for (const details of issue.blockedByResponseDetails()) {\n      const key = JSON.stringify(details, ['parentFrame', 'blockedFrame', 'requestId', 'frameId', 'reason', 'request']);\n      this._blockedByResponseDetails.set(key, details);\n    }\n    if (issue instanceof SDK.ContentSecurityPolicyIssue.ContentSecurityPolicyIssue) {\n      this._cspIssues.add(issue);\n    }\n    if (issue instanceof SDK.SharedArrayBufferTransferIssue.SharedArrayBufferTransferIssue) {\n      this._sharedArrayBufferTransferIssues.add(issue);\n    }\n  }\n}\n\nexport class IssueAggregator extends Common.ObjectWrapper.ObjectWrapper {\n  /**\n   * @param {!BrowserSDK.IssuesManager.IssuesManager} issuesManager\n   */\n  constructor(issuesManager) {\n    super();\n    /** @type {!Map<string, !AggregatedIssue>} */\n    this._aggregatedIssuesByCode = new Map();\n    /** @type {!BrowserSDK.IssuesManager.IssuesManager} */\n    this._issuesManager = issuesManager;\n    this._issuesManager.addEventListener(BrowserSDK.IssuesManager.Events.IssueAdded, this._onIssueAdded, this);\n    this._issuesManager.addEventListener(\n        BrowserSDK.IssuesManager.Events.FullUpdateRequired, this._onFullUpdateRequired, this);\n    for (const issue of this._issuesManager.issues()) {\n      this._aggregateIssue(issue);\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onIssueAdded(event) {\n    const {issue} =\n        /** @type {!{issuesModel: !SDK.IssuesModel.IssuesModel, issue: !SDK.Issue.Issue}} */ (event.data);\n    this._aggregateIssue(issue);\n  }\n\n  _onFullUpdateRequired() {\n    this._aggregatedIssuesByCode.clear();\n    for (const issue of this._issuesManager.issues()) {\n      this._aggregateIssue(issue);\n    }\n    this.dispatchEventToListeners(Events.FullUpdateRequired);\n  }\n\n  /**\n   * @param {!SDK.Issue.Issue} issue\n   * @returns {!AggregatedIssue}\n   */\n  _aggregateIssue(issue) {\n    let aggregatedIssue = this._aggregatedIssuesByCode.get(issue.code());\n    if (!aggregatedIssue) {\n      aggregatedIssue = new AggregatedIssue(issue.code());\n      this._aggregatedIssuesByCode.set(issue.code(), aggregatedIssue);\n    }\n    aggregatedIssue.addInstance(issue);\n    this.dispatchEventToListeners(Events.AggregatedIssueUpdated, aggregatedIssue);\n    return aggregatedIssue;\n  }\n\n  /**\n   * @returns {!Iterable<!AggregatedIssue>}\n   */\n  aggregatedIssues() {\n    return this._aggregatedIssuesByCode.values();\n  }\n\n  /**\n   * @return {number}\n   */\n  numberOfAggregatedIssues() {\n    return this._aggregatedIssuesByCode.size;\n  }\n}\n\n/** @enum {symbol} */\nexport const Events = {\n  AggregatedIssueUpdated: Symbol('AggregatedIssueUpdated'),\n  FullUpdateRequired: Symbol('FullUpdateRequired'),\n};\n"]}