{"version":3,"file":"MarkdownIssueDescription.js","sourceRoot":"","sources":["../../../../../front_end/issues/MarkdownIssueDescription.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Root from '../root/root.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as Marked from '../third_party/marked/marked.js';\n\nimport {MarkdownView} from './MarkdownView.js';\n\nexport function createIssueDescriptionFromMarkdown(description: SDK.Issue.MarkdownIssueDescription):\n    SDK.Issue.IssueDescription {\n  const rawMarkdown = getMarkdownFileContent(description.file);\n  const rawMarkdownWithPlaceholdersReplaced = substitutePlaceholders(rawMarkdown, description.substitutions);\n  return createIssueDescriptionFromRawMarkdown(rawMarkdownWithPlaceholdersReplaced, description);\n}\n\nfunction getMarkdownFileContent(filename: string): string {\n  const rawMarkdown = Root.Runtime.cachedResources.get(filename);\n  if (!rawMarkdown) {\n    throw new Error(`Markdown file ${filename} not found. Declare it as a resource in the module.json file`);\n  }\n  return rawMarkdown;\n}\n\nconst validPlaceholderMatchPattern = /\\{(PLACEHOLDER_[a-zA-Z][a-zA-Z0-9]*)\\}/g;\nconst validPlaceholderNamePattern = /PLACEHOLDER_[a-zA-Z][a-zA-Z0-9]*/;\n\n/**\n * Replaces placeholders in markdown text with a string provided by the\n * `substitutions` map. To keep mental overhead to a minimum, the same\n * syntax is used as for l10n placeholders. Please note that the\n * placeholders require a mandatory 'PLACEHOLDER_' prefix.\n *\n * Example:\n *   const str = \"This is markdown with `code` and two placeholders, namely {PLACEHOLDER_PH1} and {PLACEHOLDER_PH2}\".\n *   const result = substitePlaceholders(str, new Map([['PLACEHOLDER_PH1', 'foo'], ['PLACEHOLDER_PH2', 'bar']]));\n *\n * Exported only for unit testing.\n */\nexport function substitutePlaceholders(markdown: string, substitutions?: Map<string, string>): string {\n  const unusedPlaceholders = new Set(substitutions ? substitutions.keys() : []);\n  validatePlaceholders(unusedPlaceholders);\n\n  const result = markdown.replace(validPlaceholderMatchPattern, (_, placeholder) => {\n    const replacement = substitutions ? substitutions.get(placeholder) : undefined;\n    if (!replacement) {\n      throw new Error(`No replacment provided for placeholder '${placeholder}'.`);\n    }\n    unusedPlaceholders.delete(placeholder);\n    return replacement;\n  });\n\n  if (unusedPlaceholders.size > 0) {\n    throw new Error(`Unused replacements provided: ${[...unusedPlaceholders]}`);\n  }\n\n  return result;\n}\n\n// Ensure that all provided placeholders match the naming pattern.\nfunction validatePlaceholders(placeholders: Set<string>): void {\n  const invalidPlaceholders = [...placeholders].filter(placeholder => !validPlaceholderNamePattern.test(placeholder));\n  if (invalidPlaceholders.length > 0) {\n    throw new Error(`Invalid placeholders provided in the substitutions map: ${invalidPlaceholders}`);\n  }\n}\n\n/**\n * This function is exported separately for unit testing.\n */\nexport function createIssueDescriptionFromRawMarkdown(\n    markdown: string, description: SDK.Issue.MarkdownIssueDescription): SDK.Issue.IssueDescription {\n  const markdownAst = Marked.Marked.lexer(markdown);\n  const title = findTitleFromMarkdownAst(markdownAst);\n  if (!title) {\n    throw new Error('Markdown issue descriptions must start with a heading');\n  }\n\n  const markdownComponent = new MarkdownView();\n  markdownComponent.data = {tokens: markdownAst.slice(1)};\n  return {\n    title,\n    message(): MarkdownView {\n      return markdownComponent;\n    },\n    issueKind: SDK.Issue.IssueKind.BreakingChange,\n    links: description.links,\n  };\n}\n\n// TODO(crbug.com/1108699): Fix types when they are available.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction findTitleFromMarkdownAst(markdownAst: any[]): string|null {\n  if (markdownAst.length === 0 || markdownAst[0].type !== 'heading' || markdownAst[0].depth !== 1) {\n    return null;\n  }\n  return markdownAst[0].text;\n}\n"]}