{"version":3,"file":"HeapSnapshotWorkerDispatcher.js","sourceRoot":"","sources":["../../../../../front_end/heap_snapshot_worker/HeapSnapshotWorkerDispatcher.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as HeapSnapshotModel from '../heap_snapshot_model/heap_snapshot_model.js';  // eslint-disable-line no-unused-vars\n\n/**\n * @typedef {{\n *   callId: (number|undefined),\n *   result: *,\n *   error: (string|undefined),\n *   errorCallStack: (!Object|undefined),\n *   errorMethodName: (string|undefined),\n * }}\n */\nlet DispatcherResponse;  // eslint-disable-line no-unused-vars\nexport class HeapSnapshotWorkerDispatcher {\n  /**\n   *\n   * @param {!Worker} globalObject\n   * @param {!Function} postMessage\n   */\n  constructor(globalObject, postMessage) {\n    /**\n     * @type {!Array<*>};\n     */\n    this._objects = [];\n    this._global = globalObject;\n    this._postMessage = postMessage;\n  }\n\n  /**\n   * @param {string} name\n   * @return {!Function}\n   */\n  _findFunction(name) {\n    const path = name.split('.');\n    let result = /** @type {*} */ (this._global);\n    for (let i = 0; i < path.length; ++i) {\n      result = result[path[i]];\n    }\n    return /** @type {!Function} */ (result);\n  }\n\n  /**\n   * @param {string} name\n   * @param {*} data\n   */\n  sendEvent(name, data) {\n    this._postMessage({eventName: name, data: data});\n  }\n\n  /**\n   * @param {{data: !HeapSnapshotModel.HeapSnapshotModel.WorkerCommand}} event\n   */\n  dispatchMessage({data}) {\n    /**\n     * @type {!DispatcherResponse}\n     */\n    const response =\n        {callId: data.callId, result: null, error: undefined, errorCallStack: undefined, errorMethodName: undefined};\n    try {\n      switch (data.disposition) {\n        case 'create': {\n          const constructorFunction = this._findFunction(data.methodName);\n          // @ts-ignore\n          this._objects[data.objectId] = new constructorFunction(this);\n          break;\n        }\n        case 'dispose': {\n          delete this._objects[data.objectId];\n          break;\n        }\n        case 'getter': {\n          const object = this._objects[data.objectId];\n          const result = object[data.methodName];\n          response.result = result;\n          break;\n        }\n        case 'factory': {\n          const object = this._objects[data.objectId];\n          const result = object[data.methodName].apply(object, data.methodArguments);\n          if (result) {\n            this._objects[data.newObjectId] = result;\n          }\n          response.result = Boolean(result);\n          break;\n        }\n        case 'method': {\n          const object = this._objects[data.objectId];\n          response.result = object[data.methodName].apply(object, data.methodArguments);\n          break;\n        }\n        case 'evaluateForTest': {\n          try {\n            response.result = self.eval(data.source);\n          } catch (error) {\n            response.result = error.toString();\n          }\n          break;\n        }\n      }\n    } catch (error) {\n      response.error = error.toString();\n      response.errorCallStack = error.stack;\n      if (data.methodName) {\n        response.errorMethodName = data.methodName;\n      }\n    }\n    this._postMessage(response);\n  }\n}\n"]}