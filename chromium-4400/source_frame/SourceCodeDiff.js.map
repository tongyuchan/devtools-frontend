{"version":3,"file":"SourceCodeDiff.js","sourceRoot":"","sources":["../../../../../front_end/source_frame/SourceCodeDiff.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Diff from '../diff/diff.js';\nimport * as TextEditor from '../text_editor/text_editor.js';  // eslint-disable-line no-unused-vars\nimport {SourcesTextEditor} from './SourcesTextEditor.js';     // eslint-disable-line no-unused-vars\n\nexport class SourceCodeDiff {\n  /**\n   * @param {!SourcesTextEditor} textEditor\n   */\n  constructor(textEditor) {\n    this._textEditor = textEditor;\n    /** @type {!Array<!TextEditor.CodeMirrorTextEditor.TextEditorPositionHandle>}*/\n    this._animatedLines = [];\n    /** @type {?number} */\n    this._animationTimeout = null;\n  }\n\n  /**\n   * @param {?string} oldContent\n   * @param {?string} newContent\n   */\n  highlightModifiedLines(oldContent, newContent) {\n    if (typeof oldContent !== 'string' || typeof newContent !== 'string') {\n      return;\n    }\n\n    const diff =\n        SourceCodeDiff.computeDiff(Diff.Diff.DiffWrapper.lineDiff(oldContent.split('\\n'), newContent.split('\\n')));\n    const changedLines = [];\n    for (let i = 0; i < diff.length; ++i) {\n      const diffEntry = diff[i];\n      if (diffEntry.type === EditType.Delete) {\n        continue;\n      }\n      for (let lineNumber = diffEntry.from; lineNumber < diffEntry.to; ++lineNumber) {\n        const position = this._textEditor.textEditorPositionHandle(lineNumber, 0);\n        if (position) {\n          changedLines.push(position);\n        }\n      }\n    }\n    this._updateHighlightedLines(changedLines);\n    this._animationTimeout = window.setTimeout(\n        this._updateHighlightedLines.bind(this, []), 400);  // // Keep this timeout in sync with sourcesView.css.\n  }\n\n  /**\n   * @param {!Array<!TextEditor.CodeMirrorTextEditor.TextEditorPositionHandle>} newLines\n   */\n  _updateHighlightedLines(newLines) {\n    if (this._animationTimeout) {\n      clearTimeout(this._animationTimeout);\n    }\n    this._animationTimeout = null;\n    this._textEditor.operation(operation.bind(this));\n\n    /**\n     * @this {SourceCodeDiff}\n     */\n    function operation() {\n      toggleLines.call(this, false);\n      this._animatedLines = newLines;\n      toggleLines.call(this, true);\n    }\n\n    /**\n     * @param {boolean} value\n     * @this {SourceCodeDiff}\n     */\n    function toggleLines(value) {\n      for (let i = 0; i < this._animatedLines.length; ++i) {\n        const location = this._animatedLines[i].resolve();\n        if (location) {\n          this._textEditor.toggleLineClass(location.lineNumber, 'highlight-line-modification', value);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Diff.Diff.DiffArray} diff\n   * @return {!Array<!{type: !EditType, from: number, to: number}>}\n   */\n  static computeDiff(diff) {\n    /** @type {!Array<!{type: !EditType, from: number, to: number}>} */\n    const result = [];\n    let hasAdded = false;\n    let hasRemoved = false;\n    let blockStartLineNumber = 0;\n    let currentLineNumber = 0;\n    let isInsideBlock = false;\n    for (let i = 0; i < diff.length; ++i) {\n      const token = diff[i];\n      if (token[0] === Diff.Diff.Operation.Equal) {\n        if (isInsideBlock) {\n          flush();\n        }\n        currentLineNumber += token[1].length;\n        continue;\n      }\n\n      if (!isInsideBlock) {\n        isInsideBlock = true;\n        blockStartLineNumber = currentLineNumber;\n      }\n\n      if (token[0] === Diff.Diff.Operation.Delete) {\n        hasRemoved = true;\n      } else {\n        currentLineNumber += token[1].length;\n        hasAdded = true;\n      }\n    }\n    if (isInsideBlock) {\n      flush();\n    }\n    if (result.length > 1 && result[0].from === 0 && result[1].from === 0) {\n      const merged = {type: EditType.Modify, from: 0, to: result[1].to};\n      result.splice(0, 2, merged);\n    }\n    return result;\n\n    function flush() {\n      let type = EditType.Insert;\n      let from = blockStartLineNumber;\n      let to = currentLineNumber;\n      if (hasAdded && hasRemoved) {\n        type = EditType.Modify;\n      } else if (!hasAdded && hasRemoved && from === 0 && to === 0) {\n        type = EditType.Modify;\n        to = 1;\n      } else if (!hasAdded && hasRemoved) {\n        type = EditType.Delete;\n        from -= 1;\n      }\n      result.push({type: type, from: from, to: to});\n      isInsideBlock = false;\n      hasAdded = false;\n      hasRemoved = false;\n    }\n  }\n}\n\n/** @enum {symbol} */\nexport const EditType = {\n  Insert: Symbol('Insert'),\n  Delete: Symbol('Delete'),\n  Modify: Symbol('Modify'),\n};\n"]}