{"version":3,"file":"media-meta.js","sourceRoot":"","sources":["../../../../../front_end/media/media-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAKlC,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB;;QAEI;IACJ,KAAK,EAAE,OAAO;IACd;;QAEI;IACJ,KAAK,EAAE,OAAO;CACf,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,SAAS,CAAC,CAAC;AAC3E,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEpF,IAAI,iBAA2C,CAAC;AAEhD,KAAK,UAAU,eAAe;IAC5B,IAAI,CAAC,iBAAiB,EAAE;QACtB,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QACjE,iBAAiB,GAAG,MAAM,MAAM,CAAC,YAAY,CAAC,CAAC;KAChD;IACD,OAAO,iBAAiB,CAAC;AAC3B,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,qBAAyC;IACjD,EAAE,EAAE,QAAQ;IACZ,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;IAClC,aAAa,EAAE,YAAY;IAC3B,WAAW,6BAA0C;IACrD,KAAK,EAAE,GAAG;IACV,KAAK,CAAC,QAAQ;QACZ,MAAM,KAAK,GAAG,MAAM,eAAe,EAAE,CAAC;QACtC,OAAO,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC5C,CAAC;IACD,IAAI,EAAE;QACJ,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;QAC3B,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;KAC5B;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../i18n/i18n.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Media from './media.js';\n\nexport const UIStrings = {\n  /**\n    *@description Text that appears on a button for the media resource type filter.\n    */\n  media: 'Media',\n  /**\n    *@description The type of media. Lower case.\n    */\n  video: 'video',\n};\nconst str_ = i18n.i18n.registerUIStrings('media/media-meta.ts', UIStrings);\nconst i18nString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedMediaModule: (typeof Media|undefined);\n\nasync function loadMediaModule(): Promise<typeof Media> {\n  if (!loadedMediaModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('media');\n    loadedMediaModule = await import('./media.js');\n  }\n  return loadedMediaModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'medias',\n  title: i18nString(UIStrings.media),\n  commandPrompt: 'Show Media',\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 100,\n  async loadView() {\n    const Media = await loadMediaModule();\n    return Media.MainView.MainView.instance();\n  },\n  tags: [\n    i18nString(UIStrings.media),\n    i18nString(UIStrings.video),\n  ],\n});\n"]}