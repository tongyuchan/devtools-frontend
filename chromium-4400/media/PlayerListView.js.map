{"version":3,"file":"PlayerListView.js","sourceRoot":"","sources":["../../../../../front_end/media/PlayerListView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../i18n/i18n.js';\nimport * as UI from '../ui/ui.js';\n\nimport {MainView, TriggerDispatcher} from './MainView.js';  // eslint-disable-line no-unused-vars\nimport {PlayerEvent} from './MediaModel.js';                // eslint-disable-line no-unused-vars\nimport {PlayerPropertyKeys} from './PlayerPropertiesView.js';\n\nexport const UIStrings = {\n  /**\n  *@description A right-click context menu entry which when clicked causes the menu entry for that player to be removed.\n  */\n  hidePlayer: 'Hide player',\n  /**\n  *@description A right-click context menu entry which should keep the element selected, while hiding all other entries.\n  */\n  hideAllOthers: 'Hide all others',\n  /**\n  *@description Context menu entry which downloads the json dump when clicked\n  */\n  savePlayerInfo: 'Save player info',\n  /**\n  *@description Side-panel entry title text for the players section.\n  */\n  players: 'Players',\n};\nconst str_ = i18n.i18n.registerUIStrings('media/PlayerListView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport interface PlayerStatus {\n  playerTitle: string;\n  playerID: string;\n  exists: boolean;\n  playing: boolean;\n  titleEdited: boolean;\n}\nexport interface PlayerStatusMapElement {\n  playerStatus: PlayerStatus;\n  playerTitleElement: HTMLElement|null;\n}\n\nexport class PlayerEntryTreeElement extends UI.TreeOutline.TreeElement {\n  titleFromUrl: boolean;\n  _playerStatus: PlayerStatus;\n  _displayContainer: MainView;\n\n  constructor(playerStatus: PlayerStatus, displayContainer: MainView, playerID: string) {\n    super(playerStatus.playerTitle, false);\n    this.titleFromUrl = true;\n    this._playerStatus = playerStatus;\n    this._displayContainer = displayContainer;\n    this.setLeadingIcons([UI.Icon.Icon.create('smallicon-videoplayer-playing', 'media-player')]);\n    this.listItemElement.classList.add('player-entry-tree-element');\n    this.listItemElement.addEventListener('contextmenu', this._rightClickContextMenu.bind(this, playerID), false);\n  }\n\n  onselect(_selectedByUser?: boolean): boolean {\n    this._displayContainer.renderMainPanel(this._playerStatus.playerID);\n    return true;\n  }\n\n  _rightClickContextMenu(playerID: string, event: Event): boolean {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.headerSection().appendItem(i18nString(UIStrings.hidePlayer), this._hidePlayer.bind(this, playerID));\n    contextMenu.headerSection().appendItem(i18nString(UIStrings.hideAllOthers), this._hideOthers.bind(this, playerID));\n    contextMenu.headerSection().appendItem(i18nString(UIStrings.savePlayerInfo), this._savePlayer.bind(this, playerID));\n    contextMenu.show();\n    return true;\n  }\n\n  _hidePlayer(playerID: string): void {\n    this._displayContainer.markPlayerForDeletion(playerID);\n  }\n\n  _savePlayer(playerID: string): void {\n    this._displayContainer.exportPlayerData(playerID);\n  }\n\n  _hideOthers(playerID: string): void {\n    this._displayContainer.markOtherPlayersForDeletion(playerID);\n  }\n}\n\nexport class PlayerListView extends UI.Widget.VBox implements TriggerDispatcher {\n  _playerStatuses: Map<string, PlayerEntryTreeElement>;\n  _mainContainer: MainView;\n  _sidebarTree: UI.TreeOutline.TreeOutlineInShadow;\n  _playerList: UI.TreeOutline.TreeElement;\n\n  constructor(mainContainer: MainView) {\n    super(true);\n\n    this._playerStatuses = new Map();\n\n    // Container where new panels can be added based on clicks.\n    this._mainContainer = mainContainer;\n\n    // The parent tree for storing sections\n    this._sidebarTree = new UI.TreeOutline.TreeOutlineInShadow();\n    this.contentElement.appendChild(this._sidebarTree.element);\n    this._sidebarTree.registerRequiredCSS('media/playerListView.css', {enableLegacyPatching: true});\n\n    // Players active in this tab.\n    this._playerList = this._addListSection(i18nString(UIStrings.players));\n    this._playerList.listItemElement.classList.add('player-entry-header');\n  }\n\n  deletePlayer(playerID: string): void {\n    this._playerList.removeChild(this._playerStatuses.get(playerID) as UI.TreeOutline.TreeElement);\n    this._playerStatuses.delete(playerID);\n  }\n\n  _addListSection(title: string): UI.TreeOutline.TreeElement {\n    const treeElement = new UI.TreeOutline.TreeElement(title, true);\n    treeElement.listItemElement.classList.add('storage-group-list-item');\n    treeElement.setCollapsible(false);\n    treeElement.selectable = false;\n    this._sidebarTree.appendChild(treeElement);\n    return treeElement;\n  }\n\n  addMediaElementItem(playerID: string): void {\n    const playerStatus = {playerTitle: playerID, playerID: playerID, exists: true, playing: false, titleEdited: false};\n    const playerElement = new PlayerEntryTreeElement(playerStatus, this._mainContainer, playerID);\n    this._playerStatuses.set(playerID, playerElement);\n    this._playerList.appendChild(playerElement);\n  }\n\n  setMediaElementPlayerTitle(playerID: string, newTitle: string, isTitleExtractedFromUrl: boolean): void {\n    if (this._playerStatuses.has(playerID)) {\n      const sidebarEntry = this._playerStatuses.get(playerID);\n      if (sidebarEntry && (!isTitleExtractedFromUrl || sidebarEntry.titleFromUrl)) {\n        sidebarEntry.title = newTitle;\n        sidebarEntry.titleFromUrl = isTitleExtractedFromUrl;\n      }\n    }\n  }\n\n  setMediaElementPlayerIcon(playerID: string, iconName: string): void {\n    if (this._playerStatuses.has(playerID)) {\n      const sidebarEntry = this._playerStatuses.get(playerID);\n      if (!sidebarEntry) {\n        throw new Error('sidebarEntry is expected to not be null');\n      }\n      sidebarEntry.setLeadingIcons([UI.Icon.Icon.create('smallicon-videoplayer-' + iconName, 'media-player')]);\n    }\n  }\n\n  onProperty(playerID: string, property: Protocol.Media.PlayerProperty): void {\n    // Sometimes the title will be an empty string, since this is provided\n    // by the website. We don't want to swap title to an empty string.\n    if (property.name === PlayerPropertyKeys.kFrameTitle && property.value) {\n      this.setMediaElementPlayerTitle(playerID, property.value as string, false);\n    }\n\n    // Url always has a value.\n    if (property.name === PlayerPropertyKeys.kFrameUrl) {\n      const url_path_component = property.value.substring(property.value.lastIndexOf('/') + 1);\n      this.setMediaElementPlayerTitle(playerID, url_path_component, true);\n    }\n  }\n\n  onError(_playerID: string, _error: Protocol.Media.PlayerError): void {\n    // TODO(tmathmeyer) show an error icon next to the player name\n  }\n\n  onMessage(_playerID: string, _message: Protocol.Media.PlayerMessage): void {\n    // TODO(tmathmeyer) show a message count number next to the player name.\n  }\n\n  onEvent(playerID: string, event: PlayerEvent): void {\n    if (event.value === 'PLAY') {\n      this.setMediaElementPlayerIcon(playerID, 'playing');\n    } else if (event.value === 'PAUSE') {\n      this.setMediaElementPlayerIcon(playerID, 'paused');\n    } else if (event.value === 'WEBMEDIAPLAYER_DESTROYED') {\n      this.setMediaElementPlayerIcon(playerID, 'destroyed');\n    }\n  }\n}\n"]}