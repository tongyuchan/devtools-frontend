{"version":3,"file":"CSSAngleSwatch.js","sourceRoot":"","sources":["../../../../../front_end/inline_editor/CSSAngleSwatch.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,OAAO,MAAM,qCAAqC,CAAC;AAE/D,OAAO,EAAmB,yBAAyB,EAAC,MAAM,oBAAoB,CAAC;AAE/E,MAAM,EAAC,MAAM,EAAE,IAAI,EAAC,GAAG,OAAO,CAAC;AAC/B,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC;AAE7C,MAAM,WAAW,GAAG,EAAE,CAAC;AAMvB,MAAM,OAAO,cAAe,SAAQ,WAAW;IAA/C;;QACmB,WAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;QACpD,UAAK,GAAU;YACrB,KAAK,EAAE,CAAC;YACR,IAAI,iBAAe;SACpB,CAAC;IAoDJ,CAAC;IAlDC,IAAI,IAAI,CAAC,IAAwB;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,MAAM;QACZ,MAAM,EAAC,UAAU,EAAE,UAAU,EAAC,GAAG,yBAAyB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,GAAG,CAAC,CAAC,CAAC;QACxF,MAAM,aAAa,GAAG;YACpB,SAAS,EAAE,aAAa,UAAU,OAAO,UAAU,cAAc,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG;SACvG,CAAC;QAEF,qDAAqD;QACrD,mBAAmB;QACnB,MAAM,CAAC,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCA8ByB,QAAQ,CAAC,aAAa,CAAC;;KAE1D,EAAE,IAAI,CAAC,MAAM,EAAE;YACd,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;QACH,kBAAkB;IACpB,CAAC;CACF;AAED,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,2BAA2B,CAAC,EAAE;IACpD,cAAc,CAAC,MAAM,CAAC,2BAA2B,EAAE,cAAc,CAAC,CAAC;CACpE","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../third_party/lit-html/lit-html.js';\n\nimport {Angle, AngleUnit, get2DTranslationsForAngle} from './CSSAngleUtils.js';\n\nconst {render, html} = LitHtml;\nconst styleMap = LitHtml.Directives.styleMap;\n\nconst swatchWidth = 11;\n\nexport interface CSSAngleSwatchData {\n  angle: Angle;\n}\n\nexport class CSSAngleSwatch extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private angle: Angle = {\n    value: 0,\n    unit: AngleUnit.Rad,\n  };\n\n  set data(data: CSSAngleSwatchData) {\n    this.angle = data.angle;\n    this.render();\n  }\n\n  private render(): void {\n    const {translateX, translateY} = get2DTranslationsForAngle(this.angle, swatchWidth / 4);\n    const miniHandStyle = {\n      transform: `translate(${translateX}px, ${translateY}px) rotate(${this.angle.value}${this.angle.unit})`,\n    };\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <style>\n        .swatch {\n          position: relative;\n          display: inline-block;\n          margin-bottom: -2px;\n          width: 1em;\n          height: 1em;\n          border: 1px solid var(--selection-inactive-fg-color);\n          border-radius: 1em;\n          overflow: hidden;\n          cursor: pointer;\n          background-color: var(--toolbar-bg-color);\n        }\n\n        .mini-hand {\n          position: absolute;\n          margin: auto;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          height: 55%;\n          width: 2px;\n          background-color: var(--accent-fg-color);\n          border-radius: 5px;\n        }\n      </style>\n\n      <div class=\"swatch\">\n        <span class=\"mini-hand\" style=${styleMap(miniHandStyle)}></span>\n      </div>\n    `, this.shadow, {\n      eventContext: this,\n    });\n    // clang-format on\n  }\n}\n\nif (!customElements.get('devtools-css-angle-swatch')) {\n  customElements.define('devtools-css-angle-swatch', CSSAngleSwatch);\n}\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-css-angle-swatch': CSSAngleSwatch;\n  }\n}\n"]}