{"version":3,"file":"TracingLayerTree.js","sourceRoot":"","sources":["../../../../../front_end/timeline_model/TracingLayerTree.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../sdk/sdk.js';\nimport * as Common from '../common/common.js';\n\nimport {LayerPaintEvent} from './TimelineFrameModel.js';  // eslint-disable-line no-unused-vars\n\nexport class TracingLayerTree extends SDK.LayerTreeBase.LayerTreeBase {\n  /**\n   * @param {?SDK.SDKModel.Target} target\n   */\n  constructor(target) {\n    super(target);\n    /** @type {!Map.<string, !TracingLayerTile>} */\n    this._tileById = new Map();\n    this._paintProfilerModel = target && target.model(SDK.PaintProfiler.PaintProfilerModel);\n  }\n\n  /**\n   * @param {?TracingLayerPayload} root\n   * @param {?Array<!TracingLayerPayload>} layers\n   * @param {!Array<!LayerPaintEvent>} paints\n   */\n  async setLayers(root, layers, paints) {\n    const idsToResolve = new Set();\n    if (root) {\n      // This is a legacy code path for compatibility, as cc is removing\n      // layer tree hierarchy, this code will eventually be removed.\n      this._extractNodeIdsToResolve(idsToResolve, {}, root);\n    } else if (layers) {\n      for (let i = 0; i < layers.length; ++i) {\n        this._extractNodeIdsToResolve(idsToResolve, {}, layers[i]);\n      }\n    }\n\n    await this.resolveBackendNodeIds(idsToResolve);\n\n    const oldLayersById = this.layersById;\n    this.layersById = new Map();\n    this.setContentRoot(null);\n    if (root) {\n      const convertedLayers = this._innerSetLayers(oldLayersById, root);\n      this.setRoot(convertedLayers);\n    } else if (layers) {\n      const processedLayers = layers.map(this._innerSetLayers.bind(this, oldLayersById));\n      const contentRoot = this.contentRoot();\n      if (!contentRoot) {\n        throw new Error('Content root is not set.');\n      }\n      this.setRoot(contentRoot);\n      for (let i = 0; i < processedLayers.length; ++i) {\n        if (processedLayers[i].id() !== contentRoot.id()) {\n          contentRoot.addChild(processedLayers[i]);\n        }\n      }\n    }\n    this._setPaints(paints);\n  }\n\n  /**\n   * @param {!Array.<!TracingLayerTile>} tiles\n   */\n  setTiles(tiles) {\n    this._tileById = new Map();\n    for (const tile of tiles) {\n      this._tileById.set(tile.id, tile);\n    }\n  }\n\n  /**\n   * @param {string} tileId\n   * @return {!Promise<?SDK.PaintProfiler.SnapshotWithRect>}\n   */\n  pictureForRasterTile(tileId) {\n    const tile = this._tileById.get('cc::Tile/' + tileId);\n    if (!tile) {\n      Common.Console.Console.instance().error(`Tile ${tileId} is missing`);\n      return /** @type {!Promise<?SDK.PaintProfiler.SnapshotWithRect>} */ (Promise.resolve(null));\n    }\n    const layer = /** @type {?TracingLayer} */ (this.layerById(tile.layer_id));\n    if (!layer) {\n      Common.Console.Console.instance().error(`Layer ${tile.layer_id} for tile ${tileId} is not found`);\n      return /** @type {!Promise<?SDK.PaintProfiler.SnapshotWithRect>} */ (Promise.resolve(null));\n    }\n    return layer._pictureForRect(tile.content_rect);\n  }\n\n  /**\n   * @param {!Array<!LayerPaintEvent>} paints\n   */\n  _setPaints(paints) {\n    for (let i = 0; i < paints.length; ++i) {\n      const layer = /** @type {?TracingLayer} */ (this.layersById.get(paints[i].layerId()));\n      if (layer) {\n        layer._addPaintEvent(paints[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {!Map<(string|number), !SDK.LayerTreeBase.Layer>} oldLayersById\n   * @param {!TracingLayerPayload} payload\n   * @return {!TracingLayer}\n   */\n  _innerSetLayers(oldLayersById, payload) {\n    let layer = /** @type {?TracingLayer} */ (oldLayersById.get(payload.layer_id));\n    if (layer) {\n      layer._reset(payload);\n    } else {\n      layer = new TracingLayer(this._paintProfilerModel, payload);\n    }\n    this.layersById.set(payload.layer_id, layer);\n    if (payload.owner_node) {\n      layer._setNode(this.backendNodeIdToNode().get(payload.owner_node) || null);\n    }\n    if (!this.contentRoot() && layer.drawsContent()) {\n      this.setContentRoot(layer);\n    }\n    for (let i = 0; payload.children && i < payload.children.length; ++i) {\n      layer.addChild(this._innerSetLayers(oldLayersById, payload.children[i]));\n    }\n    return layer;\n  }\n\n  /**\n   * @param {!Set<number>} nodeIdsToResolve\n   * @param {!Object} seenNodeIds\n   * @param {!TracingLayerPayload} payload\n   */\n  _extractNodeIdsToResolve(nodeIdsToResolve, seenNodeIds, payload) {\n    const backendNodeId = payload.owner_node;\n    if (backendNodeId && !this.backendNodeIdToNode().has(backendNodeId)) {\n      nodeIdsToResolve.add(backendNodeId);\n    }\n    for (let i = 0; payload.children && i < payload.children.length; ++i) {\n      this._extractNodeIdsToResolve(nodeIdsToResolve, seenNodeIds, payload.children[i]);\n    }\n  }\n}\n\n/**\n * @implements {SDK.LayerTreeBase.Layer}\n */\nexport class TracingLayer {\n  /**\n   * @param {?SDK.PaintProfiler.PaintProfilerModel} paintProfilerModel\n   * @param {!TracingLayerPayload} payload\n   */\n  constructor(paintProfilerModel, payload) {\n    /** @type {?string} */\n    this._parentLayerId = null;\n    /** @type {?SDK.LayerTreeBase.Layer} */\n    this._parent = null;\n    this._layerId = '';\n    /** @type {?SDK.DOMModel.DOMNode} */\n    this._node = null;\n    this._offsetX = -1;\n    this._offsetY = -1;\n    this._width = -1;\n    this._height = -1;\n    /** @type {!Array<!SDK.LayerTreeBase.Layer>} */\n    this._children = [];\n    /** @type {!Array<number>} */\n    this._quad = [];\n    /** @type {!Array<!Protocol.LayerTree.ScrollRect>}*/\n    this._scrollRects = [];\n    this._gpuMemoryUsage = -1;\n    /** @type {!Array<!LayerPaintEvent>} */\n    this._paints = [];\n    /** @type {!Array<string>} */\n    this._compositingReasonIds = [];\n    this._drawsContent = false;\n\n    this._paintProfilerModel = paintProfilerModel;\n    this._reset(payload);\n  }\n\n  /**\n   * @param {!TracingLayerPayload} payload\n   */\n  _reset(payload) {\n    this._node = null;\n    this._layerId = String(payload.layer_id);\n    this._offsetX = payload.position[0];\n    this._offsetY = payload.position[1];\n    this._width = payload.bounds.width;\n    this._height = payload.bounds.height;\n    this._children = [];\n    this._parentLayerId = null;\n    this._parent = null;\n    this._quad = payload.layer_quad || [];\n    this._createScrollRects(payload);\n\n    // Keep payload.compositing_reasons as a default\n    // but use the newer payload.debug_info.compositing_reasons\n    // if the first one is not set.\n    this._compositingReasonIds =\n        payload.compositing_reason_ids || (payload.debug_info && payload.debug_info.compositing_reason_ids) || [];\n    this._drawsContent = Boolean(payload.draws_content);\n    this._gpuMemoryUsage = payload.gpu_memory_usage;\n    /** @type {!Array<!LayerPaintEvent>} */\n    this._paints = [];\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  id() {\n    return this._layerId;\n  }\n\n  /**\n   * @override\n   * @return {?string}\n   */\n  parentId() {\n    return this._parentLayerId;\n  }\n\n  /**\n   * @override\n   * @return {?SDK.LayerTreeBase.Layer}\n   */\n  parent() {\n    return this._parent;\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  isRoot() {\n    return !this.parentId();\n  }\n\n  /**\n   * @override\n   * @return {!Array.<!SDK.LayerTreeBase.Layer>}\n   */\n  children() {\n    return this._children;\n  }\n\n  /**\n   * @override\n   * @param {!SDK.LayerTreeBase.Layer} childParam\n   */\n  addChild(childParam) {\n    const child = /** @type {!TracingLayer} */ (childParam);\n    if (child._parent) {\n      console.assert(false, 'Child already has a parent');\n    }\n    this._children.push(child);\n    child._parent = this;\n    child._parentLayerId = this._layerId;\n  }\n\n  /**\n   * @param {?SDK.DOMModel.DOMNode} node\n   */\n  _setNode(node) {\n    this._node = node;\n  }\n\n  /**\n   * @override\n   * @return {?SDK.DOMModel.DOMNode}\n   */\n  node() {\n    return this._node;\n  }\n\n  /**\n   * @override\n   * @return {?SDK.DOMModel.DOMNode}\n   */\n  nodeForSelfOrAncestor() {\n    /** @type {?SDK.LayerTreeBase.Layer} */\n    let layer = this;\n    for (; layer; layer = layer.parent()) {\n      if (layer.node()) {\n        return layer.node();\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   * @return {number}\n   */\n  offsetX() {\n    return this._offsetX;\n  }\n\n  /**\n   * @override\n   * @return {number}\n   */\n  offsetY() {\n    return this._offsetY;\n  }\n\n  /**\n   * @override\n   * @return {number}\n   */\n  width() {\n    return this._width;\n  }\n\n  /**\n   * @override\n   * @return {number}\n   */\n  height() {\n    return this._height;\n  }\n\n  /**\n   * @override\n   * @return {?Array.<number>}\n   */\n  transform() {\n    return null;\n  }\n\n  /**\n   * @override\n   * @return {!Array.<number>}\n   */\n  quad() {\n    return this._quad;\n  }\n\n  /**\n   * @override\n   * @return {!Array.<number>}\n   */\n  anchorPoint() {\n    return [0.5, 0.5, 0];\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  invisible() {\n    return false;\n  }\n\n  /**\n   * @override\n   * @return {number}\n   */\n  paintCount() {\n    return 0;\n  }\n\n  /**\n   * @override\n   * @return {?Protocol.DOM.Rect}\n   */\n  lastPaintRect() {\n    return null;\n  }\n\n  /**\n   * @override\n   * @return {!Array.<!Protocol.LayerTree.ScrollRect>}\n   */\n  scrollRects() {\n    return this._scrollRects;\n  }\n\n  /**\n   * @override\n   * @return {?SDK.LayerTreeBase.StickyPositionConstraint}\n   */\n  stickyPositionConstraint() {\n    // TODO(smcgruer): Provide sticky layer information in traces.\n    return null;\n  }\n\n  /**\n   * @override\n   * @return {number}\n   */\n  gpuMemoryUsage() {\n    return this._gpuMemoryUsage;\n  }\n\n  /**\n   * @override\n   * @return {!Array<!Promise<?SDK.PaintProfiler.SnapshotWithRect>>}\n   */\n  snapshots() {\n    return this._paints.map(paint => paint.snapshotPromise().then(snapshot => {\n      if (!snapshot) {\n        return null;\n      }\n      const rect = {x: snapshot.rect[0], y: snapshot.rect[1], width: snapshot.rect[2], height: snapshot.rect[3]};\n      return {rect: rect, snapshot: snapshot.snapshot};\n    }));\n  }\n\n  /**\n   * @param {!Array<number>} targetRect\n   * @return {!Promise<?SDK.PaintProfiler.SnapshotWithRect>}\n   */\n  _pictureForRect(targetRect) {\n    return Promise.all(this._paints.map(paint => paint.picturePromise())).then(pictures => {\n      const filteredPictures = /** @type {!Array<!{rect: !Array<number>, serializedPicture: string}>} */ (\n          pictures.filter(picture => picture && rectsOverlap(picture.rect, targetRect)));\n\n      const fragments = filteredPictures.map(\n          picture => ({x: picture.rect[0], y: picture.rect[1], picture: picture.serializedPicture}));\n\n      if (!fragments.length || !this._paintProfilerModel) {\n        return null;\n      }\n      const x0 = fragments.reduce((min, item) => Math.min(min, item.x), Infinity);\n      const y0 = fragments.reduce((min, item) => Math.min(min, item.y), Infinity);\n      // Rect is in layer content coordinates, make it relative to picture by offsetting to the top left corner.\n      const rect = {x: targetRect[0] - x0, y: targetRect[1] - y0, width: targetRect[2], height: targetRect[3]};\n      return this._paintProfilerModel.loadSnapshotFromFragments(fragments).then(\n          snapshot => snapshot ? {rect: rect, snapshot: snapshot} : null);\n    });\n\n    /**\n     * @param {number} a1\n     * @param {number} a2\n     * @param {number} b1\n     * @param {number} b2\n     * @return {boolean}\n     */\n    function segmentsOverlap(a1, a2, b1, b2) {\n      console.assert(a1 <= a2 && b1 <= b2, 'segments should be specified as ordered pairs');\n      return a2 > b1 && a1 < b2;\n    }\n\n    /**\n     * @param {!Array.<number>} a\n     * @param {!Array.<number>} b\n     * @return {boolean}\n     */\n    function rectsOverlap(a, b) {\n      return segmentsOverlap(a[0], a[0] + a[2], b[0], b[0] + b[2]) &&\n          segmentsOverlap(a[1], a[1] + a[3], b[1], b[1] + b[3]);\n    }\n  }\n\n  /**\n   * @param {!Array.<number>} params\n   * @param {string} type\n   * @return {!Object}\n   */\n  _scrollRectsFromParams(params, type) {\n    return {rect: {x: params[0], y: params[1], width: params[2], height: params[3]}, type: type};\n  }\n\n  /**\n   * @param {!TracingLayerPayload} payload\n   */\n  _createScrollRects(payload) {\n    /** @type {!Array<*>} */\n    const nonPayloadScrollRects = [];\n    if (payload.non_fast_scrollable_region) {\n      nonPayloadScrollRects.push(this._scrollRectsFromParams(\n          payload.non_fast_scrollable_region, SDK.LayerTreeBase.Layer.ScrollRectType.NonFastScrollable));\n    }\n    if (payload.touch_event_handler_region) {\n      nonPayloadScrollRects.push(this._scrollRectsFromParams(\n          payload.touch_event_handler_region, SDK.LayerTreeBase.Layer.ScrollRectType.TouchEventHandler));\n    }\n    if (payload.wheel_event_handler_region) {\n      nonPayloadScrollRects.push(this._scrollRectsFromParams(\n          payload.wheel_event_handler_region, SDK.LayerTreeBase.Layer.ScrollRectType.WheelEventHandler));\n    }\n    if (payload.scroll_event_handler_region) {\n      nonPayloadScrollRects.push(this._scrollRectsFromParams(\n          payload.scroll_event_handler_region, SDK.LayerTreeBase.Layer.ScrollRectType.RepaintsOnScroll));\n    }\n\n    // SDK.LayerBaseTree.Layer.ScrollRectType and Protocol.LayerTree.ScrollRectType are the\n    // same type, but we need to use the indirection of the nonPayloadScrollRects since\n    // the ScrollRectType is defined as a string in SDK.LayerBaseTree.Layer.ScrollRectType.\n    this._scrollRects = nonPayloadScrollRects;\n  }\n\n  /**\n   * @param {!LayerPaintEvent} paint\n   */\n  _addPaintEvent(paint) {\n    this._paints.push(paint);\n  }\n\n  /**\n   * @override\n   * @return {!Promise<!Array<string>>}\n   */\n  requestCompositingReasonIds() {\n    return Promise.resolve(this._compositingReasonIds);\n  }\n\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  drawsContent() {\n    return this._drawsContent;\n  }\n}\n\n/** @typedef {!{\n bounds: {height: number, width: number},\n children: Array.<!TracingLayerPayload>,\n layer_id: number,\n position: Array.<number>,\n scroll_offset: Array.<number>,\n layer_quad: Array.<number>,\n draws_content: number,\n gpu_memory_usage: number,\n transform: Array.<number>,\n owner_node: number,\n reasons: Array.<string>,\n compositing_reason: Array.<string>,\n compositing_reason_ids: Array.<string>,\n debug_info: {compositing_reason_ids: Array.<string>},\n non_fast_scrollable_region: Array.<number>,\n touch_event_handler_region: Array.<number>,\n wheel_event_handler_region: Array.<number>,\n scroll_event_handler_region: Array.<number>\n}}\n*/\n// @ts-ignore typedef\nexport let TracingLayerPayload;\n\n/** @typedef {!{\n id: string,\n layer_id: string,\n gpu_memory_usage: number,\n content_rect: !Array.<number>\n}}\n*/\n// @ts-ignore typedef\nexport let TracingLayerTile;\n"]}