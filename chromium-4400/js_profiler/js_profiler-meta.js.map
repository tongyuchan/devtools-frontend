{"version":3,"file":"js_profiler-meta.js","sourceRoot":"","sources":["../../../../../front_end/js_profiler/js_profiler-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAKlC,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB;;MAEE;IACF,QAAQ,EAAE,UAAU;CACrB,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,iCAAiC,EAAE,SAAS,CAAC,CAAC;AACvF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,IAAI,oBAAiD,CAAC;AAEtD,KAAK,UAAU,kBAAkB;IAC/B,IAAI,CAAC,oBAAoB,EAAE;QACzB,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QACpE,oBAAoB,GAAG,MAAM,MAAM,CAAC,yBAAyB,CAAC,CAAC;KAChE;IACD,OAAO,oBAAoB,CAAC;AAC9B,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,qBAAyC;IACjD,EAAE,EAAE,aAAa;IACjB,KAAK,EAAE,GAAsC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;IAC9E,aAAa,EAAE,eAAe;IAC9B,KAAK,EAAE,EAAE;IACT,KAAK,CAAC,QAAQ;QACZ,MAAM,QAAQ,GAAG,MAAM,kBAAkB,EAAE,CAAC;QAC5C,OAAO,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IAC3D,CAAC;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../platform/platform.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Profiler from '../profiler/profiler.js';\n\nexport const UIStrings = {\n  /**\n  *@description Title of the Profiler tool\n  */\n  profiler: 'Profiler',\n};\nconst str_ = i18n.i18n.registerUIStrings('js_profiler/js_profiler-meta.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet loadedProfilerModule: (typeof Profiler|undefined);\n\nasync function loadProfilerModule(): Promise<typeof Profiler> {\n  if (!loadedProfilerModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('profiler');\n    loadedProfilerModule = await import('../profiler/profiler.js');\n  }\n  return loadedProfilerModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'js_profiler',\n  title: (): Platform.UIString.LocalizedString => i18nString(UIStrings.profiler),\n  commandPrompt: 'Show Profiler',\n  order: 65,\n  async loadView() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.ProfilesPanel.JSProfilerPanel.instance();\n  },\n});\n"]}