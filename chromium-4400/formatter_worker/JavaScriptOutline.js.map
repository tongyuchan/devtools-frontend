{"version":3,"file":"JavaScriptOutline.js","sourceRoot":"","sources":["../../../../../front_end/formatter_worker/JavaScriptOutline.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../platform/platform.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as AcornLoose from '../third_party/acorn-loose/package/dist/acorn-loose.mjs';\nimport * as Acorn from '../third_party/acorn/acorn.js';\n\nimport {ECMA_VERSION} from './AcornTokenizer.js';\nimport {ESTreeWalker} from './ESTreeWalker.js';\n\n/** @typedef {{name: string, line: number, column: number, arguments: (string|undefined)}} */\n// @ts-ignore typedef\nexport let Chunk;\n\n/**\n * @param {string} content\n * @return {{chunk: !Array<!Chunk>, isLastChunk: boolean}}\n */\nexport function javaScriptOutline(content) {\n  const chunkSize = 100000;\n  /** @type {!Array<!Chunk>} */\n  let outlineChunk = [];\n  let lastReportedOffset = 0;\n\n  let ast;\n  try {\n    ast = Acorn.parse(content, {ecmaVersion: ECMA_VERSION, ranges: false});\n  } catch (e) {\n    ast = AcornLoose.parse(content, {ecmaVersion: ECMA_VERSION, ranges: false});\n  }\n\n  const contentLineEndings = Platform.StringUtilities.findLineEndingIndexes(content);\n  const textCursor = new TextUtils.TextCursor.TextCursor(contentLineEndings);\n  const walker = new ESTreeWalker(beforeVisit);\n\n  // @ts-ignore Technically, the acorn Node type is a subclass of ESTree.Node.\n  // However, the acorn package currently exports its type without specifying\n  // this relationship. So while this is allowed on runtime, we can't properly\n  // typecheck it.\n  walker.walk(ast);\n\n  return {chunk: outlineChunk, isLastChunk: true};\n\n  /**\n   * @param {!ESTree.Node} node\n   */\n  function beforeVisit(node) {\n    if (node.type === 'ClassDeclaration') {\n      reportClass(/** @type {!ESTree.Node} */ (node.id));\n    } else if (node.type === 'VariableDeclarator' && node.init && isClassNode(node.init)) {\n      reportClass(/** @type {!ESTree.Node} */ (node.id));\n    } else if (node.type === 'AssignmentExpression' && isNameNode(node.left) && isClassNode(node.right)) {\n      reportClass(/** @type {!ESTree.Node} */ (node.left));\n    } else if (node.type === 'Property' && isNameNode(node.key) && isClassNode(node.value)) {\n      reportClass(/** @type {!ESTree.Node} */ (node.key));\n    } else if (node.type === 'FunctionDeclaration') {\n      reportFunction(/** @type {!ESTree.Node} */ (node.id), node);\n    } else if (node.type === 'VariableDeclarator' && node.init && isFunctionNode(node.init)) {\n      reportFunction(/** @type {!ESTree.Node} */ (node.id), /** @type {!ESTree.Node} */ (node.init));\n    } else if (node.type === 'AssignmentExpression' && isNameNode(node.left) && isFunctionNode(node.right)) {\n      reportFunction(/** @type {!ESTree.Node} */ (node.left), /** @type {!ESTree.Node} */ (node.right));\n    } else if (\n        (node.type === 'MethodDefinition' || node.type === 'Property') && isNameNode(node.key) &&\n        isFunctionNode(node.value)) {\n      const namePrefix = [];\n      if (node.kind === 'get' || node.kind === 'set') {\n        namePrefix.push(node.kind);\n      }\n      if ('static' in node && node.static) {\n        namePrefix.push('static');\n      }\n      reportFunction(/** @type {!ESTree.Node} */ (node.key), node.value, namePrefix.join(' '));\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {!ESTree.Node} nameNode\n   */\n  function reportClass(nameNode) {\n    const name = 'class ' + stringifyNameNode(nameNode);\n    textCursor.advance(nameNode.start);\n    addOutlineItem(\n        {name: name, line: textCursor.lineNumber(), column: textCursor.columnNumber(), arguments: undefined});\n  }\n\n  /**\n   * @param {!ESTree.Node} nameNode\n   * @param {!ESTree.Node} functionNode\n   * @param {string=} namePrefix\n   */\n  function reportFunction(nameNode, functionNode, namePrefix) {\n    let name = stringifyNameNode(nameNode);\n    const functionDeclarationNode = /** @type {!ESTree.FunctionDeclaration} */ (functionNode);\n    if (functionDeclarationNode.generator) {\n      name = '*' + name;\n    }\n    if (namePrefix) {\n      name = namePrefix + ' ' + name;\n    }\n    if (functionDeclarationNode.async) {\n      name = 'async ' + name;\n    }\n\n    textCursor.advance(nameNode.start);\n    addOutlineItem({\n      name: name,\n      line: textCursor.lineNumber(),\n      column: textCursor.columnNumber(),\n      arguments: stringifyArguments(/** @type {!Array<!ESTree.Node>} */ (functionDeclarationNode.params))\n    });\n  }\n\n  /**\n   * @param {(!ESTree.Node|undefined)} node\n   * @return {boolean}\n   */\n  function isNameNode(node) {\n    if (!node) {\n      return false;\n    }\n    if (node.type === 'MemberExpression') {\n      return !node.computed && node.property.type === 'Identifier';\n    }\n    return node.type === 'Identifier';\n  }\n\n  /**\n   * @param {(!ESTree.Node|undefined)} node\n   * @return {boolean}\n   */\n  function isFunctionNode(node) {\n    if (!node) {\n      return false;\n    }\n    return node.type === 'FunctionExpression' || node.type === 'ArrowFunctionExpression';\n  }\n\n  /**\n   * @param {(!ESTree.Node|undefined)} node\n   * @return {boolean}\n   */\n  function isClassNode(node) {\n    return node !== undefined && node.type === 'ClassExpression';\n  }\n\n  /**\n   * @param {!ESTree.Node} node\n   * @return {string}\n   */\n  function stringifyNameNode(node) {\n    if (node.type === 'MemberExpression') {\n      node = /** @type {!ESTree.Node} */ (node.property);\n    }\n    console.assert(node.type === 'Identifier', 'Cannot extract identifier from unknown type: ' + node.type);\n    const identifier = /** @type {!ESTree.Identifier} */ (node);\n    return identifier.name;\n  }\n\n  /**\n   * @param {!Array<!ESTree.Node>} params\n   * @return {string}\n   */\n  function stringifyArguments(params) {\n    const result = [];\n    for (const param of params) {\n      if (param.type === 'Identifier') {\n        result.push(param.name);\n      } else if (param.type === 'RestElement' && param.argument.type === 'Identifier') {\n        result.push('...' + param.argument.name);\n      } else {\n        console.error('Error: unexpected function parameter type: ' + param.type);\n      }\n    }\n    return '(' + result.join(', ') + ')';\n  }\n\n  /**\n   * @param {!Chunk} item\n   */\n  function addOutlineItem(item) {\n    outlineChunk.push(item);\n    if (textCursor.offset() - lastReportedOffset < chunkSize) {\n      return;\n    }\n\n    // @ts-ignore Worker.postMessage signature is different to Window.postMessage; lib.dom.ts assumes this code is on window.\n    postMessage({chunk: outlineChunk, isLastChunk: false});\n    outlineChunk = [];\n    lastReportedOffset = textCursor.offset();\n  }\n}\n"]}