{"version":3,"file":"CommandMenu.js","sourceRoot":"","sources":["../../../../../front_end/quick_open/CommandMenu.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Diff from '../diff/diff.js';\nimport * as Host from '../host/host.js';\nimport * as Platform from '../platform/platform.js';\nimport {ls} from '../platform/platform.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\nimport {FilteredListWidget, Provider} from './FilteredListWidget.js';\nimport {QuickOpenImpl} from './QuickOpen.js';\n\n/** @type {!CommandMenu} */\nlet commandMenuInstance;\n\nexport class CommandMenu {\n  /** @private */\n  constructor() {\n    /** @type {!Array<!Command>} */\n    this._commands = [];\n    this._loadCommands();\n  }\n  /**\n   * @param {{forceNew: ?boolean}} opts\n   */\n  static instance(opts = {forceNew: null}) {\n    const {forceNew} = opts;\n    if (!commandMenuInstance || forceNew) {\n      commandMenuInstance = new CommandMenu();\n    }\n    return commandMenuInstance;\n  }\n\n  /**\n   * @param {!CreateCommandOptions} options\n   * @return {!Command}\n   */\n  static createCommand(options) {\n    const {category, keys, title, shortcut, executeHandler, availableHandler, userActionCode} = options;\n\n    let handler = executeHandler;\n    if (userActionCode) {\n      const actionCode = userActionCode;\n      handler = () => {\n        Host.userMetrics.actionTaken(actionCode);\n        executeHandler();\n      };\n    }\n    if (title === 'Show Issues') {\n      const cached_handler = handler;\n      handler = () => {\n        Host.userMetrics.issuesPanelOpenedFrom(Host.UserMetrics.IssueOpener.CommandMenu);\n        cached_handler();\n      };\n    }\n\n    return new Command(category, title, keys, shortcut, handler, availableHandler);\n  }\n\n  /**\n   * @param {!Common.Settings.Setting<*>} setting\n   * @param {string} title\n   * @param {V} value\n   * @return {!Command}\n   * @template V\n   */\n  static createSettingCommand(setting, title, value) {\n    const category = setting.category() || '';\n    const tags = setting.tags() || '';\n    const reloadRequired = Boolean(setting.reloadRequired());\n    return CommandMenu.createCommand({\n      category,\n      keys: tags,\n      title,\n      shortcut: '',\n      executeHandler: () => {\n        setting.set(value);\n        if (reloadRequired) {\n          UI.InspectorView.InspectorView.instance().displayReloadRequiredWarning(\n              ls`One or more settings have changed which requires a reload to take effect.`);\n        }\n      },\n      availableHandler,\n      userActionCode: undefined,\n    });\n\n    /**\n     * @return {boolean}\n     */\n    function availableHandler() {\n      return setting.get() !== value;\n    }\n  }\n\n  /**\n   * @param {!ActionCommandOptions} options\n   * @return {!Command}\n   */\n  static createActionCommand(options) {\n    const {action, userActionCode} = options;\n    const shortcut = UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutTitleForAction(action.id()) || '';\n\n    return CommandMenu.createCommand({\n      category: action.category(),\n      keys: action.tags() || '',\n      title: action.title() || '',\n      shortcut,\n      executeHandler: action.execute.bind(action),\n      userActionCode,\n      availableHandler: undefined,\n    });\n  }\n\n  /**\n   * @param {!RevealViewCommandOptions} options\n   * @return {!Command}\n   */\n  static createRevealViewCommand(options) {\n    const {title, tags, category, userActionCode, id} = options;\n\n    return CommandMenu.createCommand({\n      category,\n      keys: tags,\n      title,\n      shortcut: '',\n      executeHandler: UI.ViewManager.ViewManager.instance().showView.bind(\n          UI.ViewManager.ViewManager.instance(), id, /* userGesture */ true),\n      userActionCode,\n      availableHandler: undefined\n    });\n  }\n\n  _loadCommands() {\n    // TODO(crbug.com/1134103): replace this implementation for the one on _loadCommandsFromPreRegisteredExtensions once\n    // all settings, views and type lookups extensions have been migrated.\n    const locations = new Map();\n    // TODO(crbug.com/1134103): Remove this call when all ViewLocationResolver lookups are migrated\n    Root.Runtime.Runtime.instance().extensions(UI.View.ViewLocationResolver).forEach(extension => {\n      const category = extension.descriptor()['category'];\n      const name = extension.descriptor()['name'];\n      if (category && name) {\n        locations.set(name, ls(category));\n      }\n    });\n    for (const {category, name} of UI.ViewManager.getRegisteredLocationResolvers()) {\n      if (category && name) {\n        locations.set(name, category);\n      }\n    }\n\n    // TODO(crbug.com/1134103): Remove this call when all views are migrated\n    const viewExtensions = Root.Runtime.Runtime.instance().extensions('view');\n    for (const extension of viewExtensions) {\n      const category = locations.get(extension.descriptor()['location']);\n      if (!category) {\n        continue;\n      }\n      const extensionDescriptor = extension.descriptor();\n\n      const keys = extensionDescriptor.tags || '';\n      // Get localized keys and separate by null character to prevent fuzzy matching from matching across them.\n      const keyList = keys.split(',');\n      let tags = '';\n      keyList.forEach(k => {\n        tags += (ls(k.trim()) + '\\0');\n      });\n\n      /** @type {!RevealViewCommandOptions} */\n      const options = {\n        id: extensionDescriptor.id,\n        title: Common.UIString.UIString('Show %s', extensionDescriptor.title),\n        tags,\n        category,\n        userActionCode: undefined\n      };\n      this._commands.push(CommandMenu.createRevealViewCommand(options));\n    }\n\n    // Populate allowlisted settings.\n    // TODO(crbug.com/1134103): Remove this call when all settings are migrated\n    const settingExtensions = Root.Runtime.Runtime.instance().extensions('setting');\n    for (const extension of settingExtensions) {\n      const descriptor = extension.descriptor();\n      const options = descriptor.options;\n      if (!options || !descriptor.category) {\n        continue;\n      }\n      for (const pair of options) {\n        const setting = Common.Settings.Settings.instance().moduleSetting(descriptor.settingName);\n        this._commands.push(CommandMenu.createSettingCommand(setting, ls(pair['title']), pair['value']));\n      }\n    }\n    this._loadCommandsFromPreRegisteredExtensions(locations);\n  }\n\n  /**\n   * @param {!Map<string,string>} locations\n   */\n  _loadCommandsFromPreRegisteredExtensions(locations) {\n    const views = UI.ViewManager.getRegisteredViewExtensions();\n    for (const view of views) {\n      const viewLocation = view.location();\n      const category = viewLocation && locations.get(viewLocation);\n      if (!category) {\n        continue;\n      }\n\n      /** @type {!RevealViewCommandOptions} */\n      const options = {\n        title: view.commandPrompt(),\n        tags: view.tags() || '',\n        category,\n        userActionCode: undefined,\n        id: view.viewId()\n      };\n      this._commands.push(CommandMenu.createRevealViewCommand(options));\n    }\n    const settingsRegistrations = Common.Settings.getRegisteredSettings();\n    for (const settingRegistration of settingsRegistrations) {\n      const options = settingRegistration.options;\n      if (!options || !settingRegistration.category) {\n        continue;\n      }\n      for (const pair of options) {\n        const setting = Common.Settings.Settings.instance().moduleSetting(settingRegistration.settingName);\n        this._commands.push(CommandMenu.createSettingCommand(setting, pair.title(), pair.value));\n      }\n    }\n  }\n\n\n  /**\n   * @return {!Array.<!Command>}\n   */\n  commands() {\n    return this._commands;\n  }\n}\n\n/**\n * @typedef {{\n *   action: !UI.ActionRegistration.Action,\n *   userActionCode: (!Host.UserMetrics.Action|undefined),\n * }}\n */\n// @ts-ignore typedef\nexport let ActionCommandOptions;\n\n/**\n * @typedef {{\n *   id: string,\n *   title: string,\n *   tags: string,\n *   category: string,\n *   userActionCode: (!Host.UserMetrics.Action|undefined)\n * }}\n */\n// @ts-ignore typedef\nexport let RevealViewCommandOptions;\n\n/**\n * @typedef {{\n *   category: string,\n *   keys: string,\n *   title: string,\n *   shortcut: string,\n *   executeHandler: !function():*,\n *   availableHandler: ((!function():boolean)|undefined),\n *   userActionCode: (!Host.UserMetrics.Action|undefined)\n * }}\n */\n// @ts-ignore typedef\nexport let CreateCommandOptions;\n\nexport class CommandMenuProvider extends Provider {\n  constructor() {\n    super();\n    /** @type {!Array<!Command>} */\n    this._commands = [];\n  }\n\n  /**\n   * @override\n   */\n  attach() {\n    const allCommands = CommandMenu.instance().commands();\n\n    // Populate allowlisted actions.\n    const actions = UI.ActionRegistry.ActionRegistry.instance().availableActions();\n    for (const action of actions) {\n      const category = action.category();\n      if (!category) {\n        continue;\n      }\n\n      /** @type {!ActionCommandOptions} */\n      const options = {action, userActionCode: undefined};\n      this._commands.push(CommandMenu.createActionCommand(options));\n    }\n\n    for (const command of allCommands) {\n      if (command.available()) {\n        this._commands.push(command);\n      }\n    }\n\n    this._commands = this._commands.sort(commandComparator);\n\n    /**\n     * @param {!Command} left\n     * @param {!Command} right\n     * @return {number}\n     */\n    function commandComparator(left, right) {\n      const cats = Platform.StringUtilities.compare(left.category(), right.category());\n      return cats ? cats : Platform.StringUtilities.compare(left.title(), right.title());\n    }\n  }\n\n  /**\n   * @override\n   */\n  detach() {\n    this._commands = [];\n  }\n\n  /**\n   * @override\n   * @return {number}\n   */\n  itemCount() {\n    return this._commands.length;\n  }\n\n  /**\n   * @override\n   * @param {number} itemIndex\n   * @return {string}\n   */\n  itemKeyAt(itemIndex) {\n    return this._commands[itemIndex].key();\n  }\n\n  /**\n   * @override\n   * @param {number} itemIndex\n   * @param {string} query\n   * @return {number}\n   */\n  itemScoreAt(itemIndex, query) {\n    const command = this._commands[itemIndex];\n    let score = Diff.Diff.DiffWrapper.characterScore(query.toLowerCase(), command.title().toLowerCase());\n\n    // Score panel/drawer reveals above regular actions.\n    if (command.category().startsWith('Panel')) {\n      score += 2;\n    } else if (command.category().startsWith('Drawer')) {\n      score += 1;\n    }\n\n    return score;\n  }\n\n  /**\n   * @override\n   * @param {number} itemIndex\n   * @param {string} query\n   * @param {!Element} titleElement\n   * @param {!Element} subtitleElement\n   */\n  renderItem(itemIndex, query, titleElement, subtitleElement) {\n    const command = this._commands[itemIndex];\n    titleElement.removeChildren();\n    const tagElement = /** @type {!HTMLElement} */ (titleElement.createChild('span', 'tag'));\n    const index = Platform.StringUtilities.hashCode(command.category()) % MaterialPaletteColors.length;\n    tagElement.style.backgroundColor = MaterialPaletteColors[index];\n    tagElement.textContent = command.category();\n    UI.UIUtils.createTextChild(titleElement, command.title());\n    FilteredListWidget.highlightRanges(titleElement, query, true);\n    subtitleElement.textContent = command.shortcut();\n  }\n\n  /**\n   * @override\n   * @param {?number} itemIndex\n   * @param {string} promptValue\n   */\n  selectItem(itemIndex, promptValue) {\n    if (itemIndex === null) {\n      return;\n    }\n    this._commands[itemIndex].execute();\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.SelectCommandFromCommandMenu);\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  notFoundText() {\n    return ls`No commands found`;\n  }\n}\n\nexport const MaterialPaletteColors = [\n  '#F44336', '#E91E63', '#9C27B0', '#673AB7', '#3F51B5', '#03A9F4', '#00BCD4', '#009688', '#4CAF50', '#8BC34A',\n  '#CDDC39', '#FFC107', '#FF9800', '#FF5722', '#795548', '#9E9E9E', '#607D8B'\n];\n\nexport class Command {\n  /**\n   * @param {string} category\n   * @param {string} title\n   * @param {string} key\n   * @param {string} shortcut\n   * @param {function():*} executeHandler\n   * @param {function()=} availableHandler\n   */\n  constructor(category, title, key, shortcut, executeHandler, availableHandler) {\n    this._category = category;\n    this._title = title;\n    this._key = category + '\\0' + title + '\\0' + key;\n    this._shortcut = shortcut;\n    this._executeHandler = executeHandler;\n    this._availableHandler = availableHandler;\n  }\n\n  /**\n   * @return {string}\n   */\n  category() {\n    return this._category;\n  }\n\n  /**\n   * @return {string}\n   */\n  title() {\n    return this._title;\n  }\n\n  /**\n   * @return {string}\n   */\n  key() {\n    return this._key;\n  }\n\n  /**\n   * @return {string}\n   */\n  shortcut() {\n    return this._shortcut;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  available() {\n    return this._availableHandler ? this._availableHandler() : true;\n  }\n\n  execute() {\n    this._executeHandler();\n  }\n}\n\n/**\n * @implements {UI.ActionRegistration.ActionDelegate}\n */\nexport class ShowActionDelegate {\n  /**\n   * @override\n   * @param {!UI.Context.Context} context\n   * @param {string} actionId\n   * @return {boolean}\n   */\n  handleAction(context, actionId) {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront();\n    QuickOpenImpl.show('>');\n    return true;\n  }\n}\n"]}