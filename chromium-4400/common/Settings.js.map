{"version":3,"file":"Settings.js","sourceRoot":"","sources":["../../../../../front_end/common/Settings.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2009 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Platform from '../platform/platform.js';  // eslint-disable-line no-unused-vars\nimport {ls} from '../platform/platform.js';\nimport * as Root from '../root/root.js';\n\nimport {Color, Format} from './Color.js';  // eslint-disable-line no-unused-vars\nimport {Console} from './Console.js';\nimport {EventDescriptor, EventTargetEvent} from './EventTarget.js';  // eslint-disable-line no-unused-vars\nimport {ObjectWrapper} from './Object.js';\nimport {getRegisteredSettings, RegExpSettingItem, registerSettingExtension, SettingCategory, SettingCategoryObject, SettingExtensionOption, SettingRegistration, SettingType, SettingTypeObject} from './SettingRegistration.js';  // eslint-disable-line no-unused-vars\n\n/**\n * @type {!Settings|undefined}\n */\nlet settingsInstance;\n\nexport class Settings {\n  /**\n   * @private\n   * @param {!SettingsStorage} globalStorage\n   * @param {!SettingsStorage} localStorage\n   */\n  constructor(globalStorage, localStorage) {\n    this._globalStorage = globalStorage;\n    this._localStorage = localStorage;\n    this._sessionStorage = new SettingsStorage({});\n\n    /** @type {!Set<string>} */\n    this.settingNameSet = new Set();\n\n    /** @type {!Map<!SettingCategory,!Set<number>>} */\n    this.orderValuesBySettingCategory = new Map();\n\n    this._eventSupport = new ObjectWrapper();\n    /** @type {!Map<string, !Setting<*>>} */\n    this._registry = new Map();\n    /** @type {!Map<string, !Setting<*>>} */\n    this._moduleSettings = new Map();\n\n    const unionOfSettings = [\n      // This lookup is done for the legacy settings.\n      // TODO(crbug.com/1134103): remove this call once all settings have been migrated.\n      ...Root.Runtime.Runtime.instance().extensions('setting').map(extension => {\n        const descriptor = extension.descriptor();\n        let storageType;\n        switch (descriptor.storageType) {\n          case 'local':\n            storageType = SettingStorageType.Local;\n            break;\n          case 'session':\n            storageType = SettingStorageType.Session;\n            break;\n          case 'global':\n            storageType = SettingStorageType.Global;\n            break;\n          default:\n            storageType = SettingStorageType.Global;\n        }\n        const {settingName, defaultValue, userActionCondition} = descriptor;\n        const isRegex = descriptor.settingType === SettingTypeObject.REGEX;\n\n        // This cast is done so that the assignation to setting._extension below is type valid.\n        const setting = isRegex && typeof defaultValue === 'string' ?\n            this.createRegExpSetting(settingName, defaultValue, undefined, storageType) :\n            this.createSetting(settingName, defaultValue, storageType);\n\n        if (extension.title()) {\n          setting.setTitle(extension.title());\n        }\n        if (userActionCondition) {\n          setting.setRequiresUserAction(Boolean(Root.Runtime.Runtime.queryParam(userActionCondition)));\n        }\n        setting._extension = extension;\n        return setting;\n      }),\n      ...getRegisteredSettings().map(registration => {\n        const {settingName, defaultValue, storageType} = registration;\n\n        // TODO(crbug.com/1134103): implement one liner if to call createRegExpSetting when 'registration.isRegex' is true, once all extensions of type\n        // 'RegExpSetting' have been migrated. Also, the class 'RegExpSetting' has to be changed to extend from PreRegisteredSetting.\n        const setting = this.createPreRegisteredSetting(settingName, defaultValue, storageType);\n        if (registration.titleMac) {\n          setting.setTitleFunction(registration.titleMac);\n        } else {\n          setting.setTitleFunction(registration.title);\n        }\n        if (registration.userActionCondition) {\n          setting.setRequiresUserAction(Boolean(Root.Runtime.Runtime.queryParam(registration.userActionCondition)));\n        }\n        setting.setRegistration(registration);\n        return setting;\n      })\n    ];\n    unionOfSettings.forEach(this._registerModuleSetting.bind(this));\n  }\n\n  static hasInstance() {\n    return typeof settingsInstance !== 'undefined';\n  }\n\n  /**\n   * @param {{forceNew: ?boolean, globalStorage: ?SettingsStorage, localStorage: ?SettingsStorage}} opts\n   */\n  static instance(opts = {forceNew: null, globalStorage: null, localStorage: null}) {\n    const {forceNew, globalStorage, localStorage} = opts;\n    if (!settingsInstance || forceNew) {\n      if (!globalStorage || !localStorage) {\n        throw new Error(`Unable to create settings: global and local storage must be provided: ${new Error().stack}`);\n      }\n\n      settingsInstance = new Settings(globalStorage, localStorage);\n    }\n\n    return settingsInstance;\n  }\n\n  static removeInstance() {\n    settingsInstance = undefined;\n  }\n\n  /**\n   * @param {!Setting<*>} setting\n   */\n  _registerModuleSetting(setting) {\n    const settingName = setting.name;\n    const category = setting.category();\n    const order = setting.order();\n    if (this.settingNameSet.has(settingName)) {\n      throw new Error(`Duplicate Setting name '${settingName}'`);\n    }\n    if (category && order) {\n      const orderValues = this.orderValuesBySettingCategory.get(category) || new Set();\n      if (orderValues.has(order)) {\n        throw new Error(`Duplicate order value '${order}' for settings category '${category}'`);\n      }\n      orderValues.add(order);\n      this.orderValuesBySettingCategory.set(category, orderValues);\n    }\n    this.settingNameSet.add(settingName);\n    this._moduleSettings.set(setting.name, setting);\n  }\n\n  /**\n   * @param {string} settingName\n   * @return {!Setting<*>}\n   */\n  moduleSetting(settingName) {\n    const setting = this._moduleSettings.get(settingName);\n    if (!setting) {\n      throw new Error('No setting registered: ' + settingName);\n    }\n    return setting;\n  }\n\n  /**\n   * @param {string} settingName\n   * @return {!Setting<*>}\n   */\n  settingForTest(settingName) {\n    const setting = this._registry.get(settingName);\n    if (!setting) {\n      throw new Error('No setting registered: ' + settingName);\n    }\n    return setting;\n  }\n\n  /**\n   * @param {string} key\n   * @param {*} defaultValue\n   * @param {!SettingStorageType=} storageType\n   * @return {!LegacySetting<*>}\n   */\n  createSetting(key, defaultValue, storageType) {\n    const storage = this._storageFromType(storageType);\n    let setting = /** @type {!LegacySetting<*>} */ (this._registry.get(key));\n    if (!setting) {\n      // TODO(crbug.com/1134103): This has to instatiate a PreRegisteredSetting instead once all settings are migrated\n      setting = new LegacySetting(this, key, defaultValue, this._eventSupport, storage);\n      this._registry.set(key, setting);\n    }\n    return setting;\n  }\n\n  /**\n   * @param {string} key\n   * @param {*} defaultValue\n   * @param {!SettingStorageType=} storageType\n   * @return {!PreRegisteredSetting<*>}\n   */\n  createPreRegisteredSetting(key, defaultValue, storageType) {\n    // TODO(crbug.com/1134103): This function has to be removed when all settings are migrated createSetting() instantiates a PreRegisteredSetting\n    const storage = this._storageFromType(storageType);\n    let setting = /** @type {!PreRegisteredSetting<*>} */ (this._registry.get(key));\n    if (!setting) {\n      setting = new PreRegisteredSetting(this, key, defaultValue, this._eventSupport, storage);\n      this._registry.set(key, setting);\n    }\n    return setting;\n  }\n\n  /**\n   * @param {string} key\n   * @param {*} defaultValue\n   * @return {!Setting<*>}\n   */\n  createLocalSetting(key, defaultValue) {\n    return this.createSetting(key, defaultValue, SettingStorageType.Local);\n  }\n\n  /**\n   * @param {string} key\n   * @param {string} defaultValue\n   * @param {string=} regexFlags\n   * @param {!SettingStorageType=} storageType\n   * @return {!RegExpSetting}\n   */\n  createRegExpSetting(key, defaultValue, regexFlags, storageType) {\n    if (!this._registry.get(key)) {\n      this._registry.set(\n          key,\n          new RegExpSetting(\n              this, key, defaultValue, this._eventSupport, this._storageFromType(storageType), regexFlags));\n    }\n    return /** @type {!RegExpSetting} */ (this._registry.get(key));\n  }\n\n  clearAll() {\n    this._globalStorage.removeAll();\n    this._localStorage.removeAll();\n    const versionSetting = Settings.instance().createSetting(VersionController._currentVersionName, 0);\n    versionSetting.set(VersionController.currentVersion);\n  }\n\n  /**\n   * @param {!SettingStorageType=} storageType\n   * @return {!SettingsStorage}\n   */\n  _storageFromType(storageType) {\n    switch (storageType) {\n      case (SettingStorageType.Local):\n        return this._localStorage;\n      case (SettingStorageType.Session):\n        return this._sessionStorage;\n      case (SettingStorageType.Global):\n        return this._globalStorage;\n    }\n    return this._globalStorage;\n  }\n}\n\nexport class SettingsStorage {\n  /**\n   * @param {!Object<string,string>} object\n   * @param {function(string, string):void=} setCallback\n   * @param {function(string):void=} removeCallback\n   * @param {function(string=):void=} removeAllCallback\n   * @param {string=} storagePrefix\n   */\n  constructor(object, setCallback, removeCallback, removeAllCallback, storagePrefix) {\n    this._object = object;\n    this._setCallback = setCallback || function() {};\n    this._removeCallback = removeCallback || function() {};\n    this._removeAllCallback = removeAllCallback || function() {};\n    this._storagePrefix = storagePrefix || '';\n  }\n\n  /**\n   * @param {string} name\n   * @param {string} value\n   */\n  set(name, value) {\n    name = this._storagePrefix + name;\n    this._object[name] = value;\n    this._setCallback(name, value);\n  }\n\n  /**\n   * @param {string} name\n   * @return {boolean}\n   */\n  has(name) {\n    name = this._storagePrefix + name;\n    return name in this._object;\n  }\n\n  /**\n   * @param {string} name\n   * @return {string}\n   */\n  get(name) {\n    name = this._storagePrefix + name;\n    return this._object[name];\n  }\n\n  /**\n   * @param {string} name\n   */\n  remove(name) {\n    name = this._storagePrefix + name;\n    delete this._object[name];\n    this._removeCallback(name);\n  }\n\n  removeAll() {\n    this._object = {};\n    this._removeAllCallback();\n  }\n\n  _dumpSizes() {\n    Console.instance().log('Ten largest settings: ');\n\n    /** @type {!Object<string,number>} */\n    // @ts-ignore __proto__ optimization\n    const sizes = {__proto__: null};\n    for (const key in this._object) {\n      sizes[key] = this._object[key].length;\n    }\n    const keys = Object.keys(sizes);\n\n    /**\n     * @param {string} key1\n     * @param {string} key2\n     */\n    function comparator(key1, key2) {\n      return sizes[key2] - sizes[key1];\n    }\n\n    keys.sort(comparator);\n\n    for (let i = 0; i < 10 && i < keys.length; ++i) {\n      Console.instance().log('Setting: \\'' + keys[i] + '\\', size: ' + sizes[keys[i]]);\n    }\n  }\n}\n\n/**\n * @template V\n */\nexport class Setting {\n  /**\n   * @param {function(!EventTargetEvent):void} listener\n   * @param {!Object=} thisObject\n   * @return {!EventDescriptor}\n   */\n  addChangeListener(listener, thisObject) {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @param {function(!EventTargetEvent):void} listener\n   * @param {!Object=} thisObject\n   */\n  removeChangeListener(listener, thisObject) {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @return {string}\n   */\n  get name() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @return {string}\n   */\n  title() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @param {string=} title\n   */\n  setTitle(title) {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @param {boolean} requiresUserAction\n   */\n  setRequiresUserAction(requiresUserAction) {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @return {V}\n   */\n  get() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @param {V} value\n   */\n  set(value) {\n    throw new Error('not implemented');\n  }\n\n  remove() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @return {?SettingType}\n   */\n  type() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @return {!Array<!SimpleSettingOption>}\n   */\n  options() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @return {?boolean}\n   */\n  reloadRequired() {\n    throw new Error('not implemented');\n  }\n  /**\n   * @return {?SettingCategory}\n   */\n  category() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @return {?string}\n   */\n  tags() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @return {?number}\n   */\n  order() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @param {string} message\n   * @param {string} name\n   * @param {string} value\n   */\n  _printSettingsSavingError(message, name, value) {\n    throw new Error('not implemented');\n  }\n}\n\n/**\n * @extends {Setting<V>}\n * @template V\n */\nexport class LegacySetting extends Setting {\n  /**\n   * @param {!Settings} settings\n   * @param {string} name\n   * @param {V} defaultValue\n   * @param {!ObjectWrapper} eventSupport\n   * @param {!SettingsStorage} storage\n   */\n  constructor(settings, name, defaultValue, eventSupport, storage) {\n    super();\n    this._settings = settings;\n    this._name = name;\n    this._defaultValue = defaultValue;\n    this._eventSupport = eventSupport;\n    this._storage = storage;\n    /** @type {string} */\n    this._title = '';\n    /** @type {?Root.Runtime.Extension} */\n    this._extension = null;\n  }\n\n  /**\n   * @override\n   * @param {function(!EventTargetEvent):void} listener\n   * @param {!Object=} thisObject\n   * @return {!EventDescriptor}\n   */\n  addChangeListener(listener, thisObject) {\n    return this._eventSupport.addEventListener(this._name, listener, thisObject);\n  }\n\n  /**\n   * @override\n   * @param {function(!EventTargetEvent):void} listener\n   * @param {!Object=} thisObject\n   */\n  removeChangeListener(listener, thisObject) {\n    this._eventSupport.removeEventListener(this._name, listener, thisObject);\n  }\n  /**\n   * @override\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  title() {\n    return ls(this._title);\n  }\n\n  /**\n   * @override\n   * @param {string=} title\n   */\n  setTitle(title) {\n    if (title) {\n      this._title = title;\n    }\n  }\n\n  /**\n   * @override\n   * @param {boolean} requiresUserAction\n   */\n  setRequiresUserAction(requiresUserAction) {\n    this._requiresUserAction = requiresUserAction;\n  }\n\n  /**\n   * @override\n   * @return {V}\n   */\n  get() {\n    if (this._requiresUserAction && !this._hadUserAction) {\n      return this._defaultValue;\n    }\n\n    if (typeof this._value !== 'undefined') {\n      return this._value;\n    }\n\n    this._value = this._defaultValue;\n    if (this._storage.has(this._name)) {\n      try {\n        this._value = JSON.parse(this._storage.get(this._name));\n      } catch (e) {\n        this._storage.remove(this._name);\n      }\n    }\n    return this._value;\n  }\n\n  /**\n   * @override\n   * @param {V} value\n   */\n  set(value) {\n    this._hadUserAction = true;\n    this._value = value;\n    try {\n      const settingString = JSON.stringify(value);\n      try {\n        this._storage.set(this._name, settingString);\n      } catch (e) {\n        this._printSettingsSavingError(e.message, this._name, settingString);\n      }\n    } catch (e) {\n      Console.instance().error('Cannot stringify setting with name: ' + this._name + ', error: ' + e.message);\n    }\n    this._eventSupport.dispatchEventToListeners(this._name, value);\n  }\n\n  /**\n   * @override\n   */\n  remove() {\n    this._settings._registry.delete(this._name);\n    this._settings._moduleSettings.delete(this._name);\n    this._storage.remove(this._name);\n  }\n\n\n  /**\n   * @override\n   * @return {?SettingType}\n   */\n  type() {\n    if (this._extension) {\n      const type = this._extension.descriptor().settingType;\n      switch (type) {\n        case 'boolean':\n          return SettingTypeObject.BOOLEAN;\n        case 'enum':\n          return SettingTypeObject.ENUM;\n        case 'regex':\n          return SettingTypeObject.REGEX;\n        case 'array':\n          return SettingTypeObject.ARRAY;\n        default:\n          throw new Error('Invalid setting type');\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   * @return {!Array<!SimpleSettingOption>}\n   */\n  options() {\n    if (this._extension) {\n      const options = this._extension.descriptor().options;\n      if (!options) {\n        return [];\n      }\n\n      return options.map(opt => {\n        let text;\n        if (opt.text) {\n          // The \"raw\" flag indicates text is non-i18n-izable.\n          text = opt.raw ? opt.text : ls(opt.text);\n        }\n        return {\n          ...opt,\n          text,\n          title: ls(opt.title),\n        };\n      });\n    }\n    return [];\n  }\n\n  /**\n   * @override\n   * @return {?boolean}\n   */\n  reloadRequired() {\n    if (this._extension) {\n      return this._extension.descriptor().reloadRequired || null;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   * @return {?SettingCategory}\n   */\n  category() {\n    if (this._extension) {\n      const category = this._extension.descriptor().category;\n      if (!category) {\n        return null;\n      }\n\n      switch (category) {\n        case 'Elements':\n          return SettingCategoryObject.ELEMENTS;\n        case 'Appearance':\n          return SettingCategoryObject.APPEARANCE;\n        case 'Sources':\n          return SettingCategoryObject.SOURCES;\n        case 'Network':\n          return SettingCategoryObject.NETWORK;\n        case 'Performance':\n          return SettingCategoryObject.PERFORMANCE;\n        case 'Console':\n          return SettingCategoryObject.CONSOLE;\n        case 'Persistence':\n          return SettingCategoryObject.PERSISTENCE;\n        case 'Debugger':\n          return SettingCategoryObject.DEBUGGER;\n        case 'Global':\n          return SettingCategoryObject.GLOBAL;\n        case 'Rendering':\n          return SettingCategoryObject.RENDERING;\n        case 'Grid':\n          return SettingCategoryObject.GRID;\n        case 'Mobile':\n          return SettingCategoryObject.MOBILE;\n        case 'Emulation':\n          return SettingCategoryObject.EMULATION;\n        case 'Memory':\n          return SettingCategoryObject.MEMORY;\n        default:\n          throw new Error(`Invalid setting category ${category}`);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   * @return {?string}\n   */\n  tags() {\n    if (this._extension) {\n      const tags = this._extension.descriptor().tags;\n      if (!tags) {\n        return null;\n      }\n      // Get localized keys and separate by null character to prevent fuzzy matching from matching across them.\n      const keyList = tags.split(',');\n      let keys = '';\n      keyList.forEach(k => {\n        keys += (ls(k.trim()) + '\\0');\n      });\n      return keys;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   * @return {?number}\n   */\n  order() {\n    if (this._extension) {\n      return this._extension.descriptor().order || null;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   * @param {string} message\n   * @param {string} name\n   * @param {string} value\n   */\n  _printSettingsSavingError(message, name, value) {\n    const errorMessage =\n        'Error saving setting with name: ' + this._name + ', value length: ' + value.length + '. Error: ' + message;\n    console.error(errorMessage);\n    Console.instance().error(errorMessage);\n    this._storage._dumpSizes();\n  }\n}\n\n/**\n * @extends {Setting<V>}\n * @template V\n */\nexport class PreRegisteredSetting extends Setting {\n  /**\n   * @param {!Settings} settings\n   * @param {string} name\n   * @param {V} defaultValue\n   * @param {!ObjectWrapper} eventSupport\n   * @param {!SettingsStorage} storage\n   */\n  constructor(settings, name, defaultValue, eventSupport, storage) {\n    super();\n    this._settings = settings;\n    this._name = name;\n    this._defaultValue = defaultValue;\n    this._eventSupport = eventSupport;\n    this._storage = storage;\n    /** @type {function():Platform.UIString.LocalizedString} */\n    this._titleFunction;\n    /** @type {?SettingRegistration} */\n    this._registration = null;\n  }\n\n  /**\n   * @override\n   * @param {function(!EventTargetEvent):void} listener\n   * @param {!Object=} thisObject\n   * @return {!EventDescriptor}\n   */\n  addChangeListener(listener, thisObject) {\n    return this._eventSupport.addEventListener(this._name, listener, thisObject);\n  }\n\n  /**\n   * @override\n   * @param {function(!EventTargetEvent):void} listener\n   * @param {!Object=} thisObject\n   */\n  removeChangeListener(listener, thisObject) {\n    this._eventSupport.removeEventListener(this._name, listener, thisObject);\n  }\n  /**\n   * @override\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * @override\n   * @return {Platform.UIString.LocalizedString}\n   */\n  title() {\n    if (!this._titleFunction) {\n      return /** @type {Platform.UIString.LocalizedString} */ ('');\n    }\n    return this._titleFunction();\n  }\n\n  /**\n   * @override\n   * @param {undefined|function():Platform.UIString.LocalizedString} titleFunction\n   */\n  setTitleFunction(titleFunction) {\n    if (titleFunction) {\n      this._titleFunction = titleFunction;\n    }\n  }\n\n  /**\n   * @override\n   * @param {boolean} requiresUserAction\n   */\n  setRequiresUserAction(requiresUserAction) {\n    this._requiresUserAction = requiresUserAction;\n  }\n\n  /**\n   * @override\n   * @return {V}\n   */\n  get() {\n    if (this._requiresUserAction && !this._hadUserAction) {\n      return this._defaultValue;\n    }\n\n    if (typeof this._value !== 'undefined') {\n      return this._value;\n    }\n\n    this._value = this._defaultValue;\n    if (this._storage.has(this._name)) {\n      try {\n        this._value = JSON.parse(this._storage.get(this._name));\n      } catch (e) {\n        this._storage.remove(this._name);\n      }\n    }\n    return this._value;\n  }\n\n  /**\n   * @override\n   * @param {V} value\n   */\n  set(value) {\n    this._hadUserAction = true;\n    this._value = value;\n    try {\n      const settingString = JSON.stringify(value);\n      try {\n        this._storage.set(this._name, settingString);\n      } catch (e) {\n        this._printSettingsSavingError(e.message, this._name, settingString);\n      }\n    } catch (e) {\n      Console.instance().error('Cannot stringify setting with name: ' + this._name + ', error: ' + e.message);\n    }\n    this._eventSupport.dispatchEventToListeners(this._name, value);\n  }\n\n  /**\n   * @override\n   */\n  remove() {\n    this._settings._registry.delete(this._name);\n    this._settings._moduleSettings.delete(this._name);\n    this._storage.remove(this._name);\n  }\n\n  /**\n   * @param {!SettingRegistration} registration\n   */\n  setRegistration(registration) {\n    this._registration = registration;\n  }\n\n  /**\n   * @override\n   * @return {?SettingType}\n   */\n  type() {\n    if (this._registration) {\n      return this._registration.settingType;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   * @return {!Array<!SimpleSettingOption>}\n   */\n  options() {\n    if (this._registration && this._registration.options) {\n      return this._registration.options.map(opt => {\n        const {value, title, text, raw} = opt;\n        return {\n          value: value,\n          title: title(),\n          text: typeof text === 'function' ? text() : text,\n          raw: raw,\n        };\n      });\n    }\n    return [];\n  }\n\n  /**\n   * @override\n   * @return {?boolean}\n   */\n  reloadRequired() {\n    if (this._registration) {\n      return this._registration.reloadRequired || null;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   * @return {?SettingCategory}\n   */\n  category() {\n    if (this._registration) {\n      return this._registration.category || null;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   * @return {?string}\n   */\n  tags() {\n    if (this._registration && this._registration.tags) {\n      // Get localized keys and separate by null character to prevent fuzzy matching from matching across them.\n      return this._registration.tags.map(tag => tag()).join('\\0');\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   * @return {?number}\n   */\n  order() {\n    if (this._registration) {\n      return this._registration.order || null;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   * @param {string} message\n   * @param {string} name\n   * @param {string} value\n   */\n  _printSettingsSavingError(message, name, value) {\n    const errorMessage =\n        'Error saving setting with name: ' + this._name + ', value length: ' + value.length + '. Error: ' + message;\n    console.error(errorMessage);\n    Console.instance().error(errorMessage);\n    this._storage._dumpSizes();\n  }\n}\n\n/**\n * @extends LegacySetting<*>\n */\nexport class RegExpSetting extends LegacySetting {\n  /**\n   * @param {!Settings} settings\n   * @param {string} name\n   * @param {string} defaultValue\n   * @param {!ObjectWrapper} eventSupport\n   * @param {!SettingsStorage} storage\n   * @param {string=} regexFlags\n   */\n  constructor(settings, name, defaultValue, eventSupport, storage, regexFlags) {\n    super(settings, name, defaultValue ? [{pattern: defaultValue}] : [], eventSupport, storage);\n    this._regexFlags = regexFlags;\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  get() {\n    const result = [];\n    const items = this.getAsArray();\n    for (let i = 0; i < items.length; ++i) {\n      const item = items[i];\n      if (item.pattern && !item.disabled) {\n        result.push(item.pattern);\n      }\n    }\n    return result.join('|');\n  }\n\n  /**\n   * @return {!Array.<!RegExpSettingItem>}\n   */\n  getAsArray() {\n    return super.get();\n  }\n\n  /**\n   * @override\n   * @param {string} value\n   */\n  set(value) {\n    this.setAsArray([{pattern: value, disabled: false}]);\n  }\n\n  /**\n   * @param {!Array.<!RegExpSettingItem>} value\n   */\n  setAsArray(value) {\n    delete this._regex;\n    super.set(value);\n  }\n\n  /**\n   * @return {?RegExp}\n   */\n  asRegExp() {\n    if (typeof this._regex !== 'undefined') {\n      return this._regex;\n    }\n    this._regex = null;\n    try {\n      const pattern = this.get();\n      if (pattern) {\n        this._regex = new RegExp(pattern, this._regexFlags || '');\n      }\n    } catch (e) {\n    }\n    return this._regex;\n  }\n}\n\nexport class VersionController {\n  static get _currentVersionName() {\n    return 'inspectorVersion';\n  }\n\n  static get currentVersion() {\n    return 30;\n  }\n\n  updateVersion() {\n    const localStorageVersion = window.localStorage ? window.localStorage[VersionController._currentVersionName] : 0;\n    const versionSetting = Settings.instance().createSetting(VersionController._currentVersionName, 0);\n    const currentVersion = VersionController.currentVersion;\n    const oldVersion = versionSetting.get() || parseInt(localStorageVersion || '0', 10);\n    if (oldVersion === 0) {\n      // First run, no need to do anything.\n      versionSetting.set(currentVersion);\n      return;\n    }\n    const methodsToRun = this._methodsToRunToUpdateVersion(oldVersion, currentVersion);\n    for (const method of methodsToRun) {\n      // @ts-ignore Special version method matching\n      this[method].call(this);\n    }\n    versionSetting.set(currentVersion);\n  }\n\n  /**\n   * @param {number} oldVersion\n   * @param {number} currentVersion\n   */\n  _methodsToRunToUpdateVersion(oldVersion, currentVersion) {\n    const result = [];\n    for (let i = oldVersion; i < currentVersion; ++i) {\n      result.push('_updateVersionFrom' + i + 'To' + (i + 1));\n    }\n    return result;\n  }\n\n  _updateVersionFrom0To1() {\n    this._clearBreakpointsWhenTooMany(Settings.instance().createLocalSetting('breakpoints', []), 500000);\n  }\n\n  _updateVersionFrom1To2() {\n    Settings.instance().createSetting('previouslyViewedFiles', []).set([]);\n  }\n\n  _updateVersionFrom2To3() {\n    Settings.instance().createSetting('fileSystemMapping', {}).set({});\n    Settings.instance().createSetting('fileMappingEntries', []).remove();\n  }\n\n  _updateVersionFrom3To4() {\n    const advancedMode = Settings.instance().createSetting('showHeaSnapshotObjectsHiddenProperties', false);\n    moduleSetting('showAdvancedHeapSnapshotProperties').set(advancedMode.get());\n    advancedMode.remove();\n  }\n\n  _updateVersionFrom4To5() {\n    /** @type {!Object<string,string>} */\n    const settingNames = {\n      'FileSystemViewSidebarWidth': 'fileSystemViewSplitViewState',\n      'elementsSidebarWidth': 'elementsPanelSplitViewState',\n      'StylesPaneSplitRatio': 'stylesPaneSplitViewState',\n      'heapSnapshotRetainersViewSize': 'heapSnapshotSplitViewState',\n      'InspectorView.splitView': 'InspectorView.splitViewState',\n      'InspectorView.screencastSplitView': 'InspectorView.screencastSplitViewState',\n      'Inspector.drawerSplitView': 'Inspector.drawerSplitViewState',\n      'layerDetailsSplitView': 'layerDetailsSplitViewState',\n      'networkSidebarWidth': 'networkPanelSplitViewState',\n      'sourcesSidebarWidth': 'sourcesPanelSplitViewState',\n      'scriptsPanelNavigatorSidebarWidth': 'sourcesPanelNavigatorSplitViewState',\n      'sourcesPanelSplitSidebarRatio': 'sourcesPanelDebuggerSidebarSplitViewState',\n      'timeline-details': 'timelinePanelDetailsSplitViewState',\n      'timeline-split': 'timelinePanelRecorsSplitViewState',\n      'timeline-view': 'timelinePanelTimelineStackSplitViewState',\n      'auditsSidebarWidth': 'auditsPanelSplitViewState',\n      'layersSidebarWidth': 'layersPanelSplitViewState',\n      'profilesSidebarWidth': 'profilesPanelSplitViewState',\n      'resourcesSidebarWidth': 'resourcesPanelSplitViewState'\n    };\n    const empty = {};\n    for (const oldName in settingNames) {\n      const newName = settingNames[oldName];\n      const oldNameH = oldName + 'H';\n\n      /** @type {?Object<string,*>} */\n      let newValue = null;\n      const oldSetting = Settings.instance().createSetting(oldName, empty);\n      if (oldSetting.get() !== empty) {\n        newValue = newValue || {};\n        newValue.vertical = {};\n        newValue.vertical.size = oldSetting.get();\n        oldSetting.remove();\n      }\n      const oldSettingH = Settings.instance().createSetting(oldNameH, empty);\n      if (oldSettingH.get() !== empty) {\n        newValue = newValue || {};\n        newValue.horizontal = {};\n        newValue.horizontal.size = oldSettingH.get();\n        oldSettingH.remove();\n      }\n      if (newValue) {\n        Settings.instance().createSetting(newName, {}).set(newValue);\n      }\n    }\n  }\n\n  _updateVersionFrom5To6() {\n    /** @type {!Object<string,string>} */\n    const settingNames = {\n      'debuggerSidebarHidden': 'sourcesPanelSplitViewState',\n      'navigatorHidden': 'sourcesPanelNavigatorSplitViewState',\n      'WebInspector.Drawer.showOnLoad': 'Inspector.drawerSplitViewState'\n    };\n\n    for (const oldName in settingNames) {\n      const oldSetting = Settings.instance().createSetting(oldName, null);\n      if (oldSetting.get() === null) {\n        oldSetting.remove();\n        continue;\n      }\n\n      const newName = settingNames[oldName];\n      const invert = oldName === 'WebInspector.Drawer.showOnLoad';\n      const hidden = oldSetting.get() !== invert;\n      oldSetting.remove();\n      const showMode = hidden ? 'OnlyMain' : 'Both';\n\n      const newSetting = Settings.instance().createSetting(newName, {});\n      const newValue = newSetting.get() || {};\n      newValue.vertical = newValue.vertical || {};\n      newValue.vertical.showMode = showMode;\n      newValue.horizontal = newValue.horizontal || {};\n      newValue.horizontal.showMode = showMode;\n      newSetting.set(newValue);\n    }\n  }\n\n  _updateVersionFrom6To7() {\n    const settingNames = {\n      'sourcesPanelNavigatorSplitViewState': 'sourcesPanelNavigatorSplitViewState',\n      'elementsPanelSplitViewState': 'elementsPanelSplitViewState',\n      'stylesPaneSplitViewState': 'stylesPaneSplitViewState',\n      'sourcesPanelDebuggerSidebarSplitViewState': 'sourcesPanelDebuggerSidebarSplitViewState'\n    };\n\n    const empty = {};\n    for (const name in settingNames) {\n      const setting = Settings.instance().createSetting(name, empty);\n      const value = setting.get();\n      if (value === empty) {\n        continue;\n      }\n      // Zero out saved percentage sizes, and they will be restored to defaults.\n      if (value.vertical && value.vertical.size && value.vertical.size < 1) {\n        value.vertical.size = 0;\n      }\n      if (value.horizontal && value.horizontal.size && value.horizontal.size < 1) {\n        value.horizontal.size = 0;\n      }\n      setting.set(value);\n    }\n  }\n\n  _updateVersionFrom7To8() {\n  }\n\n  _updateVersionFrom8To9() {\n    const settingNames = ['skipStackFramesPattern', 'workspaceFolderExcludePattern'];\n\n    for (let i = 0; i < settingNames.length; ++i) {\n      const setting = Settings.instance().createSetting(settingNames[i], '');\n      let value = setting.get();\n      if (!value) {\n        return;\n      }\n      if (typeof value === 'string') {\n        value = [value];\n      }\n      for (let j = 0; j < value.length; ++j) {\n        if (typeof value[j] === 'string') {\n          value[j] = {pattern: value[j]};\n        }\n      }\n      setting.set(value);\n    }\n  }\n\n  _updateVersionFrom9To10() {\n    // This one is localStorage specific, which is fine.\n    if (!window.localStorage) {\n      return;\n    }\n    for (const key in window.localStorage) {\n      if (key.startsWith('revision-history')) {\n        window.localStorage.removeItem(key);\n      }\n    }\n  }\n\n  _updateVersionFrom10To11() {\n    const oldSettingName = 'customDevicePresets';\n    const newSettingName = 'customEmulatedDeviceList';\n    const oldSetting = Settings.instance().createSetting(oldSettingName, undefined);\n    const list = oldSetting.get();\n    if (!Array.isArray(list)) {\n      return;\n    }\n    const newList = [];\n    for (let i = 0; i < list.length; ++i) {\n      const value = list[i];\n      /** @type {!Object<string,*>} */\n      const device = {};\n      device['title'] = value['title'];\n      device['type'] = 'unknown';\n      device['user-agent'] = value['userAgent'];\n      device['capabilities'] = [];\n      if (value['touch']) {\n        device['capabilities'].push('touch');\n      }\n      if (value['mobile']) {\n        device['capabilities'].push('mobile');\n      }\n      device['screen'] = {};\n      device['screen']['vertical'] = {width: value['width'], height: value['height']};\n      device['screen']['horizontal'] = {width: value['height'], height: value['width']};\n      device['screen']['device-pixel-ratio'] = value['deviceScaleFactor'];\n      device['modes'] = [];\n      device['show-by-default'] = true;\n      device['show'] = 'Default';\n      newList.push(device);\n    }\n    if (newList.length) {\n      Settings.instance().createSetting(newSettingName, []).set(newList);\n    }\n    oldSetting.remove();\n  }\n\n  _updateVersionFrom11To12() {\n    this._migrateSettingsFromLocalStorage();\n  }\n\n  _updateVersionFrom12To13() {\n    this._migrateSettingsFromLocalStorage();\n    Settings.instance().createSetting('timelineOverviewMode', '').remove();\n  }\n\n  _updateVersionFrom13To14() {\n    const defaultValue = {'throughput': -1, 'latency': 0};\n    Settings.instance().createSetting('networkConditions', defaultValue).set(defaultValue);\n  }\n\n  _updateVersionFrom14To15() {\n    const setting = Settings.instance().createLocalSetting('workspaceExcludedFolders', {});\n    const oldValue = setting.get();\n    /** @type {!Object<string,!Array<string>>} */\n    const newValue = {};\n    for (const fileSystemPath in oldValue) {\n      newValue[fileSystemPath] = [];\n      for (const entry of oldValue[fileSystemPath]) {\n        newValue[fileSystemPath].push(entry.path);\n      }\n    }\n    setting.set(newValue);\n  }\n\n  _updateVersionFrom15To16() {\n    const setting = Settings.instance().createSetting('InspectorView.panelOrder', {});\n    const tabOrders = setting.get();\n    for (const key of Object.keys(tabOrders)) {\n      tabOrders[key] = (tabOrders[key] + 1) * 10;\n    }\n    setting.set(tabOrders);\n  }\n\n  _updateVersionFrom16To17() {\n    const setting = Settings.instance().createSetting('networkConditionsCustomProfiles', []);\n    const oldValue = setting.get();\n    const newValue = [];\n    if (Array.isArray(oldValue)) {\n      for (const preset of oldValue) {\n        if (typeof preset.title === 'string' && typeof preset.value === 'object' &&\n            typeof preset.value.throughput === 'number' && typeof preset.value.latency === 'number') {\n          newValue.push({\n            title: preset.title,\n            value:\n                {download: preset.value.throughput, upload: preset.value.throughput, latency: preset.value.latency}\n          });\n        }\n      }\n    }\n    setting.set(newValue);\n  }\n\n  _updateVersionFrom17To18() {\n    const setting = Settings.instance().createLocalSetting('workspaceExcludedFolders', {});\n    const oldValue = setting.get();\n    /** @type {!Object<string,string>} */\n    const newValue = {};\n    for (const oldKey in oldValue) {\n      let newKey = oldKey.replace(/\\\\/g, '/');\n      if (!newKey.startsWith('file://')) {\n        if (newKey.startsWith('/')) {\n          newKey = 'file://' + newKey;\n        } else {\n          newKey = 'file:///' + newKey;\n        }\n      }\n      newValue[newKey] = oldValue[oldKey];\n    }\n    setting.set(newValue);\n  }\n\n  _updateVersionFrom18To19() {\n    const defaultColumns = {status: true, type: true, initiator: true, size: true, time: true};\n    const visibleColumnSettings = Settings.instance().createSetting('networkLogColumnsVisibility', defaultColumns);\n    const visibleColumns = visibleColumnSettings.get();\n    visibleColumns.name = true;\n    visibleColumns.timeline = true;\n\n    /** @type {!Object<string,{visible: number}>} */\n    const configs = {};\n    for (const columnId in visibleColumns) {\n      if (!visibleColumns.hasOwnProperty(columnId)) {\n        continue;\n      }\n      configs[columnId.toLowerCase()] = {visible: visibleColumns[columnId]};\n    }\n    const newSetting = Settings.instance().createSetting('networkLogColumns', {});\n    newSetting.set(configs);\n    visibleColumnSettings.remove();\n  }\n\n  _updateVersionFrom19To20() {\n    const oldSetting = Settings.instance().createSetting('InspectorView.panelOrder', {});\n    const newSetting = Settings.instance().createSetting('panel-tabOrder', {});\n    newSetting.set(oldSetting.get());\n    oldSetting.remove();\n  }\n\n  _updateVersionFrom20To21() {\n    const networkColumns = Settings.instance().createSetting('networkLogColumns', {});\n    const columns = /** @type {!Object<string,string>} */ (networkColumns.get());\n    delete columns['timeline'];\n    delete columns['waterfall'];\n    networkColumns.set(columns);\n  }\n\n  _updateVersionFrom21To22() {\n    const breakpointsSetting = Settings.instance().createLocalSetting('breakpoints', []);\n    const breakpoints = breakpointsSetting.get();\n    for (const breakpoint of breakpoints) {\n      breakpoint['url'] = breakpoint['sourceFileId'];\n      delete breakpoint['sourceFileId'];\n    }\n    breakpointsSetting.set(breakpoints);\n  }\n\n  _updateVersionFrom22To23() {\n    // This update is no-op.\n  }\n\n  _updateVersionFrom23To24() {\n    const oldSetting = Settings.instance().createSetting('searchInContentScripts', false);\n    const newSetting = Settings.instance().createSetting('searchInAnonymousAndContentScripts', false);\n    newSetting.set(oldSetting.get());\n    oldSetting.remove();\n  }\n\n  _updateVersionFrom24To25() {\n    const defaultColumns = {status: true, type: true, initiator: true, size: true, time: true};\n    const networkLogColumnsSetting = Settings.instance().createSetting('networkLogColumns', defaultColumns);\n    const columns = networkLogColumnsSetting.get();\n    delete columns.product;\n    networkLogColumnsSetting.set(columns);\n  }\n\n  _updateVersionFrom25To26() {\n    const oldSetting = Settings.instance().createSetting('messageURLFilters', {});\n    const urls = Object.keys(oldSetting.get());\n    const textFilter = urls.map(url => `-url:${url}`).join(' ');\n    if (textFilter) {\n      const textFilterSetting = Settings.instance().createSetting('console.textFilter', '');\n      const suffix = textFilterSetting.get() ? ` ${textFilterSetting.get()}` : '';\n      textFilterSetting.set(`${textFilter}${suffix}`);\n    }\n    oldSetting.remove();\n  }\n\n  _updateVersionFrom26To27() {\n    /**\n     * @param {string} settingName\n     * @param {string} from\n     * @param {string} to\n     */\n    function renameKeyInObjectSetting(settingName, from, to) {\n      const setting = Settings.instance().createSetting(settingName, {});\n      const value = setting.get();\n      if (from in value) {\n        value[to] = value[from];\n        delete value[from];\n        setting.set(value);\n      }\n    }\n\n    /**\n     * @param {string} settingName\n     * @param {string} from\n     * @param {string} to\n     */\n    function renameInStringSetting(settingName, from, to) {\n      const setting = Settings.instance().createSetting(settingName, '');\n      const value = setting.get();\n      if (value === from) {\n        setting.set(to);\n      }\n    }\n\n    renameKeyInObjectSetting('panel-tabOrder', 'audits2', 'audits');\n    renameKeyInObjectSetting('panel-closeableTabs', 'audits2', 'audits');\n    renameInStringSetting('panel-selectedTab', 'audits2', 'audits');\n  }\n\n  _updateVersionFrom27To28() {\n    const setting = Settings.instance().createSetting('uiTheme', 'systemPreferred');\n    if (setting.get() === 'default') {\n      setting.set('systemPreferred');\n    }\n  }\n\n  _updateVersionFrom28To29() {\n    /**\n     * @param {string} settingName\n     * @param {string} from\n     * @param {string} to\n     */\n    function renameKeyInObjectSetting(settingName, from, to) {\n      const setting = Settings.instance().createSetting(settingName, {});\n      const value = setting.get();\n      if (from in value) {\n        value[to] = value[from];\n        delete value[from];\n        setting.set(value);\n      }\n    }\n\n    /**\n     * @param {string} settingName\n     * @param {string} from\n     * @param {string} to\n     */\n    function renameInStringSetting(settingName, from, to) {\n      const setting = Settings.instance().createSetting(settingName, '');\n      const value = setting.get();\n      if (value === from) {\n        setting.set(to);\n      }\n    }\n\n    renameKeyInObjectSetting('panel-tabOrder', 'audits', 'lighthouse');\n    renameKeyInObjectSetting('panel-closeableTabs', 'audits', 'lighthouse');\n    renameInStringSetting('panel-selectedTab', 'audits', 'lighthouse');\n  }\n\n  _updateVersionFrom29To30() {\n    // Create new location agnostic setting\n    const closeableTabSetting = Settings.instance().createSetting('closeableTabs', {});\n\n    // Read current settings\n    const panelCloseableTabSetting = Settings.instance().createSetting('panel-closeableTabs', {});\n    const drawerCloseableTabSetting = Settings.instance().createSetting('drawer-view-closeableTabs', {});\n    const openTabsInPanel = panelCloseableTabSetting.get();\n    const openTabsInDrawer = panelCloseableTabSetting.get();\n\n    // Set value of new setting\n    const newValue = Object.assign(openTabsInDrawer, openTabsInPanel);\n    closeableTabSetting.set(newValue);\n\n    // Remove old settings\n    panelCloseableTabSetting.remove();\n    drawerCloseableTabSetting.remove();\n  }\n\n  _migrateSettingsFromLocalStorage() {\n    // This step migrates all the settings except for the ones below into the browser profile.\n    const localSettings = new Set([\n      'advancedSearchConfig', 'breakpoints', 'consoleHistory', 'domBreakpoints', 'eventListenerBreakpoints',\n      'fileSystemMapping', 'lastSelectedSourcesSidebarPaneTab', 'previouslyViewedFiles', 'savedURLs',\n      'watchExpressions', 'workspaceExcludedFolders', 'xhrBreakpoints'\n    ]);\n    if (!window.localStorage) {\n      return;\n    }\n\n    for (const key in window.localStorage) {\n      if (localSettings.has(key)) {\n        continue;\n      }\n      const value = window.localStorage[key];\n      window.localStorage.removeItem(key);\n      Settings.instance()._globalStorage.set(key, value);\n    }\n  }\n\n  /**\n   * @param {!Setting<*>} breakpointsSetting\n   * @param {number} maxBreakpointsCount\n   */\n  _clearBreakpointsWhenTooMany(breakpointsSetting, maxBreakpointsCount) {\n    // If there are too many breakpoints in a storage, it is likely due to a recent bug that caused\n    // periodical breakpoints duplication leading to inspector slowness.\n    if (breakpointsSetting.get().length > maxBreakpointsCount) {\n      breakpointsSetting.set([]);\n    }\n  }\n}\n\n/**\n * @enum {symbol}\n */\nexport const SettingStorageType = {\n  Global: Symbol('Global'),\n  Local: Symbol('Local'),\n  Session: Symbol('Session')\n};\n\n/**\n * @param {string} settingName\n * @return {!Setting<*>}\n */\nexport function moduleSetting(settingName) {\n  return Settings.instance().moduleSetting(settingName);\n}\n\n/**\n * @param {string} settingName\n * @return {!Setting<*>}\n */\nexport function settingForTest(settingName) {\n  return Settings.instance().settingForTest(settingName);\n}\n\n/**\n * @param {!Color} color\n * @return {!Format}\n */\nexport function detectColorFormat(color) {\n  const cf = Format;\n  let format;\n  const formatSetting = Settings.instance().moduleSetting('colorFormat').get();\n  if (formatSetting === cf.Original) {\n    format = cf.Original;\n  } else if (formatSetting === cf.RGB) {\n    format = cf.RGB;\n  } else if (formatSetting === cf.HSL) {\n    format = cf.HSL;\n  } else if (formatSetting === cf.HEX) {\n    format = color.detectHEXFormat();\n  } else {\n    format = cf.RGB;\n  }\n\n  return format;\n}\n\nexport {\n  getRegisteredSettings,\n  registerSettingExtension,\n  RegExpSettingItem,\n  SettingCategory,\n  SettingCategoryObject,\n  SettingExtensionOption,\n  SettingRegistration,\n  SettingType,\n  SettingTypeObject\n};\n\n/**\n * @typedef {{\n  * value: (boolean|string),\n  * title: string,\n  * text: (string|undefined),\n  * raw: (boolean | undefined),\n  * }}\n  */\n// @ts-ignore typedef\nexport let SimpleSettingOption;\n"]}