{"version":3,"file":"SimpleHistoryManager.js","sourceRoot":"","sources":["../../../../../front_end/common/SimpleHistoryManager.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2014 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @interface\n */\nexport class HistoryEntry {\n  /**\n   * @return {boolean}\n   */\n  valid() {\n    throw new Error('not implemented');\n  }\n\n  reveal() {\n  }\n}\n\nexport class SimpleHistoryManager {\n  /**\n   * @param {number} historyDepth\n   */\n  constructor(historyDepth) {\n    /** @type {!Array<!HistoryEntry>} */\n    this._entries = [];\n    this._activeEntryIndex = -1;\n\n    // Lock is used to make sure that reveal() does not\n    // make any changes to the history while we are\n    // rolling back or rolling over.\n    this._coalescingReadonly = 0;\n    this._historyDepth = historyDepth;\n  }\n\n  readOnlyLock() {\n    ++this._coalescingReadonly;\n  }\n\n  releaseReadOnlyLock() {\n    --this._coalescingReadonly;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readOnly() {\n    return Boolean(this._coalescingReadonly);\n  }\n\n  /**\n   * @param {function(!HistoryEntry):boolean} filterOutCallback\n   */\n  filterOut(filterOutCallback) {\n    if (this.readOnly()) {\n      return;\n    }\n    const filteredEntries = [];\n    let removedBeforeActiveEntry = 0;\n    for (let i = 0; i < this._entries.length; ++i) {\n      if (!filterOutCallback(this._entries[i])) {\n        filteredEntries.push(this._entries[i]);\n      } else if (i <= this._activeEntryIndex) {\n        ++removedBeforeActiveEntry;\n      }\n    }\n    this._entries = filteredEntries;\n    this._activeEntryIndex = Math.max(0, this._activeEntryIndex - removedBeforeActiveEntry);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  empty() {\n    return !this._entries.length;\n  }\n\n  /**\n   * @return {?HistoryEntry}\n   */\n  active() {\n    return this.empty() ? null : this._entries[this._activeEntryIndex];\n  }\n\n  /**\n   * @param {!HistoryEntry} entry\n   */\n  push(entry) {\n    if (this.readOnly()) {\n      return;\n    }\n    if (!this.empty()) {\n      this._entries.splice(this._activeEntryIndex + 1);\n    }\n    this._entries.push(entry);\n    if (this._entries.length > this._historyDepth) {\n      this._entries.shift();\n    }\n    this._activeEntryIndex = this._entries.length - 1;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  rollback() {\n    if (this.empty()) {\n      return false;\n    }\n\n    let revealIndex = this._activeEntryIndex - 1;\n    while (revealIndex >= 0 && !this._entries[revealIndex].valid()) {\n      --revealIndex;\n    }\n    if (revealIndex < 0) {\n      return false;\n    }\n\n    this.readOnlyLock();\n    this._entries[revealIndex].reveal();\n    this.releaseReadOnlyLock();\n\n    this._activeEntryIndex = revealIndex;\n    return true;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  rollover() {\n    let revealIndex = this._activeEntryIndex + 1;\n\n    while (revealIndex < this._entries.length && !this._entries[revealIndex].valid()) {\n      ++revealIndex;\n    }\n    if (revealIndex >= this._entries.length) {\n      return false;\n    }\n\n    this.readOnlyLock();\n    this._entries[revealIndex].reveal();\n    this.releaseReadOnlyLock();\n\n    this._activeEntryIndex = revealIndex;\n    return true;\n  }\n}\n"]}