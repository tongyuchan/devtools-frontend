{"version":3,"file":"Worker.js","sourceRoot":"","sources":["../../../../../front_end/common/Worker.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAEH,MAAM,OAAO,aAAa;IACxB;;;OAGG;IACH,YAAY,cAAc;QACxB,gCAAgC;QAChC,IAAI,CAAC,cAAc,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC1C,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,cAAc,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC,EAAE;gBACzB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,aAAa,CAAC,CAAC;gBAC7C,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;gBACxB,OAAO,CAAC,MAAM,CAAC,CAAC;YAClB,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,OAAO,CAAC,GAAG;QAChB,OAAO,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAED;;OAEG;IACH,WAAW,CAAC,OAAO;QACjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAChC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,SAAS;QACP,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED;;OAEG;IACH,IAAI,SAAS,CAAC,QAAQ;QACpB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAChC,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,IAAI,OAAO,CAAC,QAAQ;QAClB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAChC,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["/*\n * Copyright (C) 2014 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nexport class WorkerWrapper {\n  /**\n   * @private\n   * @param {!URL} workerLocation\n   */\n  constructor(workerLocation) {\n    /** @type {!Promise<!Worker>} */\n    this._workerPromise = new Promise(fulfill => {\n      const worker = new Worker(workerLocation, {type: 'module'});\n      worker.onmessage = event => {\n        console.assert(event.data === 'workerReady');\n        worker.onmessage = null;\n        fulfill(worker);\n      };\n    });\n  }\n\n  /**\n   * @param {!URL} url\n   */\n  static fromURL(url) {\n    return new WorkerWrapper(url);\n  }\n\n  /**\n   * @param {*} message\n   */\n  postMessage(message) {\n    this._workerPromise.then(worker => {\n      if (!this._disposed) {\n        worker.postMessage(message);\n      }\n    });\n  }\n\n  dispose() {\n    this._disposed = true;\n    this._workerPromise.then(worker => worker.terminate());\n  }\n\n  terminate() {\n    this.dispose();\n  }\n\n  /**\n   * @param {?function(!MessageEvent):void} listener\n   */\n  set onmessage(listener) {\n    this._workerPromise.then(worker => {\n      worker.onmessage = listener;\n    });\n  }\n\n  /**\n   * @param {?function(!Event):void} listener\n   */\n  set onerror(listener) {\n    this._workerPromise.then(worker => {\n      worker.onerror = listener;\n    });\n  }\n}\n"]}