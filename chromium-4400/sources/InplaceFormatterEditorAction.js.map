{"version":3,"file":"InplaceFormatterEditorAction.js","sourceRoot":"","sources":["../../../../../front_end/sources/InplaceFormatterEditorAction.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,qBAAqB,CAAC;AAC9C,OAAO,KAAK,SAAS,MAAM,2BAA2B,CAAC;AACvD,OAAO,KAAK,WAAW,MAAM,+BAA+B,CAAC;AAE7D,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAGlC,OAAO,EAAe,MAAM,EAAc,MAAM,kBAAkB,CAAC,CAAE,qCAAqC;AAE1G;;GAEG;AACH,MAAM,OAAO,4BAA4B;IACvC;QACE,wCAAwC;QACxC,IAAI,CAAC,OAAO,CAAC;QACb,2BAA2B;QAC3B,IAAI,CAAC,YAAY,CAAC;IACpB,CAAC;IACD;;OAEG;IACH,eAAe,CAAC,KAAK;QACnB,MAAM,YAAY,GAAG,mDAAmD,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACtF,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IAED;;OAEG;IACH,aAAa,CAAC,KAAK;QACjB,MAAM,WAAW,GAAG,sBAAsB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACpE,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC1B;IACH,CAAC;IAED;;OAEG;IACH,aAAa,CAAC,YAAY;QACxB,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,CAAC;QAChE,IAAI,YAAY,IAAI,aAAa,EAAE;YACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;SAClF;IACH,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,WAAW;QAChB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;QAED,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3F,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEvF,IAAI,CAAC,OAAO,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,wBAAwB,CAAC,CAAC;QAC1G,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;QACtG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC,CAAC;QAEtD,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED;;;OAGG;IACH,cAAc,CAAC,YAAY;QACzB,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,YAAY,CAAC,OAAO,EAAE,CAAC,iBAAiB,EAAE,EAAE;YAC9C,OAAO,IAAI,CAAC;SACb;QACD,IAAI,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YAC5E,OAAO,IAAI,CAAC;SACb;QACD,OAAO,YAAY,CAAC,WAAW,EAAE,CAAC,YAAY,EAAE,CAAC;IACnD,CAAC;IAED;;OAEG;IACH,oBAAoB,CAAC,KAAK;QACxB,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC;QAC7D,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;YACvD,OAAO;SACR;QAED,IAAI,YAAY,CAAC,OAAO,EAAE,EAAE;YAC1B,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;SAC/D;aAAM;YACL,YAAY,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;gBACnD,IAAI,CAAC,cAAc;gBACf,mDAAmD,CAAC,CAAC,YAAY,CAAC,EAAE,eAAe,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;YACzG,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED;;;OAGG;IACH,cAAc,CAAC,YAAY,EAAE,OAAO;QAClC,MAAM,eAAe,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;QAChD,SAAS,CAAC,eAAe,CAAC,kBAAkB,CAAC,MAAM,CAC/C,YAAY,CAAC,WAAW,EAAE,EAAE,eAAe,EAAE,OAAO,EAAE,KAAK,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,EAAE;YACjG,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;IACT,CAAC;IAED;;;;;OAKG;IACH,mBAAmB,CAAC,YAAY,EAAE,gBAAgB,EAAE,gBAAgB;QAClE,IAAI,YAAY,CAAC,WAAW,EAAE,KAAK,gBAAgB,EAAE;YACnD,OAAO;SACR;QACD,MAAM,WAAW;QACb,uDAAuD,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;QAC1G,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACnB,IAAI,WAAW,EAAE;YACf,MAAM,SAAS,GAAG,WAAW,CAAC,SAAS,EAAE,CAAC;YAC1C,KAAK,GAAG,gBAAgB,CAAC,mBAAmB,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC;SAC1F;QACD,YAAY,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QAE9C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;CACF","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Formatter from '../formatter/formatter.js';\nimport * as Persistence from '../persistence/persistence.js';\nimport * as SourceFrame from '../source_frame/source_frame.js';  // eslint-disable-line no-unused-vars\nimport * as UI from '../ui/ui.js';\nimport * as Workspace from '../workspace/workspace.js';  // eslint-disable-line no-unused-vars\n\nimport {EditorAction, Events, SourcesView} from './SourcesView.js';  // eslint-disable-line no-unused-vars\n\n/**\n * @implements {EditorAction}\n */\nexport class InplaceFormatterEditorAction {\n  constructor() {\n    /** @type {!UI.Toolbar.ToolbarButton} */\n    this._button;\n    /** @type {!SourcesView} */\n    this._sourcesView;\n  }\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _editorSelected(event) {\n    const uiSourceCode = /** @type {!Workspace.UISourceCode.UISourceCode} */ (event.data);\n    this._updateButton(uiSourceCode);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _editorClosed(event) {\n    const wasSelected = /** @type {boolean} */ (event.data.wasSelected);\n    if (wasSelected) {\n      this._updateButton(null);\n    }\n  }\n\n  /**\n   * @param {?Workspace.UISourceCode.UISourceCode} uiSourceCode\n   */\n  _updateButton(uiSourceCode) {\n    const isFormattable = this._isFormattable(uiSourceCode);\n    this._button.element.classList.toggle('hidden', !isFormattable);\n    if (uiSourceCode && isFormattable) {\n      this._button.setTitle(Common.UIString.UIString(`Format ${uiSourceCode.name()}`));\n    }\n  }\n\n  /**\n   * @override\n   * @param {!SourcesView} sourcesView\n   * @return {!UI.Toolbar.ToolbarButton}\n   */\n  button(sourcesView) {\n    if (this._button) {\n      return this._button;\n    }\n\n    this._sourcesView = sourcesView;\n    this._sourcesView.addEventListener(Events.EditorSelected, this._editorSelected.bind(this));\n    this._sourcesView.addEventListener(Events.EditorClosed, this._editorClosed.bind(this));\n\n    this._button = new UI.Toolbar.ToolbarButton(Common.UIString.UIString('Format'), 'largeicon-pretty-print');\n    this._button.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this._formatSourceInPlace, this);\n    this._updateButton(sourcesView.currentUISourceCode());\n\n    return this._button;\n  }\n\n  /**\n   * @param {?Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @return {boolean}\n   */\n  _isFormattable(uiSourceCode) {\n    if (!uiSourceCode) {\n      return false;\n    }\n    if (uiSourceCode.project().canSetFileContent()) {\n      return true;\n    }\n    if (Persistence.Persistence.PersistenceImpl.instance().binding(uiSourceCode)) {\n      return true;\n    }\n    return uiSourceCode.contentType().isStyleSheet();\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _formatSourceInPlace(event) {\n    const uiSourceCode = this._sourcesView.currentUISourceCode();\n    if (!uiSourceCode || !this._isFormattable(uiSourceCode)) {\n      return;\n    }\n\n    if (uiSourceCode.isDirty()) {\n      this._contentLoaded(uiSourceCode, uiSourceCode.workingCopy());\n    } else {\n      uiSourceCode.requestContent().then(deferredContent => {\n        this._contentLoaded(\n            /** @type {!Workspace.UISourceCode.UISourceCode} */ (uiSourceCode), deferredContent.content || '');\n      });\n    }\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @param {string} content\n   */\n  _contentLoaded(uiSourceCode, content) {\n    const highlighterType = uiSourceCode.mimeType();\n    Formatter.ScriptFormatter.FormatterInterface.format(\n        uiSourceCode.contentType(), highlighterType, content, async (formattedContent, formatterMapping) => {\n          this._formattingComplete(uiSourceCode, formattedContent, formatterMapping);\n        });\n  }\n\n  /**\n   * Post-format callback\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @param {string} formattedContent\n   * @param {!Formatter.ScriptFormatter.FormatterSourceMapping} formatterMapping\n   */\n  _formattingComplete(uiSourceCode, formattedContent, formatterMapping) {\n    if (uiSourceCode.workingCopy() === formattedContent) {\n      return;\n    }\n    const sourceFrame =\n        /** @type {!SourceFrame.SourceFrame.SourceFrameImpl} */ (this._sourcesView.viewForFile(uiSourceCode));\n    let start = [0, 0];\n    if (sourceFrame) {\n      const selection = sourceFrame.selection();\n      start = formatterMapping.originalToFormatted(selection.startLine, selection.startColumn);\n    }\n    uiSourceCode.setWorkingCopy(formattedContent);\n\n    this._sourcesView.showSourceLocation(uiSourceCode, start[0], start[1]);\n  }\n}\n"]}