{"version":3,"file":"RecorderPlugin.js","sourceRoot":"","sources":["../../../../../front_end/sources/RecorderPlugin.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,qBAAqB,CAAC;AAC9C,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AAEpD,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAGlC,OAAO,EAAC,MAAM,EAAC,MAAM,aAAa,CAAC;AAEnC,MAAM,OAAO,cAAe,SAAQ,MAAM;IACxC;;;OAGG;IACH,YAAY,UAAU,EAAE,YAAY;QAClC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,OAAO,CAAC,YAAY;QACzB,OAAO,QAAQ,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC;IAC5E,CAAC;IAED;;;OAGG;IACH,gBAAgB;QACd,MAAM,eAAe,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,2BAA2B,CAAC,CAAC;QAChG,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE5D,OAAO,CAAC,eAAe,CAAC,CAAC;IAC3B,CAAC;CACF","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Recorder from '../recorder/recorder.js';\nimport * as SourceFrame from '../source_frame/source_frame.js';  // eslint-disable-line no-unused-vars\nimport * as UI from '../ui/ui.js';\nimport * as Workspace from '../workspace/workspace.js';  // eslint-disable-line no-unused-vars\n\nimport {Plugin} from './Plugin.js';\n\nexport class RecorderPlugin extends Plugin {\n  /**\n   * @param {!SourceFrame.SourcesTextEditor.SourcesTextEditor} textEditor\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   */\n  constructor(textEditor, uiSourceCode) {\n    super();\n    this._textEditor = textEditor;\n    this._uiSourceCode = uiSourceCode;\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @return {boolean}\n   */\n  static accepts(uiSourceCode) {\n    return Recorder.RecordingFileSystem.isRecordingUISourceCode(uiSourceCode);\n  }\n\n  /**\n   * @override\n   * @return {!Array<!UI.Toolbar.ToolbarItem>}\n   */\n  leftToolbarItems() {\n    const toggleRecording = UI.Toolbar.Toolbar.createActionButtonForId('recorder.toggle-recording');\n    toggleRecording.setText(Common.UIString.UIString('Record'));\n\n    return [toggleRecording];\n  }\n}\n"]}