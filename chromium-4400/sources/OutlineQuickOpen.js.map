{"version":3,"file":"OutlineQuickOpen.js","sourceRoot":"","sources":["../../../../../front_end/sources/OutlineQuickOpen.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Formatter from '../formatter/formatter.js';\nimport * as QuickOpen from '../quick_open/quick_open.js';\nimport * as UI from '../ui/ui.js';\nimport * as Workspace from '../workspace/workspace.js';  // eslint-disable-line no-unused-vars\n\nimport {SourcesView} from './SourcesView.js';\n\nexport class OutlineQuickOpen extends QuickOpen.FilteredListWidget.Provider {\n  constructor() {\n    super();\n    /** @type {!Array<!Formatter.FormatterWorkerPool.OutlineItem>} */\n    this._items = [];\n    this._active = false;\n  }\n\n  /**\n   * @override\n   */\n  attach() {\n    this._items = [];\n    this._active = false;\n\n    const uiSourceCode = this._currentUISourceCode();\n    if (uiSourceCode) {\n      this._active = Formatter.FormatterWorkerPool.formatterWorkerPool().outlineForMimetype(\n          uiSourceCode.workingCopy(), uiSourceCode.contentType().canonicalMimeType(),\n          this._didBuildOutlineChunk.bind(this));\n    }\n  }\n\n  /**\n   * @param {boolean} isLastChunk\n   * @param {!Array<!Formatter.FormatterWorkerPool.OutlineItem>} items\n   */\n  _didBuildOutlineChunk(isLastChunk, items) {\n    this._items.push(...items);\n    this.refresh();\n  }\n\n  /**\n   * @override\n   * @return {number}\n   */\n  itemCount() {\n    return this._items.length;\n  }\n\n  /**\n   * @override\n   * @param {number} itemIndex\n   * @return {string}\n   */\n  itemKeyAt(itemIndex) {\n    const item = this._items[itemIndex];\n    return item.title + (item.subtitle ? item.subtitle : '');\n  }\n\n  /**\n   * @override\n   * @param {number} itemIndex\n   * @param {string} query\n   * @return {number}\n   */\n  itemScoreAt(itemIndex, query) {\n    const item = this._items[itemIndex];\n    const methodName = query.split('(')[0];\n    if (methodName.toLowerCase() === item.title.toLowerCase()) {\n      return 1 / (1 + item.line);\n    }\n    return -item.line - 1;\n  }\n\n  /**\n   * @override\n   * @param {number} itemIndex\n   * @param {string} query\n   * @param {!Element} titleElement\n   * @param {!Element} subtitleElement\n   */\n  renderItem(itemIndex, query, titleElement, subtitleElement) {\n    const item = this._items[itemIndex];\n    titleElement.textContent = item.title + (item.subtitle ? item.subtitle : '');\n    QuickOpen.FilteredListWidget.FilteredListWidget.highlightRanges(titleElement, query);\n    subtitleElement.textContent = ':' + (item.line + 1);\n  }\n\n  /**\n   * @override\n   * @param {?number} itemIndex\n   * @param {string} promptValue\n   */\n  selectItem(itemIndex, promptValue) {\n    if (itemIndex === null) {\n      return;\n    }\n    const uiSourceCode = this._currentUISourceCode();\n    if (!uiSourceCode) {\n      return;\n    }\n    const lineNumber = this._items[itemIndex].line;\n    if (!isNaN(lineNumber) && lineNumber >= 0) {\n      Common.Revealer.reveal(uiSourceCode.uiLocation(lineNumber, this._items[itemIndex].column));\n    }\n  }\n\n\n  /**\n   * @return {?Workspace.UISourceCode.UISourceCode}\n   */\n  _currentUISourceCode() {\n    const sourcesView = UI.Context.Context.instance().flavor(SourcesView);\n    if (!sourcesView) {\n      return null;\n    }\n    return sourcesView.currentUISourceCode();\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  notFoundText() {\n    if (!this._currentUISourceCode()) {\n      return Common.UIString.UIString('No file selected.');\n    }\n    if (!this._active) {\n      return Common.UIString.UIString('Open a JavaScript or CSS file to see symbols');\n    }\n    return Common.UIString.UIString('No results found');\n  }\n}\n"]}