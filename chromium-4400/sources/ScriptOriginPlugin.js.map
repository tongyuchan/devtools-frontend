{"version":3,"file":"ScriptOriginPlugin.js","sourceRoot":"","sources":["../../../../../front_end/sources/ScriptOriginPlugin.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Bindings from '../bindings/bindings.js';\nimport * as Components from '../components/components.js';\nimport * as SDK from '../sdk/sdk.js';                            // eslint-disable-line no-unused-vars\nimport * as SourceFrame from '../source_frame/source_frame.js';  // eslint-disable-line no-unused-vars\nimport * as UI from '../ui/ui.js';\nimport * as Workspace from '../workspace/workspace.js';  // eslint-disable-line no-unused-vars\n\nimport {Plugin} from './Plugin.js';\n\nexport class ScriptOriginPlugin extends Plugin {\n  /**\n   * @param {!SourceFrame.SourcesTextEditor.SourcesTextEditor} textEditor\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   */\n  constructor(textEditor, uiSourceCode) {\n    super();\n    this._textEditor = textEditor;\n    this._uiSourceCode = uiSourceCode;\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @return {boolean}\n   */\n  static accepts(uiSourceCode) {\n    return uiSourceCode.contentType().hasScripts() || Boolean(ScriptOriginPlugin._script(uiSourceCode));\n  }\n\n  /**\n   * @override\n   * @return {!Promise<!Array<!UI.Toolbar.ToolbarItem>>}\n   */\n  async rightToolbarItems() {\n    const originURL = Bindings.CompilerScriptMapping.CompilerScriptMapping.uiSourceCodeOrigin(this._uiSourceCode);\n    if (originURL) {\n      const item =\n          UI.UIUtils.formatLocalized('(source mapped from %s)', [Components.Linkifier.Linkifier.linkifyURL(originURL)]);\n      return [new UI.Toolbar.ToolbarItem(item)];\n    }\n\n    const pluginManager = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().pluginManager;\n    if (pluginManager) {\n      for (const originScript of pluginManager.scriptsForUISourceCode(this._uiSourceCode)) {\n        if (originScript.hasSourceURL) {\n          const item = UI.UIUtils.formatLocalized(\n              '(provided via debug info by %s)', [Components.Linkifier.Linkifier.linkifyURL(originScript.sourceURL)]);\n          return [new UI.Toolbar.ToolbarItem(item)];\n        }\n      }\n    }\n\n    // Handle anonymous scripts with an originStackTrace.\n    const script = await ScriptOriginPlugin._script(this._uiSourceCode);\n    if (!script || !script.originStackTrace) {\n      return [];\n    }\n    const link = linkifier.linkifyStackTraceTopFrame(script.debuggerModel.target(), script.originStackTrace);\n    return [new UI.Toolbar.ToolbarItem(link)];\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @return {!Promise<?SDK.Script.Script>}\n   */\n  static async _script(uiSourceCode) {\n    const locations =\n        await Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().uiLocationToRawLocations(\n            uiSourceCode, 0, 0);\n    for (const location of locations) {\n      const script = location.script();\n      if (script && script.originStackTrace) {\n        return script;\n      }\n    }\n    return null;\n  }\n}\n\nexport const linkifier = new Components.Linkifier.Linkifier();\n"]}