{"version":3,"file":"ThreadsSidebarPane.js","sourceRoot":"","sources":["../../../../../front_end/sources/ThreadsSidebarPane.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';  // eslint-disable-line no-unused-vars\nimport {ls} from '../platform/platform.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';\n\n/** @type {!ThreadsSidebarPane} */\nlet threadsSidebarPaneInstance;\n\n/**\n * @implements {SDK.SDKModel.SDKModelObserver<!SDK.DebuggerModel.DebuggerModel>}\n * @implements {UI.ListControl.ListDelegate<!SDK.DebuggerModel.DebuggerModel>}\n */\nexport class ThreadsSidebarPane extends UI.Widget.VBox {\n  /**\n   * @private\n   */\n  constructor() {\n    super(true);\n    this.registerRequiredCSS('sources/threadsSidebarPane.css', {enableLegacyPatching: true});\n\n    /** @type {!UI.ListModel.ListModel<!SDK.DebuggerModel.DebuggerModel>} */\n    this._items = new UI.ListModel.ListModel();\n    /** @type {!UI.ListControl.ListControl<!SDK.DebuggerModel.DebuggerModel>} */\n    this._list = new UI.ListControl.ListControl(this._items, this, UI.ListControl.ListMode.NonViewport);\n    const currentTarget = UI.Context.Context.instance().flavor(SDK.SDKModel.Target);\n    this._selectedModel = currentTarget !== null ? currentTarget.model(SDK.DebuggerModel.DebuggerModel) : null;\n    this.contentElement.appendChild(this._list.element);\n\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.SDKModel.Target, this._targetFlavorChanged, this);\n    SDK.SDKModel.TargetManager.instance().observeModels(SDK.DebuggerModel.DebuggerModel, this);\n  }\n\n  static instance() {\n    if (!threadsSidebarPaneInstance) {\n      threadsSidebarPaneInstance = new ThreadsSidebarPane();\n    }\n    return threadsSidebarPaneInstance;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  static shouldBeShown() {\n    return SDK.SDKModel.TargetManager.instance().models(SDK.DebuggerModel.DebuggerModel).length >= 2;\n  }\n\n  /**\n   * @override\n   * @param {!SDK.DebuggerModel.DebuggerModel} debuggerModel\n   * @return {!Element}\n   */\n  createElementForItem(debuggerModel) {\n    const element = document.createElement('div');\n    element.classList.add('thread-item');\n    const title = element.createChild('div', 'thread-item-title');\n    const pausedState = element.createChild('div', 'thread-item-paused-state');\n    element.appendChild(UI.Icon.Icon.create('smallicon-thick-right-arrow', 'selected-thread-icon'));\n    element.tabIndex = -1;\n    self.onInvokeElement(element, event => {\n      UI.Context.Context.instance().setFlavor(SDK.SDKModel.Target, debuggerModel.target());\n      event.consume(true);\n    });\n    const isSelected = UI.Context.Context.instance().flavor(SDK.SDKModel.Target) === debuggerModel.target();\n    element.classList.toggle('selected', isSelected);\n    UI.ARIAUtils.setSelected(element, isSelected);\n\n    function updateTitle() {\n      const executionContext = debuggerModel.runtimeModel().defaultExecutionContext();\n      title.textContent =\n          executionContext && executionContext.label() ? executionContext.label() : debuggerModel.target().name();\n    }\n\n    function updatePausedState() {\n      pausedState.textContent = debuggerModel.isPaused() ? ls`paused` : '';\n    }\n\n    /**\n     * @param {!Common.EventTarget.EventTargetEvent} event\n     */\n    function targetNameChanged(event) {\n      const target = /** @type {!SDK.SDKModel.Target} */ (event.data);\n      if (target === debuggerModel.target()) {\n        updateTitle();\n      }\n    }\n\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.DebuggerPaused, updatePausedState);\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.DebuggerResumed, updatePausedState);\n    debuggerModel.runtimeModel().addEventListener(SDK.RuntimeModel.Events.ExecutionContextChanged, updateTitle);\n    SDK.SDKModel.TargetManager.instance().addEventListener(SDK.SDKModel.Events.NameChanged, targetNameChanged);\n\n    updatePausedState();\n    updateTitle();\n    return element;\n  }\n\n  /**\n   * @override\n   * @param {!SDK.DebuggerModel.DebuggerModel} debuggerModel\n   * @return {number}\n   */\n  heightForItem(debuggerModel) {\n    console.assert(false);  // Should not be called.\n    return 0;\n  }\n\n  /**\n   * @override\n   * @param {!SDK.DebuggerModel.DebuggerModel} debuggerModel\n   * @return {boolean}\n   */\n  isItemSelectable(debuggerModel) {\n    return true;\n  }\n\n  /**\n   * @override\n   * @param {?SDK.DebuggerModel.DebuggerModel} from\n   * @param {?SDK.DebuggerModel.DebuggerModel} to\n   * @param {?Element} fromElement\n   * @param {?Element} toElement\n   */\n  selectedItemChanged(from, to, fromElement, toElement) {\n    const fromEle = /** @type {?HTMLElement} */ (fromElement);\n    if (fromEle) {\n      fromEle.tabIndex = -1;\n    }\n    const toEle = /** @type {?HTMLElement} */ (toElement);\n    if (toEle) {\n      this.setDefaultFocusedElement(toEle);\n      toEle.tabIndex = 0;\n      if (this.hasFocus()) {\n        toEle.focus();\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {?Element} fromElement\n   * @param {?Element} toElement\n   * @return {boolean}\n   */\n  updateSelectedItemARIA(fromElement, toElement) {\n    return false;\n  }\n\n  /**\n   * @override\n   * @param {!SDK.DebuggerModel.DebuggerModel} debuggerModel\n   */\n  modelAdded(debuggerModel) {\n    this._items.insert(this._items.length, debuggerModel);\n    const currentTarget = UI.Context.Context.instance().flavor(SDK.SDKModel.Target);\n    if (currentTarget === debuggerModel.target()) {\n      this._list.selectItem(debuggerModel);\n    }\n  }\n\n  /**\n   * @override\n   * @param {!SDK.DebuggerModel.DebuggerModel} debuggerModel\n   */\n  modelRemoved(debuggerModel) {\n    this._items.remove(this._items.indexOf(debuggerModel));\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _targetFlavorChanged(event) {\n    const hadFocus = this.hasFocus();\n    const target = /** @type {!SDK.SDKModel.Target} */ (event.data);\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n    this._list.selectItem(debuggerModel);\n    if (debuggerModel) {\n      this._list.refreshItem(debuggerModel);\n    }\n    if (this._selectedModel !== null) {\n      this._list.refreshItem(this._selectedModel);\n    }\n    this._selectedModel = debuggerModel;\n    if (hadFocus) {\n      this.focus();\n    }\n  }\n}\n"]}