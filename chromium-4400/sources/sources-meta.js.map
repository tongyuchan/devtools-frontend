{"version":3,"file":"sources-meta.js","sourceRoot":"","sources":["../../../../../front_end/sources/sources-meta.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../platform/platform.js';\nimport {ls} from '../platform/platform.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Sources from './sources.js';\n\nlet loadedSourcesModule: (typeof Sources|undefined);\n\nasync function loadSourcesModule(): Promise<typeof Sources> {\n  if (!loadedSourcesModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('sources');\n    loadedSourcesModule = await import('./sources.js');\n  }\n  return loadedSourcesModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'sources',\n  commandPrompt: 'Show Sources',\n  title: (): Platform.UIString.LocalizedString => ls`Sources`,\n  order: 30,\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return Sources.SourcesPanel.SourcesPanel.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.NAVIGATOR_VIEW,\n  id: 'navigator-files',\n  commandPrompt: 'Show Filesystem',\n  title: (): Platform.UIString.LocalizedString => ls`Filesystem`,\n  order: 3,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return Sources.SourcesNavigator.FilesNavigatorView.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.NAVIGATOR_VIEW,\n  id: 'navigator-snippets',\n  commandPrompt: 'Show Snippets',\n  title: (): Platform.UIString.LocalizedString => ls`Snippets`,\n  order: 6,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return Sources.SourcesNavigator.SnippetsNavigatorView.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'sources.search-sources-tab',\n  commandPrompt: 'Show Search',\n  title: (): Platform.UIString.LocalizedString => ls`Search`,\n  order: 7,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return Sources.SearchSourcesView.SearchSourcesView.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.NAVIGATOR_VIEW,\n  id: 'navigator-recordings',\n  commandPrompt: 'Show Recordings',\n  title: (): Platform.UIString.LocalizedString => ls`Recordings`,\n  order: 8,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  experiment: 'recorder',\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return Sources.SourcesNavigator.RecordingsNavigatorView.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'sources.quick',\n  commandPrompt: 'Show Quick source',\n  title: (): Platform.UIString.LocalizedString => ls`Quick source`,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 1000,\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return Sources.SourcesPanel.WrapperView.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  id: 'sources.threads',\n  commandPrompt: 'Show Threads',\n  title: (): Platform.UIString.LocalizedString => ls`Threads`,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  condition: '!sources.hide_thread_sidebar',\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return Sources.ThreadsSidebarPane.ThreadsSidebarPane.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  id: 'sources.scopeChain',\n  commandPrompt: 'Show Scope',\n  title: (): Platform.UIString.LocalizedString => ls`Scope`,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return Sources.ScopeChainSidebarPane.ScopeChainSidebarPane.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  id: 'sources.watch',\n  commandPrompt: 'Show Watch',\n  title: (): Platform.UIString.LocalizedString => ls`Watch`,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return Sources.WatchExpressionsSidebarPane.WatchExpressionsSidebarPane.instance();\n  },\n  hasToolbar: true,\n});\n\nUI.ViewManager.registerViewExtension({\n  id: 'sources.jsBreakpoints',\n  commandPrompt: 'Show Breakpoints',\n  title: (): Platform.UIString.LocalizedString => ls`Breakpoints`,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return Sources.JavaScriptBreakpointsSidebarPane.JavaScriptBreakpointsSidebarPane.instance();\n  },\n});\n"]}