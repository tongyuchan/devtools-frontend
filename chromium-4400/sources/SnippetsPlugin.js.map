{"version":3,"file":"SnippetsPlugin.js","sourceRoot":"","sources":["../../../../../front_end/sources/SnippetsPlugin.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,qBAAqB,CAAC;AAC9C,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AAEpD,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAGlC,OAAO,EAAC,MAAM,EAAC,MAAM,aAAa,CAAC;AAEnC,MAAM,OAAO,cAAe,SAAQ,MAAM;IACxC;;;OAGG;IACH,YAAY,UAAU,EAAE,YAAY;QAClC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,OAAO,CAAC,YAAY;QACzB,OAAO,QAAQ,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;IAC/E,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,iBAAiB;QACrB,MAAM,UAAU,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,CAAC;QACtF,UAAU,CAAC,OAAO,CACd,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;QAE/G,OAAO,CAAC,UAAU,CAAC,CAAC;IACtB,CAAC;CACF","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as Snippets from '../snippets/snippets.js';\nimport * as SourceFrame from '../source_frame/source_frame.js';  // eslint-disable-line no-unused-vars\nimport * as UI from '../ui/ui.js';\nimport * as Workspace from '../workspace/workspace.js';  // eslint-disable-line no-unused-vars\n\nimport {Plugin} from './Plugin.js';\n\nexport class SnippetsPlugin extends Plugin {\n  /**\n   * @param {!SourceFrame.SourcesTextEditor.SourcesTextEditor} textEditor\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   */\n  constructor(textEditor, uiSourceCode) {\n    super();\n    this._textEditor = textEditor;\n    this._uiSourceCode = uiSourceCode;\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @return {boolean}\n   */\n  static accepts(uiSourceCode) {\n    return Snippets.ScriptSnippetFileSystem.isSnippetsUISourceCode(uiSourceCode);\n  }\n\n  /**\n   * @override\n   * @return {!Promise<!Array<!UI.Toolbar.ToolbarItem>>}\n   */\n  async rightToolbarItems() {\n    const runSnippet = UI.Toolbar.Toolbar.createActionButtonForId('debugger.run-snippet');\n    runSnippet.setText(\n        Host.Platform.isMac() ? Common.UIString.UIString('\\u2318+Enter') : Common.UIString.UIString('Ctrl+Enter'));\n\n    return [runSnippet];\n  }\n}\n"]}