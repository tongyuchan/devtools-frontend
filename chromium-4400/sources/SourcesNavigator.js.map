{"version":3,"file":"SourcesNavigator.js","sourceRoot":"","sources":["../../../../../front_end/sources/SourcesNavigator.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as Persistence from '../persistence/persistence.js';\nimport {ls} from '../platform/platform.js';\nimport * as Recorder from '../recorder/recorder.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as Snippets from '../snippets/snippets.js';\nimport * as UI from '../ui/ui.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {NavigatorUISourceCodeTreeNode, NavigatorView} from './NavigatorView.js';  // eslint-disable-line no-unused-vars\n\n/** @type {!NetworkNavigatorView} */\nlet networkNavigatorViewInstance;\n\nexport class NetworkNavigatorView extends NavigatorView {\n  /** @private */\n  constructor() {\n    super();\n    SDK.SDKModel.TargetManager.instance().addEventListener(\n        SDK.SDKModel.Events.InspectedURLChanged, this._inspectedURLChanged, this);\n\n    // Record the sources tool load time after the file navigator has loaded.\n    Host.userMetrics.panelLoaded('sources', 'DevTools.Launch.Sources');\n  }\n  /**\n   * @param {{forceNew: ?boolean}} opts\n   */\n  static instance(opts = {forceNew: null}) {\n    const {forceNew} = opts;\n    if (!networkNavigatorViewInstance || forceNew) {\n      networkNavigatorViewInstance = new NetworkNavigatorView();\n    }\n\n    return networkNavigatorViewInstance;\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.Workspace.Project} project\n   * @return {boolean}\n   */\n  acceptProject(project) {\n    return project.type() === Workspace.Workspace.projectTypes.Network;\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _inspectedURLChanged(event) {\n    const mainTarget = SDK.SDKModel.TargetManager.instance().mainTarget();\n    if (event.data !== mainTarget) {\n      return;\n    }\n    const inspectedURL = mainTarget && mainTarget.inspectedURL();\n    if (!inspectedURL) {\n      return;\n    }\n    for (const uiSourceCode of this.workspace().uiSourceCodes()) {\n      if (this.acceptProject(uiSourceCode.project()) && uiSourceCode.url() === inspectedURL) {\n        this.revealUISourceCode(uiSourceCode, true);\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   */\n  uiSourceCodeAdded(uiSourceCode) {\n    const mainTarget = SDK.SDKModel.TargetManager.instance().mainTarget();\n    const inspectedURL = mainTarget && mainTarget.inspectedURL();\n    if (!inspectedURL) {\n      return;\n    }\n    if (uiSourceCode.url() === inspectedURL) {\n      this.revealUISourceCode(uiSourceCode, true);\n    }\n  }\n}\n\n/** @type {!FilesNavigatorView} */\nlet filesNavigatorViewInstance;\n\nexport class FilesNavigatorView extends NavigatorView {\n  /**\n   * @private\n   */\n  constructor() {\n    super();\n    const placeholder = new UI.EmptyWidget.EmptyWidget('');\n    this.setPlaceholder(placeholder);\n    placeholder.appendParagraph().appendChild(UI.Fragment.html`\n      <div>${ls`Sync changes in DevTools with the local filesystem`}</div><br />\n      ${\n        UI.XLink.XLink.create(\n            'https://developers.google.com/web/tools/chrome-devtools/workspaces/', ls`Learn more about Workspaces`)}\n    `);\n\n    const toolbar = new UI.Toolbar.Toolbar('navigator-toolbar');\n    toolbar.appendItemsAtLocation('files-navigator-toolbar').then(() => {\n      if (!toolbar.empty()) {\n        this.contentElement.insertBefore(toolbar.element, this.contentElement.firstChild);\n      }\n    });\n  }\n\n  static instance() {\n    if (!filesNavigatorViewInstance) {\n      filesNavigatorViewInstance = new FilesNavigatorView();\n    }\n    return filesNavigatorViewInstance;\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.Workspace.Project} project\n   * @return {boolean}\n   */\n  acceptProject(project) {\n    return project.type() === Workspace.Workspace.projectTypes.FileSystem &&\n        Persistence.FileSystemWorkspaceBinding.FileSystemWorkspaceBinding.fileSystemType(project) !== 'overrides' &&\n        !Snippets.ScriptSnippetFileSystem.isSnippetsProject(project) &&\n        !Recorder.RecordingFileSystem.isRecordingProject(project);\n  }\n\n  /**\n   * @override\n   * @param {!Event} event\n   */\n  handleContextMenu(event) {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendAction('sources.add-folder-to-workspace', undefined, true);\n    contextMenu.show();\n  }\n}\n\n/** @type {!OverridesNavigatorView} */\nlet overridesNavigatorViewInstance;\n\nexport class OverridesNavigatorView extends NavigatorView {\n  /** @private */\n  constructor() {\n    super();\n    const placeholder = new UI.EmptyWidget.EmptyWidget('');\n    this.setPlaceholder(placeholder);\n    placeholder.appendParagraph().appendChild(UI.Fragment.html`\n      <div>${ls`Override page assets with files from a local folder`}</div><br />\n      ${UI.XLink.XLink.create('https://developers.google.com/web/updates/2018/01/devtools#overrides', ls`Learn more`)}\n    `);\n\n    this._toolbar = new UI.Toolbar.Toolbar('navigator-toolbar');\n\n    this.contentElement.insertBefore(this._toolbar.element, this.contentElement.firstChild);\n\n    Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().addEventListener(\n        Persistence.NetworkPersistenceManager.Events.ProjectChanged, this._updateProjectAndUI, this);\n    this.workspace().addEventListener(Workspace.Workspace.Events.ProjectAdded, this._onProjectAddOrRemoved, this);\n    this.workspace().addEventListener(Workspace.Workspace.Events.ProjectRemoved, this._onProjectAddOrRemoved, this);\n    this._updateProjectAndUI();\n  }\n\n  /**\n   * @param {{forceNew: ?boolean}} opts\n   */\n  static instance(opts = {forceNew: null}) {\n    const {forceNew} = opts;\n    if (!overridesNavigatorViewInstance || forceNew) {\n      overridesNavigatorViewInstance = new OverridesNavigatorView();\n    }\n\n    return overridesNavigatorViewInstance;\n  }\n\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onProjectAddOrRemoved(event) {\n    const project = /** @type {!Workspace.Workspace.Project} */ (event.data);\n    if (project && project.type() === Workspace.Workspace.projectTypes.FileSystem &&\n        Persistence.FileSystemWorkspaceBinding.FileSystemWorkspaceBinding.fileSystemType(project) !== 'overrides') {\n      return;\n    }\n    this._updateUI();\n  }\n\n  _updateProjectAndUI() {\n    this.reset();\n    const project = Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().project();\n    if (project) {\n      this.tryAddProject(project);\n    }\n    this._updateUI();\n  }\n\n  _updateUI() {\n    this._toolbar.removeToolbarItems();\n    const project = Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().project();\n    if (project) {\n      const enableCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n          Common.Settings.Settings.instance().moduleSetting('persistenceNetworkOverridesEnabled'));\n      this._toolbar.appendToolbarItem(enableCheckbox);\n\n      this._toolbar.appendToolbarItem(new UI.Toolbar.ToolbarSeparator(true));\n      const clearButton =\n          new UI.Toolbar.ToolbarButton(Common.UIString.UIString('Clear configuration'), 'largeicon-clear');\n      clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => {\n        project.remove();\n      });\n      this._toolbar.appendToolbarItem(clearButton);\n      return;\n    }\n    const title = Common.UIString.UIString('Select folder for overrides');\n    const setupButton = new UI.Toolbar.ToolbarButton(title, 'largeicon-add', title);\n    setupButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, event => {\n      this._setupNewWorkspace();\n    }, this);\n    this._toolbar.appendToolbarItem(setupButton);\n  }\n\n  async _setupNewWorkspace() {\n    const fileSystem =\n        await Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance().addFileSystem('overrides');\n    if (!fileSystem) {\n      return;\n    }\n    Common.Settings.Settings.instance().moduleSetting('persistenceNetworkOverridesEnabled').set(true);\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.Workspace.Project} project\n   * @return {boolean}\n   */\n  acceptProject(project) {\n    return project === Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().project();\n  }\n}\n\n/** @type {!ContentScriptsNavigatorView} */\nlet contentScriptsNavigatorViewInstance;\n\nexport class ContentScriptsNavigatorView extends NavigatorView {\n  /** @private */\n  constructor() {\n    super();\n    const placeholder = new UI.EmptyWidget.EmptyWidget('');\n    this.setPlaceholder(placeholder);\n    placeholder.appendParagraph().appendChild(UI.Fragment.html`\n      <div>${ls`Content scripts served by extensions appear here`}</div><br />\n      ${UI.XLink.XLink.create('https://developer.chrome.com/extensions/content_scripts', ls`Learn more`)}\n    `);\n  }\n\n  /**\n   * @param {{forceNew: ?boolean}} opts\n   */\n  static instance(opts = {forceNew: null}) {\n    const {forceNew} = opts;\n    if (!contentScriptsNavigatorViewInstance || forceNew) {\n      contentScriptsNavigatorViewInstance = new ContentScriptsNavigatorView();\n    }\n\n    return contentScriptsNavigatorViewInstance;\n  }\n\n\n  /**\n   * @override\n   * @param {!Workspace.Workspace.Project} project\n   * @return {boolean}\n   */\n  acceptProject(project) {\n    return project.type() === Workspace.Workspace.projectTypes.ContentScripts;\n  }\n}\n\n/** @type {!SnippetsNavigatorView} */\nlet snippetsNavigatorViewInstance;\n\nexport class SnippetsNavigatorView extends NavigatorView {\n  constructor() {\n    super();\n    const placeholder = new UI.EmptyWidget.EmptyWidget('');\n    this.setPlaceholder(placeholder);\n    placeholder.appendParagraph().appendChild(UI.Fragment.html`\n      <div>${ls`Create and save code snippets for later reuse`}</div><br />\n      ${\n        UI.XLink.XLink.create(\n            'https://developers.google.com/web/tools/chrome-devtools/javascript/snippets', ls`Learn more`)}\n    `);\n\n    const toolbar = new UI.Toolbar.Toolbar('navigator-toolbar');\n    const newButton =\n        new UI.Toolbar.ToolbarButton(ls`New snippet`, 'largeicon-add', Common.UIString.UIString('New snippet'));\n    newButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, event => {\n      this.create(Snippets.ScriptSnippetFileSystem.findSnippetsProject(), '');\n    });\n    toolbar.appendToolbarItem(newButton);\n    this.contentElement.insertBefore(toolbar.element, this.contentElement.firstChild);\n  }\n\n  static instance() {\n    if (!snippetsNavigatorViewInstance) {\n      snippetsNavigatorViewInstance = new SnippetsNavigatorView();\n    }\n    return snippetsNavigatorViewInstance;\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.Workspace.Project} project\n   * @return {boolean}\n   */\n  acceptProject(project) {\n    return Snippets.ScriptSnippetFileSystem.isSnippetsProject(project);\n  }\n\n  /**\n   * @override\n   * @param {!Event} event\n   */\n  handleContextMenu(event) {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.headerSection().appendItem(\n        ls`Create new snippet`, () => this.create(Snippets.ScriptSnippetFileSystem.findSnippetsProject(), ''));\n    contextMenu.show();\n  }\n\n  /**\n   * @override\n   * @param {!Event} event\n   * @param {!NavigatorUISourceCodeTreeNode} node\n   */\n  handleFileContextMenu(event, node) {\n    const uiSourceCode = node.uiSourceCode();\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.headerSection().appendItem(\n        Common.UIString.UIString('Run'), () => Snippets.ScriptSnippetFileSystem.evaluateScriptSnippet(uiSourceCode));\n    contextMenu.editSection().appendItem(Common.UIString.UIString('Rename…'), () => this.rename(node, false));\n    contextMenu.editSection().appendItem(\n        Common.UIString.UIString('Remove'), () => uiSourceCode.project().deleteFile(uiSourceCode));\n    contextMenu.saveSection().appendItem(\n        Common.UIString.UIString('Save as...'), this._handleSaveAs.bind(this, uiSourceCode));\n    contextMenu.show();\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   */\n  async _handleSaveAs(uiSourceCode) {\n    uiSourceCode.commitWorkingCopy();\n    const {content} = await uiSourceCode.requestContent();\n    Workspace.FileManager.FileManager.instance().save(uiSourceCode.url(), content || '', true);\n    Workspace.FileManager.FileManager.instance().close(uiSourceCode.url());\n  }\n}\n\n/** @type {!RecordingsNavigatorView} */\nlet recordingsNavigatorViewInstance;\n\nexport class RecordingsNavigatorView extends NavigatorView {\n  /**\n   * @private\n   */\n  constructor() {\n    super();\n    const placeholder = new UI.EmptyWidget.EmptyWidget('');\n    this.setPlaceholder(placeholder);\n    const p = /** @type {!HTMLElement} */ (placeholder.appendParagraph());\n    p.innerText = ls`Record and replay browser interactions`;\n\n    const toolbar = new UI.Toolbar.Toolbar('navigator-toolbar');\n    const newButton = new UI.Toolbar.ToolbarButton(ls`Add recording`, 'largeicon-add', ls`Add recording`);\n    newButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, event => {\n      this.create(Recorder.RecordingFileSystem.findRecordingsProject(), '{\"steps\": []}');\n    });\n    toolbar.appendToolbarItem(newButton);\n    this.contentElement.insertBefore(toolbar.element, this.contentElement.firstChild);\n  }\n\n  static instance() {\n    if (!recordingsNavigatorViewInstance) {\n      recordingsNavigatorViewInstance = new RecordingsNavigatorView();\n    }\n    return recordingsNavigatorViewInstance;\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.Workspace.Project} project\n   * @return {boolean}\n   */\n  acceptProject(project) {\n    return Recorder.RecordingFileSystem.isRecordingProject(project);\n  }\n\n  /**\n   * @override\n   * @param {!Event} event\n   */\n  handleContextMenu(event) {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.headerSection().appendItem(\n        ls`Add recording`, () => this.create(Recorder.RecordingFileSystem.findRecordingsProject(), ''));\n    contextMenu.show();\n  }\n\n  /**\n   * @override\n   * @param {!Event} event\n   * @param {!NavigatorUISourceCodeTreeNode} node\n   */\n  handleFileContextMenu(event, node) {\n    const uiSourceCode = node.uiSourceCode();\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.editSection().appendItem(Common.UIString.UIString('Rename…'), () => this.rename(node, false));\n    contextMenu.editSection().appendItem(\n        Common.UIString.UIString('Remove'), () => uiSourceCode.project().deleteFile(uiSourceCode));\n    contextMenu.saveSection().appendItem(\n        Common.UIString.UIString('Save as...'), this._handleSaveAs.bind(this, uiSourceCode));\n    contextMenu.show();\n  }\n\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   */\n  async _handleSaveAs(uiSourceCode) {\n    uiSourceCode.commitWorkingCopy();\n    const {content} = await uiSourceCode.requestContent();\n    Workspace.FileManager.FileManager.instance().save(uiSourceCode.url(), content || '', true);\n    Workspace.FileManager.FileManager.instance().close(uiSourceCode.url());\n  }\n}\n\n/**\n * @implements {UI.ActionRegistration.ActionDelegate}\n */\nexport class ActionDelegate {\n  /**\n   * @override\n   * @param {!UI.Context.Context} context\n   * @param {string} actionId\n   * @return {boolean}\n   */\n  handleAction(context, actionId) {\n    switch (actionId) {\n      case 'sources.create-snippet':\n        Snippets.ScriptSnippetFileSystem.findSnippetsProject()\n            .createFile('', null, '')\n            .then(uiSourceCode => Common.Revealer.reveal(uiSourceCode));\n        return true;\n      case 'sources.add-folder-to-workspace':\n        Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance().addFileSystem();\n        return true;\n    }\n    return false;\n  }\n}\n"]}