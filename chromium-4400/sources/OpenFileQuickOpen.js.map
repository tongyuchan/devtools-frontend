{"version":3,"file":"OpenFileQuickOpen.js","sourceRoot":"","sources":["../../../../../front_end/sources/OpenFileQuickOpen.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,qBAAqB,CAAC;AAC9C,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AAGxC,OAAO,EAAC,gCAAgC,EAAC,MAAM,uCAAuC,CAAC;AACvF,OAAO,EAAC,WAAW,EAAC,MAAM,kBAAkB,CAAC;AAE7C,MAAM,OAAO,iBAAkB,SAAQ,gCAAgC;IACrE;;OAEG;IACH,MAAM;QACJ,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,yBAAyB,EAAE,CAAC,CAAC;QAC/D,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED;;;;;OAKG;IACH,oBAAoB,CAAC,YAAY,EAAE,UAAU,EAAE,YAAY;QACzD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;QAE/E,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO;SACR;QACD,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;YAClC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC,CAAC;SAC3E;aAAM;YACL,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SACtC;IACH,CAAC;IAED;;;;OAIG;IACH,aAAa,CAAC,OAAO;QACnB,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC;IACrC,CAAC;IAED;;;OAGG;IACH,eAAe;QACb,OAAO,IAAI,CAAC;IACd,CAAC;CACF","sourcesContent":["// Copyright 2012 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as Workspace from '../workspace/workspace.js';  // eslint-disable-line no-unused-vars\n\nimport {FilteredUISourceCodeListProvider} from './FilteredUISourceCodeListProvider.js';\nimport {SourcesView} from './SourcesView.js';\n\nexport class OpenFileQuickOpen extends FilteredUISourceCodeListProvider {\n  /**\n   * @override\n   */\n  attach() {\n    this.setDefaultScores(SourcesView.defaultUISourceCodeScores());\n    super.attach();\n  }\n\n  /**\n   * @override\n   * @param {?Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @param {number=} lineNumber\n   * @param {number=} columnNumber\n   */\n  uiSourceCodeSelected(uiSourceCode, lineNumber, columnNumber) {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.SelectFileFromFilePicker);\n\n    if (!uiSourceCode) {\n      return;\n    }\n    if (typeof lineNumber === 'number') {\n      Common.Revealer.reveal(uiSourceCode.uiLocation(lineNumber, columnNumber));\n    } else {\n      Common.Revealer.reveal(uiSourceCode);\n    }\n  }\n\n  /**\n   * @override\n   * @param {!Workspace.Workspace.Project} project\n   * @return {boolean}\n   */\n  filterProject(project) {\n    return !project.isServiceProject();\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  renderAsTwoRows() {\n    return true;\n  }\n}\n"]}