{"version":3,"file":"BreakpointEditDialog.js","sourceRoot":"","sources":["../../../../../front_end/sources/BreakpointEditDialog.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ObjectUI from '../object_ui/object_ui.js';\nimport {ls} from '../platform/platform.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\nexport class BreakpointEditDialog extends UI.Widget.Widget {\n  /**\n   * @param {number} editorLineNumber\n   * @param {string} oldCondition\n   * @param {boolean} preferLogpoint\n   * @param {function({committed: boolean, condition: string}): !Promise<void>} onFinish\n   */\n  constructor(editorLineNumber, oldCondition, preferLogpoint, onFinish) {\n    super(true);\n    this.registerRequiredCSS('sources/breakpointEditDialog.css', {enableLegacyPatching: true});\n    this._onFinish = onFinish;\n    this._finished = false;\n    /** @type {?UI.TextEditor.TextEditor} */\n    this._editor = null;\n    this.element.tabIndex = -1;\n\n    const logpointPrefix = LogpointPrefix;\n    const logpointSuffix = LogpointSuffix;\n    this._isLogpoint = oldCondition.startsWith(logpointPrefix) && oldCondition.endsWith(logpointSuffix);\n    if (this._isLogpoint) {\n      oldCondition = oldCondition.substring(logpointPrefix.length, oldCondition.length - logpointSuffix.length);\n    }\n    this._isLogpoint = this._isLogpoint || preferLogpoint;\n\n    this.element.classList.add('sources-edit-breakpoint-dialog');\n    const toolbar = new UI.Toolbar.Toolbar('source-frame-breakpoint-toolbar', this.contentElement);\n    toolbar.appendText(`Line ${editorLineNumber + 1}:`);\n\n    this._typeSelector = new UI.Toolbar.ToolbarComboBox(this._onTypeChanged.bind(this), ls`Breakpoint type`);\n    this._typeSelector.createOption(ls`Breakpoint`, BreakpointType.Breakpoint);\n    const conditionalOption = this._typeSelector.createOption(ls`Conditional breakpoint`, BreakpointType.Conditional);\n    const logpointOption = this._typeSelector.createOption(ls`Logpoint`, BreakpointType.Logpoint);\n    this._typeSelector.select(this._isLogpoint ? logpointOption : conditionalOption);\n    toolbar.appendToolbarItem(this._typeSelector);\n\n    const extension = Root.Runtime.Runtime.instance().extension(UI.TextEditor.TextEditorFactory);\n    if (extension) {\n      extension.instance().then(factory => {\n        const editorOptions = {\n          lineNumbers: false,\n          lineWrapping: true,\n          mimeType: 'javascript',\n          autoHeight: true,\n          bracketMatchingSetting: undefined,\n          devtoolsAccessibleName: undefined,\n          padBottom: undefined,\n          maxHighlightLength: undefined,\n          placeholder: undefined,\n          lineWiseCopyCut: undefined,\n          inputStyle: undefined,\n        };\n        this._editor = /** @type {!UI.TextEditor.TextEditorFactory} */ (factory).createEditor(editorOptions);\n        this._updatePlaceholder();\n        this._editor.widget().element.classList.add('condition-editor');\n        this._editor.configureAutocomplete(\n            ObjectUI.JavaScriptAutocomplete.JavaScriptAutocompleteConfig.createConfigForEditor(this._editor));\n        if (oldCondition) {\n          this._editor.setText(oldCondition);\n        }\n        this._editor.widget().markAsExternallyManaged();\n        this._editor.widget().show(this.contentElement);\n        this._editor.setSelection(this._editor.fullRange());\n        this._editor.widget().focus();\n        this._editor.widget().element.addEventListener('keydown', this._onKeyDown.bind(this), true);\n        this.element.addEventListener('blur', event => {\n          if (event.relatedTarget && !/** @type {!Node} */ (event.relatedTarget).isSelfOrDescendant(this.element)) {\n            this._finishEditing(true);\n          }\n        }, true);\n      });\n    }\n  }\n\n  /**\n   * @param {string} condition\n   * @return {string}\n   */\n  static _conditionForLogpoint(condition) {\n    return `${LogpointPrefix}${condition}${LogpointSuffix}`;\n  }\n\n  _onTypeChanged() {\n    const option = this._typeSelector.selectedOption();\n    if (!option || !this._editor) {\n      return;\n    }\n    const value = option.value;\n    this._isLogpoint = value === BreakpointType.Logpoint;\n    this._updatePlaceholder();\n    if (value === BreakpointType.Breakpoint) {\n      this._editor.setText('');\n      this._finishEditing(true);\n    }\n  }\n\n  _updatePlaceholder() {\n    const option = this._typeSelector.selectedOption();\n    if (!option || !this._editor) {\n      return;\n    }\n    const selectedValue = option.value;\n    if (selectedValue === BreakpointType.Conditional) {\n      this._editor.setPlaceholder(ls`Expression to check before pausing, e.g. x > 5`);\n      /** @type {!HTMLSpanElement} */ UI.Tooltip.Tooltip.install(\n          (this._typeSelector.element), ls`Pause only when the condition is true`);\n    } else if (selectedValue === BreakpointType.Logpoint) {\n      this._editor.setPlaceholder(ls`Log message, e.g. 'x is', x`);\n      /** @type {!HTMLSpanElement} */ UI.Tooltip.Tooltip.install(\n          (this._typeSelector.element), ls`Log a message to Console, do not break`);\n    }\n  }\n\n  /**\n   * @param {boolean} committed\n   */\n  _finishEditing(committed) {\n    if (this._finished) {\n      return;\n    }\n    this._finished = true;\n    if (!this._editor) {\n      return;\n    }\n    this._editor.widget().detach();\n    let condition = this._editor.text();\n    if (this._isLogpoint) {\n      condition = BreakpointEditDialog._conditionForLogpoint(condition);\n    }\n    this._onFinish({committed, condition});\n  }\n\n  /**\n   * @param {!Event} event\n   */\n  async _onKeyDown(event) {\n    if (!(event instanceof KeyboardEvent) || !this._editor) {\n      return;\n    }\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.consume(true);\n      const expression = this._editor.text();\n      if (event.ctrlKey ||\n          await ObjectUI.JavaScriptAutocomplete.JavaScriptAutocomplete.isExpressionComplete(expression)) {\n        this._finishEditing(true);\n      } else {\n        this._editor.newlineAndIndent();\n      }\n    }\n    if (isEscKey(event)) {\n      this._finishEditing(false);\n      event.stopImmediatePropagation();\n    }\n  }\n}\n\nexport const LogpointPrefix = '/** DEVTOOLS_LOGPOINT */ console.log(';\nexport const LogpointSuffix = ')';\n\nexport const BreakpointType = {\n  Breakpoint: 'Breakpoint',\n  Conditional: 'Conditional',\n  Logpoint: 'Logpoint',\n};\n"]}