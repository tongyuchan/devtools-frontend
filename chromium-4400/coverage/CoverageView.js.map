{"version":3,"file":"CoverageView.js","sourceRoot":"","sources":["../../../../../front_end/coverage/CoverageView.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,uDAAuD;AAEvD,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AACpD,OAAO,KAAK,MAAM,MAAM,qBAAqB,CAAC;AAC9C,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AACpD,OAAO,KAAK,GAAG,MAAM,eAAe,CAAC;AACrC,OAAO,KAAK,WAAW,MAAM,iCAAiC,CAAC;AAC/D,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAGlC,OAAO,EAAC,yBAAyB,EAAE,aAAa,EAAC,MAAM,gCAAgC,CAAC;AACxF,OAAO,EAAC,gBAAgB,EAAC,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAe,aAAa,EAAgB,MAAM,EAAkB,MAAM,oBAAoB,CAAC,CAAE,qCAAqC;AAE7I,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB;;MAEE;IACF,4BAA4B,EACxB,iGAAiG;IACrG;;MAEE;IACF,WAAW,EAAE,cAAc;IAC3B;;MAEE;IACF,QAAQ,EAAE,WAAW;IACrB;;MAEE;IACF,QAAQ,EAAE,WAAW;IACrB;;MAEE;IACF,MAAM,EAAE,WAAW;IACnB;;MAEE;IACF,SAAS,EAAE,YAAY;IACvB;;MAEE;IACF,oBAAoB,EAAE,yBAAyB;IAC/C;;MAEE;IACF,GAAG,EAAE,KAAK;IACV;;MAEE;IACF,GAAG,EAAE,KAAK;IACV;;MAEE;IACF,UAAU,EAAE,YAAY;IACxB;;MAEE;IACF,8BAA8B,EAAE,mCAAmC;IACnE;;MAEE;IACF,cAAc,EAAE,iBAAiB;IACjC;;;MAGE;IACF,gCAAgC,EAAE,uEAAuE;IACzG;;;MAGE;IACF,4BAA4B,EAAE,4DAA4D;IAC1F;;;;MAIE;IACF,eAAe,EAAE,+BAA+B;IAChD;;;;;;MAME;IACF,qBAAqB,EAAE,6DAA6D;CACrF,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,0BAA0B,EAAE,SAAS,CAAC,CAAC;AAChF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,IAAI,oBAAkC,CAAC;AAEvC,MAAM,OAAO,YAAa,SAAQ,EAAE,CAAC,MAAM,CAAC,IAAI;IAwB9C;QACE,KAAK,CAAC,IAAI,CAAC,CAAC;QAEZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,mBAAmB,CAAC,2BAA2B,EAAE,EAAC,oBAAoB,EAAE,IAAI,EAAC,CAAC,CAAC;QAEpF,MAAM,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,EAAE,4BAA4B,CAAC,CAAC;QAC9F,MAAM,OAAO,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;QAE7E,IAAI,CAAC,qBAAqB,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,eAAe,CACvD,IAAI,CAAC,uCAAuC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC,CAAC;QACjH,MAAM,aAAa,GAAG;YACpB;gBACE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC;gBACxC,KAAK,EAAE,kDAA4D;aACpE;YACD;gBACE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;gBACrC,KAAK,oBAAyB;aAC/B;SACF,CAAC;QACF,KAAK,MAAM,IAAI,IAAI,aAAa,EAAE;YAChC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC5G;QACD,IAAI,CAAC,4BAA4B;YAC7B,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,0BAA0B,EAAE,CAAC,CAAC,CAAC;QACrF,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,IAAI,CAAC,4BAA4B,CAAC,GAAG,EAAE,CAAC,CAAC;QACrF,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5C,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACtD,IAAI,CAAC,mBAAmB;YACpB,EAAE,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,2BAA2B,CAAiC,CAAC;QACpH,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC3F,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAEpD,MAAM,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,UAAU,EAAE,CAAC;QACtE,MAAM,gCAAgC,GAAG,UAAU,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QACjH,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,gCAAgC,EAAE;YACpC,MAAM,qBAAqB,GAAG,EAAE,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,4BAA4B,CAC7E,CAAC;YACjC,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,CAAC;YAC3F,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;YACvD,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC3C,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC5C;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,iBAAiB,CAAC,CAAC;QACpG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAClG,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE7C,OAAO,CAAC,eAAe,EAAE,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,oBAAoB,CAAC,CAAC;QACpG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE;YAChF,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAEnC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,OAAO,CAAC,eAAe,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAC7F,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAC3G,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE7C,OAAO,CAAC,eAAe,EAAE,CAAC;QAE1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,qBAAqB,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,eAAe,CACvD,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC,CAAC;QACxF,MAAM,OAAO,GAAG;YACd;gBACE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;gBAChC,KAAK,EAAE,EAAE;aACV;YACD;gBACE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;gBAChC,KAAK,aAAkB;aACxB;YACD;gBACE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC;gBACvC,KAAK,EAAE,kDAA4D;aACpE;SACF,CAAC;QACF,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;YAC5B,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAChH;QAED,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC7C,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAEtD,OAAO,CAAC,eAAe,EAAE,CAAC;QAC1B,IAAI,CAAC,0BAA0B,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;QACjH,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAC/E,IAAI,CAAC,uBAAuB,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,sBAAsB,CAChE,IAAI,CAAC,0BAA0B,EAAE,UAAU,CAAC,SAAS,CAAC,8BAA8B,CAAC,EACrF,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC/C,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAExD,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC;QAC1F,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QAEzE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;QAChG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC;QAC/F,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IACvD,CAAC;IAED,MAAM,CAAC,QAAQ;QACb,IAAI,CAAC,oBAAoB,EAAE;YACzB,oBAAoB,GAAG,IAAI,YAAY,EAAE,CAAC;SAC3C;QACD,OAAO,oBAAoB,CAAC;IAC9B,CAAC;IAED,iBAAiB;QACf,MAAM,MAAM,GAAG,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACpC,IAAI,OAAO,CAAC;QACZ,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC/B,IAAI,CAAC,mBAAmB;gBACpB,EAAE,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,4BAA4B,CAAC,CAAC,CAAC;YAC5G,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,wBAAwB,CACxC,IAAI,EAAE,SAAS,CAAC,gCAAgC,EAAE,EAAC,GAAG,EAAE,IAAI,CAAC,mBAAmB,EAAC,CAAC,CAAC;SACxF;aAAM;YACL,MAAM,YAAY,GACd,EAAE,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACnG,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAE,SAAS,CAAC,4BAA4B,EAAE,EAAC,GAAG,EAAE,YAAY,EAAC,CAAC,CAAC;SACjH;QACD,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACjC,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC3C,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC7C,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SACrB;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;YAClC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAChC;QACD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACrD,IAAI,CAAC,qBAAqB,CAAC,WAAW,GAAG,EAAE,CAAC;QAC5C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED,gBAAgB;QACd,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;QAEnD,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,eAAe,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,CAAC,uBAAuB,EAAE,EAAC,CAAC,CAAC;SAC3F;aAAM;YACL,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACH,CAAC;IAED,uBAAuB;QACrB,MAAM,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC;QAC3D,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAChE,yEAAyE;QACzE,OAAO,YAAY,uBAA4B,CAAC;IAClD,CAAC;IAED,mBAAmB,CAAC,kBAA2B;QAC7C,MAAM,aAAa,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;IAC7D,CAAC;IAED,uCAAuC;QACrC,IAAI,CAAC,4BAA4B,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,CAAC,CAAC;IACpF,CAAC;IAED,KAAK,CAAC,sBAAsB;QAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;QAEnD,IAAI,OAAO,EAAE;YACX,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;SAC5B;QACD,MAAM,IAAI,CAAC,eAAe,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAC,CAAC,CAAC;IACzE,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,OACI;QACxB,IAAI,QAAQ,EAAE,mBAAmB,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,sBAAsB,IAAI,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YAC/E,CAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC,EAAE;YACrE,mBAAmB,GAAG,IAAI,CAAC;SAC5B;aAAM,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;YAC1B,QAAQ,GAAG,IAAI,CAAC;SACjB;QAED,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,MAAM,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,UAAU,EAAE,CAAC;QACtE,IAAI,CAAC,UAAU,EAAE;YACf,OAAO;SACR;QAED,MAAM,EAAC,MAAM,EAAE,kBAAkB,EAAC,GAAG,EAAC,MAAM,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,GAAG,OAAO,EAAC,CAAC;QAE5F,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,EAAE;YAC1B,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;SAC/C;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACtE,IAAI,kBAAkB,EAAE;YACtB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;SAC/E;QACD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO;SACR;QACD,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAEtD,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;QACzF,IAAI,CAAC,kBAAkB;YACnB,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAmD,CAAC;QAChH,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CACpC,GAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;SACxF;QACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,yBAAyB,CAAC,IAAI,CAAC,MAAuB,CAAC,CAAC;QACtF,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC/B,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC1C,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC1C,IAAI,mBAAmB,EAAE;gBACvB,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;aAClC;SACF;QACD,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE;YACjC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;SAC5B;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAClD,IAAI,QAAQ,IAAI,CAAC,mBAAmB,EAAE;YACpC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SACxB;QACD,IAAI,MAAM,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACrC,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;SAC5B;IACH,CAAC;IAED,uBAAuB,CAAC,KAA0C;QAChE,MAAM,IAAI,GAAG,KAAK,CAAC,IAAsB,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,aAAa;QACjB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CACvC,GAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;YACvF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAChC;QACD,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;YACnB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SACxB;QACD,mEAAmE;QACnE,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;SAC7F;QACD,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC/B,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC3C,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC5C;QACD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC;IAChD,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACnC,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;QAC3D,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;IAC5C,CAAC;IAED,YAAY,CAAC,cAA8B;QACzC,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAClE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACtF,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IAC5E,CAAC;IAED,YAAY;QACV,MAAM,GAAG,GAAG,EAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAC,CAAC;QAClC,MAAM,QAAQ,GAAG,EAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAC,CAAC;QACvC,IAAI,aAAa,GAAG,KAAK,CAAC;QAC1B,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;gBACxC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;gBACzB,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;gBAChC,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE;oBAChC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;oBAC9B,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;iBACtC;qBAAM;oBACL,aAAa,GAAG,IAAI,CAAC;iBACtB;aACF;SACF;QACD,IAAI,CAAC,qBAAqB,CAAC,WAAW,GAAG,aAAa,CAAC,CAAC;YACpD,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,EAAC,GAAG,EAAE,UAAU,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC;YAC1F,UAAU,CAAC,GAAG,CAAC,CAAC;QAEpB,SAAS,UAAU,CAAC,EAAC,KAAK,EAAE,MAAM,EAAmC;YACnE,MAAM,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC;YAC5B,MAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/D,OAAO,UAAU,CAAC,SAAS,CAAC,qBAAqB,EAAE;gBACjD,GAAG,EAAE,QAAQ,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC;gBACjD,GAAG,EAAE,QAAQ,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC;gBAClD,GAAG,EAAE,WAAW;gBAChB,GAAG,EAAE,QAAQ,CAAC,eAAe,CAAC,aAAa,CAAC,MAAM,CAAC;aACpD,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO;SACR;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QACvC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,CAAC,CAAC,0BAA0B,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7E,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAChE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO;SACR;QAED,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;QAE7E,MAAM,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC;QAC3D,MAAM,IAAI,GAAG,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC;QACpC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC;QACzD,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAChE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,UAAU,CAAC,gBAAyB,EAAE,YAA6B;QACjE,MAAM,GAAG,GAAG,YAAY,CAAC,GAAG,EAAE,CAAC;QAC/B,IAAI,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,2BAA2B,CAAC,EAAE;YAC5D,OAAO,KAAK,CAAC;SACd;QACD,IAAI,YAAY,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,GAAG,EAAE,EAAE;YAC5E,OAAO,KAAK,CAAC;SACd;QACD,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE;YAC3E,OAAO,KAAK,CAAC;SACd;QAED,OAAO,gBAAgB,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzF,CAAC;IAED,KAAK,CAAC,aAAa;QACjB,MAAM,GAAG,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC;QACtD,MAAM,QAAQ,GAAG,YAAY,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,CAAC;QACxF,MAAM,QAAQ,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QACD,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAED,uBAAuB,CAAC,GAAW;QACjC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;;AAEe,wCAA2B,GAAG,cAAc,CAAC;AAG/D,MAAM,OAAO,cAAc;IACzB,YAAY,CAAC,OAA2B,EAAE,QAAgB;QACxD,MAAM,cAAc,GAAG,UAAU,CAAC;QAClC,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE;aAChC,QAAQ,CAAC,cAAc,EAAE,mBAAmB,CAAC,KAAK,EAAE,iBAAiB,CAAC,IAAI,CAAC;aAC3E,IAAI,CAAC,GAAG,EAAE;YACT,MAAM,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACxE,OAAO,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;QAC/B,CAAC,CAAC;aACD,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAsB,EAAE,QAAQ,CAAC,CAAC,CAAC;QAE/E,OAAO,IAAI,CAAC;IACd,CAAC;IAED,kBAAkB,CAAC,YAA0B,EAAE,QAAgB;QAC7D,QAAQ,QAAQ,EAAE;YAChB,KAAK,2BAA2B;gBAC9B,YAAY,CAAC,gBAAgB,EAAE,CAAC;gBAChC,MAAM;YACR,KAAK,4BAA4B;gBAC/B,YAAY,CAAC,eAAe,CAAC,EAAC,MAAM,EAAE,IAAI,EAAE,kBAAkB,EAAE,YAAY,CAAC,uBAAuB,EAAE,EAAC,CAAC,CAAC;gBACzG,MAAM;YACR;gBACE,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,mBAAmB,QAAQ,EAAE,CAAC,CAAC;SACxD;IACH,CAAC;CACF;AAED,MAAM,OAAO,aAAa;IAGxB;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,OAAO,EAAE,CAAC;IAClC,CAAC;IAED,QAAQ,CACJ,YAAiD,EACjD,UAA2D;QAC7D,MAAM,WAAW,GAAG,YAAY,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;QACnE,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;YACrC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;YAClC,OAAO;SACR;QACD,MAAM,iBAAiB,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,EAA+B,CAAC;QAChG,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAC3D,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CACV,YAAiD,EAAE,UAA2D,EAC9G,SAAgC;QAClC,MAAM,UAAU,GAAG,aAAa,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;QAClC,IAAI,SAAS,CAAC,MAAM,EAAE;YACpB,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC;SACrD;QACD,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE;YAClD,kDAAkD;YAClD,IAAI,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;gBACxC,SAAS;aACV;YACD,MAAM,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,kCAAkC,CAAC,CAAC,CAAC,oCAAoC,CAAC;YAC9G,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACpD,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvC,UAAU,CAAC,mBAAmB,CAAC,IAAI,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;SACjE;IACH,CAAC;IAED,sBAAsB,CAAC,GAAW;QAChC,SAAS,iBAAiB,CAAC,KAA0C;YACnE,MAAM,SAAS,GAAG,KAAK,CAAC,IAA0D,CAAC;YACnF,IAAI,SAAS,CAAC,UAAU,KAAK,aAAa,CAAC,WAAW,EAAE;gBACtD,OAAO;aACR;YACD,MAAM,cAAc,GAAG,UAAU,CAAC;YAClC,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE;iBAChC,QAAQ,CAAC,cAAc,CAAC;iBACxB,IAAI,CAAC,GAAG,EAAE;gBACT,MAAM,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACxE,OAAO,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAC/B,CAAC,CAAC;iBACD,IAAI,CAAC,MAAM,CAAC,EAAE;gBACb,MAAM,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBAC1D,MAAM,yBAAyB,GAAG,CAAC,oBAAoB,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;gBAC1F,MAAuB,CAAC,uBAAuB,CAAC,yBAAyB,CAAC,CAAC;YAC9E,CAAC,CAAC,CAAC;QACT,CAAC;QACD,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IAED,cAAc,CAAC,UAA2D,EAAE,GAAW;QACrF,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,EAAE;YACb,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;SAC3C;QACD,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QAC3D,UAAU,CAAC,gBAAgB,CAAC,WAAW,CAAC,iBAAiB,CAAC,MAAM,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;IAChG,CAAC;IAED,gBAAgB,CAAC,UAA2D;QAC1E,UAAU,CAAC,eAAe,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QACtD,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACjD,IAAI,QAAQ,EAAE;YACZ,UAAU,CAAC,mBAAmB,CAAC,WAAW,CAAC,iBAAiB,CAAC,MAAM,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;YACjG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SACpC;IACH,CAAC;;AAEe,yBAAW,GAAG,4BAA4B,CAAC","sourcesContent":["// Copyright (c) 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Bindings from '../bindings/bindings.js';\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as SourceFrame from '../source_frame/source_frame.js';\nimport * as UI from '../ui/ui.js';\nimport * as Workspace from '../workspace/workspace.js';  // eslint-disable-line no-unused-vars\n\nimport {CoverageDecorationManager, decoratorType} from './CoverageDecorationManager.js';\nimport {CoverageListView} from './CoverageListView.js';\nimport {CoverageInfo, CoverageModel, CoverageType, Events, URLCoverageInfo} from './CoverageModel.js';  // eslint-disable-line no-unused-vars\n\nexport const UIStrings = {\n  /**\n  *@description Tooltip in Coverage List View of the Coverage tab for selecting JavaScript coverage mode\n  */\n  chooseCoverageGranularityPer:\n      'Choose coverage granularity: Per function has low overhead, per block has significant overhead.',\n  /**\n  *@description Text in Coverage List View of the Coverage tab\n  */\n  perFunction: 'Per function',\n  /**\n  *@description Text in Coverage List View of the Coverage tab\n  */\n  perBlock: 'Per block',\n  /**\n  *@description Text to clear everything\n  */\n  clearAll: 'Clear all',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon download button in the Coverage View of the Coverage tab\n  */\n  export: 'Export...',\n  /**\n  *@description Text in Coverage View of the Coverage tab\n  */\n  urlFilter: 'URL filter',\n  /**\n  *@description Label for the type filter in the Converage Panel\n  */\n  filterCoverageByType: 'Filter coverage by type',\n  /**\n  *@description Text for everything\n  */\n  all: 'All',\n  /**\n  *@description Text that appears on a button for the css resource type filter.\n  */\n  css: 'CSS',\n  /**\n  *@description Text in Timeline Tree View of the Performance panel\n  */\n  javascript: 'JavaScript',\n  /**\n  *@description Tooltip text that appears on the setting when hovering over it in Coverage View of the Coverage tab\n  */\n  includeExtensionContentScripts: 'Include extension content scripts',\n  /**\n  *@description Title for a type of source files\n  */\n  contentScripts: 'Content scripts',\n  /**\n  *@description Message in Coverage View of the Coverage tab\n  *@example {record button icon} PH1\n  */\n  clickTheReloadButtonSToReloadAnd: 'Click the reload button {PH1} to reload and start capturing coverage.',\n  /**\n  *@description Message in Coverage View of the Coverage tab\n  *@example {record button icon} PH1\n  */\n  clickTheRecordButtonSToStart: 'Click the record button {PH1} to start capturing coverage.',\n  /**\n  *@description Footer message in Coverage View of the Coverage tab\n  *@example {300k used, 600k unused} PH1\n  *@example {500k used, 800k unused} PH2\n  */\n  filteredSTotalS: 'Filtered: {PH1}  Total: {PH2}',\n  /**\n  *@description Footer message in Coverage View of the Coverage tab\n  *@example {1.5 MB} PH1\n  *@example {2.1 MB} PH2\n  *@example {71%} PH3\n  *@example {29%} PH4\n  */\n  sOfSSUsedSoFarSUnused: '{PH1} of {PH2} ({PH3}%) used so far,\\n        {PH4} unused.',\n};\nconst str_ = i18n.i18n.registerUIStrings('coverage/CoverageView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet coverageViewInstance: CoverageView;\n\nexport class CoverageView extends UI.Widget.VBox {\n  _model: CoverageModel|null;\n  _decorationManager: CoverageDecorationManager|null;\n  _resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel|null;\n  _coverageTypeComboBox: UI.Toolbar.ToolbarComboBox;\n  _coverageTypeComboBoxSetting: Common.Settings.LegacySetting<number>;\n  _toggleRecordAction: UI.ActionRegistration.Action;\n  _toggleRecordButton: UI.Toolbar.ToolbarButton;\n  _inlineReloadButton: Element|null;\n  _startWithReloadButton: UI.Toolbar.ToolbarButton|undefined;\n  _clearButton: UI.Toolbar.ToolbarButton;\n  _saveButton: UI.Toolbar.ToolbarButton;\n  _textFilterRegExp: RegExp|null;\n  _filterInput: UI.Toolbar.ToolbarInput;\n  _typeFilterValue: number|null;\n  _filterByTypeComboBox: UI.Toolbar.ToolbarComboBox;\n  _showContentScriptsSetting: Common.Settings.LegacySetting<boolean>;\n  _contentScriptsCheckbox: UI.Toolbar.ToolbarSettingCheckbox;\n  _coverageResultsElement: HTMLElement;\n  _landingPage: UI.Widget.VBox;\n  _listView: CoverageListView;\n  _statusToolbarElement: HTMLElement;\n  _statusMessageElement: HTMLElement;\n\n  private constructor() {\n    super(true);\n\n    this._model = null;\n    this._decorationManager = null;\n    this._resourceTreeModel = null;\n\n    this.registerRequiredCSS('coverage/coverageView.css', {enableLegacyPatching: true});\n\n    const toolbarContainer = this.contentElement.createChild('div', 'coverage-toolbar-container');\n    const toolbar = new UI.Toolbar.Toolbar('coverage-toolbar', toolbarContainer);\n\n    this._coverageTypeComboBox = new UI.Toolbar.ToolbarComboBox(\n        this._onCoverageTypeComboBoxSelectionChanged.bind(this), i18nString(UIStrings.chooseCoverageGranularityPer));\n    const coverageTypes = [\n      {\n        label: i18nString(UIStrings.perFunction),\n        value: CoverageType.JavaScript | CoverageType.JavaScriptPerFunction,\n      },\n      {\n        label: i18nString(UIStrings.perBlock),\n        value: CoverageType.JavaScript,\n      },\n    ];\n    for (const type of coverageTypes) {\n      this._coverageTypeComboBox.addOption(this._coverageTypeComboBox.createOption(type.label, `${type.value}`));\n    }\n    this._coverageTypeComboBoxSetting =\n        Common.Settings.Settings.instance().createSetting('coverageViewCoverageType', 0);\n    this._coverageTypeComboBox.setSelectedIndex(this._coverageTypeComboBoxSetting.get());\n    this._coverageTypeComboBox.setEnabled(true);\n    toolbar.appendToolbarItem(this._coverageTypeComboBox);\n    this._toggleRecordAction =\n        UI.ActionRegistry.ActionRegistry.instance().action('coverage.toggle-recording') as UI.ActionRegistration.Action;\n    this._toggleRecordButton = UI.Toolbar.Toolbar.createActionButton(this._toggleRecordAction);\n    toolbar.appendToolbarItem(this._toggleRecordButton);\n\n    const mainTarget = SDK.SDKModel.TargetManager.instance().mainTarget();\n    const mainTargetSupportsRecordOnReload = mainTarget && mainTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    this._inlineReloadButton = null;\n    if (mainTargetSupportsRecordOnReload) {\n      const startWithReloadAction = UI.ActionRegistry.ActionRegistry.instance().action('coverage.start-with-reload') as\n          UI.ActionRegistration.Action;\n      this._startWithReloadButton = UI.Toolbar.Toolbar.createActionButton(startWithReloadAction);\n      toolbar.appendToolbarItem(this._startWithReloadButton);\n      this._toggleRecordButton.setEnabled(false);\n      this._toggleRecordButton.setVisible(false);\n    }\n    this._clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearAll), 'largeicon-clear');\n    this._clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this._clear.bind(this));\n    toolbar.appendToolbarItem(this._clearButton);\n\n    toolbar.appendSeparator();\n    this._saveButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.export), 'largeicon-download');\n    this._saveButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, _event => {\n      this._exportReport();\n    });\n    toolbar.appendToolbarItem(this._saveButton);\n    this._saveButton.setEnabled(false);\n\n    this._textFilterRegExp = null;\n    toolbar.appendSeparator();\n    this._filterInput = new UI.Toolbar.ToolbarInput(i18nString(UIStrings.urlFilter), '', 0.4, 1);\n    this._filterInput.setEnabled(false);\n    this._filterInput.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, this._onFilterChanged, this);\n    toolbar.appendToolbarItem(this._filterInput);\n\n    toolbar.appendSeparator();\n\n    this._typeFilterValue = null;\n    this._filterByTypeComboBox = new UI.Toolbar.ToolbarComboBox(\n        this._onFilterByTypeChanged.bind(this), i18nString(UIStrings.filterCoverageByType));\n    const options = [\n      {\n        label: i18nString(UIStrings.all),\n        value: '',\n      },\n      {\n        label: i18nString(UIStrings.css),\n        value: CoverageType.CSS,\n      },\n      {\n        label: i18nString(UIStrings.javascript),\n        value: CoverageType.JavaScript | CoverageType.JavaScriptPerFunction,\n      },\n    ];\n    for (const option of options) {\n      this._filterByTypeComboBox.addOption(this._filterByTypeComboBox.createOption(option.label, `${option.value}`));\n    }\n\n    this._filterByTypeComboBox.setSelectedIndex(0);\n    this._filterByTypeComboBox.setEnabled(false);\n    toolbar.appendToolbarItem(this._filterByTypeComboBox);\n\n    toolbar.appendSeparator();\n    this._showContentScriptsSetting = Common.Settings.Settings.instance().createSetting('showContentScripts', false);\n    this._showContentScriptsSetting.addChangeListener(this._onFilterChanged, this);\n    this._contentScriptsCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        this._showContentScriptsSetting, i18nString(UIStrings.includeExtensionContentScripts),\n        i18nString(UIStrings.contentScripts));\n    this._contentScriptsCheckbox.setEnabled(false);\n    toolbar.appendToolbarItem(this._contentScriptsCheckbox);\n\n    this._coverageResultsElement = this.contentElement.createChild('div', 'coverage-results');\n    this._landingPage = this._buildLandingPage();\n    this._listView = new CoverageListView(this._isVisible.bind(this, false));\n\n    this._statusToolbarElement = this.contentElement.createChild('div', 'coverage-toolbar-summary');\n    this._statusMessageElement = this._statusToolbarElement.createChild('div', 'coverage-message');\n    this._landingPage.show(this._coverageResultsElement);\n  }\n\n  static instance(): CoverageView {\n    if (!coverageViewInstance) {\n      coverageViewInstance = new CoverageView();\n    }\n    return coverageViewInstance;\n  }\n\n  _buildLandingPage(): UI.Widget.VBox {\n    const widget = new UI.Widget.VBox();\n    let message;\n    if (this._startWithReloadButton) {\n      this._inlineReloadButton =\n          UI.UIUtils.createInlineButton(UI.Toolbar.Toolbar.createActionButtonForId('coverage.start-with-reload'));\n      message = i18n.i18n.getFormatLocalizedString(\n          str_, UIStrings.clickTheReloadButtonSToReloadAnd, {PH1: this._inlineReloadButton});\n    } else {\n      const recordButton =\n          UI.UIUtils.createInlineButton(UI.Toolbar.Toolbar.createActionButton(this._toggleRecordAction));\n      message = i18n.i18n.getFormatLocalizedString(str_, UIStrings.clickTheRecordButtonSToStart, {PH1: recordButton});\n    }\n    message.classList.add('message');\n    widget.contentElement.appendChild(message);\n    widget.element.classList.add('landing-page');\n    return widget;\n  }\n\n  _clear(): void {\n    if (this._model) {\n      this._model.reset();\n    }\n    this._reset();\n  }\n\n  _reset(): void {\n    if (this._decorationManager) {\n      this._decorationManager.dispose();\n      this._decorationManager = null;\n    }\n    this._listView.reset();\n    this._listView.detach();\n    this._landingPage.show(this._coverageResultsElement);\n    this._statusMessageElement.textContent = '';\n    this._filterInput.setEnabled(false);\n    this._filterByTypeComboBox.setEnabled(false);\n    this._contentScriptsCheckbox.setEnabled(false);\n    this._saveButton.setEnabled(false);\n  }\n\n  _toggleRecording(): void {\n    const enable = !this._toggleRecordAction.toggled();\n\n    if (enable) {\n      this._startRecording({reload: false, jsCoveragePerBlock: this.isBlockCoverageSelected()});\n    } else {\n      this.stopRecording();\n    }\n  }\n\n  isBlockCoverageSelected(): boolean {\n    const option = this._coverageTypeComboBox.selectedOption();\n    const coverageType = Number(option ? option.value : Number.NaN);\n    // Check that Coverage.CoverageType.JavaScriptPerFunction is not present.\n    return coverageType === CoverageType.JavaScript;\n  }\n\n  _selectCoverageType(jsCoveragePerBlock: boolean): void {\n    const selectedIndex = jsCoveragePerBlock ? 1 : 0;\n    this._coverageTypeComboBox.setSelectedIndex(selectedIndex);\n  }\n\n  _onCoverageTypeComboBoxSelectionChanged(): void {\n    this._coverageTypeComboBoxSetting.set(this._coverageTypeComboBox.selectedIndex());\n  }\n\n  async ensureRecordingStarted(): Promise<void> {\n    const enabled = this._toggleRecordAction.toggled();\n\n    if (enabled) {\n      await this.stopRecording();\n    }\n    await this._startRecording({reload: false, jsCoveragePerBlock: false});\n  }\n\n  async _startRecording(options: {reload: (boolean|undefined); jsCoveragePerBlock: (boolean | undefined);}|\n                        null): Promise<void> {\n    let hadFocus, reloadButtonFocused;\n    if ((this._startWithReloadButton && this._startWithReloadButton.element.hasFocus()) ||\n        (this._inlineReloadButton && this._inlineReloadButton.hasFocus())) {\n      reloadButtonFocused = true;\n    } else if (this.hasFocus()) {\n      hadFocus = true;\n    }\n\n    this._reset();\n    const mainTarget = SDK.SDKModel.TargetManager.instance().mainTarget();\n    if (!mainTarget) {\n      return;\n    }\n\n    const {reload, jsCoveragePerBlock} = {reload: false, jsCoveragePerBlock: false, ...options};\n\n    if (!this._model || reload) {\n      this._model = mainTarget.model(CoverageModel);\n    }\n    if (!this._model) {\n      return;\n    }\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.CoverageStarted);\n    if (jsCoveragePerBlock) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.CoverageStartedPerBlock);\n    }\n    const success = await this._model.start(Boolean(jsCoveragePerBlock));\n    if (!success) {\n      return;\n    }\n    this._selectCoverageType(Boolean(jsCoveragePerBlock));\n\n    this._model.addEventListener(Events.CoverageUpdated, this._onCoverageDataReceived, this);\n    this._resourceTreeModel =\n        mainTarget.model(SDK.ResourceTreeModel.ResourceTreeModel) as SDK.ResourceTreeModel.ResourceTreeModel | null;\n    if (this._resourceTreeModel) {\n      this._resourceTreeModel.addEventListener(\n          SDK.ResourceTreeModel.Events.MainFrameNavigated, this._onMainFrameNavigated, this);\n    }\n    this._decorationManager = new CoverageDecorationManager(this._model as CoverageModel);\n    this._toggleRecordAction.setToggled(true);\n    this._clearButton.setEnabled(false);\n    if (this._startWithReloadButton) {\n      this._startWithReloadButton.setEnabled(false);\n      this._startWithReloadButton.setVisible(false);\n      this._toggleRecordButton.setEnabled(true);\n      this._toggleRecordButton.setVisible(true);\n      if (reloadButtonFocused) {\n        this._toggleRecordButton.focus();\n      }\n    }\n    this._coverageTypeComboBox.setEnabled(false);\n    this._filterInput.setEnabled(true);\n    this._filterByTypeComboBox.setEnabled(true);\n    this._contentScriptsCheckbox.setEnabled(true);\n    if (this._landingPage.isShowing()) {\n      this._landingPage.detach();\n    }\n    this._listView.show(this._coverageResultsElement);\n    if (hadFocus && !reloadButtonFocused) {\n      this._listView.focus();\n    }\n    if (reload && this._resourceTreeModel) {\n      this._resourceTreeModel.reloadPage();\n    } else {\n      this._model.startPolling();\n    }\n  }\n\n  _onCoverageDataReceived(event: Common.EventTarget.EventTargetEvent): void {\n    const data = event.data as CoverageInfo[];\n    this._updateViews(data);\n  }\n\n  async stopRecording(): Promise<void> {\n    if (this._resourceTreeModel) {\n      this._resourceTreeModel.removeEventListener(\n          SDK.ResourceTreeModel.Events.MainFrameNavigated, this._onMainFrameNavigated, this);\n      this._resourceTreeModel = null;\n    }\n    if (this.hasFocus()) {\n      this._listView.focus();\n    }\n    // Stopping the model triggers one last poll to get the final data.\n    if (this._model) {\n      await this._model.stop();\n      this._model.removeEventListener(Events.CoverageUpdated, this._onCoverageDataReceived, this);\n    }\n    this._toggleRecordAction.setToggled(false);\n    this._coverageTypeComboBox.setEnabled(true);\n    if (this._startWithReloadButton) {\n      this._startWithReloadButton.setEnabled(true);\n      this._startWithReloadButton.setVisible(true);\n      this._toggleRecordButton.setEnabled(false);\n      this._toggleRecordButton.setVisible(false);\n    }\n    this._clearButton.setEnabled(true);\n  }\n\n  processBacklog(): void {\n    this._model && this._model.processJSBacklog();\n  }\n\n  _onMainFrameNavigated(): void {\n    this._model && this._model.reset();\n    this._decorationManager && this._decorationManager.reset();\n    this._listView.reset();\n    this._model && this._model.startPolling();\n  }\n\n  _updateViews(updatedEntries: CoverageInfo[]): void {\n    this._updateStats();\n    this._listView.update(this._model && this._model.entries() || []);\n    this._saveButton.setEnabled(this._model !== null && this._model.entries().length > 0);\n    this._decorationManager && this._decorationManager.update(updatedEntries);\n  }\n\n  _updateStats(): void {\n    const all = {total: 0, unused: 0};\n    const filtered = {total: 0, unused: 0};\n    let filterApplied = false;\n    if (this._model) {\n      for (const info of this._model.entries()) {\n        all.total += info.size();\n        all.unused += info.unusedSize();\n        if (this._isVisible(false, info)) {\n          filtered.total += info.size();\n          filtered.unused += info.unusedSize();\n        } else {\n          filterApplied = true;\n        }\n      }\n    }\n    this._statusMessageElement.textContent = filterApplied ?\n        i18nString(UIStrings.filteredSTotalS, {PH1: formatStat(filtered), PH2: formatStat(all)}) :\n        formatStat(all);\n\n    function formatStat({total, unused}: {total: number; unused: number;}): string {\n      const used = total - unused;\n      const percentUsed = total ? Math.round(100 * used / total) : 0;\n      return i18nString(UIStrings.sOfSSUsedSoFarSUnused, {\n        PH1: Platform.NumberUtilities.bytesToString(used),\n        PH2: Platform.NumberUtilities.bytesToString(total),\n        PH3: percentUsed,\n        PH4: Platform.NumberUtilities.bytesToString(unused),\n      });\n    }\n  }\n\n  _onFilterChanged(): void {\n    if (!this._listView) {\n      return;\n    }\n    const text = this._filterInput.value();\n    this._textFilterRegExp = text ? createPlainTextSearchRegex(text, 'i') : null;\n    this._listView.updateFilterAndHighlight(this._textFilterRegExp);\n    this._updateStats();\n  }\n\n  _onFilterByTypeChanged(): void {\n    if (!this._listView) {\n      return;\n    }\n\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.CoverageReportFiltered);\n\n    const option = this._filterByTypeComboBox.selectedOption();\n    const type = option && option.value;\n    this._typeFilterValue = parseInt(type || '', 10) || null;\n    this._listView.updateFilterAndHighlight(this._textFilterRegExp);\n    this._updateStats();\n  }\n\n  _isVisible(ignoreTextFilter: boolean, coverageInfo: URLCoverageInfo): boolean {\n    const url = coverageInfo.url();\n    if (url.startsWith(CoverageView._extensionBindingsURLPrefix)) {\n      return false;\n    }\n    if (coverageInfo.isContentScript() && !this._showContentScriptsSetting.get()) {\n      return false;\n    }\n    if (this._typeFilterValue && !(coverageInfo.type() & this._typeFilterValue)) {\n      return false;\n    }\n\n    return ignoreTextFilter || !this._textFilterRegExp || this._textFilterRegExp.test(url);\n  }\n\n  async _exportReport(): Promise<void> {\n    const fos = new Bindings.FileUtils.FileOutputStream();\n    const fileName = `Coverage-${Platform.DateUtilities.toISO8601Compact(new Date())}.json`;\n    const accepted = await fos.open(fileName);\n    if (!accepted) {\n      return;\n    }\n    this._model && this._model.exportReport(fos);\n  }\n\n  selectCoverageItemByUrl(url: string): void {\n    this._listView.selectByUrl(url);\n  }\n\n  static readonly _extensionBindingsURLPrefix = 'extensions::';\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    const coverageViewId = 'coverage';\n    UI.ViewManager.ViewManager.instance()\n        .showView(coverageViewId, /** userGesture= */ false, /** omitFocus= */ true)\n        .then(() => {\n          const view = UI.ViewManager.ViewManager.instance().view(coverageViewId);\n          return view && view.widget();\n        })\n        .then(widget => this._innerHandleAction(widget as CoverageView, actionId));\n\n    return true;\n  }\n\n  _innerHandleAction(coverageView: CoverageView, actionId: string): void {\n    switch (actionId) {\n      case 'coverage.toggle-recording':\n        coverageView._toggleRecording();\n        break;\n      case 'coverage.start-with-reload':\n        coverageView._startRecording({reload: true, jsCoveragePerBlock: coverageView.isBlockCoverageSelected()});\n        break;\n      default:\n        console.assert(false, `Unknown action: ${actionId}`);\n    }\n  }\n}\n\nexport class LineDecorator implements SourceFrame.SourceFrame.LineDecorator {\n  _listeners:\n      WeakMap<SourceFrame.SourcesTextEditor.SourcesTextEditor, (arg0: Common.EventTarget.EventTargetEvent) => void>;\n  constructor() {\n    this._listeners = new WeakMap();\n  }\n\n  decorate(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      textEditor: SourceFrame.SourcesTextEditor.SourcesTextEditor): void {\n    const decorations = uiSourceCode.decorationsForType(decoratorType);\n    if (!decorations || !decorations.size) {\n      this._uninstallGutter(textEditor);\n      return;\n    }\n    const decorationManager = decorations.values().next().value.data() as CoverageDecorationManager;\n    decorationManager.usageByLine(uiSourceCode).then(lineUsage => {\n      textEditor.operation(() => this._innerDecorate(uiSourceCode, textEditor, lineUsage));\n    });\n  }\n\n  _innerDecorate(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, textEditor: SourceFrame.SourcesTextEditor.SourcesTextEditor,\n      lineUsage: (boolean|undefined)[]): void {\n    const gutterType = LineDecorator._gutterType;\n    this._uninstallGutter(textEditor);\n    if (lineUsage.length) {\n      this._installGutter(textEditor, uiSourceCode.url());\n    }\n    for (let line = 0; line < lineUsage.length; ++line) {\n      // Do not decorate the line if we don't have data.\n      if (typeof lineUsage[line] !== 'boolean') {\n        continue;\n      }\n      const className = lineUsage[line] ? 'text-editor-coverage-used-marker' : 'text-editor-coverage-unused-marker';\n      const gutterElement = document.createElement('div');\n      gutterElement.classList.add(className);\n      textEditor.setGutterDecoration(line, gutterType, gutterElement);\n    }\n  }\n\n  makeGutterClickHandler(url: string): (arg0: Common.EventTarget.EventTargetEvent) => void {\n    function handleGutterClick(event: Common.EventTarget.EventTargetEvent): void {\n      const eventData = event.data as SourceFrame.SourcesTextEditor.GutterClickEventData;\n      if (eventData.gutterType !== LineDecorator._gutterType) {\n        return;\n      }\n      const coverageViewId = 'coverage';\n      UI.ViewManager.ViewManager.instance()\n          .showView(coverageViewId)\n          .then(() => {\n            const view = UI.ViewManager.ViewManager.instance().view(coverageViewId);\n            return view && view.widget();\n          })\n          .then(widget => {\n            const matchFormattedSuffix = url.match(/(.*):formatted$/);\n            const urlWithoutFormattedSuffix = (matchFormattedSuffix && matchFormattedSuffix[1]) || url;\n            (widget as CoverageView).selectCoverageItemByUrl(urlWithoutFormattedSuffix);\n          });\n    }\n    return handleGutterClick;\n  }\n\n  _installGutter(textEditor: SourceFrame.SourcesTextEditor.SourcesTextEditor, url: string): void {\n    let listener = this._listeners.get(textEditor);\n    if (!listener) {\n      listener = this.makeGutterClickHandler(url);\n      this._listeners.set(textEditor, listener);\n    }\n    textEditor.installGutter(LineDecorator._gutterType, false);\n    textEditor.addEventListener(SourceFrame.SourcesTextEditor.Events.GutterClick, listener, this);\n  }\n\n  _uninstallGutter(textEditor: SourceFrame.SourcesTextEditor.SourcesTextEditor): void {\n    textEditor.uninstallGutter(LineDecorator._gutterType);\n    const listener = this._listeners.get(textEditor);\n    if (listener) {\n      textEditor.removeEventListener(SourceFrame.SourcesTextEditor.Events.GutterClick, listener, this);\n      this._listeners.delete(textEditor);\n    }\n  }\n\n  static readonly _gutterType = 'CodeMirror-gutter-coverage';\n}\n"]}