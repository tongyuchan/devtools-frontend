{"version":3,"file":"CoverageListView.js","sourceRoot":"","sources":["../../../../../front_end/coverage/CoverageListView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../common/common.js';\nimport * as DataGrid from '../data_grid/data_grid.js';\nimport * as Formatter from '../formatter/formatter.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as UI from '../ui/ui.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {CoverageType, URLCoverageInfo} from './CoverageModel.js';  // eslint-disable-line no-unused-vars\n\nexport const UIStrings = {\n  /**\n  *@description Text that appears on a button for the css resource type filter.\n  */\n  css: 'CSS',\n  /**\n  *@description Text in Coverage List View of the Coverage tab\n  */\n  jsPerFunction: 'JS (per function)',\n  /**\n  *@description Text in Coverage List View of the Coverage tab\n  */\n  jsPerBlock: 'JS (per block)',\n  /**\n  *@description Text for web URLs\n  */\n  url: 'URL',\n  /**\n  *@description Text that refers to some types\n  */\n  type: 'Type',\n  /**\n  *@description Text in Coverage List View of the Coverage tab\n  */\n  totalBytes: 'Total Bytes',\n  /**\n  *@description Text in Coverage List View of the Coverage tab\n  */\n  unusedBytes: 'Unused Bytes',\n  /**\n  *@description Text in the Coverage List View of the Coverage Tab\n  */\n  usageVisualization: 'Usage Visualization',\n  /**\n  *@description Data grid name for Coverage data grids\n  */\n  codeCoverage: 'Code Coverage',\n  /**\n  *@description Cell title in Coverage List View of the Coverage tab\n  */\n  jsCoverageWithPerFunction:\n      'JS coverage with per function granularity: Once a function was executed, the whole function is marked as covered.',\n  /**\n  *@description Cell title in Coverage List View of the Coverage tab\n  */\n  jsCoverageWithPerBlock:\n      'JS coverage with per block granularity: Once a block of JavaScript was executed, that block is marked as covered.',\n  /**\n  *@description Accessible text for a file size of 1 byte\n  */\n  Byte: '1 byte',\n  /**\n  *@description Accessible text for the value in bytes in memory allocation or coverage view.\n  *@example {12345} PH1\n  */\n  sBytes: '{PH1} bytes',\n  /**\n  *@description Message in Coverage View of the Coverage tab\n  *@example {12.34} PH1\n  */\n  sPercent: '{PH1} %',\n  /**\n  *@description Accessible text for the amount of unused code in a file\n  *@example {20 %} PH1\n  */\n  ByteS: '1 byte, {PH1}',\n  /**\n  *@description Accessible text for the unused bytes column in the coverage tool that describes the total unused bytes and percentage of the file unused.\n  *@example {100000} PH1\n  *@example {88%} PH2\n  */\n  sBytesS: '{PH1} bytes, {PH2}',\n  /**\n  *@description Tooltip text for the bar in the coverage list view of the coverage tool that illustrates the relation between used and unused bytes.\n  *@example {1000} PH1\n  *@example {12.34} PH2\n  */\n  sBytesSBelongToFunctionsThatHave: '{PH1} bytes ({PH2} %) belong to functions that have not (yet) been executed.',\n  /**\n  *@description Tooltip text for the bar in the coverage list view of the coverage tool that illustrates the relation between used and unused bytes.\n  *@example {1000} PH1\n  *@example {12.34} PH2\n  */\n  sBytesSBelongToBlocksOf: '{PH1} bytes ({PH2} %) belong to blocks of JavaScript that have not (yet) been executed.',\n  /**\n  *@description Message in Coverage View of the Coverage tab\n  *@example {1000} PH1\n  *@example {12.34} PH2\n  */\n  sBytesSBelongToFunctionsThatHaveExecuted:\n      '{PH1} bytes ({PH2} %) belong to functions that have executed at least once.',\n  /**\n  *@description Message in Coverage View of the Coverage tab\n  *@example {1000} PH1\n  *@example {12.34} PH2\n  */\n  sBytesSBelongToBlocksOfJavascript:\n      '{PH1} bytes ({PH2} %) belong to blocks of JavaScript that have executed at least once.',\n  /**\n  *@description Accessible text for the visualization column of coverage tool. Contains percentage of unused bytes to used bytes.\n  *@example {12.3} PH1\n  *@example {12.3} PH2\n  */\n  sOfFileUnusedSOfFileUsed: '{PH1} % of file unused, {PH2} % of file used',\n};\nconst str_ = i18n.i18n.registerUIStrings('coverage/CoverageListView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport function coverageTypeToString(type: CoverageType): string {\n  const types = [];\n  if (type & CoverageType.CSS) {\n    types.push(i18nString(UIStrings.css));\n  }\n  if (type & CoverageType.JavaScriptPerFunction) {\n    types.push(i18nString(UIStrings.jsPerFunction));\n  } else if (type & CoverageType.JavaScript) {\n    types.push(i18nString(UIStrings.jsPerBlock));\n  }\n  return types.join('+');\n}\n\nexport class CoverageListView extends UI.Widget.VBox {\n  _nodeForCoverageInfo: Map<URLCoverageInfo, GridNode>;\n  _isVisibleFilter: (arg0: URLCoverageInfo) => boolean;\n  _highlightRegExp: RegExp|null;\n  _dataGrid: DataGrid.SortableDataGrid.SortableDataGrid<GridNode>;\n\n  constructor(isVisibleFilter: (arg0: URLCoverageInfo) => boolean) {\n    super(true);\n    this._nodeForCoverageInfo = new Map();\n    this._isVisibleFilter = isVisibleFilter;\n    this._highlightRegExp = null;\n    this.registerRequiredCSS('coverage/coverageListView.css', {enableLegacyPatching: true});\n    const columns: DataGrid.DataGrid.ColumnDescriptor[] = [\n      {id: 'url', title: i18nString(UIStrings.url), width: '250px', fixedWidth: false, sortable: true},\n      {id: 'type', title: i18nString(UIStrings.type), width: '45px', fixedWidth: true, sortable: true},\n      {\n        id: 'size',\n        title: i18nString(UIStrings.totalBytes),\n        width: '60px',\n        fixedWidth: true,\n        sortable: true,\n        align: DataGrid.DataGrid.Align.Right,\n      },\n      {\n        id: 'unusedSize',\n        title: i18nString(UIStrings.unusedBytes),\n        width: '100px',\n        fixedWidth: true,\n        sortable: true,\n        align: DataGrid.DataGrid.Align.Right,\n        sort: DataGrid.DataGrid.Order.Descending,\n      },\n      {id: 'bars', title: i18nString(UIStrings.usageVisualization), width: '250px', fixedWidth: false, sortable: true},\n    ] as DataGrid.DataGrid.ColumnDescriptor[];\n    this._dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid<GridNode>({\n      displayName: i18nString(UIStrings.codeCoverage),\n      columns,\n      editCallback: undefined,\n      refreshCallback: undefined,\n      deleteCallback: undefined,\n    });\n    this._dataGrid.setResizeMethod(DataGrid.DataGrid.ResizeMethod.Last);\n    this._dataGrid.element.classList.add('flex-auto');\n    this._dataGrid.element.addEventListener('keydown', this._onKeyDown.bind(this), false);\n    this._dataGrid.addEventListener(DataGrid.DataGrid.Events.OpenedNode, this._onOpenedNode, this);\n    this._dataGrid.addEventListener(DataGrid.DataGrid.Events.SortingChanged, this._sortingChanged, this);\n\n    const dataGridWidget = this._dataGrid.asWidget();\n    dataGridWidget.show(this.contentElement);\n    this.setDefaultFocusedChild(dataGridWidget);\n  }\n\n  update(coverageInfo: URLCoverageInfo[]): void {\n    let hadUpdates = false;\n    const maxSize = coverageInfo.reduce((acc, entry) => Math.max(acc, entry.size()), 0);\n    const rootNode = this._dataGrid.rootNode();\n    for (const entry of coverageInfo) {\n      let node = this._nodeForCoverageInfo.get(entry);\n      if (node) {\n        if (this._isVisibleFilter(node._coverageInfo)) {\n          hadUpdates = node._refreshIfNeeded(maxSize) || hadUpdates;\n        }\n        continue;\n      }\n      node = new GridNode(entry, maxSize);\n      this._nodeForCoverageInfo.set(entry, node);\n      if (this._isVisibleFilter(node._coverageInfo)) {\n        rootNode.appendChild(node);\n        hadUpdates = true;\n      }\n    }\n    if (hadUpdates) {\n      this._sortingChanged();\n    }\n  }\n\n  reset(): void {\n    this._nodeForCoverageInfo.clear();\n    this._dataGrid.rootNode().removeChildren();\n  }\n\n  updateFilterAndHighlight(highlightRegExp: RegExp|null): void {\n    this._highlightRegExp = highlightRegExp;\n    let hadTreeUpdates = false;\n    for (const node of this._nodeForCoverageInfo.values()) {\n      const shouldBeVisible = this._isVisibleFilter(node._coverageInfo);\n      const isVisible = Boolean(node.parent);\n      if (shouldBeVisible) {\n        node._setHighlight(this._highlightRegExp);\n      }\n      if (shouldBeVisible === isVisible) {\n        continue;\n      }\n      hadTreeUpdates = true;\n      if (!shouldBeVisible) {\n        node.remove();\n      } else {\n        this._dataGrid.rootNode().appendChild(node);\n      }\n    }\n    if (hadTreeUpdates) {\n      this._sortingChanged();\n    }\n  }\n\n  selectByUrl(url: string): void {\n    for (const [info, node] of this._nodeForCoverageInfo.entries()) {\n      if (info.url() === url) {\n        node.revealAndSelect();\n        break;\n      }\n    }\n  }\n\n  _onOpenedNode(): void {\n    this._revealSourceForSelectedNode();\n  }\n\n  _onKeyDown(event: KeyboardEvent): void {\n    if (!(event.key === 'Enter')) {\n      return;\n    }\n    event.consume(true);\n    this._revealSourceForSelectedNode();\n  }\n\n  async _revealSourceForSelectedNode(): Promise<void> {\n    const node = this._dataGrid.selectedNode;\n    if (!node) {\n      return;\n    }\n    const coverageInfo = (node as GridNode)._coverageInfo;\n    let sourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(coverageInfo.url());\n    if (!sourceCode) {\n      return;\n    }\n\n    const formatData = await Formatter.SourceFormatter.SourceFormatter.instance().format(sourceCode);\n    sourceCode = formatData.formattedSourceCode;\n\n    if (this._dataGrid.selectedNode !== node) {\n      return;\n    }\n    Common.Revealer.reveal(sourceCode);\n  }\n\n  _sortingChanged(): void {\n    const columnId = this._dataGrid.sortColumnId();\n    if (!columnId) {\n      return;\n    }\n    const sortFunction = GridNode.sortFunctionForColumn(columnId) as (\n                             (arg0: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>,\n                              arg1: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>) => number) |\n        null;\n    if (!sortFunction) {\n      return;\n    }\n    this._dataGrid.sortNodes(sortFunction, !this._dataGrid.isSortOrderAscending());\n  }\n}\n\nexport class GridNode extends DataGrid.SortableDataGrid.SortableDataGridNode<GridNode> {\n  _coverageInfo: URLCoverageInfo;\n  _lastUsedSize!: number|undefined;\n  _url: string;\n  _maxSize: number;\n  _highlightRegExp: RegExp|null;\n  constructor(coverageInfo: URLCoverageInfo, maxSize: number) {\n    super();\n    this._coverageInfo = coverageInfo;\n    this._url = coverageInfo.url();\n    this._maxSize = maxSize;\n    this._highlightRegExp = null;\n  }\n\n  _setHighlight(highlightRegExp: RegExp|null): void {\n    if (this._highlightRegExp === highlightRegExp) {\n      return;\n    }\n    this._highlightRegExp = highlightRegExp;\n    this.refresh();\n  }\n\n  _refreshIfNeeded(maxSize: number): boolean {\n    if (this._lastUsedSize === this._coverageInfo.usedSize() && maxSize === this._maxSize) {\n      return false;\n    }\n    this._lastUsedSize = this._coverageInfo.usedSize();\n    this._maxSize = maxSize;\n    this.refresh();\n    return true;\n  }\n\n  createCell(columnId: string): HTMLElement {\n    const cell = this.createTD(columnId);\n    switch (columnId) {\n      case 'url': {\n        UI.Tooltip.Tooltip.install(cell, this._url);\n        const outer = cell.createChild('div', 'url-outer');\n        const prefix = outer.createChild('div', 'url-prefix');\n        const suffix = outer.createChild('div', 'url-suffix');\n        const splitURL = /^(.*)(\\/[^/]*)$/.exec(this._url);\n        prefix.textContent = splitURL ? splitURL[1] : this._url;\n        suffix.textContent = splitURL ? splitURL[2] : '';\n        if (this._highlightRegExp) {\n          this._highlight(outer, this._url);\n        }\n        this.setCellAccessibleName(this._url, cell, columnId);\n        break;\n      }\n      case 'type': {\n        cell.textContent = coverageTypeToString(this._coverageInfo.type());\n        if (this._coverageInfo.type() & CoverageType.JavaScriptPerFunction) {\n          UI.Tooltip.Tooltip.install(cell, i18nString(UIStrings.jsCoverageWithPerFunction));\n        } else if (this._coverageInfo.type() & CoverageType.JavaScript) {\n          UI.Tooltip.Tooltip.install(cell, i18nString(UIStrings.jsCoverageWithPerBlock));\n        }\n        break;\n      }\n      case 'size': {\n        const sizeSpan = cell.createChild('span');\n        sizeSpan.textContent = Number.withThousandsSeparator(this._coverageInfo.size() || 0);\n        const sizeAccessibleName = (this._coverageInfo.size() === 1) ?\n            i18nString(UIStrings.Byte) :\n            i18nString(UIStrings.sBytes, {PH1: this._coverageInfo.size() || 0});\n        this.setCellAccessibleName(sizeAccessibleName, cell, columnId);\n        break;\n      }\n      case 'unusedSize': {\n        const unusedSize = this._coverageInfo.unusedSize() || 0;\n        const unusedSizeSpan = cell.createChild('span');\n        const unusedPercentsSpan = cell.createChild('span', 'percent-value');\n        unusedSizeSpan.textContent = Number.withThousandsSeparator(unusedSize);\n        const unusedPercentFormatted =\n            i18nString(UIStrings.sPercent, {PH1: this._percentageString(this._coverageInfo.unusedPercentage())});\n        unusedPercentsSpan.textContent = unusedPercentFormatted;\n        const unusedAccessibleName = (unusedSize === 1) ?\n            i18nString(UIStrings.ByteS, {PH1: unusedPercentFormatted}) :\n            i18nString(UIStrings.sBytesS, {PH1: unusedSize, PH2: unusedPercentFormatted});\n        this.setCellAccessibleName(unusedAccessibleName, cell, columnId);\n        break;\n      }\n      case 'bars': {\n        const barContainer = cell.createChild('div', 'bar-container');\n        const unusedPercent = this._percentageString(this._coverageInfo.unusedPercentage());\n        const usedPercent = this._percentageString(this._coverageInfo.usedPercentage());\n        if (this._coverageInfo.unusedSize() > 0) {\n          const unusedSizeBar = barContainer.createChild('div', 'bar bar-unused-size');\n          unusedSizeBar.style.width = ((this._coverageInfo.unusedSize() / this._maxSize) * 100 || 0) + '%';\n          if (this._coverageInfo.type() & CoverageType.JavaScriptPerFunction) {\n            UI.Tooltip.Tooltip.install(\n                unusedSizeBar,\n                i18nString(\n                    UIStrings.sBytesSBelongToFunctionsThatHave,\n                    {PH1: this._coverageInfo.unusedSize(), PH2: unusedPercent}));\n          } else if (this._coverageInfo.type() & CoverageType.JavaScript) {\n            UI.Tooltip.Tooltip.install(\n                unusedSizeBar,\n                i18nString(\n                    UIStrings.sBytesSBelongToBlocksOf, {PH1: this._coverageInfo.unusedSize(), PH2: unusedPercent}));\n          }\n        }\n        if (this._coverageInfo.usedSize() > 0) {\n          const usedSizeBar = barContainer.createChild('div', 'bar bar-used-size');\n          usedSizeBar.style.width = ((this._coverageInfo.usedSize() / this._maxSize) * 100 || 0) + '%';\n          if (this._coverageInfo.type() & CoverageType.JavaScriptPerFunction) {\n            UI.Tooltip.Tooltip.install(\n                usedSizeBar,\n                i18nString(\n                    UIStrings.sBytesSBelongToFunctionsThatHaveExecuted,\n                    {PH1: this._coverageInfo.usedSize(), PH2: usedPercent}));\n          } else if (this._coverageInfo.type() & CoverageType.JavaScript) {\n            UI.Tooltip.Tooltip.install(\n                usedSizeBar,\n                i18nString(\n                    UIStrings.sBytesSBelongToBlocksOfJavascript,\n                    {PH1: this._coverageInfo.usedSize(), PH2: usedPercent}));\n          }\n        }\n        this.setCellAccessibleName(\n            i18nString(UIStrings.sOfFileUnusedSOfFileUsed, {PH1: unusedPercent, PH2: usedPercent}), cell, columnId);\n      }\n    }\n    return cell;\n  }\n\n  _percentageString(value: number): string {\n    return value.toFixed(1);\n  }\n\n  _highlight(element: Element, textContent: string): void {\n    if (!this._highlightRegExp) {\n      return;\n    }\n    const matches = this._highlightRegExp.exec(textContent);\n    if (!matches || !matches.length) {\n      return;\n    }\n    const range = new TextUtils.TextRange.SourceRange(matches.index, matches[0].length);\n    UI.UIUtils.highlightRangesWithStyleClass(element, [range], 'filter-highlight');\n  }\n\n  static sortFunctionForColumn(columnId: string): ((arg0: GridNode, arg1: GridNode) => number)|null {\n    const compareURL = (a: GridNode, b: GridNode): number => a._url.localeCompare(b._url);\n    switch (columnId) {\n      case 'url':\n        return compareURL;\n      case 'type':\n        return (a: GridNode, b: GridNode): number => {\n          const typeA = coverageTypeToString(a._coverageInfo.type());\n          const typeB = coverageTypeToString(b._coverageInfo.type());\n          return typeA.localeCompare(typeB) || compareURL(a, b);\n        };\n      case 'size':\n        return (a: GridNode, b: GridNode): number =>\n                   a._coverageInfo.size() - b._coverageInfo.size() || compareURL(a, b);\n      case 'bars':\n      case 'unusedSize':\n        return (a: GridNode, b: GridNode): number =>\n                   a._coverageInfo.unusedSize() - b._coverageInfo.unusedSize() || compareURL(a, b);\n      default:\n        console.assert(false, 'Unknown sort field: ' + columnId);\n        return null;\n    }\n  }\n}\n"]}