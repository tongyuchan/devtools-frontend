{"version":3,"file":"ServerTiming.js","sourceRoot":"","sources":["../../../../../front_end/sdk/ServerTiming.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport {ls} from '../common/common.js';  // eslint-disable-line rulesdir/es_modules_import\nimport * as Platform from '../platform/platform.js';\n\nimport {NameValue} from './NetworkRequest.js';  // eslint-disable-line no-unused-vars\n\n\nexport class ServerTiming {\n  /**\n   * @param {string} metric\n   * @param {?number} value\n   * @param {?string} description\n   */\n  constructor(metric, value, description) {\n    this.metric = metric;\n    this.value = value;\n    this.description = description;\n  }\n\n  /**\n   * @param {!Array<!NameValue>} headers\n   * @return {?Array<!ServerTiming>}\n   */\n  static parseHeaders(headers) {\n    const rawServerTimingHeaders = headers.filter(item => item.name.toLowerCase() === 'server-timing');\n    if (!rawServerTimingHeaders.length) {\n      return null;\n    }\n\n    const serverTimings = rawServerTimingHeaders.reduce((memo, header) => {\n      const timing = this.createFromHeaderValue(header.value);\n      memo.push(...timing.map(function(entry) {\n        return new ServerTiming(\n            entry.name, entry.hasOwnProperty('dur') ? entry.dur : null, entry.hasOwnProperty('desc') ? entry.desc : '');\n      }));\n      return memo;\n    }, /** @type {!Array<!ServerTiming>} */ ([]));\n    serverTimings.sort((a, b) => Platform.StringUtilities.compare(a.metric.toLowerCase(), b.metric.toLowerCase()));\n    return serverTimings;\n  }\n\n  /**\n   * TODO(crbug.com/1011811): Instead of using !Object<string, *> we should have a proper type\n   *                          with name, desc and dur properties.\n   * @param {string} valueString\n   * @return {!Array<!Object<string, *>>}\n   */\n  static createFromHeaderValue(valueString) {\n    function trimLeadingWhiteSpace() {\n      valueString = valueString.replace(/^\\s*/, '');\n    }\n    /** @param {string} char */\n    function consumeDelimiter(char) {\n      console.assert(char.length === 1);\n      trimLeadingWhiteSpace();\n      if (valueString.charAt(0) !== char) {\n        return false;\n      }\n\n      valueString = valueString.substring(1);\n      return true;\n    }\n    function consumeToken() {\n      // https://tools.ietf.org/html/rfc7230#appendix-B\n      const result = /^(?:\\s*)([\\w!#$%&'*+\\-.^`|~]+)(?:\\s*)(.*)/.exec(valueString);\n      if (!result) {\n        return null;\n      }\n\n      valueString = result[2];\n      return result[1];\n    }\n    function consumeTokenOrQuotedString() {\n      trimLeadingWhiteSpace();\n      if (valueString.charAt(0) === '\"') {\n        return consumeQuotedString();\n      }\n\n      return consumeToken();\n    }\n    function consumeQuotedString() {\n      console.assert(valueString.charAt(0) === '\"');\n      valueString = valueString.substring(1);  // remove leading DQUOTE\n\n      let value = '';\n      while (valueString.length) {\n        // split into two parts:\n        //  -everything before the first \" or \\\n        //  -everything else\n        const result = /^([^\"\\\\]*)(.*)/.exec(valueString);\n        if (!result) {\n          return null;  // not a valid quoted-string\n        }\n        value += result[1];\n        if (result[2].charAt(0) === '\"') {\n          // we have found our closing \"\n          valueString = result[2].substring(1);  // strip off everything after the closing \"\n          return value;                          // we are done here\n        }\n\n        console.assert(result[2].charAt(0) === '\\\\');\n        // special rules for \\ found in quoted-string (https://tools.ietf.org/html/rfc7230#section-3.2.6)\n        value += result[2].charAt(1);          // grab the character AFTER the \\ (if there was one)\n        valueString = result[2].substring(2);  // strip off \\ and next character\n      }\n\n      return null;  // not a valid quoted-string\n    }\n    function consumeExtraneous() {\n      const result = /([,;].*)/.exec(valueString);\n      if (result) {\n        valueString = result[1];\n      }\n    }\n\n    const result = [];\n    let name;\n    while ((name = consumeToken()) !== null) {\n      const entry = {name};\n\n      if (valueString.charAt(0) === '=') {\n        this.showWarning(ls`Deprecated syntax found. Please use: <name>;dur=<duration>;desc=<description>`);\n      }\n\n      while (consumeDelimiter(';')) {\n        let paramName;\n        if ((paramName = consumeToken()) === null) {\n          continue;\n        }\n\n        paramName = paramName.toLowerCase();\n        const parseParameter = this.getParserForParameter(paramName);\n        let paramValue = null;\n        if (consumeDelimiter('=')) {\n          // always parse the value, even if we don't recognize the parameter name\n          paramValue = consumeTokenOrQuotedString();\n          consumeExtraneous();\n        }\n\n        if (parseParameter) {\n          // paramName is valid\n          if (entry.hasOwnProperty(paramName)) {\n            this.showWarning(ls`Duplicate parameter \"${paramName}\" ignored.`);\n            continue;\n          }\n\n          if (paramValue === null) {\n            this.showWarning(ls`No value found for parameter \"${paramName}\".`);\n          }\n\n          parseParameter.call(this, entry, paramValue);\n        } else {\n          // paramName is not valid\n          this.showWarning(ls`Unrecognized parameter \"${paramName}\".`);\n        }\n      }\n\n      result.push(entry);\n      if (!consumeDelimiter(',')) {\n        break;\n      }\n    }\n\n    if (valueString.length) {\n      this.showWarning(ls`Extraneous trailing characters.`);\n    }\n    return result;\n  }\n\n  /**\n   * @param {string} paramName\n   * @return {?function(!Object<string, *>, ?string):void}\n   */\n  static getParserForParameter(paramName) {\n    switch (paramName) {\n      case 'dur': {\n        /**\n         * @param {!Object<string, *>} entry\n         * @param {*} paramValue\n         */\n        function durParser(entry, paramValue) {\n          entry.dur = 0;\n          if (paramValue !== null) {\n            const duration = parseFloat(paramValue);\n            if (isNaN(duration)) {\n              ServerTiming.showWarning(ls`Unable to parse \"${paramName}\" value \"${paramValue}\".`);\n              return;\n            }\n            entry.dur = duration;\n          }\n        }\n        return durParser;\n      }\n\n      case 'desc': {\n        /**\n         * @param {!Object<string, *>} entry\n         * @param {?string} paramValue\n         */\n        function descParser(entry, paramValue) {\n          entry.desc = paramValue || '';\n        }\n        return descParser;\n      }\n\n      default: {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * @param {string} msg\n   */\n  static showWarning(msg) {\n    Common.Console.Console.instance().warn(Common.UIString.UIString(`ServerTiming: ${msg}`));\n  }\n}\n"]}