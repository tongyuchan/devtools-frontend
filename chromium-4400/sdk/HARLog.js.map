{"version":3,"file":"HARLog.js","sourceRoot":"","sources":["../../../../../front_end/sdk/HARLog.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// See http://www.softwareishard.com/blog/har-12-spec/\n// for HAR specification.\n\n// FIXME: Some fields are not yet supported due to back-end limitations.\n// See https://bugs.webkit.org/show_bug.cgi?id=58127 for details.\n\nimport * as Common from '../common/common.js';\n\nimport {Cookie} from './Cookie.js';                  // eslint-disable-line no-unused-vars\nimport {PageLoad} from './NetworkLog.js';            // eslint-disable-line no-unused-vars\nimport {NetworkRequest} from './NetworkRequest.js';  // eslint-disable-line no-unused-vars\n\n\nexport class HARLog {\n  /**\n   * @param {!NetworkRequest} request\n   * @param {number} monotonicTime\n   * @return {!Date}\n   */\n  static pseudoWallTime(request, monotonicTime) {\n    return new Date(request.pseudoWallTime(monotonicTime) * 1000);\n  }\n\n  /**\n   * @param {!Array<!NetworkRequest>} requests\n   * @return {!Promise<!HARLogDTO>}\n   */\n  static async build(requests) {\n    const log = new HARLog();\n    const entryPromises = [];\n    for (const request of requests) {\n      entryPromises.push(Entry.build(request));\n    }\n    const entries = await Promise.all(entryPromises);\n    return {version: '1.2', creator: log._creator(), pages: log._buildPages(requests), entries: entries};\n  }\n\n  /**\n   * @return {!Creator}\n   */\n  _creator() {\n    const webKitVersion = /AppleWebKit\\/([^ ]+)/.exec(window.navigator.userAgent);\n\n    return {name: 'WebInspector', version: webKitVersion ? webKitVersion[1] : 'n/a'};\n  }\n\n  /**\n   * @param {!Array<!NetworkRequest>} requests\n   * @return {!Array<!Page>}\n   */\n  _buildPages(requests) {\n    /** @type {!Set<number>} */\n    const seenIdentifiers = new Set();\n    const pages = [];\n    for (let i = 0; i < requests.length; ++i) {\n      const request = requests[i];\n      const page = PageLoad.forRequest(request);\n      if (!page || seenIdentifiers.has(page.id)) {\n        continue;\n      }\n      seenIdentifiers.add(page.id);\n      pages.push(this._convertPage(page, request));\n    }\n    return pages;\n  }\n\n  /**\n   * @param {!PageLoad} page\n   * @param {!NetworkRequest} request\n   * @return {!Page}\n   */\n  _convertPage(page, request) {\n    return {\n      startedDateTime: HARLog.pseudoWallTime(request, page.startTime).toJSON(),\n      id: 'page_' + page.id,\n      title: page.url,  // We don't have actual page title here. URL is probably better than nothing.\n      pageTimings: {\n        onContentLoad: this._pageEventTime(page, page.contentLoadTime),\n        onLoad: this._pageEventTime(page, page.loadTime)\n      }\n    };\n  }\n\n  /**\n   * @param {!PageLoad} page\n   * @param {number} time\n   * @return {number}\n   */\n  _pageEventTime(page, time) {\n    const startTime = page.startTime;\n    if (time === -1 || startTime === -1) {\n      return -1;\n    }\n    return Entry._toMilliseconds(time - startTime);\n  }\n}\n\n\nexport class Entry {\n  /**\n   * @param {!NetworkRequest} request\n   */\n  constructor(request) {\n    this._request = request;\n  }\n\n  /**\n   * @param {number} time\n   * @return {number}\n   */\n  static _toMilliseconds(time) {\n    return time === -1 ? -1 : time * 1000;\n  }\n\n  /**\n   * @param {!NetworkRequest} request\n   * @return {!Promise<!EntryDTO>}\n   */\n  static async build(request) {\n    const harEntry = new Entry(request);\n    let ipAddress = harEntry._request.remoteAddress();\n    const portPositionInString = ipAddress.lastIndexOf(':');\n    if (portPositionInString !== -1) {\n      ipAddress = ipAddress.substr(0, portPositionInString);\n    }\n\n    const timings = harEntry._buildTimings();\n    let time = 0;\n    // \"ssl\" is included in the connect field, so do not double count it.\n    for (const t of [timings.blocked, timings.dns, timings.connect, timings.send, timings.wait, timings.receive]) {\n      time += Math.max(t, 0);\n    }\n\n    const initiator = harEntry._request.initiator();\n    /** @type {?Protocol.Network.Initiator} */\n    let exportedInitiator = null;\n    if (initiator) {\n      exportedInitiator = {\n        type: initiator.type,\n      };\n      if (initiator.url !== undefined) {\n        exportedInitiator.url = initiator.url;\n      }\n      if (initiator.lineNumber !== undefined) {\n        exportedInitiator.lineNumber = initiator.lineNumber;\n      }\n      if (initiator.stack) {\n        exportedInitiator.stack = initiator.stack;\n      }\n    }\n\n    /**\n     * @type {!EntryDTO}\n     */\n    const entry = {\n      _fromCache: undefined,\n      _initiator: exportedInitiator,\n      _priority: harEntry._request.priority(),\n      _resourceType: harEntry._request.resourceType().name(),\n      _webSocketMessages: undefined,\n      cache: {},  // Not supported yet.\n      connection: undefined,\n      pageref: undefined,\n      request: await harEntry._buildRequest(),\n      response: harEntry._buildResponse(),\n      // IPv6 address should not have square brackets per (https://tools.ietf.org/html/rfc2373#section-2.2).\n      serverIPAddress: ipAddress.replace(/\\[\\]/g, ''),\n      startedDateTime: HARLog.pseudoWallTime(harEntry._request, harEntry._request.issueTime()).toJSON(),\n      time: time,\n      timings: timings,\n    };\n\n    // Chrome specific.\n\n    if (harEntry._request.cached()) {\n      entry._fromCache = harEntry._request.cachedInMemory() ? 'memory' : 'disk';\n    } else {\n      delete entry._fromCache;\n    }\n\n    if (harEntry._request.connectionId !== '0') {\n      entry.connection = harEntry._request.connectionId;\n    } else {\n      delete entry.connection;\n    }\n\n    const page = PageLoad.forRequest(harEntry._request);\n    if (page) {\n      entry.pageref = 'page_' + page.id;\n    } else {\n      delete entry.pageref;\n    }\n\n    if (harEntry._request.resourceType() === Common.ResourceType.resourceTypes.WebSocket) {\n      const messages = [];\n      for (const message of harEntry._request.frames()) {\n        messages.push({type: message.type, time: message.time, opcode: message.opCode, data: message.text});\n      }\n      entry._webSocketMessages = messages;\n    } else {\n      delete entry._webSocketMessages;\n    }\n\n    return entry;\n  }\n\n  /**\n   * @return {!Promise<!Request>}\n   */\n  async _buildRequest() {\n    const headersText = this._request.requestHeadersText();\n    /** @type {!Request} */\n    const res = {\n      method: this._request.requestMethod,\n      url: this._buildRequestURL(this._request.url()),\n      httpVersion: this._request.requestHttpVersion(),\n      headers: this._request.requestHeaders(),\n      queryString: this._buildParameters(this._request.queryParameters || []),\n      cookies: this._buildCookies(this._request.requestCookies),\n      headersSize: headersText ? headersText.length : -1,\n      bodySize: await this._requestBodySize(),\n      postData: undefined,\n    };\n    const postData = await this._buildPostData();\n    if (postData) {\n      res.postData = postData;\n    } else {\n      delete res.postData;\n    }\n\n    return res;\n  }\n\n  /**\n   * @return {!Response}\n   */\n  _buildResponse() {\n    const headersText = this._request.responseHeadersText;\n    return {\n      status: this._request.statusCode,\n      statusText: this._request.statusText,\n      httpVersion: this._request.responseHttpVersion(),\n      headers: this._request.responseHeaders,\n      cookies: this._buildCookies(this._request.responseCookies),\n      content: this._buildContent(),\n      redirectURL: this._request.responseHeaderValue('Location') || '',\n      headersSize: headersText ? headersText.length : -1,\n      bodySize: this.responseBodySize,\n      _transferSize: this._request.transferSize,\n      _error: this._request.localizedFailDescription\n    };\n  }\n\n  /**\n   * @return {!Content}\n   */\n  _buildContent() {\n    /** @type {!Content} */\n    const content = /** @type {!Content} */ ({\n      size: this._request.resourceSize,\n      mimeType: this._request.mimeType || 'x-unknown',\n      compression: undefined,\n      // text: this._request.content // TODO: pull out into a boolean flag, as content can be huge (and needs to be requested with an async call)\n    });\n    const compression = this.responseCompression;\n    if (typeof compression === 'number') {\n      content.compression = compression;\n    } else {\n      delete content.compression;\n    }\n    return content;\n  }\n\n  /**\n   * @return {!Timing}\n   */\n  _buildTimings() {\n    // Order of events: request_start = 0, [proxy], [dns], [connect [ssl]], [send], duration\n    const timing = this._request.timing;\n    const issueTime = this._request.issueTime();\n    const startTime = this._request.startTime;\n\n    /** @type {!Timing} */\n    const result = {\n      blocked: -1,\n      dns: -1,\n      ssl: -1,\n      connect: -1,\n      send: 0,\n      wait: 0,\n      receive: 0,\n      _blocked_queueing: -1,\n      _blocked_proxy: undefined\n    };\n\n    const queuedTime = (issueTime < startTime) ? startTime - issueTime : -1;\n    result.blocked = Entry._toMilliseconds(queuedTime);\n    result._blocked_queueing = Entry._toMilliseconds(queuedTime);\n\n    let highestTime = 0;\n    if (timing) {\n      // \"blocked\" here represents both queued + blocked/stalled + proxy (ie: anything before request was started).\n      // We pick the better of when the network request start was reported and pref timing.\n      const blockedStart = leastNonNegative([timing.dnsStart, timing.connectStart, timing.sendStart]);\n      if (blockedStart !== Infinity) {\n        result.blocked += blockedStart;\n      }\n\n      // Proxy is part of blocked but sometimes (like quic) blocked is -1 but has proxy timings.\n      if (timing.proxyEnd !== -1) {\n        result._blocked_proxy = timing.proxyEnd - timing.proxyStart;\n      }\n      if (result._blocked_proxy && result._blocked_proxy > result.blocked) {\n        result.blocked = result._blocked_proxy;\n      }\n\n      const dnsStart = timing.dnsEnd >= 0 ? blockedStart : 0;\n      const dnsEnd = timing.dnsEnd >= 0 ? timing.dnsEnd : -1;\n      result.dns = dnsEnd - dnsStart;\n\n      // SSL timing is included in connection timing.\n      const sslStart = timing.sslEnd > 0 ? timing.sslStart : 0;\n      const sslEnd = timing.sslEnd > 0 ? timing.sslEnd : -1;\n      result.ssl = sslEnd - sslStart;\n\n      const connectStart = timing.connectEnd >= 0 ? leastNonNegative([dnsEnd, blockedStart]) : 0;\n      const connectEnd = timing.connectEnd >= 0 ? timing.connectEnd : -1;\n      result.connect = connectEnd - connectStart;\n\n      // Send should not be -1 for legacy reasons even if it is served from cache.\n      const sendStart = timing.sendEnd >= 0 ? Math.max(connectEnd, dnsEnd, blockedStart) : 0;\n      const sendEnd = timing.sendEnd >= 0 ? timing.sendEnd : 0;\n      result.send = sendEnd - sendStart;\n      // Quic sometimes says that sendStart is before connectionEnd (see: crbug.com/740792)\n      if (result.send < 0) {\n        result.send = 0;\n      }\n      highestTime = Math.max(sendEnd, connectEnd, sslEnd, dnsEnd, blockedStart, 0);\n    } else if (this._request.responseReceivedTime === -1) {\n      // Means that we don't have any more details after blocked, so attribute all to blocked.\n      result.blocked = Entry._toMilliseconds(this._request.endTime - issueTime);\n      return result;\n    }\n\n    const requestTime = timing ? timing.requestTime : startTime;\n    const waitStart = highestTime;\n    const waitEnd = Entry._toMilliseconds(this._request.responseReceivedTime - requestTime);\n    result.wait = waitEnd - waitStart;\n\n    const receiveStart = waitEnd;\n    const receiveEnd = Entry._toMilliseconds(this._request.endTime - requestTime);\n    result.receive = Math.max(receiveEnd - receiveStart, 0);\n\n    return result;\n\n    /**\n     * @param {!Array<number>} values\n     * @return {number}\n     */\n    function leastNonNegative(values) {\n      return values.reduce((best, value) => (value >= 0 && value < best) ? value : best, Infinity);\n    }\n  }\n\n  /**\n   * @return {!Promise<?PostData>}\n   */\n  async _buildPostData() {\n    const postData = await this._request.requestFormData();\n    if (!postData) {\n      return null;\n    }\n    /** @type {!PostData} */\n    const res = {mimeType: this._request.requestContentType() || '', text: postData, params: undefined};\n    const formParameters = await this._request.formParameters();\n    if (formParameters) {\n      res.params = this._buildParameters(formParameters);\n    } else {\n      delete res.params;\n    }\n    return res;\n  }\n\n  /**\n   * @param {!Array<!Parameter>} parameters\n   * @return {!Array<!Parameter>}\n   */\n  _buildParameters(parameters) {\n    return parameters.slice();\n  }\n\n  /**\n   * @param {string} url\n   * @return {string}\n   */\n  _buildRequestURL(url) {\n    return url.split('#', 2)[0];\n  }\n\n  /**\n   * @param {!Array<!Cookie>} cookies\n   * @return {!Array<!CookieDTO>}\n   */\n  _buildCookies(cookies) {\n    return cookies.map(this._buildCookie.bind(this));\n  }\n\n  /**\n   * @param {!Cookie} cookie\n   * @return {!CookieDTO}\n   */\n  _buildCookie(cookie) {\n    /** @type {!CookieDTO} */\n    const c = {\n      name: cookie.name(),\n      value: cookie.value(),\n      path: cookie.path(),\n      domain: cookie.domain(),\n      expires: cookie.expiresDate(HARLog.pseudoWallTime(this._request, this._request.startTime)),\n      httpOnly: cookie.httpOnly(),\n      secure: cookie.secure(),\n      sameSite: undefined\n    };\n    if (cookie.sameSite()) {\n      c.sameSite = cookie.sameSite();\n    } else {\n      delete c.sameSite;\n    }\n    return c;\n  }\n\n  /**\n   * @return {!Promise<number>}\n   */\n  async _requestBodySize() {\n    const postData = await this._request.requestFormData();\n    if (!postData) {\n      return 0;\n    }\n\n    // As per the har spec, returns the length in bytes of the posted data.\n    // TODO(jarhar): This will be wrong if the underlying encoding is not UTF-8. NetworkRequest.requestFormData is\n    //   assumed to be UTF-8 because the backend decodes post data to a UTF-8 string regardless of the provided\n    //   content-type/charset in InspectorNetworkAgent::FormDataToString\n    return new TextEncoder().encode(postData).length;\n  }\n\n  /**\n   * @return {number}\n   */\n  get responseBodySize() {\n    if (this._request.cached() || this._request.statusCode === 304) {\n      return 0;\n    }\n    if (!this._request.responseHeadersText) {\n      return -1;\n    }\n    return this._request.transferSize - this._request.responseHeadersText.length;\n  }\n\n  /**\n   * @return {number|undefined}\n   */\n  get responseCompression() {\n    if (this._request.cached() || this._request.statusCode === 304 || this._request.statusCode === 206) {\n      return;\n    }\n    if (!this._request.responseHeadersText) {\n      return;\n    }\n    return this._request.resourceSize - this.responseBodySize;\n  }\n}\n\n/** @typedef {!{\n  blocked: number,\n  dns: number,\n  ssl: number,\n  connect: number,\n  send: number,\n  wait: number,\n  receive: number,\n  _blocked_queueing: number,\n  _blocked_proxy: (number|undefined)\n}} */\n// @ts-ignore typedef\nexport let Timing;\n\n/** @typedef {{\n  name: string,\n  value: string,\n}} */\n// @ts-ignore typedef\nexport let Parameter;\n\n/** @typedef {{\n  size: number,\n  mimeType: string,\n  compression: (number|undefined),\n  text: (string|undefined),\n  encoding: (string|undefined),\n}} */\n// @ts-ignore typedef\nexport let Content;\n\n/** @typedef {!{\n  method: string,\n  url: string,\n  httpVersion: string,\n  headers: !Object,\n  queryString: !Array<!Parameter>,\n  cookies: !Array<!CookieDTO>,\n  headersSize: number,\n  bodySize: number,\n  postData: (PostData|undefined),\n}} */\n// @ts-ignore typedef\nexport let Request;\n\n/** @typedef {!{\n  status: number,\n  statusText: string,\n  httpVersion: string,\n  headers: !Object,\n  cookies: !Array<!CookieDTO>,\n  content: !Content,\n  redirectURL: string,\n  headersSize: number,\n  bodySize: number,\n  _transferSize: number,\n  _error: ?string,\n}} */\n// @ts-ignore typedef\nexport let Response;\n\n/** @typedef {!{\n  _fromCache: (string|undefined),\n  _initiator: ?Protocol.Network.Initiator,\n  _priority: ?Protocol.Network.ResourcePriority,\n  _resourceType: string,\n  _webSocketMessages: (!Array<!Object>|undefined),\n  cache: !Object,\n  connection: (string|undefined),\n  pageref: (string|undefined),\n  request: !Request,\n  response: !Response,\n  serverIPAddress: string,\n  startedDateTime: (!Object|string),\n  time: number,\n  timings: !Timing,\n}} */\n// @ts-ignore typedef\nexport let EntryDTO;\n\n/** @typedef {!{\n  mimeType: string,\n  params: (!Array<!Parameter>|undefined),\n  text: string,\n}} */\n// @ts-ignore typedef\nexport let PostData;\n\n/** @typedef {!{\n  name: string,\n  value: string,\n  path: string,\n  domain: string,\n  expires: ?Date,\n  httpOnly: boolean,\n  secure: boolean,\n  sameSite: (Protocol.Network.CookieSameSite|undefined),\n}} */\n// @ts-ignore typedef\nexport let CookieDTO;\n\n/** @typedef {!{\n  startedDateTime: (!Object|string),\n  id: string,\n  title: string,\n  pageTimings: !{\n  onContentLoad: number,\n  onLoad: number,\n  }\n}} */\n// @ts-ignore typedef\nexport let Page;\n\n/** @typedef {!{\n  version: string,\n  name: string,\n}} */\n// @ts-ignore typedef\nexport let Creator;\n\n/** @typedef {!{\n  version: string,\n  creator: !Creator,\n  pages: !Array<!Page>,\n  entries: !Array<!EntryDTO>,\n}} */\n// @ts-ignore typedef\nexport let HARLogDTO;\n"]}