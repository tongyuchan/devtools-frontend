{"version":3,"file":"SDKModel.js","sourceRoot":"","sources":["../../../../../front_end/sdk/SDKModel.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as Platform from '../platform/platform.js';\nimport * as ProtocolClient from '../protocol_client/protocol_client.js';\n\n/** @type {!Map<function(new:SDKModel, !Target), !{capabilities: number, autostart: boolean}>} */\nconst _registeredModels = new Map();\n\n\nexport class SDKModel extends Common.ObjectWrapper.ObjectWrapper {\n  /**\n   * @param {!Target} target\n   */\n  constructor(target) {\n    super();\n    this._target = target;\n  }\n\n  /**\n   * @return {!Target}\n   */\n  target() {\n    return this._target;\n  }\n\n  /**\n   * Override this method to perform tasks that are required to suspend the\n   * model and that still need other models in an unsuspended state.\n   * @param {string=} reason - optionally provide a reason, the model can respond accordingly\n   * @return {!Promise<void>}\n   */\n  preSuspendModel(reason) {\n    return Promise.resolve();\n  }\n\n  /**\n   * @param {string=} reason - optionally provide a reason, the model can respond accordingly\n   * @return {!Promise<void>}\n   */\n  suspendModel(reason) {\n    return Promise.resolve();\n  }\n\n  /**\n   * @return {!Promise<void>}\n   */\n  resumeModel() {\n    return Promise.resolve();\n  }\n\n  /**\n   * Override this method to perform tasks that are required to after resuming\n   * the model and that require all models already in an unsuspended state.\n   * @return {!Promise<void>}\n   */\n  postResumeModel() {\n    return Promise.resolve();\n  }\n\n  dispose() {\n  }\n\n  /**\n   * @param {function(new:SDKModel, !Target)} modelClass\n   * @param {number} capabilities\n   * @param {boolean} autostart\n   */\n  static register(modelClass, capabilities, autostart) {\n    _registeredModels.set(modelClass, {capabilities, autostart});\n  }\n\n  static get registeredModels() {\n    return _registeredModels;\n  }\n}\n\nexport class Target extends ProtocolClient.InspectorBackend.TargetBase {\n  /**\n   * @param {!TargetManager} targetManager\n   * @param {string} id\n   * @param {string} name\n   * @param {!Type} type\n   * @param {?Target} parentTarget\n   * @param {string} sessionId\n   * @param {boolean} suspended\n   * @param {?ProtocolClient.InspectorBackend.Connection} connection\n   */\n  constructor(targetManager, id, name, type, parentTarget, sessionId, suspended, connection) {\n    const needsNodeJSPatching = type === Type.Node;\n    super(needsNodeJSPatching, parentTarget, sessionId, connection);\n    this._targetManager = targetManager;\n    this._name = name;\n    this._inspectedURL = '';\n    this._inspectedURLName = '';\n    this._capabilitiesMask = 0;\n    switch (type) {\n      case Type.Frame:\n        this._capabilitiesMask = Capability.Browser | Capability.Storage | Capability.DOM | Capability.JS |\n            Capability.Log | Capability.Network | Capability.Target | Capability.Tracing | Capability.Emulation |\n            Capability.Input | Capability.Inspector | Capability.Audits | Capability.WebAuthn | Capability.IO;\n        if (!parentTarget) {\n          // This matches backend exposing certain capabilities only for the main frame.\n          this._capabilitiesMask |=\n              Capability.DeviceEmulation | Capability.ScreenCapture | Capability.Security | Capability.ServiceWorker;\n          // TODO(dgozman): we report service workers for the whole frame tree on the main frame,\n          // while we should be able to only cover the subtree corresponding to the target.\n        }\n        break;\n      case Type.ServiceWorker:\n        this._capabilitiesMask = Capability.JS | Capability.Log | Capability.Network | Capability.Target |\n            Capability.Inspector | Capability.IO;\n        if (!parentTarget) {\n          this._capabilitiesMask |= Capability.Browser;\n        }\n        break;\n      case Type.Worker:\n        this._capabilitiesMask =\n            Capability.JS | Capability.Log | Capability.Network | Capability.Target | Capability.IO;\n        break;\n      case Type.Node:\n        this._capabilitiesMask = Capability.JS;\n        break;\n      case Type.Browser:\n        this._capabilitiesMask = Capability.Target | Capability.IO;\n        break;\n    }\n    this._type = type;\n    this._parentTarget = parentTarget;\n    this._id = id;\n    /** @type {Map<function(new:SDKModel, Target), SDKModel>}} */\n    this._modelByConstructor = new Map();\n    this._isSuspended = suspended;\n  }\n\n  /**\n   * @param {Set<function(new:SDKModel, !Target)>} required\n   */\n  createModels(required) {\n    this._creatingModels = true;\n    // TODO(dgozman): fix this in bindings layer.\n    // @ts-ignore ResourceTreeModel inherits from SDKModel introducing a cyclic dependency. Use the global for now.\n    this.model(SDK.ResourceTreeModel);\n    const registered = Array.from(SDKModel.registeredModels.keys());\n    for (const modelClass of registered) {\n      const info =\n          /** @type {!{capabilities: number, autostart: boolean}} */ (SDKModel.registeredModels.get(modelClass));\n      if (info.autostart || required.has(modelClass)) {\n        this.model(modelClass);\n      }\n    }\n    this._creatingModels = false;\n  }\n\n  /**\n   * @return {string}\n   */\n  id() {\n    return this._id;\n  }\n\n  /**\n   * @return {string}\n   */\n  name() {\n    return this._name || this._inspectedURLName;\n  }\n\n  /**\n   * @return {!Type}\n   */\n  type() {\n    return this._type;\n  }\n\n  /**\n   * @override\n   */\n  markAsNodeJSForTest() {\n    super.markAsNodeJSForTest();\n    this._type = Type.Node;\n  }\n\n  /**\n   * @return {!TargetManager}\n   */\n  targetManager() {\n    return this._targetManager;\n  }\n\n  /**\n   * @param {number} capabilitiesMask\n   * @return {boolean}\n   */\n  hasAllCapabilities(capabilitiesMask) {\n    // TODO(dgozman): get rid of this method, once we never observe targets with\n    // capability mask.\n    return (this._capabilitiesMask & capabilitiesMask) === capabilitiesMask;\n  }\n\n  /**\n   * @param {string} label\n   * @return {string}\n   */\n  decorateLabel(label) {\n    return (this._type === Type.Worker || this._type === Type.ServiceWorker) ? '\\u2699 ' + label : label;\n  }\n\n  /**\n   * @return {?Target}\n   */\n  parentTarget() {\n    return this._parentTarget;\n  }\n\n  /**\n   * @override\n   * @param {string} reason\n   */\n  dispose(reason) {\n    super.dispose(reason);\n    this._targetManager.removeTarget(this);\n    for (const model of this._modelByConstructor.values()) {\n      model.dispose();\n    }\n  }\n\n  /**\n   * @param {function(new:T, !Target)} modelClass\n   * @return {?T}\n   * @template {!SDKModel} T\n   */\n  model(modelClass) {\n    if (!this._modelByConstructor.get(modelClass)) {\n      const info = SDKModel.registeredModels.get(modelClass);\n      if (info === undefined) {\n        throw 'Model class is not registered @' + new Error().stack;\n      }\n      if ((this._capabilitiesMask & info.capabilities) === info.capabilities) {\n        const model = new modelClass(this);\n        this._modelByConstructor.set(modelClass, model);\n        if (!this._creatingModels) {\n          this._targetManager.modelAdded(this, modelClass, model);\n        }\n      }\n    }\n    return /** @type {T} */ (this._modelByConstructor.get(modelClass)) || null;\n  }\n\n  /**\n   * @return {!Map<function(new:SDKModel, !Target), !SDKModel>}\n   */\n  models() {\n    return this._modelByConstructor;\n  }\n\n  /**\n   * @return {string}\n   */\n  inspectedURL() {\n    return this._inspectedURL;\n  }\n\n  /**\n   * @param {string} inspectedURL\n   */\n  setInspectedURL(inspectedURL) {\n    this._inspectedURL = inspectedURL;\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(inspectedURL);\n    this._inspectedURLName = parsedURL ? parsedURL.lastPathComponentWithFragment() : '#' + this._id;\n    if (!this.parentTarget()) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.inspectedURLChanged(inspectedURL || '');\n    }\n    this._targetManager.dispatchEventToListeners(Events.InspectedURLChanged, this);\n    if (!this._name) {\n      this._targetManager.dispatchEventToListeners(Events.NameChanged, this);\n    }\n  }\n\n  /**\n   * @param {string=} reason - optionally provide a reason, so models can respond accordingly\n   * @return {!Promise<void>}\n   */\n  async suspend(reason) {\n    if (this._isSuspended) {\n      return Promise.resolve();\n    }\n    this._isSuspended = true;\n\n    await Promise.all(Array.from(this.models().values(), m => m.preSuspendModel(reason)));\n    await Promise.all(Array.from(this.models().values(), m => m.suspendModel(reason)));\n  }\n\n  /**\n   * @return {!Promise<void>}\n   */\n  async resume() {\n    if (!this._isSuspended) {\n      return Promise.resolve();\n    }\n    this._isSuspended = false;\n\n    await Promise.all(Array.from(this.models().values(), m => m.resumeModel()));\n    await Promise.all(Array.from(this.models().values(), m => m.postResumeModel()));\n  }\n\n  /**\n   * @return {boolean}\n   */\n  suspended() {\n    return this._isSuspended;\n  }\n}\n\n/**\n * @enum {number}\n */\nexport const Capability = {\n  Browser: 1 << 0,\n  DOM: 1 << 1,\n  JS: 1 << 2,\n  Log: 1 << 3,\n  Network: 1 << 4,\n  Target: 1 << 5,\n  ScreenCapture: 1 << 6,\n  Tracing: 1 << 7,\n  Emulation: 1 << 8,\n  Security: 1 << 9,\n  Input: 1 << 10,\n  Inspector: 1 << 11,\n  DeviceEmulation: 1 << 12,\n  Storage: 1 << 13,\n  ServiceWorker: 1 << 14,\n  Audits: 1 << 15,\n  WebAuthn: 1 << 16,\n  IO: 1 << 17,\n\n  None: 0,\n};\n\n/**\n * @enum {string}\n */\nexport const Type = {\n  Frame: 'frame',\n  ServiceWorker: 'service-worker',\n  Worker: 'worker',\n  Node: 'node',\n  Browser: 'browser',\n};\n\n/**\n * @type {!TargetManager|undefined}\n */\nlet targetManagerInstance;\n\nexport class TargetManager extends Common.ObjectWrapper.ObjectWrapper {\n  /**\n   * @private\n   */\n  constructor() {\n    super();\n    /** @type {!Set.<!Target>} */\n    this._targets = new Set();\n    /** @type {!Set.<!Observer>} */\n    this._observers = new Set();\n    /** @type {!Platform.MapUtilities.Multimap<symbol, !{modelClass: function(new:SDKModel, !Target), thisObject: (!Object|undefined), listener: function(!Common.EventTarget.EventTargetEvent):void}>} */\n    this._modelListeners = new Platform.MapUtilities.Multimap();\n    /** @type {!Platform.MapUtilities.Multimap<function(new:SDKModel, !Target), !SDKModelObserver<?>>} */\n    this._modelObservers = new Platform.MapUtilities.Multimap();\n    this._isSuspended = false;\n  }\n\n  /**\n   * @param {{forceNew: boolean}} opts\n   */\n  static instance({forceNew} = {forceNew: false}) {\n    if (!targetManagerInstance || forceNew) {\n      targetManagerInstance = new TargetManager();\n    }\n\n    return targetManagerInstance;\n  }\n\n  static removeInstance() {\n    targetManagerInstance = undefined;\n  }\n\n  /**\n   * @param {string=} reason - optionally provide a reason, so targets can respond accordingly\n   * @return {!Promise<void>}\n   */\n  async suspendAllTargets(reason) {\n    if (this._isSuspended) {\n      return;\n    }\n    this._isSuspended = true;\n    this.dispatchEventToListeners(Events.SuspendStateChanged);\n    const suspendPromises = Array.from(this._targets.values(), target => target.suspend(reason));\n    await Promise.all(suspendPromises);\n  }\n\n  /**\n   * @return {!Promise<void>}\n   */\n  async resumeAllTargets() {\n    if (!this._isSuspended) {\n      return;\n    }\n    this._isSuspended = false;\n    this.dispatchEventToListeners(Events.SuspendStateChanged);\n    const resumePromises = Array.from(this._targets.values(), target => target.resume());\n    await Promise.all(resumePromises);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  allTargetsSuspended() {\n    return this._isSuspended;\n  }\n\n  /**\n   * @param {function(new:T,!Target)} modelClass\n   * @return {!Array<!T>}\n   * @template {!SDKModel} T\n   */\n  models(modelClass) {\n    const result = [];\n    for (const target of this._targets) {\n      const model = target.model(modelClass);\n      if (model) {\n        result.push(model);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {string}\n   */\n  inspectedURL() {\n    const mainTarget = this.mainTarget();\n    return mainTarget ? mainTarget.inspectedURL() : '';\n  }\n\n  /**\n   * @param {function(new:T,!Target)} modelClass\n   * @param {!SDKModelObserver<T>} observer\n   * @template {!SDKModel} T\n   */\n  observeModels(modelClass, observer) {\n    const models = this.models(modelClass);\n    this._modelObservers.set(modelClass, observer);\n    for (const model of models) {\n      observer.modelAdded(model);\n    }\n  }\n\n  /**\n   * @param {function(new:SDKModel,!Target)} modelClass\n   * @param {!SDKModelObserver<T>} observer\n   * @template T\n   */\n  unobserveModels(modelClass, observer) {\n    this._modelObservers.delete(modelClass, observer);\n  }\n\n  /**\n   * @param {!Target} target\n   * @param {function(new:SDKModel,!Target)} modelClass\n   * @param {!SDKModel} model\n   */\n  modelAdded(target, modelClass, model) {\n    for (const observer of this._modelObservers.get(modelClass).values()) {\n      observer.modelAdded(model);\n    }\n  }\n\n  /**\n   * @param {!Target} target\n   * @param {function(new:SDKModel,!Target)} modelClass\n   * @param {!SDKModel} model\n   */\n  _modelRemoved(target, modelClass, model) {\n    for (const observer of this._modelObservers.get(modelClass).values()) {\n      observer.modelRemoved(model);\n    }\n  }\n\n  /**\n   * @param {function(new:SDKModel,!Target)} modelClass\n   * @param {symbol} eventType\n   * @param {function(!Common.EventTarget.EventTargetEvent):void} listener\n   * @param {!Object=} thisObject\n   */\n  addModelListener(modelClass, eventType, listener, thisObject) {\n    for (const model of this.models(modelClass)) {\n      model.addEventListener(eventType, listener, thisObject);\n    }\n    this._modelListeners.set(eventType, {modelClass: modelClass, thisObject: thisObject, listener: listener});\n  }\n\n  /**\n   * @param {function(new:SDKModel,!Target)} modelClass\n   * @param {symbol} eventType\n   * @param {function(!Common.EventTarget.EventTargetEvent):void} listener\n   * @param {!Object=} thisObject\n   */\n  removeModelListener(modelClass, eventType, listener, thisObject) {\n    if (!this._modelListeners.has(eventType)) {\n      return;\n    }\n\n    for (const model of this.models(modelClass)) {\n      model.removeEventListener(eventType, listener, thisObject);\n    }\n\n    for (const info of this._modelListeners.get(eventType)) {\n      if (info.modelClass === modelClass && info.listener === listener && info.thisObject === thisObject) {\n        this._modelListeners.delete(eventType, info);\n      }\n    }\n  }\n\n  /**\n   * @param {!Observer} targetObserver\n   */\n  observeTargets(targetObserver) {\n    if (this._observers.has(targetObserver)) {\n      throw new Error('Observer can only be registered once');\n    }\n    for (const target of this._targets) {\n      targetObserver.targetAdded(target);\n    }\n    this._observers.add(targetObserver);\n  }\n\n  /**\n   * @param {!Observer} targetObserver\n   */\n  unobserveTargets(targetObserver) {\n    this._observers.delete(targetObserver);\n  }\n\n  /**\n   * @param {string} id\n   * @param {string} name\n   * @param {!Type} type\n   * @param {?Target} parentTarget\n   * @param {string=} sessionId\n   * @param {boolean=} waitForDebuggerInPage\n   * @param {!ProtocolClient.InspectorBackend.Connection=} connection\n   * @return {!Target}\n   */\n  createTarget(id, name, type, parentTarget, sessionId, waitForDebuggerInPage, connection) {\n    const target =\n        new Target(this, id, name, type, parentTarget, sessionId || '', this._isSuspended, connection || null);\n    if (waitForDebuggerInPage) {\n      // @ts-ignore TODO(1063322): Find out where pageAgent() is set on Target/TargetBase.\n      target.pageAgent().waitForDebugger();\n    }\n    target.createModels(new Set(this._modelObservers.keysArray()));\n    this._targets.add(target);\n\n    // Iterate over a copy. _observers might be modified during iteration.\n    for (const observer of [...this._observers]) {\n      observer.targetAdded(target);\n    }\n\n    for (const modelClass of target.models().keys()) {\n      const model = /** @type {!SDKModel} */ (target.models().get(modelClass));\n      this.modelAdded(target, modelClass, model);\n    }\n\n    for (const key of this._modelListeners.keysArray()) {\n      for (const info of this._modelListeners.get(key)) {\n        const model = target.model(info.modelClass);\n        if (model) {\n          model.addEventListener(key, info.listener, info.thisObject);\n        }\n      }\n    }\n\n    return target;\n  }\n\n  /**\n   * @param {!Target} target\n   */\n  removeTarget(target) {\n    if (!this._targets.has(target)) {\n      return;\n    }\n\n    this._targets.delete(target);\n    for (const modelClass of target.models().keys()) {\n      const model = /** @type {!SDKModel} */ (target.models().get(modelClass));\n      this._modelRemoved(target, modelClass, model);\n    }\n\n    // Iterate over a copy. _observers might be modified during iteration.\n    for (const observer of [...this._observers]) {\n      observer.targetRemoved(target);\n    }\n\n    for (const key of this._modelListeners.keysArray()) {\n      for (const info of this._modelListeners.get(key)) {\n        const model = target.model(info.modelClass);\n        if (model) {\n          model.removeEventListener(key, info.listener, info.thisObject);\n        }\n      }\n    }\n  }\n\n  /**\n   * @return {!Array.<!Target>}\n   */\n  targets() {\n    return [...this._targets];\n  }\n\n  /**\n   * @param {string} id\n   * @return {?Target}\n   */\n  targetById(id) {\n    // TODO(dgozman): add a map id -> target.\n    return this.targets().find(target => target.id() === id) || null;\n  }\n\n  /**\n   * @return {?Target}\n   */\n  mainTarget() {\n    return this._targets.size ? this._targets.values().next().value : null;\n  }\n}\n\n/** @enum {symbol} */\nexport const Events = {\n  AvailableTargetsChanged: Symbol('AvailableTargetsChanged'),\n  InspectedURLChanged: Symbol('InspectedURLChanged'),\n  NameChanged: Symbol('NameChanged'),\n  SuspendStateChanged: Symbol('SuspendStateChanged')\n};\n\n/**\n * @interface\n */\nexport class Observer {\n  /**\n   * @param {!Target} target\n   */\n  targetAdded(target) {\n  }\n\n  /**\n   * @param {!Target} target\n   */\n  targetRemoved(target) {\n  }\n}\n\n/**\n * @interface\n * @template T\n */\nexport class SDKModelObserver {\n  /**\n   * @param {!T} model\n   */\n  modelAdded(model) {\n  }\n\n  /**\n   * @param {!T} model\n   */\n  modelRemoved(model) {\n  }\n}\n"]}