{"version":3,"file":"PerformanceMetricsModel.js","sourceRoot":"","sources":["../../../../../front_end/sdk/PerformanceMetricsModel.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AAEpD,OAAO,EAAC,UAAU,EAAE,QAAQ,EAAS,MAAM,eAAe,CAAC,CAAE,qCAAqC;AAElG,MAAM,OAAO,uBAAwB,SAAQ,QAAQ;IACnD;;OAEG;IACH,YAAY,MAAM;QAChB,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC;QAExC,MAAM,IAAI,GAAG,UAAU,CAAC;QACxB,wCAAwC;QACxC,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,CAAC;YAC1B,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC;YAC9E,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,qBAAqB,EAAE,IAAI,CAAC,cAAc,CAAC;YACrF,CAAC,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,kBAAkB,EAAE,IAAI,CAAC,eAAe,CAAC;SAClF,CAAC,CAAC;QAEH,gGAAgG;QAChG,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,MAAM;QACJ,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACvC,CAAC;IAED;;OAEG;IACH,OAAO;QACL,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;IACtC,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,cAAc;QAClB,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,EAAE,CAAC;QAC/D,MAAM,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;QAC1B,MAAM,SAAS,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;QACpC,KAAK,MAAM,MAAM,IAAI,UAAU,CAAC,OAAO,EAAE;YACvC,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,IAAI,EAAE;gBACT,IAAI,GAAG,EAAC,SAAS,EAAE,SAAS,EAAE,aAAa,EAAE,SAAS,EAAC,CAAC;gBACxD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACzC;YACD,IAAI,KAAK,CAAC;YACV,QAAQ,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBAC1C,KAAK,UAAU,CAAC,cAAc;oBAC5B,KAAK,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBAC5C,QAAQ,CAAC,eAAe,CAAC,KAAK,CAC1B,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBACtF,CAAC,CAAC;oBACN,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;oBAC9B,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;oBAC/B,MAAM;gBACR,KAAK,UAAU,CAAC,eAAe;oBAC7B,KAAK,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBAC5C,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;wBACxF,CAAC,CAAC;oBACN,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;oBAC9B,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;oBAC/B,MAAM;gBACR;oBACE,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;oBACrB,MAAM;aACT;YACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACjC;QACD,OAAO,EAAC,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAC,CAAC;IAClD,CAAC;CACF;AAED,qBAAqB;AACrB,MAAM,UAAU,GAAG;IACjB,cAAc,EAAE,MAAM,CAAC,gBAAgB,CAAC;IACxC,eAAe,EAAE,MAAM,CAAC,iBAAiB,CAAC;CAC3C,CAAC;AAEF,QAAQ,CAAC,QAAQ,CAAC,uBAAuB,EAAE,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../platform/platform.js';\n\nimport {Capability, SDKModel, Target} from './SDKModel.js';  // eslint-disable-line no-unused-vars\n\nexport class PerformanceMetricsModel extends SDKModel {\n  /**\n   * @param {!Target} target\n   */\n  constructor(target) {\n    super(target);\n    this._agent = target.performanceAgent();\n\n    const mode = MetricMode;\n    /** @type {!Map<string, !MetricMode>} */\n    this._metricModes = new Map([\n      ['TaskDuration', mode.CumulativeTime], ['ScriptDuration', mode.CumulativeTime],\n      ['LayoutDuration', mode.CumulativeTime], ['RecalcStyleDuration', mode.CumulativeTime],\n      ['LayoutCount', mode.CumulativeCount], ['RecalcStyleCount', mode.CumulativeCount]\n    ]);\n\n    /** @type {!Map<string, !{lastValue: (number|undefined), lastTimestamp: (number|undefined)}>} */\n    this._metricData = new Map();\n  }\n\n  /**\n   * @return {!Promise<!Object>}\n   */\n  enable() {\n    return this._agent.invoke_enable({});\n  }\n\n  /**\n   * @return {!Promise<!Object>}\n   */\n  disable() {\n    return this._agent.invoke_disable();\n  }\n\n  /**\n   * @return {!Promise<!{metrics: !Map<string, number>, timestamp: number}>}\n   */\n  async requestMetrics() {\n    const rawMetrics = await this._agent.invoke_getMetrics() || [];\n    const metrics = new Map();\n    const timestamp = performance.now();\n    for (const metric of rawMetrics.metrics) {\n      let data = this._metricData.get(metric.name);\n      if (!data) {\n        data = {lastValue: undefined, lastTimestamp: undefined};\n        this._metricData.set(metric.name, data);\n      }\n      let value;\n      switch (this._metricModes.get(metric.name)) {\n        case MetricMode.CumulativeTime:\n          value = (data.lastTimestamp && data.lastValue) ?\n              Platform.NumberUtilities.clamp(\n                  (metric.value - data.lastValue) * 1000 / (timestamp - data.lastTimestamp), 0, 1) :\n              0;\n          data.lastValue = metric.value;\n          data.lastTimestamp = timestamp;\n          break;\n        case MetricMode.CumulativeCount:\n          value = (data.lastTimestamp && data.lastValue) ?\n              Math.max(0, (metric.value - data.lastValue) * 1000 / (timestamp - data.lastTimestamp)) :\n              0;\n          data.lastValue = metric.value;\n          data.lastTimestamp = timestamp;\n          break;\n        default:\n          value = metric.value;\n          break;\n      }\n      metrics.set(metric.name, value);\n    }\n    return {metrics: metrics, timestamp: timestamp};\n  }\n}\n\n/** @enum {symbol} */\nconst MetricMode = {\n  CumulativeTime: Symbol('CumulativeTime'),\n  CumulativeCount: Symbol('CumulativeCount'),\n};\n\nSDKModel.register(PerformanceMetricsModel, Capability.DOM, false);\n"]}