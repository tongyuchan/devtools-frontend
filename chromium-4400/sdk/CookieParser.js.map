{"version":3,"file":"CookieParser.js","sourceRoot":"","sources":["../../../../../front_end/sdk/CookieParser.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACH,yEAAyE;AACzE,yEAAyE;AACzE,wEAAwE;AACxE,yEAAyE;AACzE,0EAA0E;AAC1E,oCAAoC;AAEpC,OAAO,EAAC,MAAM,EAAE,IAAI,EAAC,MAAM,aAAa,CAAC;AAEzC,MAAM,OAAO,YAAY;IACvB;;OAEG;IACH,YAAY,MAAM;QAChB,IAAI,MAAM,EAAE;YACV,6BAA6B;YAC7B,6EAA6E;YAC7E,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;SACxD;QAED,8BAA8B;QAC9B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEnB,+BAA+B;QAC/B,IAAI,CAAC,MAAM,CAAC;QAEZ,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;IAChC,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,WAAW,CAAC,MAAM;QACvB,OAAO,CAAC,IAAI,YAAY,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAClD,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM;QAClC,OAAO,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IAC3D,CAAC;IAED;;OAEG;IACH,OAAO;QACL,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,WAAW,CAAC,YAAY;QACtB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE;YACnC,OAAO,IAAI,CAAC;SACb;QAED,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,EAAE;YACvE,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,WAAW,EAAE;gBAChD,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;aAC1D;iBAAM,IAAI,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,UAAU,IAAI,OAAO,EAAE,CAAC,KAAK,KAAK,QAAQ,EAAE;gBAC9E,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aACnC;YACD,IAAI,CAAC,+BAA+B,EAAE,CAAC;SACxC;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,cAAc,CAAC,eAAe;QAC5B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,EAAE;YACtC,OAAO,IAAI,CAAC;SACb;QACD,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,EAAE;YACvE,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;aACjD;iBAAM;gBACL,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aACpC;YACD,IAAI,IAAI,CAAC,+BAA+B,EAAE,EAAE;gBAC1C,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;SACF;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,WAAW,CAAC,WAAW;QACrB,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;QAE1B,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;YACnC,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,oBAAoB,GAAG,qBAAqB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;QACvE,OAAO,IAAI,CAAC;IACd,CAAC;IAED,YAAY;QACV,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,oFAAoF;YACpF,IAAI,CAAC,WAAW,CAAC,OAAO,CACpB,IAAI,CAAC,oBAAoB,GAAG,qBAAqB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM;gBACtE,qBAAqB,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;SAChG;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED;;OAEG;IACH,gBAAgB;QACd,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YACvC,OAAO,IAAI,CAAC;SACb;QACD,uFAAuF;QACvF,sFAAsF;QACtF,uFAAuF;QACvF,wFAAwF;QACxF,yBAAyB;QACzB,MAAM,aAAa,GAAG,8CAA8C,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvF,IAAI,CAAC,aAAa,EAAE;YAClB,OAAO,CAAC,KAAK,CAAC,uCAAuC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;YACrE,OAAO,IAAI,CAAC;SACb;QAED,MAAM,MAAM,GAAG,IAAI,QAAQ,CACvB,aAAa,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;QAC7D,qBAAqB,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC5E,IAAI,CAAC,eAAe,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACzD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,+BAA+B;QAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO,KAAK,CAAC;SACd;QAED,MAAM,KAAK,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,eAAe,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACjD,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC;IACvC,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,QAAQ,EAAE,IAAI;QACvB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,GAAG,qBAAqB,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;SAChG;QAED,6EAA6E;QAC7E,mDAAmD;QACnD,IAAI,CAAC,WAAW,GAAG,OAAO,QAAQ,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;YAChD,IAAI,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC3F,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;CACF;AAGD,MAAM,QAAQ;IACZ;;;;OAIG;IACH,YAAY,GAAG,EAAE,KAAK,EAAE,QAAQ;QAC9B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;CACF","sourcesContent":["/*\n * Copyright (C) 2010 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n// Ideally, we would rely on platform support for parsing a cookie, since\n// this would save us from any potential inconsistency. However, exposing\n// platform cookie parsing logic would require quite a bit of additional\n// plumbing, and at least some platforms lack support for parsing Cookie,\n// which is in a format slightly different from Set-Cookie and is normally\n// only required on the server side.\n\nimport {Cookie, Type} from './Cookie.js';\n\nexport class CookieParser {\n  /**\n   * @param {string=} domain\n   */\n  constructor(domain) {\n    if (domain) {\n      // Handle domain according to\n      // https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-5.3.3\n      this._domain = domain.toLowerCase().replace(/^\\./, '');\n    }\n\n    /** @type {!Array<!Cookie>} */\n    this._cookies = [];\n\n    /** @type {string|undefined} */\n    this._input;\n\n    this._originalInputLength = 0;\n  }\n\n  /**\n   * @param {string|undefined} header\n   * @return {?Array<!Cookie>}\n   */\n  static parseCookie(header) {\n    return (new CookieParser()).parseCookie(header);\n  }\n\n  /**\n   * @param {string|undefined} header\n   * @param {string=} domain\n   * @return {?Array<!Cookie>}\n   */\n  static parseSetCookie(header, domain) {\n    return (new CookieParser(domain)).parseSetCookie(header);\n  }\n\n  /**\n   * @return {!Array<!Cookie>}\n   */\n  cookies() {\n    return this._cookies;\n  }\n\n  /**\n   * @param {string|undefined} cookieHeader\n   * @return {?Array<!Cookie>}\n   */\n  parseCookie(cookieHeader) {\n    if (!this._initialize(cookieHeader)) {\n      return null;\n    }\n\n    for (let kv = this._extractKeyValue(); kv; kv = this._extractKeyValue()) {\n      if (kv.key.charAt(0) === '$' && this._lastCookie) {\n        this._lastCookie.addAttribute(kv.key.slice(1), kv.value);\n      } else if (kv.key.toLowerCase() !== '$version' && typeof kv.value === 'string') {\n        this._addCookie(kv, Type.Request);\n      }\n      this._advanceAndCheckCookieDelimiter();\n    }\n    this._flushCookie();\n    return this._cookies;\n  }\n\n  /**\n   * @param {string|undefined} setCookieHeader\n   * @return {?Array<!Cookie>}\n   */\n  parseSetCookie(setCookieHeader) {\n    if (!this._initialize(setCookieHeader)) {\n      return null;\n    }\n    for (let kv = this._extractKeyValue(); kv; kv = this._extractKeyValue()) {\n      if (this._lastCookie) {\n        this._lastCookie.addAttribute(kv.key, kv.value);\n      } else {\n        this._addCookie(kv, Type.Response);\n      }\n      if (this._advanceAndCheckCookieDelimiter()) {\n        this._flushCookie();\n      }\n    }\n    this._flushCookie();\n    return this._cookies;\n  }\n\n  /**\n   * @param {string|undefined} headerValue\n   * @return {boolean}\n   */\n  _initialize(headerValue) {\n    this._input = headerValue;\n\n    if (typeof headerValue !== 'string') {\n      return false;\n    }\n\n    this._cookies = [];\n    this._lastCookie = null;\n    this._lastCookieLine = '';\n    this._originalInputLength = /** @type {string} */ (this._input).length;\n    return true;\n  }\n\n  _flushCookie() {\n    if (this._lastCookie) {\n      // if we have a last cookie we know that these valeus all exist, hence the typecasts\n      this._lastCookie.setSize(\n          this._originalInputLength - /** @type {string} */ (this._input).length -\n          /** @type {number} */ (this._lastCookiePosition));\n      this._lastCookie.setCookieLine(/** @type {string} */ (this._lastCookieLine).replace('\\n', ''));\n    }\n    this._lastCookie = null;\n    this._lastCookieLine = '';\n  }\n\n  /**\n   * @return {?KeyValue}\n   */\n  _extractKeyValue() {\n    if (!this._input || !this._input.length) {\n      return null;\n    }\n    // Note: RFCs offer an option for quoted values that may contain commas and semicolons.\n    // Many browsers/platforms do not support this, however (see http://webkit.org/b/16699\n    // and http://crbug.com/12361). The logic below matches latest versions of IE, Firefox,\n    // Chrome and Safari on some old platforms. The latest version of Safari supports quoted\n    // cookie values, though.\n    const keyValueMatch = /^[ \\t]*([^\\s=;]+)[ \\t]*(?:=[ \\t]*([^;\\n]*))?/.exec(this._input);\n    if (!keyValueMatch) {\n      console.error('Failed parsing cookie header before: ' + this._input);\n      return null;\n    }\n\n    const result = new KeyValue(\n        keyValueMatch[1], keyValueMatch[2] && keyValueMatch[2].trim(),\n        /** @type {number} */ (this._originalInputLength) - this._input.length);\n    this._lastCookieLine += keyValueMatch[0];\n    this._input = this._input.slice(keyValueMatch[0].length);\n    return result;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  _advanceAndCheckCookieDelimiter() {\n    if (!this._input) {\n      return false;\n    }\n\n    const match = /^\\s*[\\n;]\\s*/.exec(this._input);\n    if (!match) {\n      return false;\n    }\n    this._lastCookieLine += match[0];\n    this._input = this._input.slice(match[0].length);\n    return match[0].match('\\n') !== null;\n  }\n\n  /**\n   * @param {!KeyValue} keyValue\n   * @param {!Type} type\n   */\n  _addCookie(keyValue, type) {\n    if (this._lastCookie) {\n      this._lastCookie.setSize(keyValue.position - /** @type {number} */ (this._lastCookiePosition));\n    }\n\n    // Mozilla bug 169091: Mozilla, IE and Chrome treat single token (w/o \"=\") as\n    // specifying a value for a cookie with empty name.\n    this._lastCookie = typeof keyValue.value === 'string' ? new Cookie(keyValue.key, keyValue.value, type) :\n                                                            new Cookie('', keyValue.key, type);\n    if (this._domain) {\n      this._lastCookie.addAttribute('domain', this._domain);\n    }\n    this._lastCookiePosition = keyValue.position;\n    this._cookies.push(this._lastCookie);\n  }\n}\n\n\nclass KeyValue {\n  /**\n   * @param {string} key\n   * @param {string|undefined} value\n   * @param {number} position\n   */\n  constructor(key, value, position) {\n    this.key = key;\n    this.value = value;\n    this.position = position;\n  }\n}\n"]}