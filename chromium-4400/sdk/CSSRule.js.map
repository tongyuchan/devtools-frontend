{"version":3,"file":"CSSRule.js","sourceRoot":"","sources":["../../../../../front_end/sdk/CSSRule.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TextUtils from '../text_utils/text_utils.js';\n\nimport {CSSMedia} from './CSSMedia.js';\nimport {CSSModel, Edit} from './CSSModel.js';  // eslint-disable-line no-unused-vars\nimport {CSSStyleDeclaration, Type} from './CSSStyleDeclaration.js';\nimport {CSSStyleSheetHeader} from './CSSStyleSheetHeader.js';  // eslint-disable-line no-unused-vars\n\nexport class CSSRule {\n  /**\n   * @param {!CSSModel} cssModel\n   * @param {{style: !Protocol.CSS.CSSStyle, styleSheetId: (string|undefined), origin: !Protocol.CSS.StyleSheetOrigin}} payload\n   */\n  constructor(cssModel, payload) {\n    this._cssModel = cssModel;\n    this.styleSheetId = payload.styleSheetId;\n\n    if (this.styleSheetId) {\n      const styleSheetHeader = this._getStyleSheetHeader(this.styleSheetId);\n      this.sourceURL = styleSheetHeader.sourceURL;\n    }\n    this.origin = payload.origin;\n    this.style = new CSSStyleDeclaration(this._cssModel, this, payload.style, Type.Regular);\n  }\n\n  /**\n   * @param {!Edit} edit\n   */\n  rebase(edit) {\n    if (this.styleSheetId !== edit.styleSheetId) {\n      return;\n    }\n    this.style.rebase(edit);\n  }\n\n  /**\n   * @return {string}\n   */\n  resourceURL() {\n    if (!this.styleSheetId) {\n      return '';\n    }\n    const styleSheetHeader = this._getStyleSheetHeader(this.styleSheetId);\n    return styleSheetHeader.resourceURL();\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isUserAgent() {\n    return this.origin === Protocol.CSS.StyleSheetOrigin.UserAgent;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isInjected() {\n    return this.origin === Protocol.CSS.StyleSheetOrigin.Injected;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isViaInspector() {\n    return this.origin === Protocol.CSS.StyleSheetOrigin.Inspector;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isRegular() {\n    return this.origin === Protocol.CSS.StyleSheetOrigin.Regular;\n  }\n\n  /**\n   * @return {!CSSModel}\n   */\n  cssModel() {\n    return this._cssModel;\n  }\n\n  /**\n   * @param {string} styleSheetId\n   * @return {!CSSStyleSheetHeader}\n   */\n  _getStyleSheetHeader(styleSheetId) {\n    const styleSheetHeader = this._cssModel.styleSheetHeaderForId(styleSheetId);\n    console.assert(styleSheetHeader !== null);\n    return /** @type {!CSSStyleSheetHeader} */ (styleSheetHeader);\n  }\n}\n\n\nclass CSSValue {\n  /**\n   * @param {!Protocol.CSS.Value} payload\n   */\n  constructor(payload) {\n    this.text = payload.text;\n    if (payload.range) {\n      this.range = TextUtils.TextRange.TextRange.fromObject(payload.range);\n    }\n  }\n\n  /**\n   * @param {!Edit} edit\n   */\n  rebase(edit) {\n    if (!this.range) {\n      return;\n    }\n    this.range = this.range.rebaseAfterTextEdit(edit.oldRange, edit.newRange);\n  }\n}\n\n\nexport class CSSStyleRule extends CSSRule {\n  /**\n   * @param {!CSSModel} cssModel\n   * @param {!Protocol.CSS.CSSRule} payload\n   * @param {boolean=} wasUsed\n   */\n  constructor(cssModel, payload, wasUsed) {\n    // TODO(crbug.com/1011811): Replace with spread operator or better types once Closure is gone.\n    super(cssModel, {origin: payload.origin, style: payload.style, styleSheetId: payload.styleSheetId});\n\n    /** @type {!Array.<!CSSValue>} */\n    this.selectors;\n    this._reinitializeSelectors(payload.selectorList);\n    this.media = payload.media ? CSSMedia.parseMediaArrayPayload(cssModel, payload.media) : [];\n    this.wasUsed = wasUsed || false;\n  }\n\n  /**\n   * @param {!CSSModel} cssModel\n   * @param {string} selectorText\n   * @return {!CSSStyleRule}\n   */\n  static createDummyRule(cssModel, selectorText) {\n    const dummyPayload = {\n      selectorList: {\n        text: '',\n        selectors: [{text: selectorText, value: undefined}],\n      },\n      style: {\n        styleSheetId: '0',\n        range: new TextUtils.TextRange.TextRange(0, 0, 0, 0),\n        shorthandEntries: [],\n        cssProperties: []\n      },\n      origin: Protocol.CSS.StyleSheetOrigin.Inspector,\n    };\n    return new CSSStyleRule(cssModel, /** @type {!Protocol.CSS.CSSRule} */ (dummyPayload));\n  }\n\n\n  /**\n   * @param {!Protocol.CSS.SelectorList} selectorList\n   */\n  _reinitializeSelectors(selectorList) {\n    this.selectors = [];\n    for (let i = 0; i < selectorList.selectors.length; ++i) {\n      this.selectors.push(new CSSValue(selectorList.selectors[i]));\n    }\n  }\n\n  /**\n   * @param {string} newSelector\n   * @return {!Promise.<boolean>}\n   */\n  setSelectorText(newSelector) {\n    const styleSheetId = this.styleSheetId;\n    if (!styleSheetId) {\n      throw 'No rule stylesheet id';\n    }\n    const range = this.selectorRange();\n    if (!range) {\n      throw 'Rule selector is not editable';\n    }\n    return this._cssModel.setSelectorText(styleSheetId, range, newSelector);\n  }\n\n  /**\n   * @return {string}\n   */\n  selectorText() {\n    return this.selectors.map(selector => selector.text).join(', ');\n  }\n\n  /**\n   * @return {?TextUtils.TextRange.TextRange}\n   */\n  selectorRange() {\n    const firstRange = this.selectors[0].range;\n    const lastRange = this.selectors[this.selectors.length - 1].range;\n    if (!firstRange || !lastRange) {\n      return null;\n    }\n    return new TextUtils.TextRange.TextRange(\n        firstRange.startLine, firstRange.startColumn, lastRange.endLine, lastRange.endColumn);\n  }\n\n  /**\n   * @param {number} selectorIndex\n   * @return {number}\n   */\n  lineNumberInSource(selectorIndex) {\n    const selector = this.selectors[selectorIndex];\n    if (!selector || !selector.range || !this.styleSheetId) {\n      return 0;\n    }\n    const styleSheetHeader = this._getStyleSheetHeader(this.styleSheetId);\n    return styleSheetHeader.lineNumberInSource(selector.range.startLine);\n  }\n\n  /**\n   * @param {number} selectorIndex\n   * @return {number|undefined}\n   */\n  columnNumberInSource(selectorIndex) {\n    const selector = this.selectors[selectorIndex];\n    if (!selector || !selector.range || !this.styleSheetId) {\n      return undefined;\n    }\n    const styleSheetHeader = this._getStyleSheetHeader(this.styleSheetId);\n    return styleSheetHeader.columnNumberInSource(selector.range.startLine, selector.range.startColumn);\n  }\n\n  /**\n   * @override\n   * @param {!Edit} edit\n   */\n  rebase(edit) {\n    if (this.styleSheetId !== edit.styleSheetId) {\n      return;\n    }\n    const range = this.selectorRange();\n    if (range && range.equal(edit.oldRange)) {\n      this._reinitializeSelectors(/** @type {!Protocol.CSS.SelectorList} */ (edit.payload));\n    } else {\n      for (let i = 0; i < this.selectors.length; ++i) {\n        this.selectors[i].rebase(edit);\n      }\n    }\n    for (const media of this.media) {\n      media.rebase(edit);\n    }\n\n    super.rebase(edit);\n  }\n}\n\n\nexport class CSSKeyframesRule {\n  /**\n   * @param {!CSSModel} cssModel\n   * @param {!Protocol.CSS.CSSKeyframesRule} payload\n   */\n  constructor(cssModel, payload) {\n    this._cssModel = cssModel;\n    this._animationName = new CSSValue(payload.animationName);\n    this._keyframes = payload.keyframes.map(keyframeRule => new CSSKeyframeRule(cssModel, keyframeRule));\n  }\n\n  /**\n   * @return {!CSSValue}\n   */\n  name() {\n    return this._animationName;\n  }\n\n  /**\n   * @return {!Array.<!CSSKeyframeRule>}\n   */\n  keyframes() {\n    return this._keyframes;\n  }\n}\n\nexport class CSSKeyframeRule extends CSSRule {\n  /**\n   * @param {!CSSModel} cssModel\n   * @param {!Protocol.CSS.CSSKeyframeRule} payload\n   */\n  constructor(cssModel, payload) {\n    // TODO(crbug.com/1011811): Replace with spread operator or better types once Closure is gone.\n    super(cssModel, {origin: payload.origin, style: payload.style, styleSheetId: payload.styleSheetId});\n    /** @type {!CSSValue} */\n    this._keyText;\n    this._reinitializeKey(payload.keyText);\n  }\n\n  /**\n   * @return {!CSSValue}\n   */\n  key() {\n    return this._keyText;\n  }\n\n  /**\n   * @param {!Protocol.CSS.Value} payload\n   */\n  _reinitializeKey(payload) {\n    this._keyText = new CSSValue(payload);\n  }\n\n  /**\n   * @override\n   * @param {!Edit} edit\n   */\n  rebase(edit) {\n    if (this.styleSheetId !== edit.styleSheetId || !this._keyText.range) {\n      return;\n    }\n    if (edit.oldRange.equal(this._keyText.range)) {\n      this._reinitializeKey(/** @type {!Protocol.CSS.Value} */ (edit.payload));\n    } else {\n      this._keyText.rebase(edit);\n    }\n\n    super.rebase(edit);\n  }\n\n  /**\n   * @param {string} newKeyText\n   * @return {!Promise.<boolean>}\n   */\n  setKeyText(newKeyText) {\n    const styleSheetId = this.styleSheetId;\n    if (!styleSheetId) {\n      throw 'No rule stylesheet id';\n    }\n    const range = this._keyText.range;\n    if (!range) {\n      throw 'Keyframe key is not editable';\n    }\n    return this._cssModel.setKeyframeKey(styleSheetId, range, newKeyText);\n  }\n}\n"]}