{"version":3,"file":"CSSStyleDeclaration.js","sourceRoot":"","sources":["../../../../../front_end/sdk/CSSStyleDeclaration.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport {cssMetadata} from './CSSMetadata.js';\nimport {CSSModel, Edit} from './CSSModel.js';  // eslint-disable-line no-unused-vars\nimport {CSSProperty} from './CSSProperty.js';\nimport {CSSRule} from './CSSRule.js';  // eslint-disable-line no-unused-vars\nimport {Target} from './SDKModel.js';  // eslint-disable-line no-unused-vars\n\nexport class CSSStyleDeclaration {\n  /**\n   * @param {!CSSModel} cssModel\n   * @param {?CSSRule} parentRule\n   * @param {!Protocol.CSS.CSSStyle} payload\n   * @param {!Type} type\n   */\n  constructor(cssModel, parentRule, payload, type) {\n    this._cssModel = cssModel;\n    this.parentRule = parentRule;\n    /** @type {!Array<!CSSProperty>} */\n    this._allProperties;\n    /** @type {string|undefined} */\n    this.styleSheetId;\n    /** @type {?TextUtils.TextRange.TextRange} */\n    this.range;\n    /** @type {string|undefined} */\n    this.cssText;\n    /** @type {!Map<string, string>} */\n    this._shorthandValues;\n    /** @type {!Set<string>} */\n    this._shorthandIsImportant;\n    /** @type {!Map<string, !CSSProperty>} */\n    this._activePropertyMap;\n    /** @type {?Array<!CSSProperty>} */\n    this._leadingProperties;\n    this._reinitialize(payload);\n    this.type = type;\n  }\n\n  /**\n   * @param {!Edit} edit\n   */\n  rebase(edit) {\n    if (this.styleSheetId !== edit.styleSheetId || !this.range) {\n      return;\n    }\n    if (edit.oldRange.equal(this.range)) {\n      this._reinitialize(/** @type {!Protocol.CSS.CSSStyle} */ (edit.payload));\n    } else {\n      this.range = this.range.rebaseAfterTextEdit(edit.oldRange, edit.newRange);\n      for (let i = 0; i < this._allProperties.length; ++i) {\n        this._allProperties[i].rebase(edit);\n      }\n    }\n  }\n\n  /**\n   * @param {!Protocol.CSS.CSSStyle} payload\n   */\n  _reinitialize(payload) {\n    this.styleSheetId = payload.styleSheetId;\n    this.range = payload.range ? TextUtils.TextRange.TextRange.fromObject(payload.range) : null;\n\n    const shorthandEntries = payload.shorthandEntries;\n    this._shorthandValues = new Map();\n    this._shorthandIsImportant = new Set();\n    for (let i = 0; i < shorthandEntries.length; ++i) {\n      this._shorthandValues.set(shorthandEntries[i].name, shorthandEntries[i].value);\n      if (shorthandEntries[i].important) {\n        this._shorthandIsImportant.add(shorthandEntries[i].name);\n      }\n    }\n\n    this._allProperties = [];\n\n    if (payload.cssText && this.range) {\n      const cssText = new TextUtils.Text.Text(payload.cssText);\n      let start = {line: this.range.startLine, column: this.range.startColumn};\n      for (const cssProperty of payload.cssProperties) {\n        const range = cssProperty.range;\n        if (range) {\n          parseUnusedText.call(this, cssText, start.line, start.column, range.startLine, range.startColumn);\n          start = {line: range.endLine, column: range.endColumn};\n        }\n        this._allProperties.push(CSSProperty.parsePayload(this, this._allProperties.length, cssProperty));\n      }\n      parseUnusedText.call(this, cssText, start.line, start.column, this.range.endLine, this.range.endColumn);\n    } else {\n      for (const cssProperty of payload.cssProperties) {\n        this._allProperties.push(CSSProperty.parsePayload(this, this._allProperties.length, cssProperty));\n      }\n    }\n\n    this._generateSyntheticPropertiesIfNeeded();\n    this._computeInactiveProperties();\n\n    this._activePropertyMap = new Map();\n    for (const property of this._allProperties) {\n      if (!property.activeInStyle()) {\n        continue;\n      }\n      this._activePropertyMap.set(property.name, property);\n    }\n\n    this.cssText = payload.cssText;\n    this._leadingProperties = null;\n\n    /**\n     * @this {CSSStyleDeclaration}\n     * @param {!TextUtils.Text.Text} cssText\n     * @param {number} startLine\n     * @param {number} startColumn\n     * @param {number} endLine\n     * @param {number} endColumn\n     */\n    function parseUnusedText(cssText, startLine, startColumn, endLine, endColumn) {\n      const tr = new TextUtils.TextRange.TextRange(startLine, startColumn, endLine, endColumn);\n      if (!this.range) {\n        return;\n      }\n      const missingText = cssText.extract(tr.relativeTo(this.range.startLine, this.range.startColumn));\n\n      // Try to fit the malformed css into properties.\n      const lines = missingText.split('\\n');\n      let lineNumber = 0;\n      let inComment = false;\n      for (const line of lines) {\n        let column = 0;\n        for (const property of line.split(';')) {\n          const strippedProperty = stripComments(property, inComment);\n          const trimmedProperty = strippedProperty.text.trim();\n          inComment = strippedProperty.inComment;\n\n          if (trimmedProperty) {\n            let name;\n            let value;\n            const colonIndex = trimmedProperty.indexOf(':');\n            if (colonIndex === -1) {\n              name = trimmedProperty;\n              value = '';\n            } else {\n              name = trimmedProperty.substring(0, colonIndex).trim();\n              value = trimmedProperty.substring(colonIndex + 1).trim();\n            }\n            const range = new TextUtils.TextRange.TextRange(lineNumber, column, lineNumber, column + property.length);\n            this._allProperties.push(new CSSProperty(\n                this, this._allProperties.length, name, value, false, false, false, false, property,\n                range.relativeFrom(startLine, startColumn)));\n          }\n          column += property.length + 1;\n        }\n        lineNumber++;\n      }\n    }\n\n    /**\n     * @param {string} text\n     * @param {boolean} inComment\n     * @return {{text: string, inComment: boolean}}\n     */\n    function stripComments(text, inComment) {\n      let output = '';\n      for (let i = 0; i < text.length; i++) {\n        if (!inComment && text.substring(i, i + 2) === '/*') {\n          inComment = true;\n          i++;\n        } else if (inComment && text.substring(i, i + 2) === '*/') {\n          inComment = false;\n          i++;\n        } else if (!inComment) {\n          output += text[i];\n        }\n      }\n      return {text: output, inComment};\n    }\n  }\n\n  _generateSyntheticPropertiesIfNeeded() {\n    if (this.range) {\n      return;\n    }\n\n    if (!this._shorthandValues.size) {\n      return;\n    }\n\n    const propertiesSet = new Set();\n    for (const property of this._allProperties) {\n      propertiesSet.add(property.name);\n    }\n\n    const generatedProperties = [];\n    // For style-based properties, generate shorthands with values when possible.\n    for (const property of this._allProperties) {\n      // For style-based properties, try generating shorthands.\n      const shorthands = cssMetadata().shorthands(property.name) || [];\n      for (const shorthand of shorthands) {\n        if (propertiesSet.has(shorthand)) {\n          continue;\n        }  // There already is a shorthand this longhands falls under.\n        const shorthandValue = this._shorthandValues.get(shorthand);\n        if (!shorthandValue) {\n          continue;\n        }  // Never generate synthetic shorthands when no value is available.\n\n        // Generate synthetic shorthand we have a value for.\n        const shorthandImportance = Boolean(this._shorthandIsImportant.has(shorthand));\n        const shorthandProperty = new CSSProperty(\n            this, this.allProperties().length, shorthand, shorthandValue, shorthandImportance, false, true, false);\n        generatedProperties.push(shorthandProperty);\n        propertiesSet.add(shorthand);\n      }\n    }\n    this._allProperties = this._allProperties.concat(generatedProperties);\n  }\n\n  /**\n   * @return {!Array.<!CSSProperty>}\n   */\n  _computeLeadingProperties() {\n    /**\n     * @param {!CSSProperty} property\n     * @return {boolean}\n     */\n    function propertyHasRange(property) {\n      return Boolean(property.range);\n    }\n\n    if (this.range) {\n      return this._allProperties.filter(propertyHasRange);\n    }\n\n    const leadingProperties = [];\n    for (const property of this._allProperties) {\n      const shorthands = cssMetadata().shorthands(property.name) || [];\n      let belongToAnyShorthand = false;\n      for (const shorthand of shorthands) {\n        if (this._shorthandValues.get(shorthand)) {\n          belongToAnyShorthand = true;\n          break;\n        }\n      }\n      if (!belongToAnyShorthand) {\n        leadingProperties.push(property);\n      }\n    }\n\n    return leadingProperties;\n  }\n\n  /**\n   * @return {!Array.<!CSSProperty>}\n   */\n  leadingProperties() {\n    if (!this._leadingProperties) {\n      this._leadingProperties = this._computeLeadingProperties();\n    }\n    return this._leadingProperties;\n  }\n\n  /**\n   * @return {!Target}\n   */\n  target() {\n    return this._cssModel.target();\n  }\n\n  /**\n   * @return {!CSSModel}\n   */\n  cssModel() {\n    return this._cssModel;\n  }\n\n  _computeInactiveProperties() {\n    /** @type {!Map<string, !CSSProperty>} */\n    const activeProperties = new Map();\n    for (let i = 0; i < this._allProperties.length; ++i) {\n      const property = this._allProperties[i];\n      if (property.disabled || !property.parsedOk) {\n        property.setActive(false);\n        continue;\n      }\n      const canonicalName = cssMetadata().canonicalPropertyName(property.name);\n      const activeProperty = activeProperties.get(canonicalName);\n      if (!activeProperty) {\n        activeProperties.set(canonicalName, property);\n      } else if (!this.leadingProperties().find(prop => prop === property)) {\n        // For some -webkit- properties, the backend returns also the canonical\n        // property. e.g. if you set in the css only the property\n        // -webkit-background-clip, the backend will return\n        // -webkit-background-clip and background-clip.\n        // This behavior will invalidate -webkit-background-clip (only visually,\n        // the property will be correctly applied)\n        // So this is checking if the property is visible or not in the\n        // styles panel and if not, it will not deactivate the \"activeProperty\".\n        property.setActive(false);\n      } else if (!activeProperty.important || property.important) {\n        activeProperty.setActive(false);\n        activeProperties.set(canonicalName, property);\n      } else {\n        property.setActive(false);\n      }\n    }\n  }\n\n  /**\n   * @return {!Array<!CSSProperty>}\n   */\n  allProperties() {\n    return this._allProperties;\n  }\n\n  /**\n   * @param {string} name\n   * @return {string}\n   */\n  getPropertyValue(name) {\n    const property = this._activePropertyMap.get(name);\n    return property ? property.value : '';\n  }\n\n  /**\n   * @param {string} name\n   * @return {boolean}\n   */\n  isPropertyImplicit(name) {\n    const property = this._activePropertyMap.get(name);\n    return property ? property.implicit : false;\n  }\n\n  /**\n   * @param {string} name\n   * @return {!Array.<!CSSProperty>}\n   */\n  longhandProperties(name) {\n    const longhands = cssMetadata().longhands(name.toLowerCase());\n    const result = [];\n    for (let i = 0; longhands && i < longhands.length; ++i) {\n      const property = this._activePropertyMap.get(longhands[i]);\n      if (property) {\n        result.push(property);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @param {number} index\n   * @return {?CSSProperty}\n   */\n  propertyAt(index) {\n    return (index < this.allProperties().length) ? this.allProperties()[index] : null;\n  }\n\n  /**\n   * @return {number}\n   */\n  pastLastSourcePropertyIndex() {\n    for (let i = this.allProperties().length - 1; i >= 0; --i) {\n      if (this.allProperties()[i].range) {\n        return i + 1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * @param {number} index\n   * @return {!TextUtils.TextRange.TextRange}\n   */\n  _insertionRange(index) {\n    const property = this.propertyAt(index);\n    if (property && property.range) {\n      return property.range.collapseToStart();\n    }\n    if (!this.range) {\n      throw new Error('CSSStyleDeclaration.range is null');\n    }\n    return this.range.collapseToEnd();\n  }\n\n  /**\n   * @param {number=} index\n   * @return {!CSSProperty}\n   */\n  newBlankProperty(index) {\n    index = (typeof index === 'undefined') ? this.pastLastSourcePropertyIndex() : index;\n    const property = new CSSProperty(this, index, '', '', false, false, true, false, '', this._insertionRange(index));\n    return property;\n  }\n\n  /**\n   * @param {string} text\n   * @param {boolean} majorChange\n   * @return {!Promise.<boolean>}\n   */\n  setText(text, majorChange) {\n    if (!this.range || !this.styleSheetId) {\n      return Promise.resolve(false);\n    }\n    return this._cssModel.setStyleText(this.styleSheetId, this.range, text, majorChange);\n  }\n\n  /**\n   * @param {number} index\n   * @param {string} name\n   * @param {string} value\n   * @param {function(boolean):void=} userCallback\n   */\n  insertPropertyAt(index, name, value, userCallback) {\n    this.newBlankProperty(index).setText(name + ': ' + value + ';', false, true).then(userCallback);\n  }\n\n  /**\n   * @param {string} name\n   * @param {string} value\n   * @param {function(boolean):void=} userCallback\n   */\n  appendProperty(name, value, userCallback) {\n    this.insertPropertyAt(this.allProperties().length, name, value, userCallback);\n  }\n}\n\n/** @enum {string} */\nexport const Type = {\n  Regular: 'Regular',\n  Inline: 'Inline',\n  Attributes: 'Attributes'\n};\n"]}