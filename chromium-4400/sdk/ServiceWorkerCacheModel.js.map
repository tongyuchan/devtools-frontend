{"version":3,"file":"ServiceWorkerCacheModel.js","sourceRoot":"","sources":["../../../../../front_end/sdk/ServiceWorkerCacheModel.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,qBAAqB,CAAC;AAG9C,OAAO,EAAC,UAAU,EAAE,QAAQ,EAAS,MAAM,eAAe,CAAC,CAAE,qCAAqC;AAClG,OAAO,EAAC,MAAM,IAAI,2BAA2B,EAAE,qBAAqB,EAAC,MAAM,4BAA4B,CAAC;AAExG;;GAEG;AACH,MAAM,OAAO,uBAAwB,SAAQ,QAAQ;IACnD;;;OAGG;IACH,YAAY,MAAM;QAChB,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,MAAM,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;QAEvC,mCAAmC;QACnC,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;QAEzB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,iBAAiB,EAAE,CAAC;QAC9C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;QAC3C,IAAI,CAAC,sBAAsB,GAAG,qCAAqC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC;QAE1G,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAEvD,sBAAsB;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CACxC,2BAA2B,CAAC,mBAAmB,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;QACtF,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CACxC,2BAA2B,CAAC,qBAAqB,EAAE,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;QAE1F,KAAK,MAAM,cAAc,IAAI,IAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE,EAAE;YAC1E,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;SACjC;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAED;;OAEG;IACH,cAAc,CAAC,MAAM;QACnB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,iBAAiB;QACf,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;YACzC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC3B;QACD,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,MAAM,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE,CAAC;QACtE,KAAK,MAAM,cAAc,IAAI,eAAe,EAAE;YAC5C,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;SACtC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,WAAW,CAAC,KAAK;QACrB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,EAAC,OAAO,EAAE,KAAK,CAAC,OAAO,EAAC,CAAC,CAAC;QACrF,IAAI,QAAQ,CAAC,QAAQ,EAAE,EAAE;YACvB,OAAO,CAAC,KAAK,CAAC,gDAAgD,KAAK,CAAC,QAAQ,EAAE,KAAK,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAC1G,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO;QACnC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,EAAC,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QAC9F,IAAI,QAAQ,CAAC,QAAQ,EAAE,EAAE;YACvB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAC5D,oEAAoE,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAClH,OAAO;SACR;IACH,CAAC;IAED;;;;;;OAMG;IACH,aAAa,CAAC,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ;QAC5D,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;IACzE,CAAC;IAED;;;;OAIG;IACH,gBAAgB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ;QAC1C,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED;;OAEG;IACH,MAAM;QACJ,MAAM,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;YACzC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACpB;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,OAAO;QACL,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;YACzC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC3B;QACD,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAC3C,2BAA2B,CAAC,mBAAmB,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;YACtF,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAC3C,2BAA2B,CAAC,qBAAqB,EAAE,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;SAC3F;IACH,CAAC;IAED;;OAEG;IACH,UAAU,CAAC,cAAc;QACvB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;QACrC,IAAI,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,EAAE;YAC/C,IAAI,CAAC,aAAa,CAAC,iCAAiC,CAAC,EAAC,MAAM,EAAE,cAAc,EAAC,CAAC,CAAC;SAChF;IACH,CAAC;IAED;;OAEG;IACH,aAAa,CAAC,cAAc;QAC1B,KAAK,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE;YACtD,IAAI,KAAK,CAAC,cAAc,KAAK,cAAc,EAAE;gBAC3C,oEAAoE;gBACpE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACtD,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aACnD;SACF;QACD,IAAI,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,EAAE;YAC/C,IAAI,CAAC,aAAa,CAAC,mCAAmC,CAAC,EAAC,MAAM,EAAE,cAAc,EAAC,CAAC,CAAC;SAClF;IACH,CAAC;IAED;;;OAGG;IACH,sBAAsB,CAAC,cAAc;QACnC,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QACxE,OAAO,SAAS,KAAK,IAAI,IAAI,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IACnE,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,eAAe,CAAC,cAAc;QAClC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,EAAC,cAAc,EAAE,cAAc,EAAC,CAAC,CAAC;QACnG,IAAI,QAAQ,CAAC,QAAQ,EAAE,EAAE;YACvB,OAAO;SACR;QACD,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAED;;;OAGG;IACH,iBAAiB,CAAC,cAAc,EAAE,UAAU;QAC1C;;;WAGG;QACH,SAAS,sBAAsB,CAAC,KAAK;YACnC,IAAI,KAAK,CAAC,cAAc,KAAK,cAAc,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;gBACpF,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBACpC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;QACH,CAAC;QAED,2BAA2B;QAC3B,MAAM,iBAAiB,GAAG,IAAI,GAAG,EAAE,CAAC;QACpC,mCAAmC;QACnC,MAAM,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;QAC5B,mCAAmC;QACnC,MAAM,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;QAE5B,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;YAClC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;YAChG,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACrC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;gBACnC,SAAS;aACV;YACD,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SACxC;QACD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;QACnD,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAC1C,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED;;OAEG;IACH,oBAAoB,CAAC,KAAK;QACxB,MAAM,cAAc,GAAG,qBAAqB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;IAClC,CAAC;IAED;;OAEG;IACH,sBAAsB,CAAC,KAAK;QAC1B,MAAM,cAAc,GAAG,qBAAqB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IACrC,CAAC;IAED;;OAEG;IACH,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;IAChF,CAAC;IAED;;OAEG;IACH,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,YAAY,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;IAClF,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,eAAe,CAAC,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ;QACpE,MAAM,QAAQ,GACV,MAAM,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,EAAC,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAC,CAAC,CAAC;QAC5G,IAAI,QAAQ,CAAC,QAAQ,EAAE,EAAE;YACvB,OAAO,CAAC,KAAK,CAAC,0DAA0D,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/F,OAAO;SACR;QACD,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC;IAC5D,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,kBAAkB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ;QAClD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,EAAC,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;QACpG,IAAI,QAAQ,CAAC,QAAQ,EAAE,EAAE;YACvB,OAAO,CAAC,KAAK,CAAC,0DAA0D,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/F,OAAO;SACR;QACD,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC;IAC5D,CAAC;IAED;;;OAGG;IACH,uBAAuB,CAAC,EAAC,MAAM,EAAC;QAC9B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEjC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE;YAC5B,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1F,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;YAC7B,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,0BAA0B,CAAC,EAAC,MAAM,EAAE,SAAS,EAAC;QAC5C,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,0BAA0B,EAAE,EAAC,MAAM,EAAE,SAAS,EAAC,CAAC,CAAC;IACxF,CAAC;IAED;;;OAGG;IACH,oBAAoB,CAAC,KAAK;IAC1B,CAAC;IAED;;;OAGG;IACH,uBAAuB,CAAC,KAAK;IAC7B,CAAC;CACF;AAED,qBAAqB;AACrB,MAAM,CAAC,MAAM,MAAM,GAAG;IACpB,UAAU,EAAE,MAAM,CAAC,YAAY,CAAC;IAChC,YAAY,EAAE,MAAM,CAAC,cAAc,CAAC;IACpC,0BAA0B,EAAE,MAAM,CAAC,4BAA4B,CAAC;CACjE,CAAC;AAGF,MAAM,OAAO,KAAK;IAChB;;;;;OAKG;IACH,YAAY,KAAK,EAAE,cAAc,EAAE,SAAS,EAAE,OAAO;QACnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,KAAK;QACV,OAAO,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,CAAC;IACxC,CAAC;IAED;;;OAGG;IACH,QAAQ;QACN,OAAO,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC;IAC9C,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,qBAAqB,CAAC,GAAG,EAAE,cAAc;QAC7C,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,4BAA4B,CACvE,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,cAAc,EAAC,CAAC,CAAC;QAC9D,IAAI,QAAQ,CAAC,QAAQ,EAAE,EAAE;YACvB,OAAO,IAAI,CAAC;SACb;QACD,OAAO,QAAQ,CAAC,QAAQ,CAAC;IAC3B,CAAC;CACF;AAED,QAAQ,CAAC,QAAQ,CAAC,uBAAuB,EAAE,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\n\nimport {NameValue} from './NetworkRequest.js';               // eslint-disable-line no-unused-vars\nimport {Capability, SDKModel, Target} from './SDKModel.js';  // eslint-disable-line no-unused-vars\nimport {Events as SecurityOriginManagerEvents, SecurityOriginManager} from './SecurityOriginManager.js';\n\n/**\n * @implements {ProtocolProxyApi.StorageDispatcher}\n */\nexport class ServiceWorkerCacheModel extends SDKModel {\n  /**\n   * Invariant: This model can only be constructed on a ServiceWorker target.\n   * @param {!Target} target\n   */\n  constructor(target) {\n    super(target);\n    target.registerStorageDispatcher(this);\n\n    /** @type {!Map<string, !Cache>} */\n    this._caches = new Map();\n\n    this._cacheAgent = target.cacheStorageAgent();\n    this._storageAgent = target.storageAgent();\n    this._securityOriginManager = /** @type {!SecurityOriginManager} */ (target.model(SecurityOriginManager));\n\n    this._originsUpdated = new Set();\n    this._throttler = new Common.Throttler.Throttler(2000);\n\n    /** @type {boolean} */\n    this._enabled = false;\n  }\n\n  enable() {\n    if (this._enabled) {\n      return;\n    }\n\n    this._securityOriginManager.addEventListener(\n        SecurityOriginManagerEvents.SecurityOriginAdded, this._securityOriginAdded, this);\n    this._securityOriginManager.addEventListener(\n        SecurityOriginManagerEvents.SecurityOriginRemoved, this._securityOriginRemoved, this);\n\n    for (const securityOrigin of this._securityOriginManager.securityOrigins()) {\n      this._addOrigin(securityOrigin);\n    }\n    this._enabled = true;\n  }\n\n  /**\n   * @param {string} origin\n   */\n  clearForOrigin(origin) {\n    this._removeOrigin(origin);\n    this._addOrigin(origin);\n  }\n\n  refreshCacheNames() {\n    for (const cache of this._caches.values()) {\n      this._cacheRemoved(cache);\n    }\n    this._caches.clear();\n    const securityOrigins = this._securityOriginManager.securityOrigins();\n    for (const securityOrigin of securityOrigins) {\n      this._loadCacheNames(securityOrigin);\n    }\n  }\n\n  /**\n   * @param {!Cache} cache\n   */\n  async deleteCache(cache) {\n    const response = await this._cacheAgent.invoke_deleteCache({cacheId: cache.cacheId});\n    if (response.getError()) {\n      console.error(`ServiceWorkerCacheAgent error deleting cache ${cache.toString()}: ${response.getError()}`);\n      return;\n    }\n    this._caches.delete(cache.cacheId);\n    this._cacheRemoved(cache);\n  }\n\n  /**\n   * @param {!Cache} cache\n   * @param {string} request\n   * @return {!Promise<void>}\n   */\n  async deleteCacheEntry(cache, request) {\n    const response = await this._cacheAgent.invoke_deleteEntry({cacheId: cache.cacheId, request});\n    if (response.getError()) {\n      Common.Console.Console.instance().error(Common.UIString.UIString(\n          'ServiceWorkerCacheAgent error deleting cache entry %s in cache: %s', cache.toString(), response.getError()));\n      return;\n    }\n  }\n\n  /**\n   * @param {!Cache} cache\n   * @param {number} skipCount\n   * @param {number} pageSize\n   * @param {string} pathFilter\n   * @param {function(!Array.<!Protocol.CacheStorage.DataEntry>, number):void} callback\n   */\n  loadCacheData(cache, skipCount, pageSize, pathFilter, callback) {\n    this._requestEntries(cache, skipCount, pageSize, pathFilter, callback);\n  }\n\n  /**\n   * @param {!Cache} cache\n   * @param {string} pathFilter\n   * @param {function(!Array.<!Protocol.CacheStorage.DataEntry>, number):void} callback\n   */\n  loadAllCacheData(cache, pathFilter, callback) {\n    this._requestAllEntries(cache, pathFilter, callback);\n  }\n\n  /**\n   * @return {!Array.<!Cache>}\n   */\n  caches() {\n    const caches = new Array();\n    for (const cache of this._caches.values()) {\n      caches.push(cache);\n    }\n    return caches;\n  }\n\n  /**\n   * @override\n   */\n  dispose() {\n    for (const cache of this._caches.values()) {\n      this._cacheRemoved(cache);\n    }\n    this._caches.clear();\n    if (this._enabled) {\n      this._securityOriginManager.removeEventListener(\n          SecurityOriginManagerEvents.SecurityOriginAdded, this._securityOriginAdded, this);\n      this._securityOriginManager.removeEventListener(\n          SecurityOriginManagerEvents.SecurityOriginRemoved, this._securityOriginRemoved, this);\n    }\n  }\n\n  /**\n   * @param {string} securityOrigin\n   */\n  _addOrigin(securityOrigin) {\n    this._loadCacheNames(securityOrigin);\n    if (this._isValidSecurityOrigin(securityOrigin)) {\n      this._storageAgent.invoke_trackCacheStorageForOrigin({origin: securityOrigin});\n    }\n  }\n\n  /**\n   * @param {string} securityOrigin\n   */\n  _removeOrigin(securityOrigin) {\n    for (const [opaqueId, cache] of this._caches.entries()) {\n      if (cache.securityOrigin === securityOrigin) {\n        // TODO: Remove the closure-style casts once we are typescript-only.\n        this._caches.delete(/** @type {string} */ (opaqueId));\n        this._cacheRemoved(/** @type {!Cache} */ (cache));\n      }\n    }\n    if (this._isValidSecurityOrigin(securityOrigin)) {\n      this._storageAgent.invoke_untrackCacheStorageForOrigin({origin: securityOrigin});\n    }\n  }\n\n  /**\n   * @param {string} securityOrigin\n   * @return {boolean}\n   */\n  _isValidSecurityOrigin(securityOrigin) {\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(securityOrigin);\n    return parsedURL !== null && parsedURL.scheme.startsWith('http');\n  }\n\n  /**\n   * @param {string} securityOrigin\n   */\n  async _loadCacheNames(securityOrigin) {\n    const response = await this._cacheAgent.invoke_requestCacheNames({securityOrigin: securityOrigin});\n    if (response.getError()) {\n      return;\n    }\n    this._updateCacheNames(securityOrigin, response.caches);\n  }\n\n  /**\n   * @param {string} securityOrigin\n   * @param {!Array<!Protocol.CacheStorage.Cache>} cachesJson\n   */\n  _updateCacheNames(securityOrigin, cachesJson) {\n    /**\n     * @param {!Cache} cache\n     * @this {ServiceWorkerCacheModel}\n     */\n    function deleteAndSaveOldCaches(cache) {\n      if (cache.securityOrigin === securityOrigin && !updatingCachesIds.has(cache.cacheId)) {\n        oldCaches.set(cache.cacheId, cache);\n        this._caches.delete(cache.cacheId);\n      }\n    }\n\n    /** @type {!Set<string>} */\n    const updatingCachesIds = new Set();\n    /** @type {!Map<string, !Cache>} */\n    const newCaches = new Map();\n    /** @type {!Map<string, !Cache>} */\n    const oldCaches = new Map();\n\n    for (const cacheJson of cachesJson) {\n      const cache = new Cache(this, cacheJson.securityOrigin, cacheJson.cacheName, cacheJson.cacheId);\n      updatingCachesIds.add(cache.cacheId);\n      if (this._caches.has(cache.cacheId)) {\n        continue;\n      }\n      newCaches.set(cache.cacheId, cache);\n      this._caches.set(cache.cacheId, cache);\n    }\n    this._caches.forEach(deleteAndSaveOldCaches, this);\n    newCaches.forEach(this._cacheAdded, this);\n    oldCaches.forEach(this._cacheRemoved, this);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _securityOriginAdded(event) {\n    const securityOrigin = /** @type {string} */ (event.data);\n    this._addOrigin(securityOrigin);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _securityOriginRemoved(event) {\n    const securityOrigin = /** @type {string} */ (event.data);\n    this._removeOrigin(securityOrigin);\n  }\n\n  /**\n   * @param {!Cache} cache\n   */\n  _cacheAdded(cache) {\n    this.dispatchEventToListeners(Events.CacheAdded, {model: this, cache: cache});\n  }\n\n  /**\n   * @param {!Cache} cache\n   */\n  _cacheRemoved(cache) {\n    this.dispatchEventToListeners(Events.CacheRemoved, {model: this, cache: cache});\n  }\n\n  /**\n   * @param {!Cache} cache\n   * @param {number} skipCount\n   * @param {number} pageSize\n   * @param {string} pathFilter\n   * @param {function(!Array<!Protocol.CacheStorage.DataEntry>, number):void} callback\n   */\n  async _requestEntries(cache, skipCount, pageSize, pathFilter, callback) {\n    const response =\n        await this._cacheAgent.invoke_requestEntries({cacheId: cache.cacheId, skipCount, pageSize, pathFilter});\n    if (response.getError()) {\n      console.error('ServiceWorkerCacheAgent error while requesting entries: ', response.getError());\n      return;\n    }\n    callback(response.cacheDataEntries, response.returnCount);\n  }\n\n  /**\n   * @param {!Cache} cache\n   * @param {string} pathFilter\n   * @param {function(!Array<!Protocol.CacheStorage.DataEntry>, number):void} callback\n   */\n  async _requestAllEntries(cache, pathFilter, callback) {\n    const response = await this._cacheAgent.invoke_requestEntries({cacheId: cache.cacheId, pathFilter});\n    if (response.getError()) {\n      console.error('ServiceWorkerCacheAgent error while requesting entries: ', response.getError());\n      return;\n    }\n    callback(response.cacheDataEntries, response.returnCount);\n  }\n\n  /**\n   * @param {!Protocol.Storage.CacheStorageListUpdatedEvent} event\n   * @override\n   */\n  cacheStorageListUpdated({origin}) {\n    this._originsUpdated.add(origin);\n\n    this._throttler.schedule(() => {\n      const promises = Array.from(this._originsUpdated, origin => this._loadCacheNames(origin));\n      this._originsUpdated.clear();\n      return Promise.all(promises);\n    });\n  }\n\n  /**\n   * @param {!Protocol.Storage.CacheStorageContentUpdatedEvent} event\n   * @override\n   */\n  cacheStorageContentUpdated({origin, cacheName}) {\n    this.dispatchEventToListeners(Events.CacheStorageContentUpdated, {origin, cacheName});\n  }\n\n  /**\n   * @param {!Protocol.Storage.IndexedDBListUpdatedEvent} event\n   * @override\n   */\n  indexedDBListUpdated(event) {\n  }\n\n  /**\n   * @param {!Protocol.Storage.IndexedDBContentUpdatedEvent} event\n   * @override\n   */\n  indexedDBContentUpdated(event) {\n  }\n}\n\n/** @enum {symbol} */\nexport const Events = {\n  CacheAdded: Symbol('CacheAdded'),\n  CacheRemoved: Symbol('CacheRemoved'),\n  CacheStorageContentUpdated: Symbol('CacheStorageContentUpdated')\n};\n\n\nexport class Cache {\n  /**\n   * @param {!ServiceWorkerCacheModel} model\n   * @param {string} securityOrigin\n   * @param {string} cacheName\n   * @param {string} cacheId\n   */\n  constructor(model, securityOrigin, cacheName, cacheId) {\n    this._model = model;\n    this.securityOrigin = securityOrigin;\n    this.cacheName = cacheName;\n    this.cacheId = cacheId;\n  }\n\n  /**\n   * @param {!Cache} cache\n   * @return {boolean}\n   */\n  equals(cache) {\n    return this.cacheId === cache.cacheId;\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  toString() {\n    return this.securityOrigin + this.cacheName;\n  }\n\n  /**\n   * @param {string} url\n   * @param {!Array.<!NameValue>} requestHeaders\n   * @return {!Promise<?Protocol.CacheStorage.CachedResponse>}\n   */\n  async requestCachedResponse(url, requestHeaders) {\n    const response = await this._model._cacheAgent.invoke_requestCachedResponse(\n        {cacheId: this.cacheId, requestURL: url, requestHeaders});\n    if (response.getError()) {\n      return null;\n    }\n    return response.response;\n  }\n}\n\nSDKModel.register(ServiceWorkerCacheModel, Capability.Storage, false);\n"]}