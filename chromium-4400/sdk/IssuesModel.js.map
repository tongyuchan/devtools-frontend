{"version":3,"file":"IssuesModel.js","sourceRoot":"","sources":["../../../../../front_end/sdk/IssuesModel.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {ContentSecurityPolicyIssue} from './ContentSecurityPolicyIssue.js';\nimport {CrossOriginEmbedderPolicyIssue, isCrossOriginEmbedderPolicyIssue} from './CrossOriginEmbedderPolicyIssue.js';\nimport {HeavyAdIssue} from './HeavyAdIssue.js';\nimport {Issue} from './Issue.js';  // eslint-disable-line no-unused-vars\nimport {MixedContentIssue} from './MixedContentIssue.js';\nimport {SameSiteCookieIssue} from './SameSiteCookieIssue.js';\nimport {Capability, SDKModel, Target} from './SDKModel.js';  // eslint-disable-line no-unused-vars\nimport {SharedArrayBufferTransferIssue} from './SharedArrayBufferTransferIssue.js';\n\n\n/**\n * The `IssuesModel` is a thin dispatch that does not store issues, but only creates the representation\n * class (usually derived from `Issue`) and passes the instances on via a dispatched event.\n * We chose this approach here because the lifetime of the Model is tied to the target, but DevTools\n * wants to preserve issues for targets (e.g. iframes) that are already gone as well.\n * @implements {ProtocolProxyApi.AuditsDispatcher}\n */\nexport class IssuesModel extends SDKModel {\n  /**\n   * @param {!Target} target\n   */\n  constructor(target) {\n    super(target);\n    this._enabled = false;\n    /** @type {*} */\n    this._auditsAgent = null;\n    this.ensureEnabled();\n    this._disposed = false;\n  }\n\n  ensureEnabled() {\n    if (this._enabled) {\n      return;\n    }\n\n    this._enabled = true;\n    this.target().registerAuditsDispatcher(this);\n    this._auditsAgent = this.target().auditsAgent();\n    this._auditsAgent.invoke_enable();\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Audits.IssueAddedEvent} issueAddedEvent\n   */\n  issueAdded(issueAddedEvent) {\n    const issues = this._createIssuesFromProtocolIssue(issueAddedEvent.issue);\n    for (const issue of issues) {\n      this.addIssue(issue);\n    }\n  }\n\n  /**\n   * @param {!Issue} issue\n   */\n  addIssue(issue) {\n    this.dispatchEventToListeners(Events.IssueAdded, {issuesModel: this, issue});\n  }\n\n  /**\n   * Each issue reported by the backend can result in multiple {!Issue} instances.\n   * Handlers are simple functions hard-coded into a map.\n   * @param {!Protocol.Audits.InspectorIssue} inspectorIssue} inspectorIssue\n   * @return {!Array<!Issue>}\n   */\n  _createIssuesFromProtocolIssue(inspectorIssue) {\n    const handler = issueCodeHandlers.get(inspectorIssue.code);\n    if (handler) {\n      return handler(this, inspectorIssue.details);\n    }\n\n    console.warn(`No handler registered for issue code ${inspectorIssue.code}`);\n    return [];\n  }\n\n  /**\n   * @override\n   */\n  dispose() {\n    super.dispose();\n    this._disposed = true;\n  }\n\n  /**\n   * @returns {?Target}\n   */\n  getTargetIfNotDisposed() {\n    if (!this._disposed) {\n      return this.target();\n    }\n    return null;\n  }\n}\n\n/**\n * @param {!IssuesModel} issuesModel\n * @param {!Protocol.Audits.InspectorIssueDetails} inspectorDetails\n * @return {!Array<!Issue>}\n */\nfunction createIssuesForSameSiteCookieIssue(issuesModel, inspectorDetails) {\n  const sameSiteDetails = inspectorDetails.sameSiteCookieIssueDetails;\n  if (!sameSiteDetails) {\n    console.warn('SameSite issue without details received.');\n    return [];\n  }\n\n  return SameSiteCookieIssue.createIssuesFromSameSiteDetails(sameSiteDetails, issuesModel);\n}\n\n/**\n * @param {!IssuesModel} issuesModel\n * @param {!Protocol.Audits.InspectorIssueDetails} inspectorDetails\n * @return {!Array<!Issue>}\n */\nfunction createIssuesForMixedContentIssue(issuesModel, inspectorDetails) {\n  const mixedContentDetails = inspectorDetails.mixedContentIssueDetails;\n  if (!mixedContentDetails) {\n    console.warn('Mixed content issue without details received.');\n    return [];\n  }\n  return [new MixedContentIssue(mixedContentDetails, issuesModel)];\n}\n\n\n/**\n * @param {!IssuesModel} issuesModel\n * @param {!Protocol.Audits.InspectorIssueDetails} inspectorDetails\n * @return {!Array<!Issue>}\n */\nfunction createIssuesForContentSecurityPolicyIssue(issuesModel, inspectorDetails) {\n  const cspDetails = inspectorDetails.contentSecurityPolicyIssueDetails;\n  if (!cspDetails) {\n    console.warn('Content security policy issue without details received.');\n    return [];\n  }\n  return [new ContentSecurityPolicyIssue(cspDetails, issuesModel)];\n}\n\n\n/**\n * @param {!IssuesModel} issuesModel\n * @param {!Protocol.Audits.InspectorIssueDetails} inspectorDetails\n * @return {!Array<!Issue>}\n */\nfunction createIssuesForHeavyAdIssue(issuesModel, inspectorDetails) {\n  const heavyAdIssueDetails = inspectorDetails.heavyAdIssueDetails;\n  if (!heavyAdIssueDetails) {\n    console.warn('Heavy Ad issue without details received.');\n    return [];\n  }\n  return [new HeavyAdIssue(heavyAdIssueDetails, issuesModel)];\n}\n\n/**\n * @param {!IssuesModel} issuesModel\n * @param {!Protocol.Audits.InspectorIssueDetails} inspectorDetails\n * @return {!Array<!Issue>}\n */\nfunction createIssuesForBlockedByResponseIssue(issuesModel, inspectorDetails) {\n  const blockedByResponseIssueDetails = inspectorDetails.blockedByResponseIssueDetails;\n  if (!blockedByResponseIssueDetails) {\n    console.warn('BlockedByResponse issue without details received.');\n    return [];\n  }\n  if (isCrossOriginEmbedderPolicyIssue(blockedByResponseIssueDetails.reason)) {\n    return [new CrossOriginEmbedderPolicyIssue(blockedByResponseIssueDetails, issuesModel)];\n  }\n  return [];\n}\n\n/**\n * @param {!IssuesModel} issuesModel\n * @param {!Protocol.Audits.InspectorIssueDetails} inspectorDetails\n * @return {!Array<!Issue>}\n */\nfunction createIssuesForSharedArrayBufferTransferIssue(issuesModel, inspectorDetails) {\n  const sabIssueDetails = inspectorDetails.sharedArrayBufferTransferIssueDetails;\n  if (!sabIssueDetails) {\n    console.warn('SAB transfer issue without details received.');\n    return [];\n  }\n  return [new SharedArrayBufferTransferIssue(sabIssueDetails, issuesModel)];\n}\n\n/**\n * @type {!Map<!Protocol.Audits.InspectorIssueCode, function(!IssuesModel, !Protocol.Audits.InspectorIssueDetails):!Array<!Issue>>}\n */\nconst issueCodeHandlers = new Map([\n  [Protocol.Audits.InspectorIssueCode.SameSiteCookieIssue, createIssuesForSameSiteCookieIssue],\n  [Protocol.Audits.InspectorIssueCode.MixedContentIssue, createIssuesForMixedContentIssue],\n  [Protocol.Audits.InspectorIssueCode.HeavyAdIssue, createIssuesForHeavyAdIssue],\n  [Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue, createIssuesForContentSecurityPolicyIssue],\n  [Protocol.Audits.InspectorIssueCode.BlockedByResponseIssue, createIssuesForBlockedByResponseIssue],\n  [Protocol.Audits.InspectorIssueCode.SharedArrayBufferTransferIssue, createIssuesForSharedArrayBufferTransferIssue],\n]);\n\n/** @enum {symbol} */\nexport const Events = {\n  IssueAdded: Symbol('IssueAdded'),\n};\n\nSDKModel.register(IssuesModel, Capability.Audits, true);\n"]}