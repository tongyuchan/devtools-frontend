{"version":3,"file":"LogModel.js","sourceRoot":"","sources":["../../../../../front_end/sdk/LogModel.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AAExC,OAAO,EAAC,UAAU,EAAE,QAAQ,EAAS,MAAM,eAAe,CAAC,CAAE,qCAAqC;AAElG;;GAEG;AACH,MAAM,OAAO,QAAS,SAAQ,QAAQ;IACpC;;OAEG;IACH,YAAY,MAAM;QAChB,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,EAAE;YAC7C,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC;gBAC1C,MAAM,EAAE;oBACN,EAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAC;oBAClE,EAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,UAAU,EAAE,SAAS,EAAE,EAAE,EAAC;oBACnE,EAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,YAAY,EAAE,SAAS,EAAE,GAAG,EAAC;oBACtE,EAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,aAAa,EAAE,SAAS,EAAE,CAAC,CAAC,EAAC;oBACtE,EAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,OAAO,EAAE,SAAS,EAAE,GAAG,EAAC;oBACjE,EAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,SAAS,EAAE,EAAE,EAAC;oBACzE,EAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,SAAS,EAAE,CAAC,CAAC,EAAC;iBAC3E;aACF,CAAC,CAAC;SACJ;IACH,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,EAAC,KAAK,EAAC;QAChB,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC;IAC5E,CAAC;IAED,YAAY;QACV,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;IAChC,CAAC;CACF;AAED,qBAAqB;AACrB,MAAM,CAAC,MAAM,MAAM,GAAG;IACpB,UAAU,EAAE,MAAM,CAAC,YAAY,CAAC;CACjC,CAAC;AAEF,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../host/host.js';\n\nimport {Capability, SDKModel, Target} from './SDKModel.js';  // eslint-disable-line no-unused-vars\n\n/**\n * @implements {ProtocolProxyApi.LogDispatcher}\n */\nexport class LogModel extends SDKModel {\n  /**\n   * @param {!Target} target\n   */\n  constructor(target) {\n    super(target);\n    target.registerLogDispatcher(this);\n    this._logAgent = target.logAgent();\n    this._logAgent.invoke_enable();\n    if (!Host.InspectorFrontendHost.isUnderTest()) {\n      this._logAgent.invoke_startViolationsReport({\n        config: [\n          {name: Protocol.Log.ViolationSettingName.LongTask, threshold: 200},\n          {name: Protocol.Log.ViolationSettingName.LongLayout, threshold: 30},\n          {name: Protocol.Log.ViolationSettingName.BlockedEvent, threshold: 100},\n          {name: Protocol.Log.ViolationSettingName.BlockedParser, threshold: -1},\n          {name: Protocol.Log.ViolationSettingName.Handler, threshold: 150},\n          {name: Protocol.Log.ViolationSettingName.RecurringHandler, threshold: 50},\n          {name: Protocol.Log.ViolationSettingName.DiscouragedAPIUse, threshold: -1}\n        ]\n      });\n    }\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Log.EntryAddedEvent} event\n   */\n  entryAdded({entry}) {\n    this.dispatchEventToListeners(Events.EntryAdded, {logModel: this, entry});\n  }\n\n  requestClear() {\n    this._logAgent.invoke_clear();\n  }\n}\n\n/** @enum {symbol} */\nexport const Events = {\n  EntryAdded: Symbol('EntryAdded')\n};\n\nSDKModel.register(LogModel, Capability.Log, true);\n"]}