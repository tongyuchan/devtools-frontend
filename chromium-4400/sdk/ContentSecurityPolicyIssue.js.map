{"version":3,"file":"ContentSecurityPolicyIssue.js","sourceRoot":"","sources":["../../../../../front_end/sdk/ContentSecurityPolicyIssue.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {ls} from '../platform/platform.js';\n\nimport {Issue, IssueCategory, IssueKind, MarkdownIssueDescription} from './Issue.js';  // eslint-disable-line no-unused-vars\nimport {IssuesModel} from './IssuesModel.js';  // eslint-disable-line no-unused-vars\n\n\nexport class ContentSecurityPolicyIssue extends Issue {\n  /**\n   * @param {!Protocol.Audits.ContentSecurityPolicyIssueDetails} issueDetails\n   * @param {!IssuesModel} issuesModel\n   */\n  constructor(issueDetails, issuesModel) {\n    const issue_code = [\n      Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue, issueDetails.contentSecurityPolicyViolationType\n    ].join('::');\n    super(issue_code, issuesModel);\n    this._issueDetails = issueDetails;\n  }\n\n  /**\n   * @override\n   * @return {!IssueCategory}\n   */\n  getCategory() {\n    return IssueCategory.ContentSecurityPolicy;\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  primaryKey() {\n    return JSON.stringify(this._issueDetails, [\n      'blockedURL', 'contentSecurityPolicyViolationType', 'violatedDirective', 'isReportOnly', 'sourceCodeLocation',\n      'url', 'lineNumber', 'columnNumber', 'violatingNodeId'\n    ]);\n  }\n\n  /**\n   * @override\n   * @returns {?MarkdownIssueDescription}\n   */\n  getDescription() {\n    const description = issueDescriptions.get(this._issueDetails.contentSecurityPolicyViolationType);\n    if (description) {\n      return description;\n    }\n    return null;\n  }\n\n  /**\n   * @returns {!Protocol.Audits.ContentSecurityPolicyIssueDetails}\n   */\n  details() {\n    return this._issueDetails;\n  }\n}\n\nconst cspURLViolation = {\n  file: 'issues/descriptions/cspURLViolation.md',\n  substitutions: undefined,\n  issueKind: IssueKind.BreakingChange,\n  links: [{\n    link: 'https://developers.google.com/web/fundamentals/security/csp#source_allowlists',\n    linkTitle: ls`Content Security Policy - Source Allowlists`\n  }],\n};\n\nconst cspInlineViolation = {\n  file: 'issues/descriptions/cspInlineViolation.md',\n  substitutions: undefined,\n  issueKind: IssueKind.BreakingChange,\n  links: [{\n    link: 'https://developers.google.com/web/fundamentals/security/csp#inline_code_is_considered_harmful',\n    linkTitle: ls`Content Security Policy - Inline Code`\n  }],\n};\n\nconst cspEvalViolation = {\n  file: 'issues/descriptions/cspEvalViolation.md',\n  substitutions: undefined,\n  issueKind: IssueKind.BreakingChange,\n  links: [{\n    link: 'https://developers.google.com/web/fundamentals/security/csp#eval_too',\n    linkTitle: ls`Content Security Policy - Eval`\n  }],\n};\n\nconst cspTrustedTypesSinkViolation = {\n  file: 'issues/descriptions/cspTrustedTypesSinkViolation.md',\n  substitutions: undefined,\n  issueKind: IssueKind.BreakingChange,\n  links: [{link: 'https://web.dev/trusted-types/#fix-the-violations', linkTitle: ls`Trusted Types - Fix violations`}],\n};\n\nconst cspTrustedTypesPolicyViolation = {\n  file: 'issues/descriptions/cspTrustedTypesPolicyViolation.md',\n  substitutions: undefined,\n  issueKind: IssueKind.BreakingChange,\n  links: [{link: 'https://web.dev/trusted-types/', linkTitle: ls`Trusted Types - Policy violation`}],\n};\n\n/** @type {string} */\nexport const urlViolationCode = [\n  Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n  Protocol.Audits.ContentSecurityPolicyViolationType.KURLViolation\n].join('::');\n\n/** @type {string} */\nexport const inlineViolationCode = [\n  Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n  Protocol.Audits.ContentSecurityPolicyViolationType.KInlineViolation\n].join('::');\n\n/** @type {string} */\nexport const evalViolationCode = [\n  Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n  Protocol.Audits.ContentSecurityPolicyViolationType.KEvalViolation\n].join('::');\n\n/** @type {string} */\nexport const trustedTypesSinkViolationCode = [\n  Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n  Protocol.Audits.ContentSecurityPolicyViolationType.KTrustedTypesSinkViolation\n].join('::');\n\n/** @type {string} */\nexport const trustedTypesPolicyViolationCode = [\n  Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n  Protocol.Audits.ContentSecurityPolicyViolationType.KTrustedTypesPolicyViolation\n].join('::');\n\n// TODO(crbug.com/1082628): Add handling of other CSP violation types later as they'll need more work.\n/** @type {!Map<!Protocol.Audits.ContentSecurityPolicyViolationType, !MarkdownIssueDescription>} */\nconst issueDescriptions = new Map([\n  [Protocol.Audits.ContentSecurityPolicyViolationType.KURLViolation, cspURLViolation],\n  [Protocol.Audits.ContentSecurityPolicyViolationType.KInlineViolation, cspInlineViolation],\n  [Protocol.Audits.ContentSecurityPolicyViolationType.KEvalViolation, cspEvalViolation],\n  [Protocol.Audits.ContentSecurityPolicyViolationType.KTrustedTypesSinkViolation, cspTrustedTypesSinkViolation],\n  [Protocol.Audits.ContentSecurityPolicyViolationType.KTrustedTypesPolicyViolation, cspTrustedTypesPolicyViolation],\n]);\n"]}