{"version":3,"file":"ScreenCaptureModel.js","sourceRoot":"","sources":["../../../../../front_end/sdk/ScreenCaptureModel.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {OverlayModel} from './OverlayModel.js';\nimport {Capability, SDKModel, Target} from './SDKModel.js';  // eslint-disable-line no-unused-vars\n\n/**\n * @implements {ProtocolProxyApi.PageDispatcher}\n */\nexport class ScreenCaptureModel extends SDKModel {\n  /**\n   * @param {!Target} target\n   */\n  constructor(target) {\n    super(target);\n    this._agent = target.pageAgent();\n    /** @type {?function(!Protocol.binary, !Protocol.Page.ScreencastFrameMetadata):void} */\n    this._onScreencastFrame = null;\n    /** @type {?function(boolean):void} */\n    this._onScreencastVisibilityChanged = null;\n    target.registerPageDispatcher(this);\n  }\n\n  /**\n   * @param {!Protocol.Page.StartScreencastRequestFormat} format\n   * @param {number} quality\n   * @param {number|undefined} maxWidth\n   * @param {number|undefined} maxHeight\n   * @param {number|undefined} everyNthFrame\n   * @param {function(!Protocol.binary, !Protocol.Page.ScreencastFrameMetadata): void} onFrame\n   * @param {function(boolean): void} onVisibilityChanged\n   */\n  startScreencast(format, quality, maxWidth, maxHeight, everyNthFrame, onFrame, onVisibilityChanged) {\n    this._onScreencastFrame = onFrame;\n    this._onScreencastVisibilityChanged = onVisibilityChanged;\n    this._agent.invoke_startScreencast({format, quality, maxWidth, maxHeight, everyNthFrame});\n  }\n\n  stopScreencast() {\n    this._onScreencastFrame = null;\n    this._onScreencastVisibilityChanged = null;\n    this._agent.invoke_stopScreencast();\n  }\n\n  /**\n   * @param {!Protocol.Page.CaptureScreenshotRequestFormat} format\n   * @param {number} quality\n   * @param {!Protocol.Page.Viewport=} clip\n   * @return {!Promise<?Protocol.binary>}\n   */\n  async captureScreenshot(format, quality, clip) {\n    await OverlayModel.muteHighlight();\n    const result = await this._agent.invoke_captureScreenshot(\n        {format, quality, clip, fromSurface: true, captureBeyondViewport: true});\n    await OverlayModel.unmuteHighlight();\n    return result.data;\n  }\n\n  /**\n   * @return {!Promise<?{viewportX: number, viewportY: number, viewportScale: number, contentWidth: number, contentHeight: number}>}\n   */\n  async fetchLayoutMetrics() {\n    const response = await this._agent.invoke_getLayoutMetrics();\n    if (response.getError()) {\n      return null;\n    }\n    return {\n      viewportX: response.visualViewport.pageX,\n      viewportY: response.visualViewport.pageY,\n      viewportScale: response.visualViewport.scale,\n      contentWidth: response.contentSize.width,\n      contentHeight: response.contentSize.height\n    };\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.ScreencastFrameEvent} _\n   */\n  screencastFrame({data, metadata, sessionId}) {\n    this._agent.invoke_screencastFrameAck({sessionId});\n    if (this._onScreencastFrame) {\n      this._onScreencastFrame.call(null, data, metadata);\n    }\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.ScreencastVisibilityChangedEvent} _\n   */\n  screencastVisibilityChanged({visible}) {\n    if (this._onScreencastVisibilityChanged) {\n      this._onScreencastVisibilityChanged.call(null, visible);\n    }\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.DomContentEventFiredEvent} params\n   */\n  domContentEventFired(params) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.LoadEventFiredEvent} params\n   */\n  loadEventFired(params) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.LifecycleEventEvent} params\n   */\n  lifecycleEvent(params) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.NavigatedWithinDocumentEvent} params\n   */\n  navigatedWithinDocument(params) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.FrameAttachedEvent} params\n   */\n  frameAttached(params) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.FrameNavigatedEvent} params\n   */\n  frameNavigated(params) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.DocumentOpenedEvent} params\n   */\n  documentOpened(params) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.FrameDetachedEvent} params\n   */\n  frameDetached(params) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.FrameStartedLoadingEvent} params\n   */\n  frameStartedLoading(params) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.FrameStoppedLoadingEvent} params\n   */\n  frameStoppedLoading(params) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.FrameRequestedNavigationEvent} params\n   */\n  frameRequestedNavigation(params) {\n  }\n\n\n  /**\n   * @override\n   * @param {!Protocol.Page.FrameScheduledNavigationEvent} params\n   */\n  frameScheduledNavigation(params) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.FrameClearedScheduledNavigationEvent} params\n   */\n  frameClearedScheduledNavigation(params) {\n  }\n\n  /**\n   * @override\n   */\n  frameResized() {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.JavascriptDialogOpeningEvent} params\n   */\n  javascriptDialogOpening(params) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.JavascriptDialogClosedEvent} params\n   */\n  javascriptDialogClosed(params) {\n  }\n\n  /**\n   * @override\n   */\n  interstitialShown() {\n  }\n\n  /**\n   * @override\n   */\n  interstitialHidden() {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.WindowOpenEvent} params\n   */\n  windowOpen(params) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.FileChooserOpenedEvent} params\n   */\n  fileChooserOpened(params) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.CompilationCacheProducedEvent} params\n   */\n  compilationCacheProduced(params) {\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Page.DownloadWillBeginEvent} params\n   */\n  downloadWillBegin(params) {\n  }\n\n  /**\n   * @override\n   */\n  downloadProgress() {\n  }\n}\n\nSDKModel.register(ScreenCaptureModel, Capability.ScreenCapture, false);\n"]}