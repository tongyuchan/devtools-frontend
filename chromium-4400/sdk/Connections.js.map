{"version":3,"file":"Connections.js","sourceRoot":"","sources":["../../../../../front_end/sdk/Connections.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as ProtocolClient from '../protocol_client/protocol_client.js';\nimport * as Root from '../root/root.js';\n\nimport {TargetManager} from './SDKModel.js';\n\n/**\n * @implements {ProtocolClient.InspectorBackend.Connection}\n */\nexport class MainConnection {\n  constructor() {\n    this._onMessage = null;\n    this._onDisconnect = null;\n    this._messageBuffer = '';\n    this._messageSize = 0;\n    this._eventListeners = [\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n          Host.InspectorFrontendHostAPI.Events.DispatchMessage, this._dispatchMessage, this),\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n          Host.InspectorFrontendHostAPI.Events.DispatchMessageChunk, this._dispatchMessageChunk, this),\n    ];\n  }\n\n  /**\n   * @override\n   * @param {function((!Object|string)):void} onMessage\n   */\n  setOnMessage(onMessage) {\n    this._onMessage = onMessage;\n  }\n\n  /**\n   * @override\n   * @param {function(string):void} onDisconnect\n   */\n  setOnDisconnect(onDisconnect) {\n    this._onDisconnect = onDisconnect;\n  }\n\n  /**\n   * @override\n   * @param {string} message\n   */\n  sendRawMessage(message) {\n    if (this._onMessage) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.sendMessageToBackend(message);\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _dispatchMessage(event) {\n    if (this._onMessage) {\n      this._onMessage.call(null, /** @type {string} */ (event.data));\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _dispatchMessageChunk(event) {\n    const messageChunk = /** @type {string} */ (event.data['messageChunk']);\n    const messageSize = /** @type {number} */ (event.data['messageSize']);\n    if (messageSize) {\n      this._messageBuffer = '';\n      this._messageSize = messageSize;\n    }\n    this._messageBuffer += messageChunk;\n    if (this._messageBuffer.length === this._messageSize && this._onMessage) {\n      this._onMessage.call(null, this._messageBuffer);\n      this._messageBuffer = '';\n      this._messageSize = 0;\n    }\n  }\n\n  /**\n   * @override\n   * @return {!Promise<void>}\n   */\n  disconnect() {\n    const onDisconnect = this._onDisconnect;\n    Common.EventTarget.EventTarget.removeEventListeners(this._eventListeners);\n    this._onDisconnect = null;\n    this._onMessage = null;\n\n    if (onDisconnect) {\n      onDisconnect.call(null, 'force disconnect');\n    }\n    return Promise.resolve();\n  }\n}\n\n/**\n * @implements {ProtocolClient.InspectorBackend.Connection}\n */\nexport class WebSocketConnection {\n  /**\n   * @param {string} url\n   * @param {function():void} onWebSocketDisconnect\n   */\n  constructor(url, onWebSocketDisconnect) {\n    /** @type {?WebSocket} */\n    this._socket = new WebSocket(url);\n    this._socket.onerror = this._onError.bind(this);\n    this._socket.onopen = this._onOpen.bind(this);\n    this._socket.onmessage = messageEvent => {\n      if (this._onMessage) {\n        this._onMessage.call(null, /** @type {string} */ (messageEvent.data));\n      }\n    };\n    this._socket.onclose = this._onClose.bind(this);\n\n    this._onMessage = null;\n    this._onDisconnect = null;\n    /** @type {?function():void} */\n    this._onWebSocketDisconnect = onWebSocketDisconnect;\n    this._connected = false;\n    /** @type {!Array<string>} */\n    this._messages = [];\n  }\n\n  /**\n   * @override\n   * @param {function((!Object|string)):void} onMessage\n   */\n  setOnMessage(onMessage) {\n    this._onMessage = onMessage;\n  }\n\n  /**\n   * @override\n   * @param {function(string):void} onDisconnect\n   */\n  setOnDisconnect(onDisconnect) {\n    this._onDisconnect = onDisconnect;\n  }\n\n  _onError() {\n    if (this._onWebSocketDisconnect) {\n      this._onWebSocketDisconnect.call(null);\n    }\n    if (this._onDisconnect) {\n      // This is called if error occurred while connecting.\n      this._onDisconnect.call(null, 'connection failed');\n    }\n    this._close();\n  }\n\n  _onOpen() {\n    this._connected = true;\n    if (this._socket) {\n      this._socket.onerror = console.error;\n      for (const message of this._messages) {\n        this._socket.send(message);\n      }\n    }\n    this._messages = [];\n  }\n\n  _onClose() {\n    if (this._onWebSocketDisconnect) {\n      this._onWebSocketDisconnect.call(null);\n    }\n    if (this._onDisconnect) {\n      this._onDisconnect.call(null, 'websocket closed');\n    }\n    this._close();\n  }\n\n  /**\n   * @param {function():void=} callback\n   */\n  _close(callback) {\n    if (this._socket) {\n      this._socket.onerror = null;\n      this._socket.onopen = null;\n      this._socket.onclose = callback || null;\n      this._socket.onmessage = null;\n      this._socket.close();\n      this._socket = null;\n    }\n    this._onWebSocketDisconnect = null;\n  }\n\n  /**\n   * @override\n   * @param {string} message\n   */\n  sendRawMessage(message) {\n    if (this._connected && this._socket) {\n      this._socket.send(message);\n    } else {\n      this._messages.push(message);\n    }\n  }\n\n  /**\n   * @override\n   * @return {!Promise<void>}\n   */\n  disconnect() {\n    return new Promise(fulfill => {\n      this._close(() => {\n        if (this._onDisconnect) {\n          this._onDisconnect.call(null, 'force disconnect');\n        }\n        fulfill();\n      });\n    });\n  }\n}\n\n/**\n * @implements {ProtocolClient.InspectorBackend.Connection}\n */\nexport class StubConnection {\n  constructor() {\n    this._onMessage = null;\n    this._onDisconnect = null;\n  }\n\n  /**\n   * @override\n   * @param {function((!Object|string)):void} onMessage\n   */\n  setOnMessage(onMessage) {\n    this._onMessage = onMessage;\n  }\n\n  /**\n   * @override\n   * @param {function(string):void} onDisconnect\n   */\n  setOnDisconnect(onDisconnect) {\n    this._onDisconnect = onDisconnect;\n  }\n\n  /**\n   * @override\n   * @param {string} message\n   */\n  sendRawMessage(message) {\n    setTimeout(this._respondWithError.bind(this, message), 0);\n  }\n\n  /**\n   * @param {string} message\n   */\n  _respondWithError(message) {\n    const messageObject = JSON.parse(message);\n    const error = {\n      message: 'This is a stub connection, can\\'t dispatch message.',\n      code: ProtocolClient.InspectorBackend.DevToolsStubErrorCode,\n      data: messageObject\n    };\n    if (this._onMessage) {\n      this._onMessage.call(null, {id: messageObject.id, error: error});\n    }\n  }\n\n  /**\n   * @override\n   * @return {!Promise<void>}\n   */\n  disconnect() {\n    if (this._onDisconnect) {\n      this._onDisconnect.call(null, 'force disconnect');\n    }\n    this._onDisconnect = null;\n    this._onMessage = null;\n    return Promise.resolve();\n  }\n}\n\n/**\n * @implements {ProtocolClient.InspectorBackend.Connection}\n */\nexport class ParallelConnection {\n  /**\n   * @param {!ProtocolClient.InspectorBackend.Connection} connection\n   * @param {string} sessionId\n   */\n  constructor(connection, sessionId) {\n    this._connection = connection;\n    this._sessionId = sessionId;\n    this._onMessage = null;\n    this._onDisconnect = null;\n  }\n\n  /**\n   * @override\n   * @param {function(!Object):void} onMessage\n   */\n  setOnMessage(onMessage) {\n    this._onMessage = onMessage;\n  }\n\n  /**\n   * @override\n   * @param {function(string):void} onDisconnect\n   */\n  setOnDisconnect(onDisconnect) {\n    this._onDisconnect = onDisconnect;\n  }\n\n  /**\n   * @override\n   * @param {string} message\n   */\n  sendRawMessage(message) {\n    const messageObject = JSON.parse(message);\n    // If the message isn't for a specific session, it must be for the root session.\n    if (!messageObject.sessionId) {\n      messageObject.sessionId = this._sessionId;\n    }\n    this._connection.sendRawMessage(JSON.stringify(messageObject));\n  }\n\n  /**\n   * @override\n   * @return {!Promise<void>}\n   */\n  disconnect() {\n    if (this._onDisconnect) {\n      this._onDisconnect.call(null, 'force disconnect');\n    }\n    this._onDisconnect = null;\n    this._onMessage = null;\n    return Promise.resolve();\n  }\n}\n\n/**\n * @param {function():!Promise<void>} createMainTarget\n * @param {function():void} websocketConnectionLost\n * @return {!Promise<void>}\n */\nexport async function initMainConnection(createMainTarget, websocketConnectionLost) {\n  ProtocolClient.InspectorBackend.Connection.setFactory(_createMainConnection.bind(null, websocketConnectionLost));\n  await createMainTarget();\n  Host.InspectorFrontendHost.InspectorFrontendHostInstance.connectionReady();\n  Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n      Host.InspectorFrontendHostAPI.Events.ReattachMainTarget, () => {\n        const target = TargetManager.instance().mainTarget();\n        if (target) {\n          const router = target.router();\n          if (router) {\n            router.connection().disconnect();\n          }\n        }\n        createMainTarget();\n      });\n  return Promise.resolve();\n}\n\n/**\n * @param {function():void} websocketConnectionLost\n * @return {!ProtocolClient.InspectorBackend.Connection}\n */\nexport function _createMainConnection(websocketConnectionLost) {\n  const wsParam = Root.Runtime.Runtime.queryParam('ws');\n  const wssParam = Root.Runtime.Runtime.queryParam('wss');\n  if (wsParam || wssParam) {\n    const ws = wsParam ? `ws://${wsParam}` : `wss://${wssParam}`;\n    return new WebSocketConnection(ws, websocketConnectionLost);\n  }\n  if (Host.InspectorFrontendHost.InspectorFrontendHostInstance.isHostedMode()) {\n    return new StubConnection();\n  }\n\n  return new MainConnection();\n}\n"]}