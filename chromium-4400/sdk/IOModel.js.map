{"version":3,"file":"IOModel.js","sourceRoot":"","sources":["../../../../../front_end/sdk/IOModel.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\n\nimport {RemoteObject} from './RemoteObject.js';              // eslint-disable-line no-unused-vars\nimport {Capability, SDKModel, Target} from './SDKModel.js';  // eslint-disable-line no-unused-vars\n\nexport class IOModel extends SDKModel {\n  /**\n   * @param {!Target} target\n   */\n  constructor(target) {\n    super(target);\n  }\n\n  /**\n   * @param {!Protocol.IO.StreamHandle} handle\n   * @param {number=} size\n   * @param {number=} offset\n   * @return {!Promise<string|!ArrayBuffer|null>}\n   * @throws {!Error}\n   */\n  async read(handle, size, offset) {\n    const result = await this.target().ioAgent().invoke_read({handle, offset, size});\n    if (result.getError()) {\n      throw new Error(result.getError());\n    }\n    if (result.eof) {\n      return null;\n    }\n    if (result.base64Encoded) {\n      return Common.Base64.decode(result.data);\n    }\n    return result.data;\n  }\n\n  /**\n   * @param {!Protocol.IO.StreamHandle} handle\n   */\n  async close(handle) {\n    const result = await this.target().ioAgent().invoke_close({handle});\n    if (result.getError()) {\n      console.error('Could not close stream.');\n    }\n  }\n\n  /**\n   * @param {!Protocol.Runtime.RemoteObjectId|!RemoteObject} objectOrObjectId\n   * @returns {!Promise<!Protocol.IO.StreamHandle>}\n   * @throws {!Error}\n   */\n  async resolveBlob(objectOrObjectId) {\n    const objectId = objectOrObjectId instanceof RemoteObject ? objectOrObjectId.objectId : objectOrObjectId;\n    if (!objectId) {\n      throw new Error('Remote object has undefined objectId');\n    }\n    const result = await this.target().ioAgent().invoke_resolveBlob({objectId});\n    if (result.getError()) {\n      throw new Error(result.getError());\n    }\n    return `blob:${result.uuid}`;\n  }\n\n  /**\n   * @param {!Protocol.IO.StreamHandle} handle\n   * @throws {!Error}\n   */\n  async readToString(handle) {\n    /** @type {!Array<string>} */\n    const strings = [];\n    const decoder = new TextDecoder();\n    for (;;) {\n      const data = await this.read(handle, 1024 * 1024);\n      if (data === null) {\n        strings.push(decoder.decode());\n        break;\n      }\n      if (data instanceof ArrayBuffer) {\n        strings.push(decoder.decode(data, {stream: true}));\n      } else {\n        strings.push(data);\n      }\n    }\n    return strings.join('');\n  }\n}\n\n\nSDKModel.register(IOModel, Capability.IO, true);\n"]}