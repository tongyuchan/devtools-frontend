{"version":3,"file":"CompilerSourceMappingContentProvider.js","sourceRoot":"","sources":["../../../../../front_end/sdk/CompilerSourceMappingContentProvider.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAGH,OAAO,EAAC,EAAE,EAAC,MAAM,yBAAyB,CAAC;AAC3C,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AAEzD,OAAO,EAAC,kBAAkB,EAA4B,MAAM,yBAAyB,CAAC,CAAE,qCAAqC;AAE7H;;GAEG;AACH,MAAM,OAAO,oCAAoC;IAC/C;;;;OAIG;IACH,YAAY,SAAS,EAAE,WAAW,EAAE,SAAS;QAC3C,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAC9B,CAAC;IAED;;;OAGG;IACH,UAAU;QACR,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED;;;OAGG;IACH,WAAW;QACT,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACH,cAAc;QACZ,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,cAAc;QAClB,IAAI;YACF,MAAM,EAAC,OAAO,EAAC,GAAG,MAAM,kBAAkB,CAAC,QAAQ,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACrG,OAAO,EAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC;SACpC;QAAC,OAAO,CAAC,EAAE;YACV,MAAM,KAAK,GAAG,EAAE,CAAA,8BAA8B,IAAI,CAAC,UAAU,KAAK,CAAC,CAAC,OAAO,GAAG,CAAC;YAC/E,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,OAAO,EAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC;SACjD;IACH,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,eAAe,CAAC,KAAK,EAAE,aAAa,EAAE,OAAO;QACjD,MAAM,EAAC,OAAO,EAAC,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC9C,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;YAC/B,OAAO,EAAE,CAAC;SACX;QACD,OAAO,SAAS,CAAC,SAAS,CAAC,sBAAsB,CAAC,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAC5F,CAAC;CACF","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';  // eslint-disable-line no-unused-vars\nimport {ls} from '../platform/platform.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\n\nimport {PageResourceLoader, PageResourceLoadInitiator} from './PageResourceLoader.js';  // eslint-disable-line no-unused-vars\n\n/**\n * @implements {TextUtils.ContentProvider.ContentProvider}\n */\nexport class CompilerSourceMappingContentProvider {\n  /**\n   * @param {string} sourceURL\n   * @param {!Common.ResourceType.ResourceType} contentType\n   * @param {!PageResourceLoadInitiator} initiator\n   */\n  constructor(sourceURL, contentType, initiator) {\n    this._sourceURL = sourceURL;\n    this._contentType = contentType;\n    this._initiator = initiator;\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  contentURL() {\n    return this._sourceURL;\n  }\n\n  /**\n   * @override\n   * @return {!Common.ResourceType.ResourceType}\n   */\n  contentType() {\n    return this._contentType;\n  }\n\n  /**\n   * @override\n   * @return {!Promise<boolean>}\n   */\n  contentEncoded() {\n    return Promise.resolve(false);\n  }\n\n  /**\n   * @override\n   * @return {!Promise<!TextUtils.ContentProvider.DeferredContent>}\n   */\n  async requestContent() {\n    try {\n      const {content} = await PageResourceLoader.instance().loadResource(this._sourceURL, this._initiator);\n      return {content, isEncoded: false};\n    } catch (e) {\n      const error = ls`Could not load content for ${this._sourceURL} (${e.message})`;\n      console.error(error);\n      return {content: null, error, isEncoded: false};\n    }\n  }\n\n  /**\n   * @override\n   * @param {string} query\n   * @param {boolean} caseSensitive\n   * @param {boolean} isRegex\n   * @return {!Promise<!Array<!TextUtils.ContentProvider.SearchMatch>>}\n   */\n  async searchInContent(query, caseSensitive, isRegex) {\n    const {content} = await this.requestContent();\n    if (typeof content !== 'string') {\n      return [];\n    }\n    return TextUtils.TextUtils.performSearchInContent(content, query, caseSensitive, isRegex);\n  }\n}\n"]}