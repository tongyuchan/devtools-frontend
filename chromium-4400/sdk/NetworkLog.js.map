{"version":3,"file":"NetworkLog.js","sourceRoot":"","sources":["../../../../../front_end/sdk/NetworkLog.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport * as Platform from '../platform/platform.js';\n\nimport {ConsoleMessage, ConsoleModel, MessageLevel, MessageSource} from './ConsoleModel.js';\nimport {Events as NetworkManagerEvents, Message, NetworkManager} from './NetworkManager.js';  // eslint-disable-line no-unused-vars\nimport {Events as NetworkRequestEvents, InitiatorType, NetworkRequest} from './NetworkRequest.js';  // eslint-disable-line no-unused-vars\nimport {Events as ResourceTreeModelEvents, ResourceTreeFrame, ResourceTreeModel} from './ResourceTreeModel.js';  // eslint-disable-line no-unused-vars\nimport {RuntimeModel} from './RuntimeModel.js';\nimport {SDKModelObserver, TargetManager} from './SDKModel.js';  // eslint-disable-line no-unused-vars\n\n/** @type {!NetworkLog} */\nlet _instance;\n\n/**\n * @implements {SDKModelObserver<!NetworkManager>}\n */\nexport class NetworkLog extends Common.ObjectWrapper.ObjectWrapper {\n  constructor() {\n    super();\n    /** @type {!Array<!NetworkRequest>} */\n    this._requests = [];\n    /** @type {!Array<!Protocol.Network.Request>} */\n    this._sentNetworkRequests = [];\n    /** @type {!Array<!Protocol.Network.Response>} */\n    this._receivedNetworkResponses = [];\n    /** @type {!Set<!NetworkRequest>} */\n    this._requestsSet = new Set();\n    /** @type {!Map<string, !Array<!NetworkRequest>>} */\n    this._requestsMap = new Map();\n    /** @type {!Map<!NetworkManager, !PageLoad>} */\n    this._pageLoadForManager = new Map();\n    /** @type {boolean} */\n    this._isRecording = true;\n    /** @type {!WeakMap<!NetworkManager, !Array<!Common.EventTarget.EventDescriptor>>} */\n    this._modelListeners = new WeakMap();\n    /** @type {!WeakMap<!NetworkRequest, !InitiatorData>} */\n    this._initiatorData = new WeakMap();\n    TargetManager.instance().observeModels(NetworkManager, this);\n    /** @type {!Common.Settings.Setting<*>} */\n    const recordLogSetting = Common.Settings.Settings.instance().moduleSetting('network_log.record-log');\n    recordLogSetting.addChangeListener(() => {\n      const preserveLogSetting = Common.Settings.Settings.instance().moduleSetting('network_log.preserve-log');\n      if (!preserveLogSetting.get() && recordLogSetting.get()) {\n        this.reset();\n      }\n      this.setIsRecording(/** @type{boolean} */ (recordLogSetting.get()));\n    }, this);\n    /** @type {!Map<string, !NetworkRequest>} */\n    this._unresolvedPreflightRequests = new Map();\n  }\n\n  /**\n   * @return {!NetworkLog}\n   */\n  static instance() {\n    if (!_instance) {\n      _instance = new NetworkLog();\n    }\n    return _instance;\n  }\n\n  /**\n   * @override\n   * @param {!NetworkManager} networkManager\n   */\n  modelAdded(networkManager) {\n    const eventListeners = [];\n    eventListeners.push(\n        networkManager.addEventListener(NetworkManagerEvents.RequestStarted, this._onRequestStarted, this));\n    eventListeners.push(\n        networkManager.addEventListener(NetworkManagerEvents.RequestUpdated, this._onRequestUpdated, this));\n    eventListeners.push(\n        networkManager.addEventListener(NetworkManagerEvents.RequestRedirected, this._onRequestRedirect, this));\n    eventListeners.push(\n        networkManager.addEventListener(NetworkManagerEvents.RequestFinished, this._onRequestUpdated, this));\n    eventListeners.push(networkManager.addEventListener(\n        NetworkManagerEvents.MessageGenerated, this._networkMessageGenerated.bind(this, networkManager)));\n    eventListeners.push(\n        networkManager.addEventListener(NetworkManagerEvents.ResponseReceived, this._onResponseReceived, this));\n\n    const resourceTreeModel = networkManager.target().model(ResourceTreeModel);\n    if (resourceTreeModel) {\n      eventListeners.push(\n          resourceTreeModel.addEventListener(ResourceTreeModelEvents.WillReloadPage, this._willReloadPage, this));\n      eventListeners.push(resourceTreeModel.addEventListener(\n          ResourceTreeModelEvents.MainFrameNavigated, this._onMainFrameNavigated, this));\n      eventListeners.push(resourceTreeModel.addEventListener(ResourceTreeModelEvents.Load, this._onLoad, this));\n      eventListeners.push(resourceTreeModel.addEventListener(\n          ResourceTreeModelEvents.DOMContentLoaded, this._onDOMContentLoaded.bind(this, resourceTreeModel)));\n    }\n\n    this._modelListeners.set(networkManager, eventListeners);\n  }\n\n  /**\n   * @override\n   * @param {!NetworkManager} networkManager\n   */\n  modelRemoved(networkManager) {\n    this._removeNetworkManagerListeners(networkManager);\n  }\n\n  /**\n   * @param {!NetworkManager} networkManager\n   */\n  _removeNetworkManagerListeners(networkManager) {\n    Common.EventTarget.EventTarget.removeEventListeners(this._modelListeners.get(networkManager) || []);\n  }\n\n  /**\n   * @param {boolean} enabled\n   */\n  setIsRecording(enabled) {\n    if (this._isRecording === enabled) {\n      return;\n    }\n    this._isRecording = enabled;\n    if (enabled) {\n      TargetManager.instance().observeModels(NetworkManager, this);\n    } else {\n      TargetManager.instance().unobserveModels(NetworkManager, this);\n      TargetManager.instance().models(NetworkManager).forEach(this._removeNetworkManagerListeners.bind(this));\n    }\n  }\n\n  /**\n   * @param {string} url\n   * @return {?NetworkRequest}\n   */\n  requestForURL(url) {\n    return this._requests.find(request => request.url() === url) || null;\n  }\n\n  /**\n   * @param {string} url\n   * @return {?Protocol.Network.Request}\n   */\n  originalRequestForURL(url) {\n    return this._sentNetworkRequests.find(request => request.url === url) || null;\n  }\n\n  /**\n   * @param {string} url\n   * @return {?Protocol.Network.Response}\n   */\n  originalResponseForURL(url) {\n    return this._receivedNetworkResponses.find(response => response.url === url) || null;\n  }\n\n  /**\n   * @return {!Array<!NetworkRequest>}\n   */\n  requests() {\n    return this._requests;\n  }\n\n  /**\n   * @param {!NetworkManager} networkManager\n   * @param {!Protocol.Network.RequestId} requestId\n   * @return {?NetworkRequest}\n   */\n  requestByManagerAndId(networkManager, requestId) {\n    // We itterate backwards because the last item will likely be the one needed for console network request lookups.\n    for (let i = this._requests.length - 1; i >= 0; i--) {\n      const request = this._requests[i];\n      if (requestId === request.requestId() && networkManager === NetworkManager.forRequest(request)) {\n        return request;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {!NetworkManager} networkManager\n   * @param {string} url\n   * @return {?NetworkRequest}\n   */\n  _requestByManagerAndURL(networkManager, url) {\n    for (const request of this._requests) {\n      if (url === request.url() && networkManager === NetworkManager.forRequest(request)) {\n        return request;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {!NetworkRequest} request\n   * @return {!InitiatorData}\n   */\n  _initializeInitiatorSymbolIfNeeded(request) {\n    let initiatorInfo = this._initiatorData.get(request);\n    if (initiatorInfo) {\n      return initiatorInfo;\n    }\n    initiatorInfo = {\n      info: null,\n      chain: null,\n      request: undefined,\n    };\n    this._initiatorData.set(request, initiatorInfo);\n    return initiatorInfo;\n  }\n\n  /**\n   * @param {!NetworkRequest} request\n   * @return {!_InitiatorInfo}\n   */\n  initiatorInfoForRequest(request) {\n    const initiatorInfo = this._initializeInitiatorSymbolIfNeeded(request);\n    if (initiatorInfo.info) {\n      return initiatorInfo.info;\n    }\n\n    let type = InitiatorType.Other;\n    let url = '';\n    let lineNumber = -Infinity;\n    let columnNumber = -Infinity;\n    let scriptId = null;\n    let initiatorStack = null;\n    let initiatorRequest = null;\n    const initiator = request.initiator();\n\n    const redirectSource = request.redirectSource();\n    if (redirectSource) {\n      type = InitiatorType.Redirect;\n      url = redirectSource.url();\n    } else if (initiator) {\n      if (initiator.type === Protocol.Network.InitiatorType.Parser) {\n        type = InitiatorType.Parser;\n        url = initiator.url ? initiator.url : url;\n        lineNumber = typeof initiator.lineNumber === 'number' ? initiator.lineNumber : lineNumber;\n        columnNumber = typeof initiator.columnNumber === 'number' ? initiator.columnNumber : columnNumber;\n      } else if (initiator.type === Protocol.Network.InitiatorType.Script) {\n        for (let stack = initiator.stack; stack;) {\n          const topFrame = stack.callFrames.length ? stack.callFrames[0] : null;\n          if (!topFrame) {\n            stack = stack.parent;\n            continue;\n          }\n          type = InitiatorType.Script;\n          url = topFrame.url || Common.UIString.UIString('<anonymous>');\n          lineNumber = topFrame.lineNumber;\n          columnNumber = topFrame.columnNumber;\n          scriptId = topFrame.scriptId;\n          break;\n        }\n        if (!initiator.stack && initiator.url) {\n          type = InitiatorType.Script;\n          url = initiator.url;\n          lineNumber = initiator.lineNumber || 0;\n        }\n        if (initiator.stack && initiator.stack.callFrames && initiator.stack.callFrames.length) {\n          initiatorStack = initiator.stack || null;\n        }\n      } else if (initiator.type === Protocol.Network.InitiatorType.Preload) {\n        type = InitiatorType.Preload;\n      } else if (initiator.type === Protocol.Network.InitiatorType.Preflight) {\n        type = InitiatorType.Preflight;\n        initiatorRequest = request.preflightInitiatorRequest();\n      } else if (initiator.type === Protocol.Network.InitiatorType.SignedExchange) {\n        type = InitiatorType.SignedExchange;\n        url = initiator.url || '';\n      }\n    }\n\n    initiatorInfo.info = {type, url, lineNumber, columnNumber, scriptId, stack: initiatorStack, initiatorRequest};\n    return initiatorInfo.info;\n  }\n\n  /**\n   * @param {!NetworkRequest} request\n   * @return {!InitiatorGraph}\n   */\n  initiatorGraphForRequest(request) {\n    /** @type {!Map<!NetworkRequest, !NetworkRequest>} */\n    const initiated = new Map();\n    const networkManager = NetworkManager.forRequest(request);\n    for (const otherRequest of this._requests) {\n      const otherRequestManager = NetworkManager.forRequest(otherRequest);\n      if (networkManager === otherRequestManager && this._initiatorChain(otherRequest).has(request)) {\n        // save parent request of otherRequst in order to build the initiator chain table later\n        const initiatorRequest = this._initiatorRequest(otherRequest);\n        if (initiatorRequest) {\n          initiated.set(otherRequest, initiatorRequest);\n        }\n      }\n    }\n    return {initiators: this._initiatorChain(request), initiated: initiated};\n  }\n\n  /**\n   * @param {!NetworkRequest} request\n   * @return {!Set<!NetworkRequest>}\n   */\n  _initiatorChain(request) {\n    const initiatorDataForRequest = this._initializeInitiatorSymbolIfNeeded(request);\n    let initiatorChainCache = initiatorDataForRequest.chain;\n    if (initiatorChainCache) {\n      return initiatorChainCache;\n    }\n\n    initiatorChainCache = new Set();\n\n    /** @type {?NetworkRequest} */\n    let checkRequest = request;\n    while (checkRequest) {\n      const initiatorData = this._initializeInitiatorSymbolIfNeeded(checkRequest);\n      if (initiatorData.chain) {\n        Platform.SetUtilities.addAll(initiatorChainCache, initiatorData.chain);\n        break;\n      }\n      if (initiatorChainCache.has(checkRequest)) {\n        break;\n      }\n      initiatorChainCache.add(checkRequest);\n      checkRequest = this._initiatorRequest(checkRequest);\n    }\n    initiatorDataForRequest.chain = initiatorChainCache;\n    return initiatorChainCache;\n  }\n\n  /**\n   * @param {!NetworkRequest} request\n   * @return {?NetworkRequest}\n   */\n  _initiatorRequest(request) {\n    const initiatorData = this._initializeInitiatorSymbolIfNeeded(request);\n    if (initiatorData.request !== undefined) {\n      return initiatorData.request;\n    }\n    const url = this.initiatorInfoForRequest(request).url;\n    const networkManager = NetworkManager.forRequest(request);\n    initiatorData.request = networkManager ? this._requestByManagerAndURL(networkManager, url) : null;\n    return initiatorData.request;\n  }\n\n  _willReloadPage() {\n    if (!Common.Settings.Settings.instance().moduleSetting('network_log.preserve-log').get()) {\n      this.reset();\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onMainFrameNavigated(event) {\n    const mainFrame = /** @type {!ResourceTreeFrame} */ (event.data);\n    const manager = mainFrame.resourceTreeModel().target().model(NetworkManager);\n    if (!manager || mainFrame.resourceTreeModel().target().parentTarget()) {\n      return;\n    }\n\n    // If a page resulted in an error, the browser will navigate to an internal error page\n    // hosted at 'chrome-error://...'. In this case, skip the frame navigated event to preserve\n    // the network log.\n    if (mainFrame.url !== mainFrame.unreachableUrl() && mainFrame.url.startsWith('chrome-error://')) {\n      return;\n    }\n\n    const oldRequests = this._requests;\n    const oldManagerRequests = this._requests.filter(request => NetworkManager.forRequest(request) === manager);\n    const oldRequestsSet = this._requestsSet;\n    this._requests = [];\n    this._sentNetworkRequests = [];\n    this._receivedNetworkResponses = [];\n    this._requestsSet = new Set();\n    this._requestsMap.clear();\n    this._unresolvedPreflightRequests.clear();\n    this.dispatchEventToListeners(Events.Reset);\n\n    // Preserve requests from the new session.\n    let currentPageLoad = null;\n    const requestsToAdd = [];\n    for (const request of oldManagerRequests) {\n      if (request.loaderId !== mainFrame.loaderId) {\n        continue;\n      }\n      if (!currentPageLoad) {\n        currentPageLoad = new PageLoad(request);\n        let redirectSource = request.redirectSource();\n        while (redirectSource) {\n          requestsToAdd.push(redirectSource);\n          redirectSource = redirectSource.redirectSource();\n        }\n      }\n      requestsToAdd.push(request);\n    }\n\n    // Preserve service worker requests from the new session.\n    const serviceWorkerRequestsToAdd = [];\n    for (const swRequest of oldRequests) {\n      if (!swRequest.initiatedByServiceWorker()) {\n        continue;\n      }\n\n      // If there is a matching request that came before this one, keep it.\n      const keepRequest = requestsToAdd.some(\n          request => request.url() === swRequest.url() && request.issueTime() <= swRequest.issueTime());\n      if (keepRequest) {\n        serviceWorkerRequestsToAdd.push(swRequest);\n      }\n    }\n    requestsToAdd.push(...serviceWorkerRequestsToAdd);\n\n    for (const request of requestsToAdd) {\n      // TODO: Use optional chaining here once closure is gone.\n      if (currentPageLoad) {\n        currentPageLoad.bindRequest(request);\n      }\n      oldRequestsSet.delete(request);\n      this._addRequest(request);\n    }\n\n    if (Common.Settings.Settings.instance().moduleSetting('network_log.preserve-log').get()) {\n      for (const request of oldRequestsSet) {\n        this._addRequest(request);\n      }\n    }\n\n    if (currentPageLoad) {\n      this._pageLoadForManager.set(manager, currentPageLoad);\n    }\n  }\n\n  /**\n   * @param {!NetworkRequest} request\n   */\n  _addRequest(request) {\n    this._requests.push(request);\n    this._requestsSet.add(request);\n    const requestList = this._requestsMap.get(request.requestId());\n    if (!requestList) {\n      this._requestsMap.set(request.requestId(), [request]);\n    } else {\n      requestList.push(request);\n    }\n    this._tryResolvePreflightRequests(request);\n    this.dispatchEventToListeners(Events.RequestAdded, request);\n  }\n\n  /**\n   * @param {!NetworkRequest} request\n   */\n  _tryResolvePreflightRequests(request) {\n    if (request.isPreflightRequest()) {\n      const initiator = request.initiator();\n      if (initiator && initiator.requestId) {\n        const requests = this.requestsForId(initiator.requestId);\n        if (requests.length) {\n          request.setPreflightInitiatorRequest(requests[0]);\n        } else {\n          this._unresolvedPreflightRequests.set(initiator.requestId, request);\n        }\n      }\n    } else {\n      const preflightRequest = this._unresolvedPreflightRequests.get(request.requestId());\n      if (preflightRequest) {\n        this._unresolvedPreflightRequests.delete(request.requestId());\n        request.setPreflightRequest(preflightRequest);\n        preflightRequest.setPreflightInitiatorRequest(request);\n        // Force recomputation of initiator info, if it already exists.\n        const data = this._initiatorData.get(preflightRequest);\n        if (data) {\n          data.info = null;\n        }\n        this.dispatchEventToListeners(Events.RequestUpdated, preflightRequest);\n      }\n    }\n  }\n\n  /**\n   * @param {!Array<!NetworkRequest>} requests\n   */\n  importRequests(requests) {\n    this.reset();\n    this._requests = [];\n    this._sentNetworkRequests = [];\n    this._receivedNetworkResponses = [];\n    this._requestsSet.clear();\n    this._requestsMap.clear();\n    this._unresolvedPreflightRequests.clear();\n    for (const request of requests) {\n      this._addRequest(request);\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onRequestStarted(event) {\n    const request = /** @type {!NetworkRequest} */ (event.data.request);\n    if (event.data.originalRequest) {\n      this._sentNetworkRequests.push(event.data.originalRequest);\n    }\n    this._requestsSet.add(request);\n    const manager = NetworkManager.forRequest(request);\n    const pageLoad = manager ? this._pageLoadForManager.get(manager) : null;\n    if (pageLoad) {\n      pageLoad.bindRequest(request);\n    }\n    this._addRequest(request);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onResponseReceived(event) {\n    const response = /** @type {!Protocol.Network.Response} */ (event.data.response);\n    this._receivedNetworkResponses.push(response);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onRequestUpdated(event) {\n    const request = /** @type {!NetworkRequest} */ (event.data);\n    if (!this._requestsSet.has(request)) {\n      return;\n    }\n    this.dispatchEventToListeners(Events.RequestUpdated, request);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onRequestRedirect(event) {\n    const request = /** @type {!NetworkRequest} */ (event.data);\n    this._initiatorData.delete(request);\n  }\n\n  /**\n   * @param {!ResourceTreeModel} resourceTreeModel\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onDOMContentLoaded(resourceTreeModel, event) {\n    const networkManager = resourceTreeModel.target().model(NetworkManager);\n    const pageLoad = networkManager ? this._pageLoadForManager.get(networkManager) : null;\n    if (pageLoad) {\n      pageLoad.contentLoadTime = /** @type {number} */ (event.data);\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onLoad(event) {\n    const networkManager = event.data.resourceTreeModel.target().model(NetworkManager);\n    const pageLoad = networkManager ? this._pageLoadForManager.get(networkManager) : null;\n    if (pageLoad) {\n      pageLoad.loadTime = /** @type {number} */ (event.data.loadTime);\n    }\n  }\n\n  reset() {\n    this._requests = [];\n    this._sentNetworkRequests = [];\n    this._receivedNetworkResponses = [];\n    this._requestsSet.clear();\n    this._requestsMap.clear();\n    this._unresolvedPreflightRequests.clear();\n    const managers = new Set(TargetManager.instance().models(NetworkManager));\n    for (const manager of this._pageLoadForManager.keys()) {\n      if (!managers.has(manager)) {\n        this._pageLoadForManager.delete(manager);\n      }\n    }\n\n    this.dispatchEventToListeners(Events.Reset);\n  }\n\n  /**\n   * @param {!NetworkManager} networkManager\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _networkMessageGenerated(networkManager, event) {\n    const message = /** @type {!Message} */ (event.data);\n    const consoleMessage = new ConsoleMessage(\n        networkManager.target().model(RuntimeModel), MessageSource.Network,\n        message.warning ? MessageLevel.Warning : MessageLevel.Info, message.message);\n    this.associateConsoleMessageWithRequest(consoleMessage, message.requestId);\n    ConsoleModel.instance().addMessage(consoleMessage);\n  }\n\n  /**\n   * @param {!ConsoleMessage} consoleMessage\n   * @param {!Protocol.Network.RequestId} requestId\n   */\n  associateConsoleMessageWithRequest(consoleMessage, requestId) {\n    const target = consoleMessage.target();\n    const networkManager = target ? target.model(NetworkManager) : null;\n    if (!networkManager) {\n      return;\n    }\n    const request = this.requestByManagerAndId(networkManager, requestId);\n    if (!request) {\n      return;\n    }\n    consoleMessageToRequest.set(consoleMessage, request);\n    const initiator = request.initiator();\n    if (initiator) {\n      consoleMessage.stackTrace = initiator.stack || undefined;\n      if (initiator.url) {\n        consoleMessage.url = initiator.url;\n        consoleMessage.line = initiator.lineNumber || 0;\n      }\n    }\n  }\n\n  /**\n   * @param {!ConsoleMessage} consoleMessage\n   * @return {?NetworkRequest}\n   */\n  static requestForConsoleMessage(consoleMessage) {\n    return consoleMessageToRequest.get(consoleMessage) || null;\n  }\n\n  /**\n   * @param {string} requestId\n   * @return {!Array<!NetworkRequest>}\n   */\n  requestsForId(requestId) {\n    return this._requestsMap.get(requestId) || [];\n  }\n}\n\n/** @type {!WeakMap<!ConsoleMessage, !NetworkRequest>} */\nconst consoleMessageToRequest = new WeakMap();\n\nexport class PageLoad {\n  /**\n   * @param {!NetworkRequest} mainRequest\n   */\n  constructor(mainRequest) {\n    this.id = ++PageLoad._lastIdentifier;\n    this.url = mainRequest.url();\n    this.startTime = mainRequest.startTime;\n    /** @type {number} */\n    this.loadTime;\n    /** @type {number} */\n    this.contentLoadTime;\n    this.mainRequest = mainRequest;\n\n    this._showDataSaverWarningIfNeeded();\n  }\n\n  async _showDataSaverWarningIfNeeded() {\n    const manager = NetworkManager.forRequest(this.mainRequest);\n    if (!manager) {\n      return;\n    }\n    if (!this.mainRequest.finished) {\n      await this.mainRequest.once(NetworkRequestEvents.FinishedLoading);\n    }\n    const saveDataHeader = this.mainRequest.requestHeaderValue('Save-Data');\n    if (!PageLoad._dataSaverMessageWasShown && saveDataHeader && saveDataHeader === 'on') {\n      const message = Common.UIString.UIString(\n          'Consider disabling %s while debugging. For more info see: %s', Common.UIString.UIString('Chrome Data Saver'),\n          'https://support.google.com/chrome/?p=datasaver');\n      manager.dispatchEventToListeners(\n          NetworkManagerEvents.MessageGenerated,\n          {message: message, requestId: this.mainRequest.requestId(), warning: true});\n      PageLoad._dataSaverMessageWasShown = true;\n    }\n  }\n\n  /**\n   * @param {!NetworkRequest} request\n   * @return {?PageLoad}\n   */\n  static forRequest(request) {\n    return pageLoadForRequest.get(request) || null;\n  }\n\n  /**\n   * @param {!NetworkRequest} request\n   */\n  bindRequest(request) {\n    pageLoadForRequest.set(request, this);\n  }\n}\n\nPageLoad._lastIdentifier = 0;\n/** @type {!WeakMap<!NetworkRequest, !PageLoad>} */\nconst pageLoadForRequest = new WeakMap();\nPageLoad._dataSaverMessageWasShown = false;\n\nexport const Events = {\n  Reset: Symbol('Reset'),\n  RequestAdded: Symbol('RequestAdded'),\n  RequestUpdated: Symbol('RequestUpdated')\n};\n\n/**\n * @typedef {!{info: ?_InitiatorInfo, chain: ?Set<!NetworkRequest>, request: (?NetworkRequest|undefined)}}\n */\n// @ts-ignore typedef\nlet InitiatorData;  // eslint-disable-line no-unused-vars\n\n/** @typedef {!{initiators: !Set<!NetworkRequest>, initiated: !Map<!NetworkRequest, !NetworkRequest>}} */\n// @ts-ignore typedef\nexport let InitiatorGraph;\n\n/** @typedef {!{type: !InitiatorType, url: string, lineNumber: number, columnNumber: number, scriptId: ?string, stack: ?Protocol.Runtime.StackTrace, initiatorRequest: ?NetworkRequest}} */\n// @ts-ignore typedef\nexport let _InitiatorInfo;\n"]}