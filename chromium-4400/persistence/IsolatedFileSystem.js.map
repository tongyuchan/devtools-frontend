{"version":3,"file":"IsolatedFileSystem.js","sourceRoot":"","sources":["../../../../../front_end/persistence/IsolatedFileSystem.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';\nimport * as TextUtils from '../text_utils/text_utils.js';  // eslint-disable-line no-unused-vars\n\nimport {Events, IsolatedFileSystemManager} from './IsolatedFileSystemManager.js';  // eslint-disable-line no-unused-vars\nimport {PlatformFileSystem} from './PlatformFileSystem.js';\n\nexport const UIStrings = {\n  /**\n  *@description Text in Isolated File System of the Workspace settings in Settings\n  *@example {folder does not exist} PH1\n  */\n  fileSystemErrorS: 'File system error: {PH1}',\n  /**\n  *@description Error message when reading a remote blob\n  */\n  blobCouldNotBeLoaded: 'Blob could not be loaded.',\n  /**\n  *@description Error message when reading a file.\n  *@example {c:\\dir\\file.js} PH1\n  *@example {Underlying error} PH2\n  */\n  cantReadFileSS: 'Can\\'t read file: {PH1}: {PH2}',\n  /**\n  *@description Error message when failing to load a file\n  *@example {c:\\dir\\file.js} PH1\n  */\n  unknownErrorReadingFileS: 'Unknown error reading file: {PH1}',\n  /**\n  *@description Text to show something is linked to another\n  *@example {example.url} PH1\n  */\n  linkedToS: 'Linked to {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('persistence/IsolatedFileSystem.js', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class IsolatedFileSystem extends PlatformFileSystem {\n  /**\n   * @param {!IsolatedFileSystemManager} manager\n   * @param {string} path\n   * @param {string} embedderPath\n   * @param {!FileSystem} domFileSystem\n   * @param {string} type\n   */\n  constructor(manager, path, embedderPath, domFileSystem, type) {\n    super(path, type);\n    this._manager = manager;\n    this._embedderPath = embedderPath;\n    this._domFileSystem = domFileSystem;\n    this._excludedFoldersSetting =\n        Common.Settings.Settings.instance().createLocalSetting('workspaceExcludedFolders', {});\n    /** @type {!Set<string>} */\n    this._excludedFolders = new Set(this._excludedFoldersSetting.get()[path] || []);\n    /** @type {!Array<string>} */\n    this._excludedEmbedderFolders = [];\n\n    /** @type {!Set<string>} */\n    this._initialFilePaths = new Set();\n    /** @type {!Set<string>} */\n    this._initialGitFolders = new Set();\n    /** @type {!Map<string, !Promise<?>>} */\n    this._fileLocks = new Map();\n  }\n\n  /**\n   * @param {!IsolatedFileSystemManager} manager\n   * @param {string} path\n   * @param {string} embedderPath\n   * @param {string} type\n   * @param {string} name\n   * @param {string} rootURL\n   * @return {!Promise<?IsolatedFileSystem>}\n   */\n  static create(manager, path, embedderPath, type, name, rootURL) {\n    const domFileSystem = Host.InspectorFrontendHost.InspectorFrontendHostInstance.isolatedFileSystem(name, rootURL);\n    if (!domFileSystem) {\n      return Promise.resolve(/** @type {?IsolatedFileSystem} */ (null));\n    }\n\n    const fileSystem = new IsolatedFileSystem(manager, path, embedderPath, domFileSystem, type);\n    return fileSystem._initializeFilePaths().then(() => fileSystem).catch(error => {\n      console.error(error);\n      return null;\n    });\n  }\n\n  /**\n   * @param {*} error\n   * @return {string}\n   */\n  static errorMessage(error) {\n    return i18nString(UIStrings.fileSystemErrorS, {PH1: /** @type {*} */ (error).message});\n  }\n\n  /**\n   * @template T\n   * @param {string} path\n   * @param {function():!Promise<T>} operation\n   * @return {!Promise<T>}\n   */\n  _serializedFileOperation(path, operation) {\n    const promise = Promise.resolve(this._fileLocks.get(path)).then(() => operation.call(null));\n    this._fileLocks.set(path, promise);\n    return promise;\n  }\n\n  /**\n   * @override\n   * @param {string} path\n   * @return {!Promise<?{modificationTime: !Date, size: number}>}\n   */\n  getMetadata(path) {\n    /** @type {function(?{modificationTime: !Date, size: number}):void} */\n    let fulfill;\n    const promise = new Promise(f => {\n      fulfill = f;\n    });\n    this._domFileSystem.root.getFile(path, undefined, fileEntryLoaded, errorHandler);\n    return promise;\n\n    /**\n     * @param {!FileEntry} entry\n     */\n    function fileEntryLoaded(entry) {\n      entry.getMetadata(fulfill, errorHandler);\n    }\n\n    /**\n     * @param {!DOMError} error\n     */\n    function errorHandler(error) {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when getting file metadata \\'' + path);\n      fulfill(null);\n    }\n  }\n\n  /**\n   * @override\n   * @return {!Array<string>}\n   */\n  initialFilePaths() {\n    return [...this._initialFilePaths];\n  }\n\n  /**\n   * @override\n   * @return {!Array<string>}\n   */\n  initialGitFolders() {\n    return [...this._initialGitFolders];\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  embedderPath() {\n    return this._embedderPath;\n  }\n\n  /**\n   * @return {!Promise<void>}\n   */\n  _initializeFilePaths() {\n    return new Promise(fulfill => {\n      let pendingRequests = 1;\n      const boundInnerCallback = innerCallback.bind(this);\n      this._requestEntries('', boundInnerCallback);\n\n      /**\n       * @param {!Array.<!FileEntry>} entries\n       * @this {IsolatedFileSystem}\n       */\n      function innerCallback(entries) {\n        for (let i = 0; i < entries.length; ++i) {\n          const entry = entries[i];\n          if (!entry.isDirectory) {\n            if (this.isFileExcluded(entry.fullPath)) {\n              continue;\n            }\n            this._initialFilePaths.add(entry.fullPath.substr(1));\n          } else {\n            if (entry.fullPath.endsWith('/.git')) {\n              const lastSlash = entry.fullPath.lastIndexOf('/');\n              const parentFolder = entry.fullPath.substring(1, lastSlash);\n              this._initialGitFolders.add(parentFolder);\n            }\n            if (this.isFileExcluded(entry.fullPath + '/')) {\n              this._excludedEmbedderFolders.push(\n                  Common.ParsedURL.ParsedURL.urlToPlatformPath(this.path() + entry.fullPath, Host.Platform.isWin()));\n              continue;\n            }\n            ++pendingRequests;\n            this._requestEntries(entry.fullPath, boundInnerCallback);\n          }\n        }\n        if ((--pendingRequests === 0)) {\n          fulfill();\n        }\n      }\n    });\n  }\n\n  /**\n   * @param {string} folderPath\n   * @return {!Promise<?DirectoryEntry>}\n   */\n  async _createFoldersIfNotExist(folderPath) {\n    // Fast-path. If parent directory already exists we return it immidiatly.\n    let dirEntry = await new Promise(\n        resolve => this._domFileSystem.root.getDirectory(folderPath, undefined, resolve, () => resolve(null)));\n    if (dirEntry) {\n      return dirEntry;\n    }\n    const paths = folderPath.split('/');\n    let activePath = '';\n    for (const path of paths) {\n      activePath = activePath + '/' + path;\n      dirEntry = await this._innerCreateFolderIfNeeded(activePath);\n      if (!dirEntry) {\n        return null;\n      }\n    }\n    return dirEntry;\n  }\n\n  /**\n   * @param {string} path\n   * @return {!Promise<?DirectoryEntry>}\n   */\n  _innerCreateFolderIfNeeded(path) {\n    return new Promise(resolve => {\n      this._domFileSystem.root.getDirectory(path, {create: true}, dirEntry => resolve(dirEntry), error => {\n        const errorMessage = IsolatedFileSystem.errorMessage(error);\n        console.error(errorMessage + ' trying to create directory \\'' + path + '\\'');\n        resolve(null);\n      });\n    });\n  }\n\n  /**\n   * @override\n   * @param {string} path\n   * @param {?string} name\n   * @return {!Promise<?string>}\n   */\n  async createFile(path, name) {\n    const dirEntry = await this._createFoldersIfNotExist(path);\n    if (!dirEntry) {\n      return null;\n    }\n    const fileEntry = await this._serializedFileOperation(path, createFileCandidate.bind(this, name || 'NewFile'));\n    if (!fileEntry) {\n      return null;\n    }\n    return fileEntry.fullPath.substr(1);\n\n    /**\n     * @param {string} name\n     * @param {number=} newFileIndex\n     * @return {!Promise<?FileEntry>}\n     * @this {IsolatedFileSystem}\n     */\n    function createFileCandidate(name, newFileIndex) {\n      return new Promise(resolve => {\n        const nameCandidate = name + (newFileIndex || '');\n        /** @type {!DirectoryEntry} */ (dirEntry).getFile(\n            nameCandidate, {create: true, exclusive: true}, resolve, error => {\n              if (error.name === 'InvalidModificationError') {\n                resolve(createFileCandidate.call(this, name, (newFileIndex ? newFileIndex + 1 : 1)));\n                return;\n              }\n              const errorMessage = IsolatedFileSystem.errorMessage(error);\n              console.error(\n                  errorMessage + ' when testing if file exists \\'' + (this.path() + '/' + path + '/' + nameCandidate) +\n                  '\\'');\n              resolve(null);\n            });\n      });\n    }\n  }\n\n  /**\n   * @override\n   * @param {string} path\n   * @return {!Promise<boolean>}\n   */\n  deleteFile(path) {\n    /** @type {function(boolean):void} */\n    let resolveCallback;\n    const promise = new Promise(resolve => {\n      resolveCallback = resolve;\n    });\n    this._domFileSystem.root.getFile(path, undefined, fileEntryLoaded.bind(this), errorHandler.bind(this));\n    return promise;\n\n    /**\n     * @param {!FileEntry} fileEntry\n     * @this {IsolatedFileSystem}\n     */\n    function fileEntryLoaded(fileEntry) {\n      fileEntry.remove(fileEntryRemoved, errorHandler.bind(this));\n    }\n\n    function fileEntryRemoved() {\n      resolveCallback(true);\n    }\n\n    /**\n     * @param {!DOMError} error\n     * @this {IsolatedFileSystem}\n     * TODO(jsbell): Update externs replacing DOMError with DOMException. https://crbug.com/496901\n     */\n    function errorHandler(error) {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when deleting file \\'' + (this.path() + '/' + path) + '\\'');\n      resolveCallback(false);\n    }\n  }\n\n  /**\n   * @override\n   * @param {string} path\n   * @return {!Promise<?Blob>}\n   */\n  requestFileBlob(path) {\n    return new Promise(resolve => {\n      this._domFileSystem.root.getFile(path, undefined, entry => {\n        entry.file(resolve, errorHandler.bind(this));\n      }, errorHandler.bind(this));\n\n      /**\n       * @param {!DOMError} error\n       * @this {IsolatedFileSystem}\n       */\n      function errorHandler(error) {\n        if (error.name === 'NotFoundError') {\n          resolve(null);\n          return;\n        }\n\n        const errorMessage = IsolatedFileSystem.errorMessage(error);\n        console.error(errorMessage + ' when getting content for file \\'' + (this.path() + '/' + path) + '\\'');\n        resolve(null);\n      }\n    });\n  }\n\n  /**\n   * @override\n   * @param {string} path\n   * @returns {!Promise<!TextUtils.ContentProvider.DeferredContent>}\n   */\n  requestFileContent(path) {\n    return this._serializedFileOperation(path, () => this._innerRequestFileContent(path));\n  }\n\n  /**\n   * @param {string} path\n   * @return {!Promise<!TextUtils.ContentProvider.DeferredContent>}\n   */\n  async _innerRequestFileContent(path) {\n    const blob = await this.requestFileBlob(path);\n    if (!blob) {\n      return {content: null, error: i18nString(UIStrings.blobCouldNotBeLoaded), isEncoded: false};\n    }\n\n    const reader = new FileReader();\n    const extension = Common.ParsedURL.ParsedURL.extractExtension(path);\n    const encoded = BinaryExtensions.has(extension);\n    const readPromise = new Promise(x => {\n      reader.onloadend = x;\n    });\n    if (encoded) {\n      reader.readAsBinaryString(blob);\n    } else {\n      reader.readAsText(blob);\n    }\n    await readPromise;\n    if (reader.error) {\n      const error = i18nString(UIStrings.cantReadFileSS, {PH1: path, PH2: reader.error});\n      console.error(error);\n      return {content: null, isEncoded: false, error};\n    }\n    let result = null;\n    let error = null;\n    try {\n      result = /** @type {string} */ (reader.result);\n    } catch (e) {\n      result = null;\n      error = i18nString(UIStrings.cantReadFileSS, {PH1: path, PH2: e.message});\n    }\n    if (result === undefined || result === null) {\n      error = error || i18nString(UIStrings.unknownErrorReadingFileS, {PH1: path});\n      console.error(error);\n      return {content: null, isEncoded: false, error};\n    }\n    return {isEncoded: encoded, content: encoded ? btoa(result) : result};\n  }\n\n  /**\n   * @override\n   * @param {string} path\n   * @param {string} content\n   * @param {boolean} isBase64\n   */\n  async setFileContent(path, content, isBase64) {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.FileSavedInWorkspace);\n    /** @type {function(*):void} */\n    let callback;\n    const innerSetFileContent = () => {\n      const promise = new Promise(x => {\n        callback = x;\n      });\n      this._domFileSystem.root.getFile(path, {create: true}, fileEntryLoaded.bind(this), errorHandler.bind(this));\n      return promise;\n    };\n\n    this._serializedFileOperation(path, innerSetFileContent);\n\n    /**\n     * @param {!FileEntry} entry\n     * @this {IsolatedFileSystem}\n     */\n    function fileEntryLoaded(entry) {\n      entry.createWriter(fileWriterCreated.bind(this), errorHandler.bind(this));\n    }\n\n    /**\n     * @param {!FileWriter} fileWriter\n     * @this {IsolatedFileSystem}\n     */\n    async function fileWriterCreated(fileWriter) {\n      fileWriter.onerror = errorHandler.bind(this);\n      fileWriter.onwriteend = fileWritten;\n      /** @type {!Blob} */\n      let blob;\n      if (isBase64) {\n        blob = await (await fetch(`data:application/octet-stream;base64,${content}`)).blob();\n      } else {\n        blob = new Blob([content], {type: 'text/plain'});\n      }\n      fileWriter.write(blob);\n\n      function fileWritten() {\n        fileWriter.onwriteend = callback;\n        fileWriter.truncate(blob.size);\n      }\n    }\n\n    /**\n     * @param {*} error\n     * @this {IsolatedFileSystem}\n     */\n    function errorHandler(error) {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when setting content for file \\'' + (this.path() + '/' + path) + '\\'');\n      callback(undefined);\n    }\n  }\n\n  /**\n   * @override\n   * @param {string} path\n   * @param {string} newName\n   * @param {function(boolean, string=):void} callback\n   */\n  renameFile(path, newName, callback) {\n    newName = newName ? newName.trim() : newName;\n    if (!newName || newName.indexOf('/') !== -1) {\n      callback(false);\n      return;\n    }\n    /** @type {!FileEntry} */\n    let fileEntry;\n    /** @type {!DirectoryEntry} */\n    let dirEntry;\n\n    this._domFileSystem.root.getFile(path, undefined, fileEntryLoaded.bind(this), errorHandler.bind(this));\n\n    /**\n     * @param {!FileEntry} entry\n     * @this {IsolatedFileSystem}\n     */\n    function fileEntryLoaded(entry) {\n      if (entry.name === newName) {\n        callback(false);\n        return;\n      }\n\n      fileEntry = entry;\n      fileEntry.getParent(dirEntryLoaded.bind(this), errorHandler.bind(this));\n    }\n\n    /**\n     * @param {!Entry} entry\n     * @this {IsolatedFileSystem}\n     */\n    function dirEntryLoaded(entry) {\n      dirEntry = /** @type {!DirectoryEntry} */ (entry);\n      dirEntry.getFile(newName, undefined, newFileEntryLoaded, newFileEntryLoadErrorHandler.bind(this));\n    }\n\n    /**\n     * @param {!FileEntry} entry\n     */\n    function newFileEntryLoaded(entry) {\n      callback(false);\n    }\n\n    /**\n     * @param {!DOMError} error\n     * @this {IsolatedFileSystem}\n     */\n    function newFileEntryLoadErrorHandler(error) {\n      if (error.name !== 'NotFoundError') {\n        callback(false);\n        return;\n      }\n      fileEntry.moveTo(dirEntry, newName, fileRenamed, errorHandler.bind(this));\n    }\n\n    /**\n     * @param {!Entry} entry\n     */\n    function fileRenamed(entry) {\n      callback(true, entry.name);\n    }\n\n    /**\n     * @param {!DOMError} error\n     * @this {IsolatedFileSystem}\n     */\n    function errorHandler(error) {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when renaming file \\'' + (this.path() + '/' + path) + '\\' to \\'' + newName + '\\'');\n      callback(false);\n    }\n  }\n\n  /**\n   * @param {!DirectoryEntry} dirEntry\n   * @param {function(!Array.<!FileEntry>):void} callback\n   */\n  _readDirectory(dirEntry, callback) {\n    const dirReader = dirEntry.createReader();\n    /** @type {!Array.<!FileEntry>} */\n    let entries = [];\n\n    /**\n     * @param {!Array.<!Entry>} results\n     */\n    function innerCallback(results) {\n      if (!results.length) {\n        callback(entries.sort());\n      } else {\n        entries = entries.concat(toArray(results));\n        dirReader.readEntries(innerCallback, errorHandler);\n      }\n    }\n\n    /**\n     * @param {!Array.<!Entry>} list\n     */\n    function toArray(list) {\n      return Array.prototype.slice.call(list || [], 0);\n    }\n\n    dirReader.readEntries(innerCallback, errorHandler);\n\n    /**\n     * @param {!DOMError} error\n     */\n    function errorHandler(error) {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when reading directory \\'' + dirEntry.fullPath + '\\'');\n      callback([]);\n    }\n  }\n\n  /**\n   * @param {string} path\n   * @param {function(!Array.<!FileEntry>):void} callback\n   */\n  _requestEntries(path, callback) {\n    this._domFileSystem.root.getDirectory(path, undefined, innerCallback.bind(this), errorHandler);\n\n    /**\n     * @param {!DirectoryEntry} dirEntry\n     * @this {IsolatedFileSystem}\n     */\n    function innerCallback(dirEntry) {\n      this._readDirectory(dirEntry, callback);\n    }\n\n    /**\n     * @param {!DOMError} error\n     */\n    function errorHandler(error) {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when requesting entry \\'' + path + '\\'');\n      callback([]);\n    }\n  }\n\n  _saveExcludedFolders() {\n    const settingValue = this._excludedFoldersSetting.get();\n    settingValue[this.path()] = [...this._excludedFolders];\n    this._excludedFoldersSetting.set(settingValue);\n  }\n\n  /**\n   * @override\n   * @param {string} path\n   */\n  addExcludedFolder(path) {\n    this._excludedFolders.add(path);\n    this._saveExcludedFolders();\n    this._manager.dispatchEventToListeners(Events.ExcludedFolderAdded, path);\n  }\n\n  /**\n   * @override\n   * @param {string} path\n   */\n  removeExcludedFolder(path) {\n    this._excludedFolders.delete(path);\n    this._saveExcludedFolders();\n    this._manager.dispatchEventToListeners(Events.ExcludedFolderRemoved, path);\n  }\n\n  /**\n   * @override\n   */\n  fileSystemRemoved() {\n    const settingValue = this._excludedFoldersSetting.get();\n    delete settingValue[this.path()];\n    this._excludedFoldersSetting.set(settingValue);\n  }\n\n  /**\n   * @override\n   * @param {string} folderPath\n   * @return {boolean}\n   */\n  isFileExcluded(folderPath) {\n    if (this._excludedFolders.has(folderPath)) {\n      return true;\n    }\n    const regex =\n        /** @type {!Common.Settings.RegExpSetting} */ (this._manager.workspaceFolderExcludePatternSetting()).asRegExp();\n    return Boolean(regex && regex.test(folderPath));\n  }\n\n  /**\n   * @override\n   * @return {!Set<string>}\n   */\n  excludedFolders() {\n    return this._excludedFolders;\n  }\n\n  /**\n   * @override\n   * @param {string} query\n   * @param {!Common.Progress.Progress} progress\n   * @return {!Promise<!Array<string>>}\n   */\n  searchInPath(query, progress) {\n    return new Promise(resolve => {\n      const requestId = this._manager.registerCallback(innerCallback);\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.searchInPath(requestId, this._embedderPath, query);\n\n      /**\n       * @param {!Array<string>} files\n       */\n      function innerCallback(files) {\n        resolve(files.map(path => Common.ParsedURL.ParsedURL.platformPathToURL(path)));\n        progress.worked(1);\n      }\n    });\n  }\n\n  /**\n   * @override\n   * @param {!Common.Progress.Progress} progress\n   */\n  indexContent(progress) {\n    progress.setTotalWork(1);\n    const requestId = this._manager.registerProgress(progress);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.indexPath(\n        requestId, this._embedderPath, JSON.stringify(this._excludedEmbedderFolders));\n  }\n\n  /**\n   * @override\n   * @param {string} path\n   * @return {string}\n   */\n  mimeFromPath(path) {\n    return Common.ResourceType.ResourceType.mimeFromURL(path) || 'text/plain';\n  }\n\n  /**\n   * @override\n   * @param {string} path\n   * @return {boolean}\n   */\n  canExcludeFolder(path) {\n    return Boolean(path) && this.type() !== 'overrides';\n  }\n\n  /**\n   * @override\n   * @param {string} path\n   * @return {!Common.ResourceType.ResourceType}\n   */\n  contentType(path) {\n    const extension = Common.ParsedURL.ParsedURL.extractExtension(path);\n    if (_styleSheetExtensions.has(extension)) {\n      return Common.ResourceType.resourceTypes.Stylesheet;\n    }\n    if (_documentExtensions.has(extension)) {\n      return Common.ResourceType.resourceTypes.Document;\n    }\n    if (ImageExtensions.has(extension)) {\n      return Common.ResourceType.resourceTypes.Image;\n    }\n    if (_scriptExtensions.has(extension)) {\n      return Common.ResourceType.resourceTypes.Script;\n    }\n    return BinaryExtensions.has(extension) ? Common.ResourceType.resourceTypes.Other :\n                                             Common.ResourceType.resourceTypes.Document;\n  }\n\n  /**\n   * @override\n   * @param {string} url\n   * @return {string}\n   */\n  tooltipForURL(url) {\n    const path = Platform.StringUtilities.trimMiddle(\n        Common.ParsedURL.ParsedURL.urlToPlatformPath(url, Host.Platform.isWin()), 150);\n    return i18nString(UIStrings.linkedToS, {PH1: path});\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  supportsAutomapping() {\n    return this.type() !== 'overrides';\n  }\n}\n\nconst _styleSheetExtensions = new Set(['css', 'scss', 'sass', 'less']);\nconst _documentExtensions = new Set(['htm', 'html', 'asp', 'aspx', 'phtml', 'jsp']);\n\nconst _scriptExtensions = new Set([\n  'asp', 'aspx', 'c', 'cc', 'cljs', 'coffee', 'cpp', 'cs', 'dart', 'java', 'js',\n  'jsp', 'jsx',  'h', 'm',  'mjs',  'mm',     'py',  'sh', 'ts',   'tsx',  'ls'\n]);\n\nconst ImageExtensions = new Set(['jpeg', 'jpg', 'svg', 'gif', 'webp', 'png', 'ico', 'tiff', 'tif', 'bmp']);\n\nexport const BinaryExtensions = new Set([\n  // Executable extensions, roughly taken from https://en.wikipedia.org/wiki/Comparison_of_executable_file_formats\n  'cmd', 'com', 'exe',\n  // Archive extensions, roughly taken from https://en.wikipedia.org/wiki/List_of_archive_formats\n  'a', 'ar', 'iso', 'tar', 'bz2', 'gz', 'lz', 'lzma', 'z', '7z', 'apk', 'arc', 'cab', 'dmg', 'jar', 'pak', 'rar', 'zip',\n  // Audio file extensions, roughly taken from https://en.wikipedia.org/wiki/Audio_file_format#List_of_formats\n  '3gp', 'aac', 'aiff', 'flac', 'm4a', 'mmf', 'mp3', 'ogg', 'oga', 'raw', 'sln', 'wav', 'wma', 'webm',\n  // Video file extensions, roughly taken from https://en.wikipedia.org/wiki/Video_file_format\n  'mkv', 'flv', 'vob', 'ogv', 'gifv', 'avi', 'mov', 'qt', 'mp4', 'm4p', 'm4v', 'mpg', 'mpeg',\n  // Image file extensions\n  'jpeg', 'jpg', 'gif', 'webp', 'png', 'ico', 'tiff', 'tif', 'bmp'\n]);\n"]}