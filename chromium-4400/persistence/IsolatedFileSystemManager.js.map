{"version":3,"file":"IsolatedFileSystemManager.js","sourceRoot":"","sources":["../../../../../front_end/persistence/IsolatedFileSystemManager.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAEH,OAAO,KAAK,MAAM,MAAM,qBAAqB,CAAC;AAC9C,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AAEpD,OAAO,EAAC,kBAAkB,EAAC,MAAM,yBAAyB,CAAC;AAG3D,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB;;;MAGE;IACF,sBAAsB,EAAE,iCAAiC;CAC1D,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,0CAA0C,EAAE,SAAS,CAAC,CAAC;AAChG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACtE;;GAEG;AACH,IAAI,iCAAiC,CAAC;AAEtC,MAAM,OAAO,yBAA0B,SAAQ,MAAM,CAAC,aAAa,CAAC,aAAa;IAC/E;;OAEG;IACH;QACE,KAAK,EAAE,CAAC;QAER,gDAAgD;QAChD,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;QAC9B,2DAA2D;QAC3D,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;QAC5B,sDAAsD;QACtD,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;QAE7B,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,MAAM,CAAC,gBAAgB,CAC5E,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;QAC7F,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,MAAM,CAAC,gBAAgB,CAC5E,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,eAAe,EAAE,KAAK,CAAC,EAAE;YAC5D,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,MAAM,CAAC,gBAAgB,CAC5E,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,kCAAkC,EAAE,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,CAAC;QACnH,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,MAAM,CAAC,gBAAgB,CAC5E,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,2BAA2B,EAAE,IAAI,CAAC,8BAA8B,EAAE,IAAI,CAAC,CAAC;QACjH,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,MAAM,CAAC,gBAAgB,CAC5E,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACvF,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,MAAM,CAAC,gBAAgB,CAC5E,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QACnF,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,MAAM,CAAC,gBAAgB,CAC5E,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;QAEzF,sCAAsC;QACtC,MAAM,4BAA4B,GAAG;YACnC,gBAAgB,EAAE,oBAAoB,EAAE,cAAc,EAAE,UAAU,EAAE,iBAAiB,EAAE,SAAS,EAAE,WAAW;YAC7G,UAAU,EAAE,YAAY,EAAE,cAAc;SACzC,CAAC;QACF,MAAM,yBAAyB,GAAG,CAAC,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,kBAAkB,CAAC,CAAC;QACxG,MAAM,yBAAyB,GAAG;YAChC,eAAe,EAAE,cAAc,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,QAAQ;YACvG,UAAU;SACX,CAAC;QACF,MAAM,2BAA2B,GAAG,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,sBAAsB,GAAG,4BAA4B,CAAC;QAC1D,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE;YACzB,sBAAsB,GAAG,sBAAsB,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC;SACnF;aAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE;YAChC,sBAAsB,GAAG,sBAAsB,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC;SACnF;aAAM;YACL,sBAAsB,GAAG,sBAAsB,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC;SACrF;QACD,MAAM,6BAA6B,GAAG,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvE,IAAI,CAAC,qCAAqC,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,mBAAmB,CAChG,+BAA+B,EAAE,6BAA6B,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAEtG,kDAAkD;QAClD,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC9D,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,EAAC,QAAQ,EAAE,IAAI,EAAC;QACrC,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,iCAAiC,IAAI,QAAQ,EAAE;YAClD,iCAAiC,GAAG,IAAI,yBAAyB,EAAE,CAAC;SACrE;QAED,OAAO,iCAAiC,CAAC;IAC3C,CAAC;IAED;;OAEG;IACH,mBAAmB;QACjB,+BAA+B;QAC/B,IAAI,OAAO,CAAC;QACZ,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YAC9B,OAAO,GAAG,CAAC,CAAC;QACd,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,MAAM,CAAC,gBAAgB,CAC5E,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,iBAAiB,EAAE,mBAAmB,EAAE,IAAI,CAAC,CAAC;QACvF,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,kBAAkB,EAAE,CAAC;QAC9E,OAAO,OAAO,CAAC;QAEf;;;WAGG;QACH,SAAS,mBAAmB,CAAC,KAAK;YAChC,MAAM,WAAW,GAAG,mCAAmC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACrE,MAAM,QAAQ,GAAG,EAAE,CAAC;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBAC3C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;aAChE;YACD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,CAAC;QAED;;WAEG;QACH,SAAS,kBAAkB,CAAC,WAAW;YACrC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjD,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,aAAa,CAAC,IAAI;QAChB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,IAAI,CAAC,yBAAyB,GAAG,OAAO,CAAC;YACzC,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,aAAa,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,gBAAgB,CAAC,UAAU;QACzB,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,gBAAgB,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC;IACvG,CAAC;IAED;;OAEG;IACH,kBAAkB;QAChB,OAAO,IAAI,CAAC,yBAAyB,CAAC;IACxC,CAAC;IAED;;;;OAIG;IACH,mBAAmB,CAAC,UAAU,EAAE,aAAa;QAC3C,MAAM,YAAY,GAAG,UAAU,CAAC,cAAc,CAAC;QAC/C,MAAM,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,iBAAiB,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC9F,MAAM,OAAO,GAAG,kBAAkB,CAAC,MAAM,CACrC,IAAI,EAAE,aAAa,EAAE,YAAY,EAAE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,cAAc,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;QACvG,OAAO,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEhD;;;WAGG;QACH,SAAS,eAAe,CAAC,UAAU;YACjC,IAAI,CAAC,UAAU,EAAE;gBACf,OAAO,IAAI,CAAC;aACb;YACD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;YACjD,IAAI,aAAa,EAAE;gBACjB,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;aACnE;YACD,OAAO,UAAU,CAAC;QACpB,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,qBAAqB,CAAC,aAAa,EAAE,UAAU;QAC7C,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;QACjD,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;IACpE,CAAC;IAED;;OAEG;IACH,kBAAkB,CAAC,KAAK;QACtB,MAAM,YAAY,GAAG,qBAAqB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;QACxE,MAAM,UAAU,GAAG,0BAA0B,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QACzE,IAAI,YAAY,EAAE;YAChB,IAAI,YAAY,KAAK,uBAAuB,EAAE;gBAC5C,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,sBAAsB,EAAE,EAAC,GAAG,EAAE,YAAY,EAAC,CAAC,CAAC,CAAC;aAC5G;YACD,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE;gBACnC,OAAO;aACR;YACD,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAChD,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;SACvC;aAAM,IAAI,UAAU,EAAE;YACrB,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBAC3D,IAAI,IAAI,CAAC,yBAAyB,EAAE;oBAClC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;oBACtD,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;iBACvC;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED;;OAEG;IACH,oBAAoB,CAAC,KAAK;QACxB,MAAM,YAAY,GAAG,qBAAqB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxD,MAAM,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;QAClF,MAAM,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACjE,IAAI,CAAC,kBAAkB,EAAE;YACvB,OAAO;SACR;QACD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QACzC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC;QACvC,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,CAAC;IAC9E,CAAC;IAED;;OAEG;IACH,yBAAyB,CAAC,KAAK;QAC7B,MAAM,QAAQ,GAAG;YACf,OAAO,EAAE,iCAAiC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;YACzE,KAAK,EAAE,iCAAiC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;YACrE,OAAO,EAAE,iCAAiC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;SAC1E,CAAC;QAEF,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;QAEvE;;;;WAIG;QACH,SAAS,iCAAiC,CAAC,aAAa;YACtD,+DAA+D;YAC/D,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;YACnD,KAAK,MAAM,YAAY,IAAI,aAAa,EAAE;gBACxC,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;gBAC5E,KAAK,MAAM,cAAc,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE;oBACrD,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;oBACzD,IAAI,UAAU,IAAI,UAAU,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;wBACzD,SAAS;qBACV;oBACD,MAAM,UAAU,GAAG,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,GAAG,GAAG,CAAC;oBACxF,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;wBACpC,SAAS;qBACV;oBACD,KAAK,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;iBACrC;aACF;YACD,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED;;OAEG;IACH,WAAW;QACT,OAAO,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC;IACzC,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,cAAc;QACvB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC;IACvD,CAAC;IAED;;OAEG;IACH,oCAAoC;QAClC,OAAO,IAAI,CAAC,qCAAqC,CAAC;IACpD,CAAC;IAED;;;OAGG;IACH,gBAAgB,CAAC,QAAQ;QACvB,MAAM,SAAS,GAAG,EAAE,cAAc,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QACzC,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;OAGG;IACH,gBAAgB,CAAC,QAAQ;QACvB,MAAM,SAAS,GAAG,EAAE,cAAc,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAC1C,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;OAEG;IACH,8BAA8B,CAAC,KAAK;QAClC,MAAM,SAAS,GAAG,qBAAqB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAClE,MAAM,SAAS,GAAG,qBAAqB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAElE,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QACD,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IAED;;OAEG;IACH,iBAAiB,CAAC,KAAK;QACrB,MAAM,SAAS,GAAG,qBAAqB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAClE,MAAM,MAAM,GAAG,qBAAqB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE5D,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QACD,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACxB,IAAI,QAAQ,CAAC,UAAU,EAAE,EAAE;YACzB,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YACjF,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B;IACH,CAAC;IAED;;OAEG;IACH,eAAe,CAAC,KAAK;QACnB,MAAM,SAAS,GAAG,qBAAqB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAElE,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QACD,QAAQ,CAAC,IAAI,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC;IAED;;OAEG;IACH,kBAAkB,CAAC,KAAK;QACtB,MAAM,SAAS,GAAG,qBAAqB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAClE,MAAM,KAAK,GAAG,8BAA8B,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAEnE,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QACD,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;CACF;AAED,qBAAqB;AACrB,MAAM,CAAC,MAAM,MAAM,GAAG;IACpB,eAAe,EAAE,MAAM,CAAC,iBAAiB,CAAC;IAC1C,iBAAiB,EAAE,MAAM,CAAC,mBAAmB,CAAC;IAC9C,sBAAsB,EAAE,MAAM,CAAC,wBAAwB,CAAC;IACxD,mBAAmB,EAAE,MAAM,CAAC,qBAAqB,CAAC;IAClD,qBAAqB,EAAE,MAAM,CAAC,uBAAuB,CAAC;CACvD,CAAC;AAEF,IAAI,cAAc,GAAG,CAAC,CAAC;AAEvB,kGAAkG;AAClG,qBAAqB;AACrB,MAAM,CAAC,IAAI,UAAU,CAAC","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';\n\nimport {IsolatedFileSystem} from './IsolatedFileSystem.js';\nimport {PlatformFileSystem} from './PlatformFileSystem.js';  // eslint-disable-line no-unused-vars\n\nexport const UIStrings = {\n  /**\n  *@description Text in Isolated File System Manager of the Workspace settings in Settings\n  *@example {folder does not exist} PH1\n  */\n  unableToAddFilesystemS: 'Unable to add filesystem: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('persistence/IsolatedFileSystemManager.js', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/**\n * @type {!IsolatedFileSystemManager}\n */\nlet isolatedFileSystemManagerInstance;\n\nexport class IsolatedFileSystemManager extends Common.ObjectWrapper.ObjectWrapper {\n  /**\n   * @private\n   */\n  constructor() {\n    super();\n\n    /** @type {!Map<string, !PlatformFileSystem>} */\n    this._fileSystems = new Map();\n    /** @type {!Map<number, function(!Array.<string>):void>} */\n    this._callbacks = new Map();\n    /** @type {!Map<number, !Common.Progress.Progress>} */\n    this._progresses = new Map();\n\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.FileSystemRemoved, this._onFileSystemRemoved, this);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.FileSystemAdded, event => {\n          this._onFileSystemAdded(event);\n        }, this);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.FileSystemFilesChangedAddedRemoved, this._onFileSystemFilesChanged, this);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.IndexingTotalWorkCalculated, this._onIndexingTotalWorkCalculated, this);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.IndexingWorked, this._onIndexingWorked, this);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.IndexingDone, this._onIndexingDone, this);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.SearchCompleted, this._onSearchCompleted, this);\n\n    // Initialize exclude pattern settings\n    const defaultCommonExcludedFolders = [\n      '/node_modules/', '/bower_components/', '/\\\\.devtools', '/\\\\.git/', '/\\\\.sass-cache/', '/\\\\.hg/', '/\\\\.idea/',\n      '/\\\\.svn/', '/\\\\.cache/', '/\\\\.project/'\n    ];\n    const defaultWinExcludedFolders = ['/Thumbs.db$', '/ehthumbs.db$', '/Desktop.ini$', '/\\\\$RECYCLE.BIN/'];\n    const defaultMacExcludedFolders = [\n      '/\\\\.DS_Store$', '/\\\\.Trashes$', '/\\\\.Spotlight-V100$', '/\\\\.AppleDouble$', '/\\\\.LSOverride$', '/Icon$',\n      '/\\\\._.*$'\n    ];\n    const defaultLinuxExcludedFolders = ['/.*~$'];\n    let defaultExcludedFolders = defaultCommonExcludedFolders;\n    if (Host.Platform.isWin()) {\n      defaultExcludedFolders = defaultExcludedFolders.concat(defaultWinExcludedFolders);\n    } else if (Host.Platform.isMac()) {\n      defaultExcludedFolders = defaultExcludedFolders.concat(defaultMacExcludedFolders);\n    } else {\n      defaultExcludedFolders = defaultExcludedFolders.concat(defaultLinuxExcludedFolders);\n    }\n    const defaultExcludedFoldersPattern = defaultExcludedFolders.join('|');\n    this._workspaceFolderExcludePatternSetting = Common.Settings.Settings.instance().createRegExpSetting(\n        'workspaceFolderExcludePattern', defaultExcludedFoldersPattern, Host.Platform.isWin() ? 'i' : '');\n\n    /** @type {?function(?IsolatedFileSystem):void} */\n    this._fileSystemRequestResolve = null;\n    this._fileSystemsLoadedPromise = this._requestFileSystems();\n  }\n\n  /**\n   * @param {{forceNew: ?boolean}} opts\n   */\n  static instance(opts = {forceNew: null}) {\n    const {forceNew} = opts;\n    if (!isolatedFileSystemManagerInstance || forceNew) {\n      isolatedFileSystemManagerInstance = new IsolatedFileSystemManager();\n    }\n\n    return isolatedFileSystemManagerInstance;\n  }\n\n  /**\n   * @return {!Promise<!Array<!IsolatedFileSystem>>}\n   */\n  _requestFileSystems() {\n    /** @type {function(*):void} */\n    let fulfill;\n    const promise = new Promise(f => {\n      fulfill = f;\n    });\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.FileSystemsLoaded, onFileSystemsLoaded, this);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.requestFileSystems();\n    return promise;\n\n    /**\n     * @param {!Common.EventTarget.EventTargetEvent} event\n     * @this {IsolatedFileSystemManager}\n     */\n    function onFileSystemsLoaded(event) {\n      const fileSystems = /** @type {!Array.<!FileSystem>} */ (event.data);\n      const promises = [];\n      for (let i = 0; i < fileSystems.length; ++i) {\n        promises.push(this._innerAddFileSystem(fileSystems[i], false));\n      }\n      Promise.all(promises).then(onFileSystemsAdded);\n    }\n\n    /**\n     * @param {!Array<?IsolatedFileSystem>} fileSystems\n     */\n    function onFileSystemsAdded(fileSystems) {\n      fulfill(fileSystems.filter(fs => Boolean(fs)));\n    }\n  }\n\n  /**\n   * @param {string=} type\n   * @return {!Promise<?IsolatedFileSystem>}\n   */\n  addFileSystem(type) {\n    return new Promise(resolve => {\n      this._fileSystemRequestResolve = resolve;\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.addFileSystem(type || '');\n    });\n  }\n\n  /**\n   * @param {!PlatformFileSystem} fileSystem\n   */\n  removeFileSystem(fileSystem) {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.removeFileSystem(fileSystem.embedderPath());\n  }\n\n  /**\n   * @return {!Promise<!Array<!IsolatedFileSystem>>}\n   */\n  waitForFileSystems() {\n    return this._fileSystemsLoadedPromise;\n  }\n\n  /**\n   * @param {!FileSystem} fileSystem\n   * @param {boolean} dispatchEvent\n   * @return {!Promise<?IsolatedFileSystem>}\n   */\n  _innerAddFileSystem(fileSystem, dispatchEvent) {\n    const embedderPath = fileSystem.fileSystemPath;\n    const fileSystemURL = Common.ParsedURL.ParsedURL.platformPathToURL(fileSystem.fileSystemPath);\n    const promise = IsolatedFileSystem.create(\n        this, fileSystemURL, embedderPath, fileSystem.type, fileSystem.fileSystemName, fileSystem.rootURL);\n    return promise.then(storeFileSystem.bind(this));\n\n    /**\n     * @param {?IsolatedFileSystem} fileSystem\n     * @this {IsolatedFileSystemManager}\n     */\n    function storeFileSystem(fileSystem) {\n      if (!fileSystem) {\n        return null;\n      }\n      this._fileSystems.set(fileSystemURL, fileSystem);\n      if (dispatchEvent) {\n        this.dispatchEventToListeners(Events.FileSystemAdded, fileSystem);\n      }\n      return fileSystem;\n    }\n  }\n\n  /**\n   * @param {string} fileSystemURL\n   * @param {!PlatformFileSystem} fileSystem\n   */\n  addPlatformFileSystem(fileSystemURL, fileSystem) {\n    this._fileSystems.set(fileSystemURL, fileSystem);\n    this.dispatchEventToListeners(Events.FileSystemAdded, fileSystem);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onFileSystemAdded(event) {\n    const errorMessage = /** @type {string} */ (event.data['errorMessage']);\n    const fileSystem = /** @type {?FileSystem} */ (event.data['fileSystem']);\n    if (errorMessage) {\n      if (errorMessage !== '<selection cancelled>') {\n        Common.Console.Console.instance().error(i18nString(UIStrings.unableToAddFilesystemS, {PH1: errorMessage}));\n      }\n      if (!this._fileSystemRequestResolve) {\n        return;\n      }\n      this._fileSystemRequestResolve.call(null, null);\n      this._fileSystemRequestResolve = null;\n    } else if (fileSystem) {\n      this._innerAddFileSystem(fileSystem, true).then(fileSystem => {\n        if (this._fileSystemRequestResolve) {\n          this._fileSystemRequestResolve.call(null, fileSystem);\n          this._fileSystemRequestResolve = null;\n        }\n      });\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onFileSystemRemoved(event) {\n    const embedderPath = /** @type {string} */ (event.data);\n    const fileSystemPath = Common.ParsedURL.ParsedURL.platformPathToURL(embedderPath);\n    const isolatedFileSystem = this._fileSystems.get(fileSystemPath);\n    if (!isolatedFileSystem) {\n      return;\n    }\n    this._fileSystems.delete(fileSystemPath);\n    isolatedFileSystem.fileSystemRemoved();\n    this.dispatchEventToListeners(Events.FileSystemRemoved, isolatedFileSystem);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onFileSystemFilesChanged(event) {\n    const urlPaths = {\n      changed: groupFilePathsIntoFileSystemPaths.call(this, event.data.changed),\n      added: groupFilePathsIntoFileSystemPaths.call(this, event.data.added),\n      removed: groupFilePathsIntoFileSystemPaths.call(this, event.data.removed)\n    };\n\n    this.dispatchEventToListeners(Events.FileSystemFilesChanged, urlPaths);\n\n    /**\n     * @param {!Array<string>} embedderPaths\n     * @return {!Platform.MapUtilities.Multimap<string, string>}\n     * @this {IsolatedFileSystemManager}\n     */\n    function groupFilePathsIntoFileSystemPaths(embedderPaths) {\n      /** @type {!Platform.MapUtilities.Multimap.<string, string>} */\n      const paths = new Platform.MapUtilities.Multimap();\n      for (const embedderPath of embedderPaths) {\n        const filePath = Common.ParsedURL.ParsedURL.platformPathToURL(embedderPath);\n        for (const fileSystemPath of this._fileSystems.keys()) {\n          const fileSystem = this._fileSystems.get(fileSystemPath);\n          if (fileSystem && fileSystem.isFileExcluded(embedderPath)) {\n            continue;\n          }\n          const pathPrefix = fileSystemPath.endsWith('/') ? fileSystemPath : fileSystemPath + '/';\n          if (!filePath.startsWith(pathPrefix)) {\n            continue;\n          }\n          paths.set(fileSystemPath, filePath);\n        }\n      }\n      return paths;\n    }\n  }\n\n  /**\n   * @return {!Array<!PlatformFileSystem>}\n   */\n  fileSystems() {\n    return [...this._fileSystems.values()];\n  }\n\n  /**\n   * @param {string} fileSystemPath\n   * @return {?PlatformFileSystem}\n   */\n  fileSystem(fileSystemPath) {\n    return this._fileSystems.get(fileSystemPath) || null;\n  }\n\n  /**\n   * @return {!Common.Settings.Setting<*>}\n   */\n  workspaceFolderExcludePatternSetting() {\n    return this._workspaceFolderExcludePatternSetting;\n  }\n\n  /**\n   * @param {function(!Array.<string>):void} callback\n   * @return {number}\n   */\n  registerCallback(callback) {\n    const requestId = ++_lastRequestId;\n    this._callbacks.set(requestId, callback);\n    return requestId;\n  }\n\n  /**\n   * @param {!Common.Progress.Progress} progress\n   * @return {number}\n   */\n  registerProgress(progress) {\n    const requestId = ++_lastRequestId;\n    this._progresses.set(requestId, progress);\n    return requestId;\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onIndexingTotalWorkCalculated(event) {\n    const requestId = /** @type {number} */ (event.data['requestId']);\n    const totalWork = /** @type {number} */ (event.data['totalWork']);\n\n    const progress = this._progresses.get(requestId);\n    if (!progress) {\n      return;\n    }\n    progress.setTotalWork(totalWork);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onIndexingWorked(event) {\n    const requestId = /** @type {number} */ (event.data['requestId']);\n    const worked = /** @type {number} */ (event.data['worked']);\n\n    const progress = this._progresses.get(requestId);\n    if (!progress) {\n      return;\n    }\n    progress.worked(worked);\n    if (progress.isCanceled()) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.stopIndexing(requestId);\n      this._onIndexingDone(event);\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onIndexingDone(event) {\n    const requestId = /** @type {number} */ (event.data['requestId']);\n\n    const progress = this._progresses.get(requestId);\n    if (!progress) {\n      return;\n    }\n    progress.done();\n    this._progresses.delete(requestId);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onSearchCompleted(event) {\n    const requestId = /** @type {number} */ (event.data['requestId']);\n    const files = /** @type {!Array.<string>} */ (event.data['files']);\n\n    const callback = this._callbacks.get(requestId);\n    if (!callback) {\n      return;\n    }\n    callback.call(null, files);\n    this._callbacks.delete(requestId);\n  }\n}\n\n/** @enum {symbol} */\nexport const Events = {\n  FileSystemAdded: Symbol('FileSystemAdded'),\n  FileSystemRemoved: Symbol('FileSystemRemoved'),\n  FileSystemFilesChanged: Symbol('FileSystemFilesChanged'),\n  ExcludedFolderAdded: Symbol('ExcludedFolderAdded'),\n  ExcludedFolderRemoved: Symbol('ExcludedFolderRemoved')\n};\n\nlet _lastRequestId = 0;\n\n/** @typedef {!{type: string, fileSystemName: string, rootURL: string, fileSystemPath: string}} */\n// @ts-ignore typedef\nexport let FileSystem;\n"]}