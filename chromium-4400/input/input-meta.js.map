{"version":3,"file":"input-meta.js","sourceRoot":"","sources":["../../../../../front_end/input/input-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,EAAC,EAAE,EAAC,MAAM,yBAAyB,CAAC;AAC3C,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAKlC,IAAI,iBAA2C,CAAC;AAEhD,KAAK,UAAU,eAAe;IAC5B,IAAI,CAAC,iBAAiB,EAAE;QACtB,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QACjE,iBAAiB,GAAG,MAAM,MAAM,CAAC,YAAY,CAAC,CAAC;KAChD;IACD,OAAO,iBAAiB,CAAC;AAC3B,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,iCAA+C;IACvD,EAAE,EAAE,QAAQ;IACZ,KAAK,EAAE,GAAsC,EAAE,CAAC,EAAE,CAAA,QAAQ;IAC1D,aAAa,EAAE,aAAa;IAC5B,WAAW,6BAA0C;IACrD,KAAK,EAAE,CAAC;IACR,KAAK,CAAC,QAAQ;QACZ,MAAM,KAAK,GAAG,MAAM,eAAe,EAAE,CAAC;QACtC,OAAO,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;IACtD,CAAC;IACD,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,qBAAqB;CAC9D,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../platform/platform.js';\nimport {ls} from '../platform/platform.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Input from './input.js';\n\nlet loadedInputModule: (typeof Input|undefined);\n\nasync function loadInputModule(): Promise<typeof Input> {\n  if (!loadedInputModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('input');\n    loadedInputModule = await import('./input.js');\n  }\n  return loadedInputModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'Inputs',\n  title: (): Platform.UIString.LocalizedString => ls`Inputs`,\n  commandPrompt: 'Show Inputs',\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 7,\n  async loadView() {\n    const Input = await loadInputModule();\n    return Input.InputTimeline.InputTimeline.instance();\n  },\n  experiment: Root.Runtime.ExperimentName.TIMELINE_REPLAY_EVENT,\n});\n"]}